let e,t,i,o,a,n,r;class s{constructor(){}lineAt(e){if(e<0||e>this.length)throw RangeError(`Invalid position ${e} in document of length ${this.length}`);return this.lineInner(e,!1,1,0)}line(e){if(e<1||e>this.lines)throw RangeError(`Invalid line number ${e} in ${this.lines}-line document`);return this.lineInner(e,!0,1,0)}replace(e,t,i){let o=[];return this.decompose(0,e,o,2),i.length&&i.decompose(0,i.length,o,3),this.decompose(t,this.length,o,1),p.from(o,this.length-(t-e)+i.length)}append(e){return this.replace(this.length,this.length,e)}slice(e,t=this.length){let i=[];return this.decompose(e,t,i,0),p.from(i,t-e)}eq(e){if(e==this)return!0;if(e.length!=this.length||e.lines!=this.lines)return!1;let t=this.scanIdentical(e,1),i=this.length-this.scanIdentical(e,-1),o=new c(this),a=new c(e);for(let e=t,n=t;;){if(o.next(e),a.next(e),e=0,o.lineBreak!=a.lineBreak||o.done!=a.done||o.value!=a.value)return!1;if(n+=o.value.length,o.done||n>=i)return!0}}iter(e=1){return new c(this,e)}iterRange(e,t=this.length){return new f(this,e,t)}iterLines(e,t){let i;if(null==e)i=this.iter();else{null==t&&(t=this.lines+1);let o=this.line(e).from;i=this.iterRange(o,Math.max(o,t==this.lines+1?this.length:t<=1?0:this.line(t-1).to))}return new h(i)}toString(){return this.sliceString(0)}toJSON(){let e=[];return this.flatten(e),e}static of(e){if(0==e.length)throw RangeError("A document must have at least one line");return 1!=e.length||e[0]?e.length<=32?new l(e):p.from(l.split(e,[])):s.empty}}class l extends s{constructor(e,t=function(e){let t=-1;for(let i of e)t+=i.length+1;return t}(e)){super(),this.text=e,this.length=t}get lines(){return this.text.length}get children(){return null}lineInner(e,t,i,o){for(let a=0;;a++){let n=this.text[a],r=o+n.length;if((t?i:r)>=e)return new y(o,r,i,n);o=r+1,i++}}decompose(e,t,i,o){let a=e<=0&&t>=this.length?this:new l(d(this.text,[""],e,t),Math.min(t,this.length)-Math.max(0,e));if(1&o){let e=i.pop(),t=d(a.text,e.text.slice(),0,a.length);if(t.length<=32)i.push(new l(t,e.length+a.length));else{let e=t.length>>1;i.push(new l(t.slice(0,e)),new l(t.slice(e)))}}else i.push(a)}replace(e,t,i){if(!(i instanceof l))return super.replace(e,t,i);let o=d(this.text,d(i.text,d(this.text,[""],0,e)),t),a=this.length+i.length-(t-e);return o.length<=32?new l(o,a):p.from(l.split(o,[]),a)}sliceString(e,t=this.length,i="\n"){let o="";for(let a=0,n=0;a<=t&&n<this.text.length;n++){let r=this.text[n],s=a+r.length;a>e&&n&&(o+=i),e<s&&t>a&&(o+=r.slice(Math.max(0,e-a),t-a)),a=s+1}return o}flatten(e){for(let t of this.text)e.push(t)}scanIdentical(){return 0}static split(e,t){let i=[],o=-1;for(let a of e)i.push(a),o+=a.length+1,32==i.length&&(t.push(new l(i,o)),i=[],o=-1);return o>-1&&t.push(new l(i,o)),t}}class p extends s{constructor(e,t){for(let i of(super(),this.children=e,this.length=t,this.lines=0,e))this.lines+=i.lines}lineInner(e,t,i,o){for(let a=0;;a++){let n=this.children[a],r=o+n.length,s=i+n.lines-1;if((t?s:r)>=e)return n.lineInner(e,t,i,o);o=r+1,i=s+1}}decompose(e,t,i,o){for(let a=0,n=0;n<=t&&a<this.children.length;a++){let r=this.children[a],s=n+r.length;if(e<=s&&t>=n){let a=o&((n<=e?1:0)|(s>=t?2:0));n>=e&&s<=t&&!a?i.push(r):r.decompose(e-n,t-n,i,a)}n=s+1}}replace(e,t,i){if(i.lines<this.lines)for(let o=0,a=0;o<this.children.length;o++){let n=this.children[o],r=a+n.length;if(e>=a&&t<=r){let s=n.replace(e-a,t-a,i),l=this.lines-n.lines+s.lines;if(s.lines<l>>4&&s.lines>l>>6){let a=this.children.slice();return a[o]=s,new p(a,this.length-(t-e)+i.length)}return super.replace(a,r,s)}a=r+1}return super.replace(e,t,i)}sliceString(e,t=this.length,i="\n"){let o="";for(let a=0,n=0;a<this.children.length&&n<=t;a++){let r=this.children[a],s=n+r.length;n>e&&a&&(o+=i),e<s&&t>n&&(o+=r.sliceString(e-n,t-n,i)),n=s+1}return o}flatten(e){for(let t of this.children)t.flatten(e)}scanIdentical(e,t){if(!(e instanceof p))return 0;let i=0,[o,a,n,r]=t>0?[0,0,this.children.length,e.children.length]:[this.children.length-1,e.children.length-1,-1,-1];for(;;o+=t,a+=t){if(o==n||a==r)return i;let s=this.children[o],l=e.children[a];if(s!=l)return i+s.scanIdentical(l,t);i+=s.length+1}}static from(e,t=e.reduce((e,t)=>e+t.length+1,-1)){let i=0;for(let t of e)i+=t.lines;if(i<32){let i=[];for(let t of e)t.flatten(i);return new l(i,t)}let o=Math.max(32,i>>5),a=o<<1,n=o>>1,r=[],s=0,d=-1,c=[];function f(){0!=s&&(r.push(1==c.length?c[0]:p.from(c,d)),d=-1,s=c.length=0)}for(let t of e)!function e(t){let i;if(t.lines>a&&t instanceof p)for(let i of t.children)e(i);else t.lines>n&&(s>n||!s)?(f(),r.push(t)):t instanceof l&&s&&(i=c[c.length-1])instanceof l&&t.lines+i.lines<=32?(s+=t.lines,d+=t.length+1,c[c.length-1]=new l(i.text.concat(t.text),i.length+1+t.length)):(s+t.lines>o&&f(),s+=t.lines,d+=t.length+1,c.push(t))}(t);return f(),1==r.length?r[0]:new p(r,t)}}function d(e,t,i=0,o=1e9){for(let a=0,n=0,r=!0;n<e.length&&a<=o;n++){let s=e[n],l=a+s.length;l>=i&&(l>o&&(s=s.slice(0,o-a)),a<i&&(s=s.slice(i-a)),r?(t[t.length-1]+=s,r=!1):t.push(s)),a=l+1}return t}s.empty=new l([""],0);class c{constructor(e,t=1){this.dir=t,this.done=!1,this.lineBreak=!1,this.value="",this.nodes=[e],this.offsets=[t>0?1:(e instanceof l?e.text.length:e.children.length)<<1]}nextInner(e,t){for(this.done=this.lineBreak=!1;;){let i=this.nodes.length-1,o=this.nodes[i],a=this.offsets[i],n=a>>1,r=o instanceof l?o.text.length:o.children.length;if(n==(t>0?r:0)){if(0==i)return this.done=!0,this.value="",this;t>0&&this.offsets[i-1]++,this.nodes.pop(),this.offsets.pop()}else if((1&a)==(t>0?0:1)){if(this.offsets[i]+=t,0==e)return this.lineBreak=!0,this.value="\n",this;e--}else if(o instanceof l){let a=o.text[n+(t<0?-1:0)];if(this.offsets[i]+=t,a.length>Math.max(0,e))return this.value=0==e?a:t>0?a.slice(e):a.slice(0,a.length-e),this;e-=a.length}else{let a=o.children[n+(t<0?-1:0)];e>a.length?(e-=a.length,this.offsets[i]+=t):(t<0&&this.offsets[i]--,this.nodes.push(a),this.offsets.push(t>0?1:(a instanceof l?a.text.length:a.children.length)<<1))}}}next(e=0){return e<0&&(this.nextInner(-e,-this.dir),e=this.value.length),this.nextInner(e,this.dir)}}class f{constructor(e,t,i){this.value="",this.done=!1,this.cursor=new c(e,t>i?-1:1),this.pos=t>i?e.length:0,this.from=Math.min(t,i),this.to=Math.max(t,i)}nextInner(e,t){if(t<0?this.pos<=this.from:this.pos>=this.to)return this.value="",this.done=!0,this;e+=Math.max(0,t<0?this.pos-this.to:this.from-this.pos);let i=t<0?this.pos-this.from:this.to-this.pos;e>i&&(e=i),i-=e;let{value:o}=this.cursor.next(e);return this.pos+=(o.length+e)*t,this.value=o.length<=i?o:t<0?o.slice(o.length-i):o.slice(0,i),this.done=!this.value,this}next(e=0){return e<0?e=Math.max(e,this.from-this.pos):e>0&&(e=Math.min(e,this.to-this.pos)),this.nextInner(e,this.cursor.dir)}get lineBreak(){return this.cursor.lineBreak&&""!=this.value}}class h{constructor(e){this.inner=e,this.afterBreak=!0,this.value="",this.done=!1}next(e=0){let{done:t,lineBreak:i,value:o}=this.inner.next(e);return t?(this.done=!0,this.value=""):i?this.afterBreak?this.value="":(this.afterBreak=!0,this.next()):(this.value=o,this.afterBreak=!1),this}get lineBreak(){return!1}}"undefined"!=typeof Symbol&&(s.prototype[Symbol.iterator]=function(){return this.iter()},c.prototype[Symbol.iterator]=f.prototype[Symbol.iterator]=h.prototype[Symbol.iterator]=function(){return this});class y{constructor(e,t,i,o){this.from=e,this.to=t,this.number=i,this.text=o}get length(){return this.to-this.from}}let u="lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o".split(",").map(e=>e?parseInt(e,36):1);for(let e=1;e<u.length;e++)u[e]+=u[e-1];function m(e){return e>=127462&&e<=127487}function x(e,t,i=!0,o=!0){return(i?g:b)(e,t,o)}function g(e,t,i){if(t==e.length)return t;t&&w(e.charCodeAt(t))&&k(e.charCodeAt(t-1))&&t--;let o=v(e,t);for(t+=S(o);t<e.length;){let a=v(e,t);if(8205==o||8205==a||i&&function(e){for(let t=1;t<u.length;t+=2)if(u[t]>e)return u[t-1]<=e;return!1}(a))t+=S(a),o=a;else if(m(a)){let i=0,o=t-2;for(;o>=0&&m(v(e,o));)i++,o-=2;if(i%2==0)break;t+=2}else break}return t}function b(e,t,i){for(;t>0;){let o=g(e,t-2,i);if(o<t)return o;t--}return 0}function w(e){return e>=56320&&e<57344}function k(e){return e>=55296&&e<56320}function v(e,t){let i=e.charCodeAt(t);if(!k(i)||t+1==e.length)return i;let o=e.charCodeAt(t+1);return w(o)?(i-55296<<10)+(o-56320)+65536:i}function O(e){return e<=65535?String.fromCharCode(e):String.fromCharCode(((e-=65536)>>10)+55296,(1023&e)+56320)}function S(e){return e<65536?1:2}const C=/\r\n?|\n/;var P,D,T,M,R,Q,A,F,L=function(e){return e[e.Simple=0]="Simple",e[e.TrackDel=1]="TrackDel",e[e.TrackBefore=2]="TrackBefore",e[e.TrackAfter=3]="TrackAfter",e}(L||(L={}));class E{constructor(e){this.sections=e}get length(){let e=0;for(let t=0;t<this.sections.length;t+=2)e+=this.sections[t];return e}get newLength(){let e=0;for(let t=0;t<this.sections.length;t+=2){let i=this.sections[t+1];e+=i<0?this.sections[t]:i}return e}get empty(){return 0==this.sections.length||2==this.sections.length&&this.sections[1]<0}iterGaps(e){for(let t=0,i=0,o=0;t<this.sections.length;){let a=this.sections[t++],n=this.sections[t++];n<0?(e(i,o,a),o+=a):o+=n,i+=a}}iterChangedRanges(e,t=!1){$(this,e,t)}get invertedDesc(){let e=[];for(let t=0;t<this.sections.length;){let i=this.sections[t++],o=this.sections[t++];o<0?e.push(i,o):e.push(o,i)}return new E(e)}composeDesc(e){return this.empty?e:e.empty?this:z(this,e)}mapDesc(e,t=!1){return e.empty?this:N(this,e,t)}mapPos(e,t=-1,i=L.Simple){let o=0,a=0;for(let n=0;n<this.sections.length;){let r=this.sections[n++],s=this.sections[n++],l=o+r;if(s<0){if(l>e)return a+(e-o);a+=r}else{if(i!=L.Simple&&l>=e&&(i==L.TrackDel&&o<e&&l>e||i==L.TrackBefore&&o<e||i==L.TrackAfter&&l>e))return null;if(l>e||l==e&&t<0&&!r)return e==o||t<0?a:a+s;a+=s}o=l}if(e>o)throw RangeError(`Position ${e} is out of range for changeset of length ${o}`);return a}touchesRange(e,t=e){for(let i=0,o=0;i<this.sections.length&&o<=t;){let a=this.sections[i++],n=this.sections[i++],r=o+a;if(n>=0&&o<=t&&r>=e)return!(o<e)||!(r>t)||"cover";o=r}return!1}toString(){let e="";for(let t=0;t<this.sections.length;){let i=this.sections[t++],o=this.sections[t++];e+=(e?" ":"")+i+(o>=0?":"+o:"")}return e}toJSON(){return this.sections}static fromJSON(e){if(!Array.isArray(e)||e.length%2||e.some(e=>"number"!=typeof e))throw RangeError("Invalid JSON representation of ChangeDesc");return new E(e)}static create(e){return new E(e)}}class B extends E{constructor(e,t){super(e),this.inserted=t}apply(e){if(this.length!=e.length)throw RangeError("Applying change set to a document with the wrong length");return $(this,(t,i,o,a,n)=>e=e.replace(o,o+(i-t),n),!1),e}mapDesc(e,t=!1){return N(this,e,t,!0)}invert(e){let t=this.sections.slice(),i=[];for(let o=0,a=0;o<t.length;o+=2){let n=t[o],r=t[o+1];if(r>=0){t[o]=r,t[o+1]=n;let l=o>>1;for(;i.length<l;)i.push(s.empty);i.push(n?e.slice(a,a+n):s.empty)}a+=n}return new B(t,i)}compose(e){return this.empty?e:e.empty?this:z(this,e,!0)}map(e,t=!1){return e.empty?this:N(this,e,t,!0)}iterChanges(e,t=!1){$(this,e,t)}get desc(){return E.create(this.sections)}filter(e){let t=[],i=[],o=[],a=new W(this);e:for(let n=0,r=0;;){let s=n==e.length?1e9:e[n++];for(;r<s||r==s&&0==a.len;){if(a.done)break e;let e=Math.min(a.len,s-r);I(o,e,-1);let n=-1==a.ins?-1:0==a.off?a.ins:0;I(t,e,n),n>0&&G(i,t,a.text),a.forward(e),r+=e}let l=e[n++];for(;r<l;){if(a.done)break e;let e=Math.min(a.len,l-r);I(t,e,-1),I(o,e,-1==a.ins?-1:0==a.off?a.ins:0),a.forward(e),r+=e}}return{changes:new B(t,i),filtered:E.create(o)}}toJSON(){let e=[];for(let t=0;t<this.sections.length;t+=2){let i=this.sections[t],o=this.sections[t+1];o<0?e.push(i):0==o?e.push([i]):e.push([i].concat(this.inserted[t>>1].toJSON()))}return e}static of(e,t,i){let o=[],a=[],n=0,r=null;function l(e=!1){if(!e&&!o.length)return;n<t&&I(o,t-n,-1);let i=new B(o,a);r=r?r.compose(i.map(r)):i,o=[],a=[],n=0}return!function e(p){if(Array.isArray(p))for(let t of p)e(t);else if(p instanceof B){if(p.length!=t)throw RangeError(`Mismatched change set length (got ${p.length}, expected ${t})`);l(),r=r?r.compose(p.map(r)):p}else{let{from:e,to:r=e,insert:d}=p;if(e>r||e<0||r>t)throw RangeError(`Invalid change range ${e} to ${r} (in doc of length ${t})`);let c=d?"string"==typeof d?s.of(d.split(i||C)):d:s.empty,f=c.length;if(e==r&&0==f)return;e<n&&l(),e>n&&I(o,e-n,-1),I(o,r-e,f),G(a,o,c),n=r}}(e),l(!r),r}static empty(e){return new B(e?[e,-1]:[],[])}static fromJSON(e){if(!Array.isArray(e))throw RangeError("Invalid JSON representation of ChangeSet");let t=[],i=[];for(let o=0;o<e.length;o++){let a=e[o];if("number"==typeof a)t.push(a,-1);else if(!Array.isArray(a)||"number"!=typeof a[0]||a.some((e,t)=>t&&"string"!=typeof e))throw RangeError("Invalid JSON representation of ChangeSet");else if(1==a.length)t.push(a[0],0);else{for(;i.length<o;)i.push(s.empty);i[o]=s.of(a.slice(1)),t.push(a[0],i[o].length)}}return new B(t,i)}static createSet(e,t){return new B(e,t)}}function I(e,t,i,o=!1){if(0==t&&i<=0)return;let a=e.length-2;a>=0&&i<=0&&i==e[a+1]?e[a]+=t:0==t&&0==e[a]?e[a+1]+=i:o?(e[a]+=t,e[a+1]+=i):e.push(t,i)}function G(e,t,i){if(0==i.length)return;let o=t.length-2>>1;if(o<e.length)e[e.length-1]=e[e.length-1].append(i);else{for(;e.length<o;)e.push(s.empty);e.push(i)}}function $(e,t,i){let o=e.inserted;for(let a=0,n=0,r=0;r<e.sections.length;){let l=e.sections[r++],p=e.sections[r++];if(p<0)a+=l,n+=l;else{let d=a,c=n,f=s.empty;for(;d+=l,c+=p,p&&o&&(f=f.append(o[r-2>>1])),!i&&r!=e.sections.length&&!(e.sections[r+1]<0);)l=e.sections[r++],p=e.sections[r++];t(a,d,n,c,f),a=d,n=c}}}function N(e,t,i,o=!1){let a=[],n=o?[]:null,r=new W(e),s=new W(t);for(let e=-1;;)if(-1==r.ins&&-1==s.ins){let e=Math.min(r.len,s.len);I(a,e,-1),r.forward(e),s.forward(e)}else if(s.ins>=0&&(r.ins<0||e==r.i||0==r.off&&(s.len<r.len||s.len==r.len&&!i))){let t=s.len;for(I(a,s.ins,-1);t;){let i=Math.min(r.len,t);r.ins>=0&&e<r.i&&r.len<=i&&(I(a,0,r.ins),n&&G(n,a,r.text),e=r.i),r.forward(i),t-=i}s.next()}else if(r.ins>=0){let t=0,i=r.len;for(;i;)if(-1==s.ins){let e=Math.min(i,s.len);t+=e,i-=e,s.forward(e)}else if(0==s.ins&&s.len<i)i-=s.len,s.next();else break;I(a,t,e<r.i?r.ins:0),n&&e<r.i&&G(n,a,r.text),e=r.i,r.forward(r.len-i)}else if(r.done&&s.done)return n?B.createSet(a,n):E.create(a);else throw Error("Mismatched change set lengths")}function z(e,t,i=!1){let o=[],a=i?[]:null,n=new W(e),r=new W(t);for(let e=!1;;){if(n.done&&r.done)return a?B.createSet(o,a):E.create(o);if(0==n.ins)I(o,n.len,0,e),n.next();else if(0!=r.len||r.done){if(n.done||r.done)throw Error("Mismatched change set lengths");{let t=Math.min(n.len2,r.len),i=o.length;if(-1==n.ins){let i=-1==r.ins?-1:r.off?0:r.ins;I(o,t,i,e),a&&i&&G(a,o,r.text)}else -1==r.ins?(I(o,n.off?0:n.len,t,e),a&&G(a,o,n.textBit(t))):(I(o,n.off?0:n.len,r.off?0:r.ins,e),a&&!r.off&&G(a,o,r.text));e=(n.ins>t||r.ins>=0&&r.len>t)&&(e||o.length>i),n.forward2(t),r.forward(t)}}else I(o,0,r.ins,e),a&&G(a,o,r.text),r.next()}}class W{constructor(e){this.set=e,this.i=0,this.next()}next(){let{sections:e}=this.set;this.i<e.length?(this.len=e[this.i++],this.ins=e[this.i++]):(this.len=0,this.ins=-2),this.off=0}get done(){return -2==this.ins}get len2(){return this.ins<0?this.len:this.ins}get text(){let{inserted:e}=this.set,t=this.i-2>>1;return t>=e.length?s.empty:e[t]}textBit(e){let{inserted:t}=this.set,i=this.i-2>>1;return i>=t.length&&!e?s.empty:t[i].slice(this.off,null==e?void 0:this.off+e)}forward(e){e==this.len?this.next():(this.len-=e,this.off+=e)}forward2(e){-1==this.ins?this.forward(e):e==this.ins?this.next():(this.ins-=e,this.off+=e)}}class j{constructor(e,t,i){this.from=e,this.to=t,this.flags=i}get anchor(){return 16&this.flags?this.to:this.from}get head(){return 16&this.flags?this.from:this.to}get empty(){return this.from==this.to}get assoc(){return 4&this.flags?-1:8&this.flags?1:0}get bidiLevel(){let e=3&this.flags;return 3==e?null:e}get goalColumn(){let e=this.flags>>5;return 33554431==e?void 0:e}map(e,t=-1){let i,o;return this.empty?i=o=e.mapPos(this.from,t):(i=e.mapPos(this.from,1),o=e.mapPos(this.to,-1)),i==this.from&&o==this.to?this:new j(i,o,this.flags)}extend(e,t=e){if(e<=this.anchor&&t>=this.anchor)return q.range(e,t);let i=Math.abs(e-this.anchor)>Math.abs(t-this.anchor)?e:t;return q.range(this.anchor,i)}eq(e){return this.anchor==e.anchor&&this.head==e.head}toJSON(){return{anchor:this.anchor,head:this.head}}static fromJSON(e){if(!e||"number"!=typeof e.anchor||"number"!=typeof e.head)throw RangeError("Invalid JSON representation for SelectionRange");return q.range(e.anchor,e.head)}static create(e,t,i){return new j(e,t,i)}}class q{constructor(e,t){this.ranges=e,this.mainIndex=t}map(e,t=-1){return e.empty?this:q.create(this.ranges.map(i=>i.map(e,t)),this.mainIndex)}eq(e){if(this.ranges.length!=e.ranges.length||this.mainIndex!=e.mainIndex)return!1;for(let t=0;t<this.ranges.length;t++)if(!this.ranges[t].eq(e.ranges[t]))return!1;return!0}get main(){return this.ranges[this.mainIndex]}asSingle(){return 1==this.ranges.length?this:new q([this.main],0)}addRange(e,t=!0){return q.create([e].concat(this.ranges),t?0:this.mainIndex+1)}replaceRange(e,t=this.mainIndex){let i=this.ranges.slice();return i[t]=e,q.create(i,this.mainIndex)}toJSON(){return{ranges:this.ranges.map(e=>e.toJSON()),main:this.mainIndex}}static fromJSON(e){if(!e||!Array.isArray(e.ranges)||"number"!=typeof e.main||e.main>=e.ranges.length)throw RangeError("Invalid JSON representation for EditorSelection");return new q(e.ranges.map(e=>j.fromJSON(e)),e.main)}static single(e,t=e){return new q([q.range(e,t)],0)}static create(e,t=0){if(0==e.length)throw RangeError("A selection needs at least one range");for(let i=0,o=0;o<e.length;o++){let a=e[o];if(a.empty?a.from<=i:a.from<i)return q.normalized(e.slice(),t);i=a.to}return new q(e,t)}static cursor(e,t=0,i,o){return j.create(e,e,(0==t?0:t<0?4:8)|(null==i?3:Math.min(2,i))|(null!=o?o:33554431)<<5)}static range(e,t,i,o){let a=(null!=i?i:33554431)<<5|(null==o?3:Math.min(2,o));return t<e?j.create(t,e,24|a):j.create(e,t,(t>e?4:0)|a)}static normalized(e,t=0){let i=e[t];e.sort((e,t)=>e.from-t.from),t=e.indexOf(i);for(let i=1;i<e.length;i++){let o=e[i],a=e[i-1];if(o.empty?o.from<=a.to:o.from<a.to){let n=a.from,r=Math.max(o.to,a.to);i<=t&&t--,e.splice(--i,2,o.anchor>o.head?q.range(r,n):q.range(n,r))}}return new q(e,t)}}function V(e,t){for(let i of e.ranges)if(i.to>t)throw RangeError("Selection points outside of document")}let Z=0;class X{constructor(e,t,i,o,a){this.combine=e,this.compareInput=t,this.compare=i,this.isStatic=o,this.id=Z++,this.default=e([]),this.extensions="function"==typeof a?a(this):a}static define(e={}){return new X(e.combine||(e=>e),e.compareInput||((e,t)=>e===t),e.compare||(e.combine?(e,t)=>e===t:U),!!e.static,e.enables)}of(e){return new H([],this,0,e)}compute(e,t){if(this.isStatic)throw Error("Can't compute a static facet");return new H(e,this,1,t)}computeN(e,t){if(this.isStatic)throw Error("Can't compute a static facet");return new H(e,this,2,t)}from(e,t){return t||(t=e=>e),this.compute([e],i=>t(i.field(e)))}}function U(e,t){return e==t||e.length==t.length&&e.every((e,i)=>e===t[i])}class H{constructor(e,t,i,o){this.dependencies=e,this.facet=t,this.type=i,this.value=o,this.id=Z++}dynamicSlot(e){var t;let i=this.value,o=this.facet.compareInput,a=this.id,n=e[a]>>1,r=2==this.type,s=!1,l=!1,p=[];for(let i of this.dependencies)"doc"==i?s=!0:"selection"==i?l=!0:((null!==(t=e[i.id])&&void 0!==t?t:1)&1)==0&&p.push(e[i.id]);return{create:e=>(e.values[n]=i(e),1),update(e,t){if(s&&t.docChanged||l&&(t.docChanged||t.selection)||_(e,p)){let t=i(e);if(r?!Y(t,e.values[n],o):!o(t,e.values[n]))return e.values[n]=t,1}return 0},reconfigure:(e,t)=>{let s,l=t.config.address[a];if(null!=l){let a=el(t,l);if(this.dependencies.every(i=>i instanceof X?t.facet(i)===e.facet(i):!(i instanceof J)||t.field(i,!1)==e.field(i,!1))||(r?Y(s=i(e),a,o):o(s=i(e),a)))return e.values[n]=a,0}else s=i(e);return e.values[n]=s,1}}}}function Y(e,t,i){if(e.length!=t.length)return!1;for(let o=0;o<e.length;o++)if(!i(e[o],t[o]))return!1;return!0}function _(e,t){let i=!1;for(let o of t)1&es(e,o)&&(i=!0);return i}const K=X.define({static:!0});class J{constructor(e,t,i,o,a){this.id=e,this.createF=t,this.updateF=i,this.compareF=o,this.spec=a,this.provides=void 0}static define(e){let t=new J(Z++,e.create,e.update,e.compare||((e,t)=>e===t),e);return e.provide&&(t.provides=e.provide(t)),t}create(e){let t=e.facet(K).find(e=>e.field==this);return((null==t?void 0:t.create)||this.createF)(e)}slot(e){let t=e[this.id]>>1;return{create:e=>(e.values[t]=this.create(e),1),update:(e,i)=>{let o=e.values[t],a=this.updateF(o,i);return this.compareF(o,a)?0:(e.values[t]=a,1)},reconfigure:(e,i)=>null!=i.config.address[this.id]?(e.values[t]=i.field(this),0):(e.values[t]=this.create(e),1)}}init(e){return[this,K.of({field:this,create:e})]}get extension(){return this}}const ee={lowest:4,low:3,default:2,high:1,highest:0};function et(e){return t=>new eo(t,e)}const ei={highest:et(ee.highest),high:et(ee.high),default:et(ee.default),low:et(ee.low),lowest:et(ee.lowest)};class eo{constructor(e,t){this.inner=e,this.prec=t}}class ea{of(e){return new en(this,e)}reconfigure(e){return ea.reconfigure.of({compartment:this,extension:e})}get(e){return e.config.compartments.get(this)}}class en{constructor(e,t){this.compartment=e,this.inner=t}}class er{constructor(e,t,i,o,a,n){for(this.base=e,this.compartments=t,this.dynamicSlots=i,this.address=o,this.staticValues=a,this.facets=n,this.statusTemplate=[];this.statusTemplate.length<i.length;)this.statusTemplate.push(0)}staticFacet(e){let t=this.address[e.id];return null==t?e.default:this.staticValues[t>>1]}static resolve(e,t,i){let o,a,n=[],r=Object.create(null),s=new Map;for(let i of(o=[[],[],[],[],[]],a=new Map,!function e(i,n){let r=a.get(i);if(null!=r){if(r<=n)return;let e=o[r].indexOf(i);e>-1&&o[r].splice(e,1),i instanceof en&&s.delete(i.compartment)}if(a.set(i,n),Array.isArray(i))for(let t of i)e(t,n);else if(i instanceof en){if(s.has(i.compartment))throw RangeError("Duplicate use of compartment in extensions");let o=t.get(i.compartment)||i.inner;s.set(i.compartment,o),e(o,n)}else if(i instanceof eo)e(i.inner,i.prec);else if(i instanceof J)o[n].push(i),i.provides&&e(i.provides,n);else if(i instanceof H)o[n].push(i),i.facet.extensions&&e(i.facet.extensions,ee.default);else{let t=i.extension;if(!t)throw Error(`Unrecognized extension value in extension set (${i}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);e(t,n)}}(e,ee.default),o.reduce((e,t)=>e.concat(t))))i instanceof J?n.push(i):(r[i.facet.id]||(r[i.facet.id]=[])).push(i);let l=Object.create(null),p=[],d=[];for(let e of n)l[e.id]=d.length<<1,d.push(t=>e.slot(t));let c=null==i?void 0:i.config.facets;for(let e in r){let t=r[e],o=t[0].facet,a=c&&c[e]||[];if(t.every(e=>0==e.type)){if(l[o.id]=p.length<<1|1,U(a,t))p.push(i.facet(o));else{let e=o.combine(t.map(e=>e.value));p.push(i&&o.compare(e,i.facet(o))?i.facet(o):e)}}else{for(let e of t)0==e.type?(l[e.id]=p.length<<1|1,p.push(e.value)):(l[e.id]=d.length<<1,d.push(t=>e.dynamicSlot(t)));l[o.id]=d.length<<1,d.push(e=>(function(e,t,i){let o=i.map(t=>e[t.id]),a=i.map(e=>e.type),n=o.filter(e=>!(1&e)),r=e[t.id]>>1;function s(e){let i=[];for(let t=0;t<o.length;t++){let n=el(e,o[t]);if(2==a[t])for(let e of n)i.push(e);else i.push(n)}return t.combine(i)}return{create(e){for(let t of o)es(e,t);return e.values[r]=s(e),1},update(e,i){if(!_(e,n))return 0;let o=s(e);return t.compare(o,e.values[r])?0:(e.values[r]=o,1)},reconfigure(e,a){let n=_(e,o),l=a.config.facets[t.id],p=a.facet(t);if(l&&!n&&U(i,l))return e.values[r]=p,0;let d=s(e);return t.compare(d,p)?(e.values[r]=p,0):(e.values[r]=d,1)}}})(e,o,t))}}let f=d.map(e=>e(l));return new er(e,s,f,l,p,r)}}function es(e,t){if(1&t)return 2;let i=t>>1,o=e.status[i];if(4==o)throw Error("Cyclic dependency between fields and/or facets");if(2&o)return o;e.status[i]=4;let a=e.computeSlot(e,e.config.dynamicSlots[i]);return e.status[i]=2|a}function el(e,t){return 1&t?e.config.staticValues[t>>1]:e.values[t>>1]}const ep=X.define(),ed=X.define({combine:e=>e.some(e=>e),static:!0}),ec=X.define({combine:e=>e.length?e[0]:void 0,static:!0}),ef=X.define(),eh=X.define(),ey=X.define(),eu=X.define({combine:e=>!!e.length&&e[0]});class em{constructor(e,t){this.type=e,this.value=t}static define(){return new ex}}class ex{of(e){return new em(this,e)}}class eg{constructor(e){this.map=e}of(e){return new eb(this,e)}}class eb{constructor(e,t){this.type=e,this.value=t}map(e){let t=this.type.map(this.value,e);return void 0===t?void 0:t==this.value?this:new eb(this.type,t)}is(e){return this.type==e}static define(e={}){return new eg(e.map||(e=>e))}static mapEffects(e,t){if(!e.length)return e;let i=[];for(let o of e){let e=o.map(t);e&&i.push(e)}return i}}eb.reconfigure=eb.define(),eb.appendConfig=eb.define();class ew{constructor(e,t,i,o,a,n){this.startState=e,this.changes=t,this.selection=i,this.effects=o,this.annotations=a,this.scrollIntoView=n,this._doc=null,this._state=null,i&&V(i,t.newLength),a.some(e=>e.type==ew.time)||(this.annotations=a.concat(ew.time.of(Date.now())))}static create(e,t,i,o,a,n){return new ew(e,t,i,o,a,n)}get newDoc(){return this._doc||(this._doc=this.changes.apply(this.startState.doc))}get newSelection(){return this.selection||this.startState.selection.map(this.changes)}get state(){return this._state||this.startState.applyTransaction(this),this._state}annotation(e){for(let t of this.annotations)if(t.type==e)return t.value}get docChanged(){return!this.changes.empty}get reconfigured(){return this.startState.config!=this.state.config}isUserEvent(e){let t=this.annotation(ew.userEvent);return!!(t&&(t==e||t.length>e.length&&t.slice(0,e.length)==e&&"."==t[e.length]))}}function ek(e,t,i){var o;let a,n,r;return i?(a=t.changes,n=B.empty(t.changes.length),r=e.changes.compose(t.changes)):(a=t.changes.map(e.changes),n=e.changes.mapDesc(t.changes,!0),r=e.changes.compose(a)),{changes:r,selection:t.selection?t.selection.map(n):null===(o=e.selection)||void 0===o?void 0:o.map(a),effects:eb.mapEffects(e.effects,a).concat(eb.mapEffects(t.effects,n)),annotations:e.annotations.length?e.annotations.concat(t.annotations):t.annotations,scrollIntoView:e.scrollIntoView||t.scrollIntoView}}function ev(e,t,i){let o=t.selection,a=eS(t.annotations);return t.userEvent&&(a=a.concat(ew.userEvent.of(t.userEvent))),{changes:t.changes instanceof B?t.changes:B.of(t.changes||[],i,e.facet(ec)),selection:o&&(o instanceof q?o:q.single(o.anchor,o.head)),effects:eS(t.effects),annotations:a,scrollIntoView:!!t.scrollIntoView}}ew.time=em.define(),ew.userEvent=em.define(),ew.addToHistory=em.define(),ew.remote=em.define();const eO=[];function eS(e){return null==e?eO:Array.isArray(e)?e:[e]}var eC=function(e){return e[e.Word=0]="Word",e[e.Space=1]="Space",e[e.Other=2]="Other",e}(eC||(eC={}));const eP=/[\u00df\u0587\u0590-\u05f4\u0600-\u06ff\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/;try{e=RegExp("[\\p{Alphabetic}\\p{Number}_]","u")}catch(e){}class eD{constructor(e,t,i,o,a,n){this.config=e,this.doc=t,this.selection=i,this.values=o,this.status=e.statusTemplate.slice(),this.computeSlot=a,n&&(n._state=this);for(let e=0;e<this.config.dynamicSlots.length;e++)es(this,e<<1);this.computeSlot=null}field(e,t=!0){let i=this.config.address[e.id];if(null==i){if(t)throw RangeError("Field is not present in this state");return}return es(this,i),el(this,i)}update(...e){return function e(t,i,o){let a=ev(t,i.length?i[0]:{},t.doc.length);i.length&&!1===i[0].filter&&(o=!1);for(let e=1;e<i.length;e++){!1===i[e].filter&&(o=!1);let n=!!i[e].sequential;a=ek(a,ev(t,i[e],n?a.changes.newLength:t.doc.length),n)}let n=ew.create(t,a.changes,a.selection,a.effects,a.annotations,a.scrollIntoView);return function(e){let t=e.startState,i=t.facet(ey),o=e;for(let a=i.length-1;a>=0;a--){let n=i[a](e);n&&Object.keys(n).length&&(o=ek(o,ev(t,n,e.changes.newLength),!0))}return o==e?e:ew.create(t,e.changes,e.selection,o.effects,o.annotations,o.scrollIntoView)}(o?function(t){let i=t.startState,o=!0;for(let e of i.facet(ef)){let i=e(t);if(!1===i){o=!1;break}Array.isArray(i)&&(o=!0===o?i:function(e,t){let i=[];for(let o=0,a=0;;){let n,r;if(o<e.length&&(a==t.length||t[a]>=e[o]))n=e[o++],r=e[o++];else{if(!(a<t.length))return i;n=t[a++],r=t[a++]}!i.length||i[i.length-1]<n?i.push(n,r):i[i.length-1]<r&&(i[i.length-1]=r)}}(o,i))}if(!0!==o){let e,a;if(!1===o)a=t.changes.invertedDesc,e=B.empty(i.doc.length);else{let i=t.changes.filter(o);e=i.changes,a=i.filtered.mapDesc(i.changes).invertedDesc}t=ew.create(i,e,t.selection&&t.selection.map(a),eb.mapEffects(t.effects,a),t.annotations,t.scrollIntoView)}let a=i.facet(eh);for(let o=a.length-1;o>=0;o--){let n=a[o](t);t=n instanceof ew?n:Array.isArray(n)&&1==n.length&&n[0]instanceof ew?n[0]:e(i,eS(n),!1)}return t}(n):n)}(this,e,!0)}applyTransaction(e){let t,i=this.config,{base:o,compartments:a}=i;for(let t of e.effects)t.is(ea.reconfigure)?(i&&(a=new Map,i.compartments.forEach((e,t)=>a.set(t,e)),i=null),a.set(t.value.compartment,t.value.extension)):t.is(eb.reconfigure)?(i=null,o=t.value):t.is(eb.appendConfig)&&(i=null,o=eS(o).concat(t.value));i?t=e.startState.values.slice():(i=er.resolve(o,a,this),t=new eD(i,this.doc,this.selection,i.dynamicSlots.map(()=>null),(e,t)=>t.reconfigure(e,this),null).values),new eD(i,e.newDoc,e.newSelection,t,(t,i)=>i.update(t,e),e)}replaceSelection(e){return"string"==typeof e&&(e=this.toText(e)),this.changeByRange(t=>({changes:{from:t.from,to:t.to,insert:e},range:q.cursor(t.from+e.length)}))}changeByRange(e){let t=this.selection,i=e(t.ranges[0]),o=this.changes(i.changes),a=[i.range],n=eS(i.effects);for(let i=1;i<t.ranges.length;i++){let r=e(t.ranges[i]),s=this.changes(r.changes),l=s.map(o);for(let e=0;e<i;e++)a[e]=a[e].map(l);let p=o.mapDesc(s,!0);a.push(r.range.map(p)),o=o.compose(l),n=eb.mapEffects(n,l).concat(eb.mapEffects(eS(r.effects),p))}return{changes:o,selection:q.create(a,t.mainIndex),effects:n}}changes(e=[]){return e instanceof B?e:B.of(e,this.doc.length,this.facet(eD.lineSeparator))}toText(e){return s.of(e.split(this.facet(eD.lineSeparator)||C))}sliceDoc(e=0,t=this.doc.length){return this.doc.sliceString(e,t,this.lineBreak)}facet(e){let t=this.config.address[e.id];return null==t?e.default:(es(this,t),el(this,t))}toJSON(e){let t={doc:this.sliceDoc(),selection:this.selection.toJSON()};if(e)for(let i in e){let o=e[i];o instanceof J&&null!=this.config.address[o.id]&&(t[i]=o.spec.toJSON(this.field(e[i]),this))}return t}static fromJSON(e,t={},i){if(!e||"string"!=typeof e.doc)throw RangeError("Invalid JSON representation for EditorState");let o=[];if(i){for(let t in i)if(Object.prototype.hasOwnProperty.call(e,t)){let a=i[t],n=e[t];o.push(a.init(e=>a.spec.fromJSON(n,e)))}}return eD.create({doc:e.doc,selection:q.fromJSON(e.selection),extensions:t.extensions?o.concat([t.extensions]):o})}static create(e={}){let t=er.resolve(e.extensions||[],new Map),i=e.doc instanceof s?e.doc:s.of((e.doc||"").split(t.staticFacet(eD.lineSeparator)||C)),o=e.selection?e.selection instanceof q?e.selection:q.single(e.selection.anchor,e.selection.head):q.single(0);return V(o,i.length),t.staticFacet(ed)||(o=o.asSingle()),new eD(t,i,o,t.dynamicSlots.map(()=>null),(e,t)=>t.create(e),null)}get tabSize(){return this.facet(eD.tabSize)}get lineBreak(){return this.facet(eD.lineSeparator)||"\n"}get readOnly(){return this.facet(eu)}phrase(e,...t){for(let t of this.facet(eD.phrases))if(Object.prototype.hasOwnProperty.call(t,e)){e=t[e];break}return t.length&&(e=e.replace(/\$(\$|\d*)/g,(e,i)=>{if("$"==i)return"$";let o=+(i||1);return!o||o>t.length?e:t[o-1]})),e}languageDataAt(e,t,i=-1){let o=[];for(let a of this.facet(ep))for(let n of a(this,t,i))Object.prototype.hasOwnProperty.call(n,e)&&o.push(n[e]);return o}charCategorizer(t){var i;return i=this.languageDataAt("wordChars",t).join(""),t=>{if(!/\S/.test(t))return eC.Space;if(function(t){if(e)return e.test(t);for(let e=0;e<t.length;e++){let i=t[e];if(/\w/.test(i)||i>"\x80"&&(i.toUpperCase()!=i.toLowerCase()||eP.test(i)))return!0}return!1}(t))return eC.Word;for(let e=0;e<i.length;e++)if(t.indexOf(i[e])>-1)return eC.Word;return eC.Other}}wordAt(e){let{text:t,from:i,length:o}=this.doc.lineAt(e),a=this.charCategorizer(e),n=e-i,r=e-i;for(;n>0;){let e=x(t,n,!1);if(a(t.slice(e,n))!=eC.Word)break;n=e}for(;r<o;){let e=x(t,r);if(a(t.slice(r,e))!=eC.Word)break;r=e}return n==r?null:q.range(n+i,r+i)}}function eT(e,t,i={}){let o={};for(let t of e)for(let e of Object.keys(t)){let a=t[e],n=o[e];if(void 0===n)o[e]=a;else if(n===a||void 0===a);else if(Object.hasOwnProperty.call(i,e))o[e]=i[e](n,a);else throw Error("Config merge conflict for field "+e)}for(let e in t)void 0===o[e]&&(o[e]=t[e]);return o}eD.allowMultipleSelections=ed,eD.tabSize=X.define({combine:e=>e.length?e[0]:4}),eD.lineSeparator=ec,eD.readOnly=eu,eD.phrases=X.define({compare(e,t){let i=Object.keys(e),o=Object.keys(t);return i.length==o.length&&i.every(i=>e[i]==t[i])}}),eD.languageData=ep,eD.changeFilter=ef,eD.transactionFilter=eh,eD.transactionExtender=ey,ea.reconfigure=eb.define();class eM{eq(e){return this==e}range(e,t=e){return eR.create(e,t,this)}}eM.prototype.startSide=eM.prototype.endSide=0,eM.prototype.point=!1,eM.prototype.mapMode=L.TrackDel;class eR{constructor(e,t,i){this.from=e,this.to=t,this.value=i}static create(e,t,i){return new eR(e,t,i)}}function eQ(e,t){return e.from-t.from||e.value.startSide-t.value.startSide}class eA{constructor(e,t,i,o){this.from=e,this.to=t,this.value=i,this.maxPoint=o}get length(){return this.to[this.to.length-1]}findIndex(e,t,i,o=0){let a=i?this.to:this.from;for(let n=o,r=a.length;;){if(n==r)return n;let o=n+r>>1,s=a[o]-e||(i?this.value[o].endSide:this.value[o].startSide)-t;if(o==n)return s>=0?n:r;s>=0?r=o:n=o+1}}between(e,t,i,o){for(let a=this.findIndex(t,-1e9,!0),n=this.findIndex(i,1e9,!1,a);a<n;a++)if(!1===o(this.from[a]+e,this.to[a]+e,this.value[a]))return!1}map(e,t){let i=[],o=[],a=[],n=-1,r=-1;for(let s=0;s<this.value.length;s++){let l=this.value[s],p=this.from[s]+e,d=this.to[s]+e,c,f;if(p==d){let e=t.mapPos(p,l.startSide,l.mapMode);if(null==e||(c=f=e,l.startSide!=l.endSide&&(f=t.mapPos(p,l.endSide))<c))continue}else if((c=t.mapPos(p,l.startSide))>(f=t.mapPos(d,l.endSide))||c==f&&l.startSide>0&&l.endSide<=0)continue;0>(f-c||l.endSide-l.startSide)||(n<0&&(n=c),l.point&&(r=Math.max(r,f-c)),i.push(l),o.push(c-n),a.push(f-n))}return{mapped:i.length?new eA(o,a,i,r):null,pos:n}}}class eF{constructor(e,t,i,o){this.chunkPos=e,this.chunk=t,this.nextLayer=i,this.maxPoint=o}static create(e,t,i,o){return new eF(e,t,i,o)}get length(){let e=this.chunk.length-1;return e<0?0:Math.max(this.chunkEnd(e),this.nextLayer.length)}get size(){if(this.isEmpty)return 0;let e=this.nextLayer.size;for(let t of this.chunk)e+=t.value.length;return e}chunkEnd(e){return this.chunkPos[e]+this.chunk[e].length}update(e){let{add:t=[],sort:i=!1,filterFrom:o=0,filterTo:a=this.length}=e,n=e.filter;if(0==t.length&&!n)return this;if(i&&(t=t.slice().sort(eQ)),this.isEmpty)return t.length?eF.of(t):this;let r=new eB(this,null,-1).goto(0),s=0,l=[],p=new eL;for(;r.value||s<t.length;)if(s<t.length&&(r.from-t[s].from||r.startSide-t[s].value.startSide)>=0){let e=t[s++];p.addInner(e.from,e.to,e.value)||l.push(e)}else 1==r.rangeIndex&&r.chunkIndex<this.chunk.length&&(s==t.length||this.chunkEnd(r.chunkIndex)<t[s].from)&&(!n||o>this.chunkEnd(r.chunkIndex)||a<this.chunkPos[r.chunkIndex])&&p.addChunk(this.chunkPos[r.chunkIndex],this.chunk[r.chunkIndex])?r.nextChunk():((!n||o>r.to||a<r.from||n(r.from,r.to,r.value))&&!p.addInner(r.from,r.to,r.value)&&l.push(eR.create(r.from,r.to,r.value)),r.next());return p.finishInner(this.nextLayer.isEmpty&&!l.length?eF.empty:this.nextLayer.update({add:l,filter:n,filterFrom:o,filterTo:a}))}map(e){if(e.empty||this.isEmpty)return this;let t=[],i=[],o=-1;for(let a=0;a<this.chunk.length;a++){let n=this.chunkPos[a],r=this.chunk[a],s=e.touchesRange(n,n+r.length);if(!1===s)o=Math.max(o,r.maxPoint),t.push(r),i.push(e.mapPos(n));else if(!0===s){let{mapped:a,pos:s}=r.map(n,e);a&&(o=Math.max(o,a.maxPoint),t.push(a),i.push(s))}}let a=this.nextLayer.map(e);return 0==t.length?a:new eF(i,t,a||eF.empty,o)}between(e,t,i){if(!this.isEmpty){for(let o=0;o<this.chunk.length;o++){let a=this.chunkPos[o],n=this.chunk[o];if(t>=a&&e<=a+n.length&&!1===n.between(a,e-a,t-a,i))return}this.nextLayer.between(e,t,i)}}iter(e=0){return eI.from([this]).goto(e)}get isEmpty(){return this.nextLayer==this}static iter(e,t=0){return eI.from(e).goto(t)}static compare(e,t,i,o,a=-1){let n=e.filter(e=>e.maxPoint>0||!e.isEmpty&&e.maxPoint>=a),r=t.filter(e=>e.maxPoint>0||!e.isEmpty&&e.maxPoint>=a),s=eE(n,r,i),l=new e$(n,s,a),p=new e$(r,s,a);i.iterGaps((e,t,i)=>eN(l,e,p,t,i,o)),i.empty&&0==i.length&&eN(l,0,p,0,0,o)}static eq(e,t,i=0,o){null==o&&(o=999999999);let a=e.filter(e=>!e.isEmpty&&0>t.indexOf(e)),n=t.filter(t=>!t.isEmpty&&0>e.indexOf(t));if(a.length!=n.length)return!1;if(!a.length)return!0;let r=eE(a,n),s=new e$(a,r,0).goto(i),l=new e$(n,r,0).goto(i);for(;;){if(s.to!=l.to||!ez(s.active,l.active)||s.point&&(!l.point||!s.point.eq(l.point)))return!1;if(s.to>o)return!0;s.next(),l.next()}}static spans(e,t,i,o,a=-1){let n=new e$(e,null,a).goto(t),r=t,s=n.openStart;for(;;){let e=Math.min(n.to,i);if(n.point){let i=n.activeForPoint(n.to),a=n.pointFrom<t?i.length+1:Math.min(i.length,s);o.point(r,e,n.point,i,a,n.pointRank),s=Math.min(n.openEnd(e),i.length)}else e>r&&(o.span(r,e,n.active,s),s=n.openEnd(e));if(n.to>i)return s+(n.point&&n.to>i?1:0);r=n.to,n.next()}}static of(e,t=!1){let i=new eL;for(let o of e instanceof eR?[e]:t?function(e){if(e.length>1)for(let t=e[0],i=1;i<e.length;i++){let o=e[i];if(eQ(t,o)>0)return e.slice().sort(eQ);t=o}return e}(e):e)i.add(o.from,o.to,o.value);return i.finish()}}eF.empty=new eF([],[],null,-1),eF.empty.nextLayer=eF.empty;class eL{constructor(){this.chunks=[],this.chunkPos=[],this.chunkStart=-1,this.last=null,this.lastFrom=-1e9,this.lastTo=-1e9,this.from=[],this.to=[],this.value=[],this.maxPoint=-1,this.setMaxPoint=-1,this.nextLayer=null}finishChunk(e){this.chunks.push(new eA(this.from,this.to,this.value,this.maxPoint)),this.chunkPos.push(this.chunkStart),this.chunkStart=-1,this.setMaxPoint=Math.max(this.setMaxPoint,this.maxPoint),this.maxPoint=-1,e&&(this.from=[],this.to=[],this.value=[])}add(e,t,i){this.addInner(e,t,i)||(this.nextLayer||(this.nextLayer=new eL)).add(e,t,i)}addInner(e,t,i){let o=e-this.lastTo||i.startSide-this.last.endSide;if(o<=0&&0>(e-this.lastFrom||i.startSide-this.last.startSide))throw Error("Ranges must be added sorted by `from` position and `startSide`");return!(o<0)&&(250==this.from.length&&this.finishChunk(!0),this.chunkStart<0&&(this.chunkStart=e),this.from.push(e-this.chunkStart),this.to.push(t-this.chunkStart),this.last=i,this.lastFrom=e,this.lastTo=t,this.value.push(i),i.point&&(this.maxPoint=Math.max(this.maxPoint,t-e)),!0)}addChunk(e,t){if(0>(e-this.lastTo||t.value[0].startSide-this.last.endSide))return!1;this.from.length&&this.finishChunk(!0),this.setMaxPoint=Math.max(this.setMaxPoint,t.maxPoint),this.chunks.push(t),this.chunkPos.push(e);let i=t.value.length-1;return this.last=t.value[i],this.lastFrom=t.from[i]+e,this.lastTo=t.to[i]+e,!0}finish(){return this.finishInner(eF.empty)}finishInner(e){if(this.from.length&&this.finishChunk(!1),0==this.chunks.length)return e;let t=eF.create(this.chunkPos,this.chunks,this.nextLayer?this.nextLayer.finishInner(e):e,this.setMaxPoint);return this.from=null,t}}function eE(e,t,i){let o=new Map;for(let t of e)for(let e=0;e<t.chunk.length;e++)t.chunk[e].maxPoint<=0&&o.set(t.chunk[e],t.chunkPos[e]);let a=new Set;for(let e of t)for(let t=0;t<e.chunk.length;t++){let n=o.get(e.chunk[t]);null==n||(i?i.mapPos(n):n)!=e.chunkPos[t]||(null==i?void 0:i.touchesRange(n,n+e.chunk[t].length))||a.add(e.chunk[t])}return a}class eB{constructor(e,t,i,o=0){this.layer=e,this.skip=t,this.minPoint=i,this.rank=o}get startSide(){return this.value?this.value.startSide:0}get endSide(){return this.value?this.value.endSide:0}goto(e,t=-1e9){return this.chunkIndex=this.rangeIndex=0,this.gotoInner(e,t,!1),this}gotoInner(e,t,i){for(;this.chunkIndex<this.layer.chunk.length;){let t=this.layer.chunk[this.chunkIndex];if(!(this.skip&&this.skip.has(t)||this.layer.chunkEnd(this.chunkIndex)<e||t.maxPoint<this.minPoint))break;this.chunkIndex++,i=!1}if(this.chunkIndex<this.layer.chunk.length){let o=this.layer.chunk[this.chunkIndex].findIndex(e-this.layer.chunkPos[this.chunkIndex],t,!0);(!i||this.rangeIndex<o)&&this.setRangeIndex(o)}this.next()}forward(e,t){0>(this.to-e||this.endSide-t)&&this.gotoInner(e,t,!0)}next(){for(;;)if(this.chunkIndex==this.layer.chunk.length){this.from=this.to=1e9,this.value=null;break}else{let e=this.layer.chunkPos[this.chunkIndex],t=this.layer.chunk[this.chunkIndex],i=e+t.from[this.rangeIndex];if(this.from=i,this.to=e+t.to[this.rangeIndex],this.value=t.value[this.rangeIndex],this.setRangeIndex(this.rangeIndex+1),this.minPoint<0||this.value.point&&this.to-this.from>=this.minPoint)break}}setRangeIndex(e){if(e==this.layer.chunk[this.chunkIndex].value.length){if(this.chunkIndex++,this.skip)for(;this.chunkIndex<this.layer.chunk.length&&this.skip.has(this.layer.chunk[this.chunkIndex]);)this.chunkIndex++;this.rangeIndex=0}else this.rangeIndex=e}nextChunk(){this.chunkIndex++,this.rangeIndex=0,this.next()}compare(e){return this.from-e.from||this.startSide-e.startSide||this.rank-e.rank||this.to-e.to||this.endSide-e.endSide}}class eI{constructor(e){this.heap=e}static from(e,t=null,i=-1){let o=[];for(let a=0;a<e.length;a++)for(let n=e[a];!n.isEmpty;n=n.nextLayer)n.maxPoint>=i&&o.push(new eB(n,t,i,a));return 1==o.length?o[0]:new eI(o)}get startSide(){return this.value?this.value.startSide:0}goto(e,t=-1e9){for(let i of this.heap)i.goto(e,t);for(let e=this.heap.length>>1;e>=0;e--)eG(this.heap,e);return this.next(),this}forward(e,t){for(let i of this.heap)i.forward(e,t);for(let e=this.heap.length>>1;e>=0;e--)eG(this.heap,e);0>(this.to-e||this.value.endSide-t)&&this.next()}next(){if(0==this.heap.length)this.from=this.to=1e9,this.value=null,this.rank=-1;else{let e=this.heap[0];this.from=e.from,this.to=e.to,this.value=e.value,this.rank=e.rank,e.value&&e.next(),eG(this.heap,0)}}}function eG(e,t){for(let i=e[t];;){let o=(t<<1)+1;if(o>=e.length)break;let a=e[o];if(o+1<e.length&&a.compare(e[o+1])>=0&&(a=e[o+1],o++),0>i.compare(a))break;e[o]=i,e[t]=a,t=o}}class e${constructor(e,t,i){this.minPoint=i,this.active=[],this.activeTo=[],this.activeRank=[],this.minActive=-1,this.point=null,this.pointFrom=0,this.pointRank=0,this.to=-1e9,this.endSide=0,this.openStart=-1,this.cursor=eI.from(e,t,i)}goto(e,t=-1e9){return this.cursor.goto(e,t),this.active.length=this.activeTo.length=this.activeRank.length=0,this.minActive=-1,this.to=e,this.endSide=t,this.openStart=-1,this.next(),this}forward(e,t){for(;this.minActive>-1&&0>(this.activeTo[this.minActive]-e||this.active[this.minActive].endSide-t);)this.removeActive(this.minActive);this.cursor.forward(e,t)}removeActive(e){eW(this.active,e),eW(this.activeTo,e),eW(this.activeRank,e),this.minActive=eq(this.active,this.activeTo)}addActive(e){let t=0,{value:i,to:o,rank:a}=this.cursor;for(;t<this.activeRank.length&&this.activeRank[t]<=a;)t++;ej(this.active,t,i),ej(this.activeTo,t,o),ej(this.activeRank,t,a),e&&ej(e,t,this.cursor.from),this.minActive=eq(this.active,this.activeTo)}next(){let e=this.to,t=this.point;this.point=null;let i=this.openStart<0?[]:null;for(;;){let o=this.minActive;if(o>-1&&0>(this.activeTo[o]-this.cursor.from||this.active[o].endSide-this.cursor.startSide)){if(this.activeTo[o]>e){this.to=this.activeTo[o],this.endSide=this.active[o].endSide;break}this.removeActive(o),i&&eW(i,o)}else if(this.cursor.value){if(this.cursor.from>e){this.to=this.cursor.from,this.endSide=this.cursor.startSide;break}{let e=this.cursor.value;if(e.point){if(t&&this.cursor.to==this.to&&this.cursor.from<this.cursor.to)this.cursor.next();else{this.point=e,this.pointFrom=this.cursor.from,this.pointRank=this.cursor.rank,this.to=this.cursor.to,this.endSide=e.endSide,this.cursor.next(),this.forward(this.to,this.endSide);break}}else this.addActive(i),this.cursor.next()}}else{this.to=this.endSide=1e9;break}}if(i){this.openStart=0;for(let t=i.length-1;t>=0&&i[t]<e;t--)this.openStart++}}activeForPoint(e){if(!this.active.length)return this.active;let t=[];for(let i=this.active.length-1;i>=0&&!(this.activeRank[i]<this.pointRank);i--)(this.activeTo[i]>e||this.activeTo[i]==e&&this.active[i].endSide>=this.point.endSide)&&t.push(this.active[i]);return t.reverse()}openEnd(e){let t=0;for(let i=this.activeTo.length-1;i>=0&&this.activeTo[i]>e;i--)t++;return t}}function eN(e,t,i,o,a,n){e.goto(t),i.goto(o);let r=o+a,s=o,l=o-t;for(;;){let t=e.to+l-i.to||e.endSide-i.endSide,o=t<0?e.to+l:i.to,a=Math.min(o,r);if(e.point||i.point?e.point&&i.point&&(e.point==i.point||e.point.eq(i.point))&&ez(e.activeForPoint(e.to+l),i.activeForPoint(i.to))||n.comparePoint(s,a,e.point,i.point):a>s&&!ez(e.active,i.active)&&n.compareRange(s,a,e.active,i.active),o>r)break;s=o,t<=0&&e.next(),t>=0&&i.next()}}function ez(e,t){if(e.length!=t.length)return!1;for(let i=0;i<e.length;i++)if(e[i]!=t[i]&&!e[i].eq(t[i]))return!1;return!0}function eW(e,t){for(let i=t,o=e.length-1;i<o;i++)e[i]=e[i+1];e.pop()}function ej(e,t,i){for(let i=e.length-1;i>=t;i--)e[i+1]=e[i];e[t]=i}function eq(e,t){let i=-1,o=1e9;for(let a=0;a<t.length;a++)0>(t[a]-o||e[a].endSide-e[i].endSide)&&(i=a,o=t[a]);return i}function eV(e,t,i=e.length){let o=0;for(let a=0;a<i;)9==e.charCodeAt(a)?(o+=t-o%t,a++):(o++,a=x(e,a));return o}function eZ(e,t,i,o){for(let o=0,a=0;;){if(a>=t)return o;if(o==e.length)break;a+=9==e.charCodeAt(o)?i-a%i:1,o=x(e,o)}return!0===o?-1:e.length}const eX="undefined"==typeof Symbol?"__ͼ":Symbol.for("ͼ"),eU="undefined"==typeof Symbol?"__styleSet"+Math.floor(1e8*Math.random()):Symbol("styleSet"),eH="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:{};class eY{constructor(e,t){this.rules=[];let{finish:i}=t||{};function o(e){return/^@/.test(e)?[e]:e.split(/,\s*/)}for(let t in e)!function e(t,a,n,r){let s=[],l=/^@(\w+)\b/.exec(t[0]),p=l&&"keyframes"==l[1];if(l&&null==a)return n.push(t[0]+";");for(let i in a){let r=a[i];if(/&/.test(i))e(i.split(/,\s*/).map(e=>t.map(t=>e.replace(/&/,t))).reduce((e,t)=>e.concat(t)),r,n);else if(r&&"object"==typeof r){if(!l)throw RangeError("The value of a property ("+i+") should be a primitive value.");e(o(i),r,s,p)}else null!=r&&s.push(i.replace(/_.*/,"").replace(/[A-Z]/g,e=>"-"+e.toLowerCase())+": "+r+";")}(s.length||p)&&n.push((!i||l||r?t:t.map(i)).join(", ")+" {"+s.join(" ")+"}")}(o(t),e[t],this.rules)}getRules(){return this.rules.join("\n")}static newName(){let e=eH[eX]||1;return eH[eX]=e+1,"ͼ"+e.toString(36)}static mount(e,t){(e[eU]||new eK(e)).mount(Array.isArray(t)?t:[t])}}let e_=new Map;class eK{constructor(e){let t=e.ownerDocument||e,i=t.defaultView;if(!e.head&&e.adoptedStyleSheets&&i.CSSStyleSheet){let o=e_.get(t);if(o)return e.adoptedStyleSheets=[o.sheet,...e.adoptedStyleSheets],e[eU]=o;this.sheet=new i.CSSStyleSheet,e.adoptedStyleSheets=[this.sheet,...e.adoptedStyleSheets],e_.set(t,this)}else{this.styleTag=t.createElement("style");let i=e.head||e;i.insertBefore(this.styleTag,i.firstChild)}this.modules=[],e[eU]=this}mount(e){let t=this.sheet,i=0,o=0;for(let a=0;a<e.length;a++){let n=e[a],r=this.modules.indexOf(n);if(r<o&&r>-1&&(this.modules.splice(r,1),o--,r=-1),-1==r){if(this.modules.splice(o++,0,n),t)for(let e=0;e<n.rules.length;e++)t.insertRule(n.rules[e],i++)}else{for(;o<r;)i+=this.modules[o++].rules.length;i+=n.rules.length,o++}}if(!t){let e="";for(let t=0;t<this.modules.length;t++)e+=this.modules[t].getRules()+"\n";this.styleTag.textContent=e}}}var eJ={8:"Backspace",9:"Tab",10:"Enter",12:"NumLock",13:"Enter",16:"Shift",17:"Control",18:"Alt",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",44:"PrintScreen",45:"Insert",46:"Delete",59:";",61:"=",91:"Meta",92:"Meta",106:"*",107:"+",108:",",109:"-",110:".",111:"/",144:"NumLock",145:"ScrollLock",160:"Shift",161:"Shift",162:"Control",163:"Control",164:"Alt",165:"Alt",173:"-",186:";",187:"=",188:",",189:"-",190:".",191:"/",192:"`",219:"[",220:"\\",221:"]",222:"'"},e0={48:")",49:"!",50:"@",51:"#",52:"$",53:"%",54:"^",55:"&",56:"*",57:"(",59:":",61:"+",173:"_",186:":",187:"+",188:"<",189:"_",190:">",191:"?",192:"~",219:"{",220:"|",221:"}",222:'"'},e2="undefined"!=typeof navigator&&/Chrome\/(\d+)/.exec(navigator.userAgent);"undefined"!=typeof navigator&&/Gecko\/\d+/.test(navigator.userAgent);for(var e1="undefined"!=typeof navigator&&/Mac/.test(navigator.platform),e8="undefined"!=typeof navigator&&/MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent),e6=e1||e2&&57>+e2[1],e9=0;e9<10;e9++)eJ[48+e9]=eJ[96+e9]=String(e9);for(var e9=1;e9<=24;e9++)eJ[e9+111]="F"+e9;for(var e9=65;e9<=90;e9++)eJ[e9]=String.fromCharCode(e9+32),e0[e9]=String.fromCharCode(e9);for(var e3 in eJ)e0.hasOwnProperty(e3)||(e0[e3]=eJ[e3]);function e4(e){return(11==e.nodeType?e.getSelection?e:e.ownerDocument:e).getSelection()}function e5(e,t){return!!t&&(e==t||e.contains(1!=t.nodeType?t.parentNode:t))}function e7(e,t){if(!t.anchorNode)return!1;try{return e5(e,t.anchorNode)}catch(e){return!1}}function te(e){return 3==e.nodeType?td(e,0,e.nodeValue.length).getClientRects():1==e.nodeType?e.getClientRects():[]}function tt(e,t,i,o){return!!i&&(to(e,t,i,o,-1)||to(e,t,i,o,1))}function ti(e){for(var t=0;;t++)if(!(e=e.previousSibling))return t}function to(e,t,i,o,a){for(;;){if(e==i&&t==o)return!0;if(t==(a<0?0:ta(e))){if("DIV"==e.nodeName)return!1;let i=e.parentNode;if(!i||1!=i.nodeType)return!1;t=ti(e)+(a<0?0:1),e=i}else{if(1!=e.nodeType||1==(e=e.childNodes[t+(a<0?-1:0)]).nodeType&&"false"==e.contentEditable)return!1;t=a<0?ta(e):0}}}function ta(e){return 3==e.nodeType?e.nodeValue.length:e.childNodes.length}const tn={left:0,right:0,top:0,bottom:0};function tr(e,t){let i=t?e.left:e.right;return{left:i,right:i,top:e.top,bottom:e.bottom}}class ts{constructor(){this.anchorNode=null,this.anchorOffset=0,this.focusNode=null,this.focusOffset=0}eq(e){return this.anchorNode==e.anchorNode&&this.anchorOffset==e.anchorOffset&&this.focusNode==e.focusNode&&this.focusOffset==e.focusOffset}setRange(e){this.set(e.anchorNode,e.anchorOffset,e.focusNode,e.focusOffset)}set(e,t,i,o){this.anchorNode=e,this.anchorOffset=t,this.focusNode=i,this.focusOffset=o}}let tl=null;function tp(e){if(e.setActive)return e.setActive();if(tl)return e.focus(tl);let t=[];for(let i=e;i&&(t.push(i,i.scrollTop,i.scrollLeft),i!=i.ownerDocument);i=i.parentNode);if(e.focus(null==tl?{get preventScroll(){return tl={preventScroll:!0},!0}}:void 0),!tl){tl=!1;for(let e=0;e<t.length;){let i=t[e++],o=t[e++],a=t[e++];i.scrollTop!=o&&(i.scrollTop=o),i.scrollLeft!=a&&(i.scrollLeft=a)}}}function td(e,i,o=i){let a=t||(t=document.createRange());return a.setEnd(e,o),a.setStart(e,i),a}function tc(e,t,i){let o={key:t,code:t,keyCode:i,which:i,cancelable:!0},a=new KeyboardEvent("keydown",o);a.synthetic=!0,e.dispatchEvent(a);let n=new KeyboardEvent("keyup",o);return n.synthetic=!0,e.dispatchEvent(n),a.defaultPrevented||n.defaultPrevented}function tf(e){for(;e.attributes.length;)e.removeAttributeNode(e.attributes[0])}class th{constructor(e,t,i=!0){this.node=e,this.offset=t,this.precise=i}static before(e,t){return new th(e.parentNode,ti(e),t)}static after(e,t){return new th(e.parentNode,ti(e)+1,t)}}const ty=[];class tu{constructor(){this.parent=null,this.dom=null,this.dirty=2}get overrideDOMText(){return null}get posAtStart(){return this.parent?this.parent.posBefore(this):0}get posAtEnd(){return this.posAtStart+this.length}posBefore(e){let t=this.posAtStart;for(let i of this.children){if(i==e)return t;t+=i.length+i.breakAfter}throw RangeError("Invalid child in posBefore")}posAfter(e){return this.posBefore(e)+e.length}coordsAt(e,t){return null}sync(e,t){if(2&this.dirty){let i=this.dom,o=null,a;for(let n of this.children){if(n.dirty){if(!n.dom&&(a=o?o.nextSibling:i.firstChild)){let e=tu.get(a);(!e||!e.parent&&e.canReuseDOM(n))&&n.reuseDOM(a)}n.sync(e,t),n.dirty=0}if(a=o?o.nextSibling:i.firstChild,t&&!t.written&&t.node==i&&a!=n.dom&&(t.written=!0),n.dom.parentNode==i)for(;a&&a!=n.dom;)a=tm(a);else i.insertBefore(n.dom,a);o=n.dom}for((a=o?o.nextSibling:i.firstChild)&&t&&t.node==i&&(t.written=!0);a;)a=tm(a)}else if(1&this.dirty)for(let i of this.children)i.dirty&&(i.sync(e,t),i.dirty=0)}reuseDOM(e){}localPosFromDOM(e,t){let i;if(e==this.dom)i=this.dom.childNodes[t];else{let o=0==ta(e)?0:0==t?-1:1;for(;;){let t=e.parentNode;if(t==this.dom)break;0==o&&t.firstChild!=t.lastChild&&(o=e==t.firstChild?-1:1),e=t}i=o<0?e:e.nextSibling}if(i==this.dom.firstChild)return 0;for(;i&&!tu.get(i);)i=i.nextSibling;if(!i)return this.length;for(let e=0,t=0;;e++){let o=this.children[e];if(o.dom==i)return t;t+=o.length+o.breakAfter}}domBoundsAround(e,t,i=0){let o=-1,a=-1,n=-1,r=-1;for(let s=0,l=i,p=i;s<this.children.length;s++){let i=this.children[s],d=l+i.length;if(l<e&&d>t)return i.domBoundsAround(e,t,l);if(d>=e&&-1==o&&(o=s,a=l),l>t&&i.dom.parentNode==this.dom){n=s,r=p;break}p=d,l=d+i.breakAfter}return{from:a,to:r<0?i+this.length:r,startDOM:(o?this.children[o-1].dom.nextSibling:null)||this.dom.firstChild,endDOM:n<this.children.length&&n>=0?this.children[n].dom:null}}markDirty(e=!1){this.dirty|=2,this.markParentsDirty(e)}markParentsDirty(e){for(let t=this.parent;t;t=t.parent){if(e&&(t.dirty|=2),1&t.dirty)return;t.dirty|=1,e=!1}}setParent(e){this.parent!=e&&(this.parent=e,this.dirty&&this.markParentsDirty(!0))}setDOM(e){this.dom&&(this.dom.cmView=null),this.dom=e,e.cmView=this}get rootView(){for(let e=this;;){let t=e.parent;if(!t)return e;e=t}}replaceChildren(e,t,i=ty){this.markDirty();for(let i=e;i<t;i++){let e=this.children[i];e.parent==this&&e.destroy()}this.children.splice(e,t-e,...i);for(let e=0;e<i.length;e++)i[e].setParent(this)}ignoreMutation(e){return!1}ignoreEvent(e){return!1}childCursor(e=this.length){return new tx(this.children,e,this.children.length)}childPos(e,t=1){return this.childCursor().findPos(e,t)}toString(){let e=this.constructor.name.replace("View","");return e+(this.children.length?"("+this.children.join()+")":this.length?"["+("Text"==e?this.text:this.length)+"]":"")+(this.breakAfter?"#":"")}static get(e){return e.cmView}get isEditable(){return!0}get isWidget(){return!1}get isHidden(){return!1}merge(e,t,i,o,a,n){return!1}become(e){return!1}canReuseDOM(e){return e.constructor==this.constructor}getSide(){return 0}destroy(){this.parent=null}}function tm(e){let t=e.nextSibling;return e.parentNode.removeChild(e),t}tu.prototype.breakAfter=0;class tx{constructor(e,t,i){this.children=e,this.pos=t,this.i=i,this.off=0}findPos(e,t=1){for(;;){if(e>this.pos||e==this.pos&&(t>0||0==this.i||this.children[this.i-1].breakAfter))return this.off=e-this.pos,this;let i=this.children[--this.i];this.pos-=i.length+i.breakAfter}}}function tg(e,t,i,o,a,n,r,s,l){let{children:p}=e,d=p.length?p[t]:null,c=n.length?n[n.length-1]:null,f=c?c.breakAfter:r;if(!(t==o&&d&&!r&&!f&&n.length<2&&d.merge(i,a,n.length?c:null,0==i,s,l))){if(o<p.length){let e=p[o];e&&a<e.length?(t==o&&(e=e.split(a),a=0),!f&&c&&e.merge(0,a,c,!0,0,l)?n[n.length-1]=e:(a&&e.merge(0,a,null,!1,0,l),n.push(e))):(null==e?void 0:e.breakAfter)&&(c?c.breakAfter=1:r=1),o++}for(d&&(d.breakAfter=r,i>0&&(!r&&n.length&&d.merge(i,d.length,n[0],!1,s,0)?d.breakAfter=n.shift().breakAfter:(i<d.length||d.children.length&&0==d.children[d.children.length-1].length)&&d.merge(i,d.length,null,!1,s,0),t++));t<o&&n.length;)if(p[o-1].become(n[n.length-1]))o--,n.pop(),l=n.length?0:s;else if(p[t].become(n[0]))t++,n.shift(),s=n.length?0:l;else break;!n.length&&t&&o<p.length&&!p[t-1].breakAfter&&p[o].merge(0,0,p[t-1],!1,s,l)&&t--,(t<o||n.length)&&e.replaceChildren(t,o,n)}}function tb(e,t,i,o,a,n){let r=e.childCursor(),{i:s,off:l}=r.findPos(i,1),{i:p,off:d}=r.findPos(t,-1),c=t-i;for(let e of o)c+=e.length;e.length+=c,tg(e,p,d,s,l,o,0,a,n)}let tw="undefined"!=typeof navigator?navigator:{userAgent:"",vendor:"",platform:""},tk="undefined"!=typeof document?document:{documentElement:{style:{}}};const tv=/Edge\/(\d+)/.exec(tw.userAgent),tO=/MSIE \d/.test(tw.userAgent),tS=/Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(tw.userAgent),tC=!!(tO||tS||tv),tP=!tC&&/gecko\/(\d+)/i.test(tw.userAgent),tD=!tC&&/Chrome\/(\d+)/.exec(tw.userAgent),tT="webkitFontSmoothing"in tk.documentElement.style,tM=!tC&&/Apple Computer/.test(tw.vendor),tR=tM&&(/Mobile\/\w+/.test(tw.userAgent)||tw.maxTouchPoints>2);var tQ={mac:tR||/Mac/.test(tw.platform),windows:/Win/.test(tw.platform),linux:/Linux|X11/.test(tw.platform),ie:tC,ie_version:tO?tk.documentMode||6:tS?+tS[1]:tv?+tv[1]:0,gecko:tP,gecko_version:tP?+(/Firefox\/(\d+)/.exec(tw.userAgent)||[0,0])[1]:0,chrome:!!tD,chrome_version:tD?+tD[1]:0,ios:tR,android:/Android\b/.test(tw.userAgent),webkit:tT,safari:tM,webkit_version:tT?+(/\bAppleWebKit\/(\d+)/.exec(navigator.userAgent)||[0,0])[1]:0,tabSize:null!=tk.documentElement.style.tabSize?"tab-size":"-moz-tab-size"};class tA extends tu{constructor(e){super(),this.text=e}get length(){return this.text.length}createDOM(e){this.setDOM(e||document.createTextNode(this.text))}sync(e,t){this.dom||this.createDOM(),this.dom.nodeValue!=this.text&&(t&&t.node==this.dom&&(t.written=!0),this.dom.nodeValue=this.text)}reuseDOM(e){3==e.nodeType&&this.createDOM(e)}merge(e,t,i){return(!i||i instanceof tA&&!(this.length-(t-e)+i.length>256))&&(this.text=this.text.slice(0,e)+(i?i.text:"")+this.text.slice(t),this.markDirty(),!0)}split(e){let t=new tA(this.text.slice(e));return this.text=this.text.slice(0,e),this.markDirty(),t}localPosFromDOM(e,t){return e==this.dom?t:t?this.text.length:0}domAtPos(e){return new th(this.dom,e)}domBoundsAround(e,t,i){return{from:i,to:i+this.length,startDOM:this.dom,endDOM:this.dom.nextSibling}}coordsAt(e,t){return tL(this.dom,e,t)}}class tF extends tu{constructor(e,t=[],i=0){for(let o of(super(),this.mark=e,this.children=t,this.length=i,t))o.setParent(this)}setAttrs(e){if(tf(e),this.mark.class&&(e.className=this.mark.class),this.mark.attrs)for(let t in this.mark.attrs)e.setAttribute(t,this.mark.attrs[t]);return e}reuseDOM(e){e.nodeName==this.mark.tagName.toUpperCase()&&(this.setDOM(e),this.dirty|=6)}sync(e,t){this.dom?4&this.dirty&&this.setAttrs(this.dom):this.setDOM(this.setAttrs(document.createElement(this.mark.tagName))),super.sync(e,t)}merge(e,t,i,o,a,n){return(!i||!!(i instanceof tF&&i.mark.eq(this.mark))&&(!e||!(a<=0))&&(!(t<this.length)||!(n<=0)))&&(tb(this,e,t,i?i.children:[],a-1,n-1),this.markDirty(),!0)}split(e){let t=[],i=0,o=-1,a=0;for(let n of this.children){let r=i+n.length;r>e&&t.push(i<e?n.split(e-i):n),o<0&&i>=e&&(o=a),i=r,a++}let n=this.length-e;return this.length=e,o>-1&&(this.children.length=o,this.markDirty()),new tF(this.mark,t,n)}domAtPos(e){return t$(this,e)}coordsAt(e,t){return tN(this,e,t)}}function tL(e,t,i){let o=e.nodeValue.length;t>o&&(t=o);let a=t,n=t,r=0;0==t&&i<0||t==o&&i>=0?!(tQ.chrome||tQ.gecko)&&(t?(a--,r=1):n<o&&(n++,r=-1)):i<0?a--:n<o&&n++;let s=td(e,a,n).getClientRects();if(!s.length)return tn;let l=s[(r?r<0:i>=0)?0:s.length-1];return tQ.safari&&!r&&0==l.width&&(l=Array.prototype.find.call(s,e=>e.width)||l),r?tr(l,r<0):l||null}class tE extends tu{constructor(e,t,i){super(),this.widget=e,this.length=t,this.side=i,this.prevWidget=null}static create(e,t,i){return new(e.customView||tE)(e,t,i)}split(e){let t=tE.create(this.widget,this.length-e,this.side);return this.length-=e,t}sync(e){this.dom&&this.widget.updateDOM(this.dom,e)||(this.dom&&this.prevWidget&&this.prevWidget.destroy(this.dom),this.prevWidget=null,this.setDOM(this.widget.toDOM(e)),this.dom.contentEditable="false")}getSide(){return this.side}merge(e,t,i,o,a,n){return(!i||i instanceof tE&&!!this.widget.compare(i.widget)&&(!(e>0)||!(a<=0))&&(!(t<this.length)||!(n<=0)))&&(this.length=e+(i?i.length:0)+(this.length-t),!0)}become(e){return e instanceof tE&&e.side==this.side&&this.widget.constructor==e.widget.constructor&&(this.widget.compare(e.widget)||this.markDirty(!0),this.dom&&!this.prevWidget&&(this.prevWidget=this.widget),this.widget=e.widget,this.length=e.length,!0)}ignoreMutation(){return!0}ignoreEvent(e){return this.widget.ignoreEvent(e)}get overrideDOMText(){if(0==this.length)return s.empty;let e=this;for(;e.parent;)e=e.parent;let{view:t}=e,i=t&&t.state.doc,o=this.posAtStart;return i?i.slice(o,o+this.length):s.empty}domAtPos(e){return(this.length?0==e:this.side>0)?th.before(this.dom):th.after(this.dom,e==this.length)}domBoundsAround(){return null}coordsAt(e,t){let i=this.dom.getClientRects(),o=null;if(!i.length)return tn;for(let t=e>0?i.length-1:0;o=i[t],e>0?0!=t:t!=i.length-1&&!(o.top<o.bottom);t+=e>0?-1:1);return this.length?o:tr(o,this.side>0)}get isEditable(){return!1}get isWidget(){return!0}get isHidden(){return this.widget.isHidden}destroy(){super.destroy(),this.dom&&this.widget.destroy(this.dom)}}class tB extends tE{domAtPos(e){let{topView:t,text:i}=this.widget;return t?tI(e,0,t,i,this.length-t.length,(e,t)=>e.domAtPos(t),(e,t)=>new th(e,Math.min(t,e.nodeValue.length))):new th(i,Math.min(e,i.nodeValue.length))}sync(){this.setDOM(this.widget.toDOM())}localPosFromDOM(e,t){let{topView:i,text:o}=this.widget;return i?function e(t,i,o,a,n){if(o instanceof tF){let r=0;for(let s=o.dom.firstChild;s;s=s.nextSibling){let o=tu.get(s);if(o){let l=e5(s,a);if(e5(s,t))return r+(l?e(t,i,o,a,n):o.localPosFromDOM(t,i));r+=o.length+(l?n:0)}else{let e=function e(t,i,o){if(3==o.nodeType)return t==o?{result:i}:{size:o.nodeValue.length};if(1!=o.nodeType||"false"==o.contentEditable)return o.contains(t)?{result:0}:{size:0};{let a=0;for(let n=o.firstChild,r=0;;n=n.nextSibling,r++){if(t==o&&r==i)return{result:a};if(!n)return{size:a};let s=e(t,i,n);if(null!=s.result)return{result:i+s.result};a+=s.size}}}(t,i,s);if(null!=e.result)return r+e.result;r+=e.size}}}else if(o.dom==a)return Math.min(i,a.nodeValue.length);return o.localPosFromDOM(t,i)}(e,t,i,o,this.length-i.length):Math.min(t,this.length)}ignoreMutation(){return!1}get overrideDOMText(){return null}coordsAt(e,t){let{topView:i,text:o}=this.widget;return i?tI(e,t,i,o,this.length-i.length,(e,t,i)=>e.coordsAt(t,i),(e,t,i)=>tL(e,t,i)):tL(o,e,t)}destroy(){var e;super.destroy(),null===(e=this.widget.topView)||void 0===e||e.destroy()}get isEditable(){return!0}canReuseDOM(){return!0}}function tI(e,t,i,o,a,n,r){if(i instanceof tF){for(let s=i.dom.firstChild;s;s=s.nextSibling){let i=tu.get(s);if(i){let l=e5(s,o),p=i.length+(l?a:0);if(e<p||e==p&&0>=i.getSide())return l?tI(e,t,i,o,a,n,r):n(i,e,t);e-=p}else{let i=function e(t,i,o,a){if(3==o.nodeType){let e=o.nodeValue.length;if(t<=e)return a(o,t,i);t-=e}else if(1==o.nodeType&&"false"!=o.contentEditable)for(let n=o.firstChild;n;n=n.nextSibling){let o=e(t,i,n,a);if("number"!=typeof o)return o;t=o}return t}(e,t,s,r);if("number"!=typeof i)return i;e=i}}return n(i,i.length,-1)}return i.dom==o?r(o,e,t):n(i,e,t)}class tG extends tu{constructor(e){super(),this.side=e}get length(){return 0}merge(){return!1}become(e){return e instanceof tG&&e.side==this.side}split(){return new tG(this.side)}sync(){if(!this.dom){let e=document.createElement("img");e.className="cm-widgetBuffer",e.setAttribute("aria-hidden","true"),this.setDOM(e)}}getSide(){return this.side}domAtPos(e){return this.side>0?th.before(this.dom):th.after(this.dom)}localPosFromDOM(){return 0}domBoundsAround(){return null}coordsAt(e){let t=this.dom.getBoundingClientRect(),i=function(e,t){let i=e.parent,o=i?i.children.indexOf(e):-1;for(;i&&o>=0;)if(t<0?o>0:o<i.children.length){let e=i.children[o+t];if(e instanceof tA){let i=e.coordsAt(t<0?e.length:0,t);if(i)return i}o+=t}else if(i instanceof tF&&i.parent)o=i.parent.children.indexOf(i)+(t<0?0:1),i=i.parent;else{let e=i.dom.lastChild;if(e&&"BR"==e.nodeName)return e.getClientRects()[0];break}}(this,this.side>0?-1:1);return i&&i.top<t.bottom&&i.bottom>t.top?{left:t.left,right:t.right,top:i.top,bottom:i.bottom}:t}get overrideDOMText(){return s.empty}get isHidden(){return!0}}function t$(e,t){let i=e.dom,{children:o}=e,a=0;for(let e=0;a<o.length;a++){let n=o[a],r=e+n.length;if(!(r==e&&0>=n.getSide())){if(t>e&&t<r&&n.dom.parentNode==i)return n.domAtPos(t-e);if(t<=e)break;e=r}}for(let e=a;e>0;e--){let t=o[e-1];if(t.dom.parentNode==i)return t.domAtPos(t.length)}for(let e=a;e<o.length;e++){let t=o[e];if(t.dom.parentNode==i)return t.domAtPos(0)}return new th(i,0)}function tN(e,t,i){let o=null,a=-1,n=null,r=-1;!function e(t,s){for(let l=0,p=0;l<t.children.length&&p<=s;l++){let d=t.children[l],c=p+d.length;c>=s&&(d.children.length?e(d,s-p):(!n||n instanceof tG&&i>0)&&(c>s||p==c&&d.getSide()>0)?(n=d,r=s-p):(p<s||p==c&&0>d.getSide())&&(o=d,a=s-p)),p=c}}(e,t);let s=(i<0?o:n)||o||n;return s?s.coordsAt(Math.max(0,s==o?a:r),i):function(e){let t=e.dom.lastChild;if(!t)return e.dom.getBoundingClientRect();let i=te(t);return i[i.length-1]||null}(e)}function tz(e,t){for(let i in e)"class"==i&&t.class?t.class+=" "+e.class:"style"==i&&t.style?t.style+=";"+e.style:t[i]=e[i];return t}function tW(e,t){if(e==t)return!0;if(!e||!t)return!1;let i=Object.keys(e),o=Object.keys(t);if(i.length!=o.length)return!1;for(let a of i)if(-1==o.indexOf(a)||e[a]!==t[a])return!1;return!0}function tj(e,t,i){let o=null;if(t)for(let a in t)i&&a in i||e.removeAttribute(o=a);if(i)for(let a in i)t&&t[a]==i[a]||e.setAttribute(o=a,i[a]);return!!o}tA.prototype.children=tE.prototype.children=tG.prototype.children=ty;class tq{eq(e){return!1}updateDOM(e,t){return!1}compare(e){return this==e||this.constructor==e.constructor&&this.eq(e)}get estimatedHeight(){return -1}ignoreEvent(e){return!0}get customView(){return null}get isHidden(){return!1}destroy(e){}}var tV=function(e){return e[e.Text=0]="Text",e[e.WidgetBefore=1]="WidgetBefore",e[e.WidgetAfter=2]="WidgetAfter",e[e.WidgetRange=3]="WidgetRange",e}(tV||(tV={}));class tZ extends eM{constructor(e,t,i,o){super(),this.startSide=e,this.endSide=t,this.widget=i,this.spec=o}get heightRelevant(){return!1}static mark(e){return new tX(e)}static widget(e){let t=e.side||0,i=!!e.block;return t+=i?t>0?3e8:-4e8:t>0?1e8:-1e8,new tH(e,t,t,i,e.widget||null,!1)}static replace(e){let t=!!e.block,i,o;if(e.isBlockGap)i=-5e8,o=4e8;else{let{start:a,end:n}=tY(e,t);i=(a?t?-3e8:-1:5e8)-1,o=(n?t?2e8:1:-6e8)+1}return new tH(e,i,o,t,e.widget||null,!0)}static line(e){return new tU(e)}static set(e,t=!1){return eF.of(e,t)}hasHeight(){return!!this.widget&&this.widget.estimatedHeight>-1}}tZ.none=eF.empty;class tX extends tZ{constructor(e){let{start:t,end:i}=tY(e);super(t?-1:5e8,i?1:-6e8,null,e),this.tagName=e.tagName||"span",this.class=e.class||"",this.attrs=e.attributes||null}eq(e){return this==e||e instanceof tX&&this.tagName==e.tagName&&this.class==e.class&&tW(this.attrs,e.attrs)}range(e,t=e){if(e>=t)throw RangeError("Mark decorations may not be empty");return super.range(e,t)}}tX.prototype.point=!1;class tU extends tZ{constructor(e){super(-2e8,-2e8,null,e)}eq(e){return e instanceof tU&&this.spec.class==e.spec.class&&tW(this.spec.attributes,e.spec.attributes)}range(e,t=e){if(t!=e)throw RangeError("Line decoration ranges must be zero-length");return super.range(e,t)}}tU.prototype.mapMode=L.TrackBefore,tU.prototype.point=!0;class tH extends tZ{constructor(e,t,i,o,a,n){super(t,i,a,e),this.block=o,this.isReplace=n,this.mapMode=o?t<=0?L.TrackBefore:L.TrackAfter:L.TrackDel}get type(){return this.startSide<this.endSide?tV.WidgetRange:this.startSide<=0?tV.WidgetBefore:tV.WidgetAfter}get heightRelevant(){return this.block||!!this.widget&&this.widget.estimatedHeight>=5}eq(e){var t,i;return e instanceof tH&&((t=this.widget)==(i=e.widget)||!!(t&&i&&t.compare(i)))&&this.block==e.block&&this.startSide==e.startSide&&this.endSide==e.endSide}range(e,t=e){if(this.isReplace&&(e>t||e==t&&this.startSide>0&&this.endSide<=0))throw RangeError("Invalid range for replacement decoration");if(!this.isReplace&&t!=e)throw RangeError("Widget decorations can only have zero-length ranges");return super.range(e,t)}}function tY(e,t=!1){let{inclusiveStart:i,inclusiveEnd:o}=e;return null==i&&(i=e.inclusive),null==o&&(o=e.inclusive),{start:null!=i?i:t,end:null!=o?o:t}}function t_(e,t,i,o=0){let a=i.length-1;a>=0&&i[a]+o>=e?i[a]=Math.max(i[a],t):i.push(e,t)}tH.prototype.point=!0;class tK extends tu{constructor(){super(...arguments),this.children=[],this.length=0,this.prevAttrs=void 0,this.attrs=null,this.breakAfter=0}merge(e,t,i,o,a,n){if(i){if(!(i instanceof tK))return!1;this.dom||i.transferDOM(this)}return o&&this.setDeco(i?i.attrs:null),tb(this,e,t,i?i.children:[],a,n),!0}split(e){let t=new tK;if(t.breakAfter=this.breakAfter,0==this.length)return t;let{i:i,off:o}=this.childPos(e);o&&(t.append(this.children[i].split(o),0),this.children[i].merge(o,this.children[i].length,null,!1,0,0),i++);for(let e=i;e<this.children.length;e++)t.append(this.children[e],0);for(;i>0&&0==this.children[i-1].length;)this.children[--i].destroy();return this.children.length=i,this.markDirty(),this.length=e,t}transferDOM(e){this.dom&&(this.markDirty(),e.setDOM(this.dom),e.prevAttrs=void 0===this.prevAttrs?this.attrs:this.prevAttrs,this.prevAttrs=void 0,this.dom=null)}setDeco(e){tW(this.attrs,e)||(this.dom&&(this.prevAttrs=this.attrs,this.markDirty()),this.attrs=e)}append(e,t){!function e(t,i,o){let a,{children:n}=t;o>0&&i instanceof tF&&n.length&&(a=n[n.length-1])instanceof tF&&a.mark.eq(i.mark)?e(a,i.children[0],o-1):(n.push(i),i.setParent(t)),t.length+=i.length}(this,e,t)}addLineDeco(e){let t=e.spec.attributes,i=e.spec.class;t&&(this.attrs=tz(t,this.attrs||{})),i&&(this.attrs=tz({class:i},this.attrs||{}))}domAtPos(e){return t$(this,e)}reuseDOM(e){"DIV"==e.nodeName&&(this.setDOM(e),this.dirty|=6)}sync(e,t){var i;this.dom?4&this.dirty&&(tf(this.dom),this.dom.className="cm-line",this.prevAttrs=this.attrs?null:void 0):(this.setDOM(document.createElement("div")),this.dom.className="cm-line",this.prevAttrs=this.attrs?null:void 0),void 0!==this.prevAttrs&&(tj(this.dom,this.prevAttrs,this.attrs),this.dom.classList.add("cm-line"),this.prevAttrs=void 0),super.sync(e,t);let o=this.dom.lastChild;for(;o&&tu.get(o) instanceof tF;)o=o.lastChild;if(!o||!this.length||"BR"!=o.nodeName&&(null===(i=tu.get(o))||void 0===i?void 0:i.isEditable)==!1&&(!tQ.ios||!this.children.some(e=>e instanceof tA))){let e=document.createElement("BR");e.cmIgnore=!0,this.dom.appendChild(e)}}measureTextSize(){if(0==this.children.length||this.length>20)return null;let e=0,t;for(let i of this.children){if(!(i instanceof tA)||/[^ -~]/.test(i.text))return null;let o=te(i.dom);if(1!=o.length)return null;e+=o[0].width,t=o[0].height}return e?{lineHeight:this.dom.getBoundingClientRect().height,charWidth:e/this.length,textHeight:t}:null}coordsAt(e,t){let i=tN(this,e,t);if(!this.children.length&&i&&this.parent){let{heightOracle:e}=this.parent.view.viewState,t=i.bottom-i.top;if(2>Math.abs(t-e.lineHeight)&&e.textHeight<t){let o=(t-e.textHeight)/2;return{top:i.top+o,bottom:i.bottom-o,left:i.left,right:i.left}}}return i}become(e){return!1}get type(){return tV.Text}static find(e,t){for(let i=0,o=0;i<e.children.length;i++){let a=e.children[i],n=o+a.length;if(n>=t){if(a instanceof tK)return a;if(n>t)break}o=n+a.breakAfter}return null}}class tJ extends tu{constructor(e,t,i){super(),this.widget=e,this.length=t,this.type=i,this.breakAfter=0,this.prevWidget=null}merge(e,t,i,o,a,n){return(!i||i instanceof tJ&&!!this.widget.compare(i.widget)&&(!(e>0)||!(a<=0))&&(!(t<this.length)||!(n<=0)))&&(this.length=e+(i?i.length:0)+(this.length-t),!0)}domAtPos(e){return 0==e?th.before(this.dom):th.after(this.dom,e==this.length)}split(e){let t=this.length-e;this.length=e;let i=new tJ(this.widget,t,this.type);return i.breakAfter=this.breakAfter,i}get children(){return ty}sync(e){this.dom&&this.widget.updateDOM(this.dom,e)||(this.dom&&this.prevWidget&&this.prevWidget.destroy(this.dom),this.prevWidget=null,this.setDOM(this.widget.toDOM(e)),this.dom.contentEditable="false")}get overrideDOMText(){return this.parent?this.parent.view.state.doc.slice(this.posAtStart,this.posAtEnd):s.empty}domBoundsAround(){return null}become(e){return e instanceof tJ&&e.type==this.type&&e.widget.constructor==this.widget.constructor&&(e.widget.compare(this.widget)||this.markDirty(!0),this.dom&&!this.prevWidget&&(this.prevWidget=this.widget),this.widget=e.widget,this.length=e.length,this.breakAfter=e.breakAfter,!0)}ignoreMutation(){return!0}ignoreEvent(e){return this.widget.ignoreEvent(e)}get isEditable(){return!1}get isWidget(){return!0}destroy(){super.destroy(),this.dom&&this.widget.destroy(this.dom)}}class t0{constructor(e,t,i,o){this.doc=e,this.pos=t,this.end=i,this.disallowBlockEffectsFor=o,this.content=[],this.curLine=null,this.breakAtStart=0,this.pendingBuffer=0,this.bufferMarks=[],this.atCursorPos=!0,this.openStart=-1,this.openEnd=-1,this.text="",this.textOff=0,this.cursor=e.iter(),this.skip=t}posCovered(){if(0==this.content.length)return!this.breakAtStart&&this.doc.lineAt(this.pos).from!=this.pos;let e=this.content[this.content.length-1];return!e.breakAfter&&!(e instanceof tJ&&e.type==tV.WidgetBefore)}getLine(){return this.curLine||(this.content.push(this.curLine=new tK),this.atCursorPos=!0),this.curLine}flushBuffer(e=this.bufferMarks){this.pendingBuffer&&(this.curLine.append(t2(new tG(-1),e),e.length),this.pendingBuffer=0)}addBlockWidget(e){this.flushBuffer(),this.curLine=null,this.content.push(e)}finish(e){this.pendingBuffer&&e<=this.bufferMarks.length?this.flushBuffer():this.pendingBuffer=0,this.posCovered()||this.getLine()}buildText(e,t,i){for(;e>0;){if(this.textOff==this.text.length){let{value:t,lineBreak:i,done:o}=this.cursor.next(this.skip);if(this.skip=0,o)throw Error("Ran out of text content when drawing inline views");if(i){this.posCovered()||this.getLine(),this.content.length?this.content[this.content.length-1].breakAfter=1:this.breakAtStart=1,this.flushBuffer(),this.curLine=null,this.atCursorPos=!0,e--;continue}this.text=t,this.textOff=0}let o=Math.min(this.text.length-this.textOff,e,512);this.flushBuffer(t.slice(t.length-i)),this.getLine().append(t2(new tA(this.text.slice(this.textOff,this.textOff+o)),t),i),this.atCursorPos=!0,this.textOff+=o,e-=o,i=0}}span(e,t,i,o){this.buildText(t-e,i,o),this.pos=t,this.openStart<0&&(this.openStart=o)}point(e,t,i,o,a,n){if(this.disallowBlockEffectsFor[n]&&i instanceof tH){if(i.block)throw RangeError("Block decorations may not be specified via plugins");if(t>this.doc.lineAt(this.pos).to)throw RangeError("Decorations that replace line breaks may not be specified via plugins")}let r=t-e;if(i instanceof tH){if(i.block){let{type:e}=i;e!=tV.WidgetAfter||this.posCovered()||this.getLine(),this.addBlockWidget(new tJ(i.widget||new t1("div"),r,e))}else{let n=tE.create(i.widget||new t1("span"),r,r?0:i.startSide),s=this.atCursorPos&&!n.isEditable&&a<=o.length&&(e<t||i.startSide>0),l=!n.isEditable&&(e<t||a>o.length||i.startSide<=0),p=this.getLine();2!=this.pendingBuffer||s||n.isEditable||(this.pendingBuffer=0),this.flushBuffer(o),s&&(p.append(t2(new tG(1),o),a),a=o.length+Math.max(0,a-o.length)),p.append(t2(n,o),a),this.atCursorPos=l,this.pendingBuffer=l?e<t||a>o.length?1:2:0,this.pendingBuffer&&(this.bufferMarks=o.slice())}}else this.doc.lineAt(this.pos).from==this.pos&&this.getLine().addLineDeco(i);r&&(this.textOff+r<=this.text.length?this.textOff+=r:(this.skip+=r-(this.text.length-this.textOff),this.text="",this.textOff=0),this.pos=t),this.openStart<0&&(this.openStart=a)}static build(e,t,i,o,a){let n=new t0(e,t,i,a);return n.openEnd=eF.spans(o,t,i,n),n.openStart<0&&(n.openStart=n.openEnd),n.finish(n.openEnd),n}}function t2(e,t){for(let i of t)e=new tF(i,[e],e.length);return e}class t1 extends tq{constructor(e){super(),this.tag=e}eq(e){return e.tag==this.tag}toDOM(){return document.createElement(this.tag)}updateDOM(e){return e.nodeName.toLowerCase()==this.tag}get isHidden(){return!0}}const t8=X.define(),t6=X.define(),t9=X.define(),t3=X.define(),t4=X.define(),t5=X.define(),t7=X.define(),ie=X.define({combine:e=>e.some(e=>e)}),it=X.define({combine:e=>e.some(e=>e)});class ii{constructor(e,t="nearest",i="nearest",o=5,a=5){this.range=e,this.y=t,this.x=i,this.yMargin=o,this.xMargin=a}map(e){return e.empty?this:new ii(this.range.map(e),this.y,this.x,this.yMargin,this.xMargin)}}const io=eb.define({map:(e,t)=>e.map(t)});function ia(e,t,i){let o=e.facet(t3);o.length?o[0](t):window.onerror?window.onerror(String(t),i,void 0,void 0,t):i?console.error(i+":",t):console.error(t)}const ir=X.define({combine:e=>!e.length||e[0]});let is=0;const il=X.define();class ip{constructor(e,t,i,o){this.id=e,this.create=t,this.domEventHandlers=i,this.extension=o(this)}static define(e,t){let{eventHandlers:i,provide:o,decorations:a}=t||{};return new ip(is++,e,i,e=>{let t=[il.of(e)];return a&&t.push(iy.of(t=>{let i=t.plugin(e);return i?a(i):tZ.none})),o&&t.push(o(e)),t})}static fromClass(e,t){return ip.define(t=>new e(t),t)}}class id{constructor(e){this.spec=e,this.mustUpdate=null,this.value=null}update(e){if(this.value){if(this.mustUpdate){let e=this.mustUpdate;if(this.mustUpdate=null,this.value.update)try{this.value.update(e)}catch(t){if(ia(e.state,t,"CodeMirror plugin crashed"),this.value.destroy)try{this.value.destroy()}catch(e){}this.deactivate()}}}else if(this.spec)try{this.value=this.spec.create(e)}catch(t){ia(e.state,t,"CodeMirror plugin crashed"),this.deactivate()}return this}destroy(e){var t;if(null===(t=this.value)||void 0===t?void 0:t.destroy)try{this.value.destroy()}catch(t){ia(e.state,t,"CodeMirror plugin crashed")}}deactivate(){this.spec=this.value=null}}const ic=X.define(),ih=X.define(),iy=X.define(),iu=X.define(),im=X.define(),ix=X.define();class ig{constructor(e,t,i,o){this.fromA=e,this.toA=t,this.fromB=i,this.toB=o}join(e){return new ig(Math.min(this.fromA,e.fromA),Math.max(this.toA,e.toA),Math.min(this.fromB,e.fromB),Math.max(this.toB,e.toB))}addToSet(e){let t=e.length,i=this;for(;t>0;t--){let o=e[t-1];if(!(o.fromA>i.toA)){if(o.toA<i.fromA)break;i=i.join(o),e.splice(t-1,1)}}return e.splice(t,0,i),e}static extendWithRanges(e,t){if(0==t.length)return e;let i=[];for(let o=0,a=0,n=0,r=0;;o++){let s=o==e.length?null:e[o],l=n-r,p=s?s.fromB:1e9;for(;a<t.length&&t[a]<p;){let e=t[a],o=t[a+1],n=Math.max(r,e),s=Math.min(p,o);if(n<=s&&new ig(n+l,s+l,n,s).addToSet(i),o>p)break;a+=2}if(!s)return i;new ig(s.fromA,s.toA,s.fromB,s.toB).addToSet(i),n=s.toA,r=s.toB}}}class ib{constructor(e,t,i){for(let o of(this.view=e,this.state=t,this.transactions=i,this.flags=0,this.startState=e.state,this.changes=B.empty(this.startState.doc.length),i))this.changes=this.changes.compose(o.changes);let o=[];this.changes.iterChangedRanges((e,t,i,a)=>o.push(new ig(e,t,i,a))),this.changedRanges=o}static create(e,t,i){return new ib(e,t,i)}get viewportChanged(){return(4&this.flags)>0}get heightChanged(){return(2&this.flags)>0}get geometryChanged(){return this.docChanged||(10&this.flags)>0}get focusChanged(){return(1&this.flags)>0}get docChanged(){return!this.changes.empty}get selectionSet(){return this.transactions.some(e=>e.selection)}get empty(){return 0==this.flags&&0==this.transactions.length}}var iw=function(e){return e[e.LTR=0]="LTR",e[e.RTL=1]="RTL",e}(iw||(iw={}));const ik=iw.LTR,iv=iw.RTL;function iO(e){let t=[];for(let i=0;i<e.length;i++)t.push(1<<+e[i]);return t}const iS=iO("88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008"),iC=iO("4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333"),iP=Object.create(null),iD=[];for(let e of["()","[]","{}"]){let t=e.charCodeAt(0),i=e.charCodeAt(1);iP[t]=i,iP[i]=-t}const iT=/[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac\ufb50-\ufdff]/;class iM{constructor(e,t,i){this.from=e,this.to=t,this.level=i}get dir(){return this.level%2?iv:ik}side(e,t){return this.dir==t==e?this.to:this.from}static find(e,t,i,o){let a=-1;for(let n=0;n<e.length;n++){let r=e[n];if(r.from<=t&&r.to>=t){if(r.level==i)return n;(a<0||(0!=o?o<0?r.from<t:r.to>t:e[a].level>r.level))&&(a=n)}}if(a<0)throw RangeError("Index out of range");return a}}const iR=[];function iQ(e){return[new iM(0,e,0)]}let iA="";class iF{constructor(e,t){this.points=e,this.text="",this.lineSeparator=t.facet(eD.lineSeparator)}append(e){this.text+=e}lineBreak(){this.text+="￿"}readRange(e,t){if(!e)return this;let i=e.parentNode;for(let o=e;;){this.findPointBefore(i,o),this.readNode(o);let e=o.nextSibling;if(e==t)break;let a=tu.get(o),n=tu.get(e);(a&&n?a.breakAfter:(a?a.breakAfter:iL(o))||iL(e)&&("BR"!=o.nodeName||o.cmIgnore))&&this.lineBreak(),o=e}return this.findPointBefore(i,t),this}readTextNode(e){let t=e.nodeValue;for(let i of this.points)i.node==e&&(i.pos=this.text.length+Math.min(i.offset,t.length));for(let i=0,o=this.lineSeparator?null:/\r\n?|\n/g;;){let a=-1,n=1,r;if(this.lineSeparator?(a=t.indexOf(this.lineSeparator,i),n=this.lineSeparator.length):(r=o.exec(t))&&(a=r.index,n=r[0].length),this.append(t.slice(i,a<0?t.length:a)),a<0)break;if(this.lineBreak(),n>1)for(let t of this.points)t.node==e&&t.pos>this.text.length&&(t.pos-=n-1);i=a+n}}readNode(e){if(e.cmIgnore)return;let t=tu.get(e),i=t&&t.overrideDOMText;if(null!=i){this.findPointInside(e,i.length);for(let e=i.iter();!e.next().done;)e.lineBreak?this.lineBreak():this.append(e.value)}else 3==e.nodeType?this.readTextNode(e):"BR"==e.nodeName?e.nextSibling&&this.lineBreak():1==e.nodeType&&this.readRange(e.firstChild,null)}findPointBefore(e,t){for(let i of this.points)i.node==e&&e.childNodes[i.offset]==t&&(i.pos=this.text.length)}findPointInside(e,t){for(let i of this.points)(3==e.nodeType?i.node==e:e.contains(i.node))&&(i.pos=this.text.length+Math.min(t,i.offset))}}function iL(e){return 1==e.nodeType&&/^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\d|SECTION|PRE)$/.test(e.nodeName)}class iE{constructor(e,t){this.node=e,this.offset=t,this.pos=-1}}class iB extends tu{constructor(e){super(),this.view=e,this.compositionDeco=tZ.none,this.decorations=[],this.dynamicDecorationMap=[],this.minWidth=0,this.minWidthFrom=0,this.minWidthTo=0,this.impreciseAnchor=null,this.impreciseHead=null,this.forceSelection=!1,this.lastUpdate=Date.now(),this.setDOM(e.contentDOM),this.children=[new tK],this.children[0].setParent(this),this.updateDeco(),this.updateInner([new ig(0,0,0,e.state.doc.length)],0)}get length(){return this.view.state.doc.length}update(e){var t,i,o;let a,n=e.changedRanges;this.minWidth>0&&n.length&&(n.every(({fromA:e,toA:t})=>t<this.minWidthFrom||e>this.minWidthTo)?(this.minWidthFrom=e.changes.mapPos(this.minWidthFrom,1),this.minWidthTo=e.changes.mapPos(this.minWidthTo,1)):this.minWidth=this.minWidthFrom=this.minWidthTo=0),this.view.inputState.composing<0?this.compositionDeco=tZ.none:(e.transactions.length||this.dirty)&&(this.compositionDeco=function(e,t){let i=iG(e);if(!i)return tZ.none;let{from:o,to:a,node:n,text:r}=i,s=t.mapPos(o,1),l=Math.max(s,t.mapPos(a,-1)),{state:p}=e,d=3==n.nodeType?n.nodeValue:new iF([],p).readRange(n.firstChild,null).text;if(l-s<d.length){if(p.doc.sliceString(s,Math.min(p.doc.length,s+d.length),"￿")==d)l=s+d.length;else{if(p.doc.sliceString(Math.max(0,l-d.length),l,"￿")!=d)return tZ.none;s=l-d.length}}else if(p.doc.sliceString(s,l,"￿")!=d)return tZ.none;let c=tu.get(n);return c instanceof tB?c=c.widget.topView:c&&(c.parent=null),tZ.set(tZ.replace({widget:new i$(n,r,c),inclusive:!0}).range(s,l))}(this.view,e.changes)),(tQ.ie||tQ.chrome)&&!this.compositionDeco.size&&e&&e.state.doc.lines!=e.startState.doc.lines&&(this.forceSelection=!0);let r=(t=this.decorations,i=this.updateDeco(),o=e.changes,a=new iz,eF.compare(t,i,o,a),a.changes);return n=ig.extendWithRanges(n,r),(0!=this.dirty||0!=n.length)&&(this.updateInner(n,e.startState.doc.length),e.transactions.length&&(this.lastUpdate=Date.now()),!0)}updateInner(e,t){this.view.viewState.mustMeasureContent=!0,this.updateChildren(e,t);let{observer:i}=this.view;i.ignore(()=>{this.dom.style.height=this.view.viewState.contentHeight+"px",this.dom.style.flexBasis=this.minWidth?this.minWidth+"px":"";let e=tQ.chrome||tQ.ios?{node:i.selectionRange.focusNode,written:!1}:void 0;this.sync(this.view,e),this.dirty=0,e&&(e.written||i.selectionRange.focusNode!=e.node)&&(this.forceSelection=!0),this.dom.style.height=""});let o=[];if(this.view.viewport.from||this.view.viewport.to<this.view.state.doc.length)for(let e of this.children)e instanceof tJ&&e.widget instanceof iI&&o.push(e.dom);i.updateGaps(o)}updateChildren(e,t){let i=this.childCursor(t);for(let t=e.length-1;;t--){let o=t>=0?e[t]:null;if(!o)break;let{fromA:a,toA:n,fromB:r,toB:s}=o,{content:l,breakAtStart:p,openStart:d,openEnd:c}=t0.build(this.view.state.doc,r,s,this.decorations,this.dynamicDecorationMap),{i:f,off:h}=i.findPos(n,1),{i:y,off:u}=i.findPos(a,-1);tg(this,y,u,f,h,l,p,d,c)}}updateSelection(e=!1,t=!1){var i;(e||!this.view.observer.selectionRange.focusNode)&&this.view.observer.readSelectionRange();let o=this.view.root.activeElement,a=o==this.dom,n=!a&&e7(this.dom,this.view.observer.selectionRange)&&!(o&&this.dom.contains(o));if(!(a||t||n))return;let r=this.forceSelection;this.forceSelection=!1;let s=this.view.state.selection.main,l=this.domAtPos(s.anchor),p=s.empty?l:this.domAtPos(s.head);if(tQ.gecko&&s.empty&&!this.compositionDeco.size&&1==(i=l).node.nodeType&&i.node.firstChild&&(0==i.offset||"false"==i.node.childNodes[i.offset-1].contentEditable)&&(i.offset==i.node.childNodes.length||"false"==i.node.childNodes[i.offset].contentEditable)){let e=document.createTextNode("");this.view.observer.ignore(()=>l.node.insertBefore(e,l.node.childNodes[l.offset]||null)),l=p=new th(e,0),r=!0}let d=this.view.observer.selectionRange;!r&&d.focusNode&&tt(l.node,l.offset,d.anchorNode,d.anchorOffset)&&tt(p.node,p.offset,d.focusNode,d.focusOffset)||(this.view.observer.ignore(()=>{tQ.android&&tQ.chrome&&this.dom.contains(d.focusNode)&&function(e,t){for(let i=e;i&&i!=t;i=i.assignedSlot||i.parentNode)if(1==i.nodeType&&"false"==i.contentEditable)return!0;return!1}(d.focusNode,this.dom)&&(this.dom.blur(),this.dom.focus({preventScroll:!0}));let e=e4(this.view.root);if(e){if(s.empty){if(tQ.gecko){var t,i;let e=(t=l.node,i=l.offset,1!=t.nodeType?0:(i&&"false"==t.childNodes[i-1].contentEditable?1:0)|(i<t.childNodes.length&&"false"==t.childNodes[i].contentEditable?2:0));if(e&&3!=e){let t=iN(l.node,l.offset,1==e?1:-1);t&&(l=new th(t,1==e?0:t.nodeValue.length))}}e.collapse(l.node,l.offset),null!=s.bidiLevel&&null!=d.cursorBidiLevel&&(d.cursorBidiLevel=s.bidiLevel)}else if(e.extend){e.collapse(l.node,l.offset);try{e.extend(p.node,p.offset)}catch(e){}}else{let t=document.createRange();s.anchor>s.head&&([l,p]=[p,l]),t.setEnd(p.node,p.offset),t.setStart(l.node,l.offset),e.removeAllRanges(),e.addRange(t)}}n&&this.view.root.activeElement==this.dom&&(this.dom.blur(),o&&o.focus())}),this.view.observer.setSelectionRange(l,p)),this.impreciseAnchor=l.precise?null:new th(d.anchorNode,d.anchorOffset),this.impreciseHead=p.precise?null:new th(d.focusNode,d.focusOffset)}enforceCursorAssoc(){if(this.compositionDeco.size)return;let{view:e}=this,t=e.state.selection.main,i=e4(e.root),{anchorNode:o,anchorOffset:a}=e.observer.selectionRange;if(!i||!t.empty||!t.assoc||!i.modify)return;let n=tK.find(this,t.head);if(!n)return;let r=n.posAtStart;if(t.head==r||t.head==r+n.length)return;let s=this.coordsAt(t.head,-1),l=this.coordsAt(t.head,1);if(!s||!l||s.bottom>l.top)return;let p=this.domAtPos(t.head+t.assoc);i.collapse(p.node,p.offset),i.modify("move",t.assoc<0?"forward":"backward","lineboundary"),e.observer.readSelectionRange();let d=e.observer.selectionRange;e.docView.posFromDOM(d.anchorNode,d.anchorOffset)!=t.from&&i.collapse(o,a)}nearest(e){for(let t=e;t;){let e=tu.get(t);if(e&&e.rootView==this)return e;t=t.parentNode}return null}posFromDOM(e,t){let i=this.nearest(e);if(!i)throw RangeError("Trying to find position for a DOM position outside of the document");return i.localPosFromDOM(e,t)+i.posAtStart}domAtPos(e){let{i:t,off:i}=this.childCursor().findPos(e,-1);for(;t<this.children.length-1;){let e=this.children[t];if(i<e.length||e instanceof tK)break;t++,i=0}return this.children[t].domAtPos(i)}coordsAt(e,t){for(let i=this.length,o=this.children.length-1;;o--){let a=this.children[o],n=i-a.breakAfter-a.length;if(e>n||e==n&&a.type!=tV.WidgetBefore&&a.type!=tV.WidgetAfter&&(!o||2==t||this.children[o-1].breakAfter||this.children[o-1].type==tV.WidgetBefore&&t>-2))return a.coordsAt(e-n,t);i=n}}measureVisibleLineHeights(e){let t=[],{from:i,to:o}=e,a=this.view.contentDOM.clientWidth,n=a>Math.max(this.view.scrollDOM.clientWidth,this.minWidth)+1,r=-1,s=this.view.textDirection==iw.LTR;for(let e=0,l=0;l<this.children.length;l++){let p=this.children[l],d=e+p.length;if(d>o)break;if(e>=i){let i=p.dom.getBoundingClientRect();if(t.push(i.height),n){let t=p.dom.lastChild,o=t?te(t):[];if(o.length){let t=o[o.length-1],n=s?t.right-i.left:i.right-t.left;n>r&&(r=n,this.minWidth=a,this.minWidthFrom=e,this.minWidthTo=d)}}}e=d+p.breakAfter}return t}textDirectionAt(e){let{i:t}=this.childPos(e,1);return"rtl"==getComputedStyle(this.children[t].dom).direction?iw.RTL:iw.LTR}measureTextSize(){for(let e of this.children)if(e instanceof tK){let t=e.measureTextSize();if(t)return t}let e=document.createElement("div"),t,i,o;return e.className="cm-line",e.style.width="99999px",e.textContent="abc def ghi jkl mno pqr stu",this.view.observer.ignore(()=>{this.dom.appendChild(e);let a=te(e.firstChild)[0];t=e.getBoundingClientRect().height,i=a?a.width/27:7,o=a?a.height:t,e.remove()}),{lineHeight:t,charWidth:i,textHeight:o}}childCursor(e=this.length){let t=this.children.length;return t&&(e-=this.children[--t].length),new tx(this.children,e,t)}computeBlockGapDeco(){let e=[],t=this.view.viewState;for(let i=0,o=0;;o++){let a=o==t.viewports.length?null:t.viewports[o],n=a?a.from-1:this.length;if(n>i){let o=t.lineBlockAt(n).bottom-t.lineBlockAt(i).top;e.push(tZ.replace({widget:new iI(o),block:!0,inclusive:!0,isBlockGap:!0}).range(i,n))}if(!a)break;i=a.to+1}return tZ.set(e)}updateDeco(){let e=this.view.state.facet(iy).map((e,t)=>(this.dynamicDecorationMap[t]="function"==typeof e)?e(this.view):e);for(let t=e.length;t<e.length+3;t++)this.dynamicDecorationMap[t]=!1;return this.decorations=[...e,this.compositionDeco,this.computeBlockGapDeco(),this.view.viewState.lineGapDeco]}scrollIntoView(e){let{range:t}=e,i=this.coordsAt(t.head,t.empty?t.assoc:t.head>t.anchor?-1:1),o;if(!i)return;!t.empty&&(o=this.coordsAt(t.anchor,t.anchor>t.head?-1:1))&&(i={left:Math.min(i.left,o.left),top:Math.min(i.top,o.top),right:Math.max(i.right,o.right),bottom:Math.max(i.bottom,o.bottom)});let a=0,n=0,r=0,s=0;for(let e of this.view.state.facet(im).map(e=>e(this.view)))if(e){let{left:t,right:i,top:o,bottom:l}=e;null!=t&&(a=Math.max(a,t)),null!=i&&(n=Math.max(n,i)),null!=o&&(r=Math.max(r,o)),null!=l&&(s=Math.max(s,l))}let l={left:i.left-a,top:i.top-r,right:i.right+n,bottom:i.bottom+s};!function(e,t,i,o,a,n,r,s){let l=e.ownerDocument,p=l.defaultView||window;for(let d=e;d;)if(1==d.nodeType){let e,c=d==l.body;if(c)e={left:0,right:p.innerWidth,top:0,bottom:p.innerHeight};else{if(d.scrollHeight<=d.clientHeight&&d.scrollWidth<=d.clientWidth){d=d.assignedSlot||d.parentNode;continue}let t=d.getBoundingClientRect();e={left:t.left,right:t.left+d.clientWidth,top:t.top,bottom:t.top+d.clientHeight}}let f=0,h=0;if("nearest"==a)t.top<e.top?(h=-(e.top-t.top+r),i>0&&t.bottom>e.bottom+h&&(h=t.bottom-e.bottom+h+r)):t.bottom>e.bottom&&(h=t.bottom-e.bottom+r,i<0&&t.top-h<e.top&&(h=-(e.top+h-t.top+r)));else{let o=t.bottom-t.top,n=e.bottom-e.top;h=("center"==a&&o<=n?t.top+o/2-n/2:"start"==a||"center"==a&&i<0?t.top-r:t.bottom-n+r)-e.top}if("nearest"==o?t.left<e.left?(f=-(e.left-t.left+n),i>0&&t.right>e.right+f&&(f=t.right-e.right+f+n)):t.right>e.right&&(f=t.right-e.right+n,i<0&&t.left<e.left+f&&(f=-(e.left+f-t.left+n))):f=("center"==o?t.left+(t.right-t.left)/2-(e.right-e.left)/2:"start"==o==s?t.left-n:t.right-(e.right-e.left)+n)-e.left,f||h){if(c)p.scrollBy(f,h);else{let e=0,i=0;if(h){let e=d.scrollTop;d.scrollTop+=h,i=d.scrollTop-e}if(f){let t=d.scrollLeft;d.scrollLeft+=f,e=d.scrollLeft-t}t={left:t.left-e,top:t.top-i,right:t.right-e,bottom:t.bottom-i},e&&1>Math.abs(e-f)&&(o="nearest"),i&&1>Math.abs(i-h)&&(a="nearest")}}if(c)break;d=d.assignedSlot||d.parentNode}else if(11==d.nodeType)d=d.host;else break}(this.view.scrollDOM,l,t.head<t.anchor?-1:1,e.x,e.y,e.xMargin,e.yMargin,this.view.textDirection==iw.LTR)}}class iI extends tq{constructor(e){super(),this.height=e}toDOM(){let e=document.createElement("div");return this.updateDOM(e),e}eq(e){return e.height==this.height}updateDOM(e){return e.style.height=this.height+"px",!0}get estimatedHeight(){return this.height}}function iG(e){let t=e.observer.selectionRange,i=t.focusNode&&iN(t.focusNode,t.focusOffset,0);if(!i)return null;let o=e.docView.nearest(i);if(!o)return null;if(o instanceof tK){let e=i;for(;e.parentNode!=o.dom;)e=e.parentNode;let t=e.previousSibling;for(;t&&!tu.get(t);)t=t.previousSibling;let a=t?tu.get(t).posAtEnd:o.posAtStart;return{from:a,to:a,node:e,text:i}}{for(;;){let{parent:e}=o;if(!e)return null;if(e instanceof tK)break;o=e}let e=o.posAtStart;return{from:e,to:e+o.length,node:o.dom,text:i}}}class i$ extends tq{constructor(e,t,i){super(),this.top=e,this.text=t,this.topView=i}eq(e){return this.top==e.top&&this.text==e.text}toDOM(){return this.top}ignoreEvent(){return!1}get customView(){return tB}}function iN(e,t,i){if(i<=0)for(let i=e,o=t;;){if(3==i.nodeType)return i;if(1==i.nodeType&&o>0)o=ta(i=i.childNodes[o-1]);else break}if(i>=0)for(let o=e,a=t;;){if(3==o.nodeType)return o;if(1==o.nodeType&&a<o.childNodes.length&&i>=0)o=o.childNodes[a],a=0;else break}return null}class iz{constructor(){this.changes=[]}compareRange(e,t){t_(e,t,this.changes)}comparePoint(e,t){t_(e,t,this.changes)}}function iW(e,t){return e.top<t.bottom-1&&e.bottom>t.top+1}function ij(e,t){return t<e.top?{top:t,left:e.left,right:e.right,bottom:e.bottom}:e}function iq(e,t){return t>e.bottom?{top:e.top,left:e.left,right:e.right,bottom:t}:e}function iV(e,t,i){let o=e.nodeValue.length,a=-1,n=1e9,r=0;for(let s=0;s<o;s++){let o=td(e,s,s+1).getClientRects();for(let l=0;l<o.length;l++){let p=o[l];if(p.top==p.bottom)continue;r||(r=t-p.left);let d=(p.top>i?p.top-i:i-p.bottom)-1;if(p.left-1<=t&&p.right+1>=t&&d<n){let i=t>=(p.left+p.right)/2,o=i;if((tQ.chrome||tQ.gecko)&&td(e,s).getBoundingClientRect().left==p.right&&(o=!i),d<=0)return{node:e,offset:s+(o?1:0)};a=s+(o?1:0),n=d}}}return{node:e,offset:a>-1?a:r>0?e.nodeValue.length:0}}function iZ(e,t,i,o=-1){var a,n;let r=e.contentDOM.getBoundingClientRect(),s=r.top+e.viewState.paddingTop,l,{docHeight:p}=e.viewState,{x:d,y:c}=t,f=c-s;if(f<0)return 0;if(f>p)return e.state.doc.length;for(let t=e.defaultLineHeight/2,a=!1;(l=e.elementAtHeight(f)).type!=tV.Text;)for(;!((f=o>0?l.bottom+t:l.top-t)>=0)||!(f<=p);){if(a)return i?null:0;a=!0,o=-o}c=s+f;let h=l.from;if(h<e.viewport.from)return 0==e.viewport.from?0:i?null:iX(e,r,l,d,c);if(h>e.viewport.to)return e.viewport.to==e.state.doc.length?e.state.doc.length:i?null:iX(e,r,l,d,c);let y=e.dom.ownerDocument,u=e.root.elementFromPoint?e.root:y,m=u.elementFromPoint(d,c);m&&!e.contentDOM.contains(m)&&(m=null),!m&&(d=Math.max(r.left+1,Math.min(r.right-1,d)),(m=u.elementFromPoint(d,c))&&!e.contentDOM.contains(m)&&(m=null));let x,g=-1;if(m&&(null===(a=e.docView.nearest(m))||void 0===a?void 0:a.isEditable)!=!1){if(y.caretPositionFromPoint){let e=y.caretPositionFromPoint(d,c);e&&({offsetNode:x,offset:g}=e)}else if(y.caretRangeFromPoint){let t=y.caretRangeFromPoint(d,c);t&&({startContainer:x,startOffset:g}=t,(!e.contentDOM.contains(x)||tQ.safari&&function(e,t,i){let o;if(3!=e.nodeType||t!=(o=e.nodeValue.length))return!1;for(let t=e.nextSibling;t;t=t.nextSibling)if(1!=t.nodeType||"BR"!=t.nodeName)return!1;return td(e,o-1,o).getBoundingClientRect().left>i}(x,g,d)||tQ.chrome&&function(e,t,i){if(0!=t)return!1;for(let t=e;;){let e=t.parentNode;if(!e||1!=e.nodeType||e.firstChild!=t)return!1;if(e.classList.contains("cm-line"))break;t=e}return i-(1==e.nodeType?e.getBoundingClientRect():td(e,0,Math.max(e.nodeValue.length,1)).getBoundingClientRect()).left>5}(x,g,d))&&(x=void 0))}}if(!x||!e.docView.dom.contains(x)){let t=tK.find(e.docView,h);if(!t)return f>l.top+l.height/2?l.to:l.from;({node:x,offset:g}=function e(t,i,o){let a,n,r,s,l,p,d,c,f=!1;for(let u=t.firstChild;u;u=u.nextSibling){let t=te(u);for(let m=0;m<t.length;m++){var h,y;let x=t[m];p&&iW(p,x)&&(x=ij(iq(x,p.bottom),p.top));let g=(h=x).left>i?h.left-i:Math.max(0,i-h.right),b=(y=x).top>o?y.top-o:Math.max(0,o-y.bottom);if(0==g&&0==b)return 3==u.nodeType?iV(u,i,o):e(u,i,o);if(!l||c>b||c==b&&d>g){l=u,p=x,d=g,c=b;let e=b?o<x.top?-1:1:g?i<x.left?-1:1:0;f=!e||(e>0?m<t.length-1:m>0)}0==g?o>x.bottom&&(!r||r.bottom<x.bottom)?(a=u,r=x):o<x.top&&(!s||s.top>x.top)&&(n=u,s=x):r&&iW(r,x)?r=iq(r,x.bottom):s&&iW(s,x)&&(s=ij(s,x.top))}}if(r&&r.bottom>=o?(l=a,p=r):s&&s.top<=o&&(l=n,p=s),!l)return{node:t,offset:0};let u=Math.max(p.left,Math.min(p.right,i));if(3==l.nodeType)return iV(l,u,o);if(f&&"false"!=l.contentEditable)return e(l,u,o);let m=Array.prototype.indexOf.call(t.childNodes,l)+(i>=(p.left+p.right)/2?1:0);return{node:t,offset:m}}(t.dom,d,c))}let b=e.docView.nearest(x);if(!b)return null;if(!b.isWidget||(null===(n=b.dom)||void 0===n?void 0:n.nodeType)!=1)return b.localPosFromDOM(x,g)+b.posAtStart;{let e=b.dom.getBoundingClientRect();return t.y<e.top||t.y<=e.bottom&&t.x<=(e.left+e.right)/2?b.posAtStart:b.posAtEnd}}function iX(e,t,i,o,a){let n=Math.round((o-t.left)*e.defaultCharacterWidth);e.lineWrapping&&i.height>1.5*e.defaultLineHeight&&(n+=Math.floor((a-i.top)/e.defaultLineHeight)*e.viewState.heightOracle.lineLength);let r=e.state.sliceDoc(i.from,i.to);return i.from+eZ(r,n,e.state.tabSize)}function iU(e,t,i,o){let a=e.state.doc.lineAt(t.head),n=e.bidiSpans(a),r=e.textDirectionAt(a.from);for(let s=t,l=null;;){let t=function(e,t,i,o,a){var n;let r=o.head-e.from,s=-1;if(0==r){if(!a||!e.length)return null;t[0].level!=i&&(r=t[0].side(!1,i),s=0)}else if(r==e.length){if(a)return null;let e=t[t.length-1];e.level!=i&&(r=e.side(!0,i),s=t.length-1)}s<0&&(s=iM.find(t,r,null!==(n=o.bidiLevel)&&void 0!==n?n:-1,o.assoc));let l=t[s];r==l.side(a,i)&&(r=(l=t[s+=a?1:-1]).side(!a,i));let p=a==(l.dir==i),d=x(e.text,r,p);if(iA=e.text.slice(Math.min(r,d),Math.max(r,d)),d!=l.side(a,i))return q.cursor(d+e.from,p?-1:1,l.level);let c=s==(a?t.length-1:0)?null:t[s+(a?1:-1)];return c||l.level==i?c&&c.level<l.level?q.cursor(c.side(!a,i)+e.from,a?1:-1,c.level):q.cursor(d+e.from,a?-1:1,l.level):q.cursor(a?e.to:e.from,a?-1:1,i)}(a,n,r,s,i),p=iA;if(!t){if(a.number==(i?e.state.doc.lines:1))return s;p="\n",a=e.state.doc.line(a.number+(i?1:-1)),n=e.bidiSpans(a),t=q.cursor(i?a.from:a.to)}if(l){if(!l(p))return s}else{if(!o)return t;l=o(p)}s=t}}function iH(e,t,i){let o=e.state.facet(iu).map(t=>t(e));for(;;){let e=!1;for(let a of o)a.between(i.from-1,i.from+1,(o,a,n)=>{i.from>o&&i.from<a&&(i=t.head>i.from?q.cursor(o,1):q.cursor(a,-1),e=!0)});if(!e)return i}}class iY{constructor(e){this.lastKeyCode=0,this.lastKeyTime=0,this.lastTouchTime=0,this.lastFocusTime=0,this.lastScrollTop=0,this.lastScrollLeft=0,this.chromeScrollHack=-1,this.pendingIOSKey=void 0,this.lastSelectionOrigin=null,this.lastSelectionTime=0,this.lastEscPress=0,this.lastContextMenu=0,this.scrollHandlers=[],this.registeredEvents=[],this.customHandlers=[],this.composing=-1,this.compositionFirstChange=null,this.compositionEndedAt=0,this.compositionPendingKey=!1,this.compositionPendingChange=!1,this.mouseSelection=null;let t=(t,i)=>{!this.ignoreDuringComposition(i)&&("keydown"==i.type&&this.keydown(e,i)||(this.mustFlushObserver(i)&&e.observer.forceFlush(),this.runCustomHandlers(i.type,e,i)?i.preventDefault():t(e,i)))};for(let i in i8){let o=i8[i];e.contentDOM.addEventListener(i,i=>{i1(e,i)&&t(o,i)},i6[i]),this.registeredEvents.push(i)}e.scrollDOM.addEventListener("mousedown",i=>{if(i.target==e.scrollDOM&&i.clientY>e.contentDOM.getBoundingClientRect().bottom&&(t(i8.mousedown,i),!i.defaultPrevented&&2==i.button)){let t=e.contentDOM.style.minHeight;e.contentDOM.style.minHeight="100%",setTimeout(()=>e.contentDOM.style.minHeight=t,200)}}),tQ.chrome&&102==tQ.chrome_version&&e.scrollDOM.addEventListener("wheel",()=>{this.chromeScrollHack<0?e.contentDOM.style.pointerEvents="none":window.clearTimeout(this.chromeScrollHack),this.chromeScrollHack=setTimeout(()=>{this.chromeScrollHack=-1,e.contentDOM.style.pointerEvents=""},100)},{passive:!0}),this.notifiedFocused=e.hasFocus,tQ.safari&&e.contentDOM.addEventListener("input",()=>null)}setSelectionOrigin(e){this.lastSelectionOrigin=e,this.lastSelectionTime=Date.now()}ensureHandlers(e,t){var i;let o;for(let a of(this.customHandlers=[],t))if(o=null===(i=a.update(e).spec)||void 0===i?void 0:i.domEventHandlers)for(let t in this.customHandlers.push({plugin:a.value,handlers:o}),o)0>this.registeredEvents.indexOf(t)&&"scroll"!=t&&(this.registeredEvents.push(t),e.contentDOM.addEventListener(t,i=>{i1(e,i)&&this.runCustomHandlers(t,e,i)&&i.preventDefault()}))}runCustomHandlers(e,t,i){for(let o of this.customHandlers){let a=o.handlers[e];if(a)try{if(a.call(o.plugin,i,t)||i.defaultPrevented)return!0}catch(e){ia(t.state,e)}}return!1}runScrollHandlers(e,t){for(let i of(this.lastScrollTop=e.scrollDOM.scrollTop,this.lastScrollLeft=e.scrollDOM.scrollLeft,this.customHandlers)){let o=i.handlers.scroll;if(o)try{o.call(i.plugin,t,e)}catch(t){ia(e.state,t)}}}keydown(e,t){let i;return this.lastKeyCode=t.keyCode,this.lastKeyTime=Date.now(),!!(9==t.keyCode&&Date.now()<this.lastEscPress+2e3)||((27!=t.keyCode&&0>iJ.indexOf(t.keyCode)&&(e.inputState.lastEscPress=0),tQ.android&&tQ.chrome&&!t.synthetic&&(13==t.keyCode||8==t.keyCode))?(e.observer.delayAndroidKey(t.key,t.keyCode),!0):!!(tQ.ios&&!t.synthetic&&!t.altKey&&!t.metaKey&&((i=i_.find(e=>e.keyCode==t.keyCode))&&!t.ctrlKey||iK.indexOf(t.key)>-1&&t.ctrlKey&&!t.shiftKey))&&(this.pendingIOSKey=i||t,setTimeout(()=>this.flushIOSKey(e),250),!0))}flushIOSKey(e){let t=this.pendingIOSKey;return!!t&&(this.pendingIOSKey=void 0,tc(e.contentDOM,t.key,t.keyCode))}ignoreDuringComposition(e){return!!/^key/.test(e.type)&&(this.composing>0||!!(tQ.safari&&!tQ.ios&&this.compositionPendingKey&&Date.now()-this.compositionEndedAt<100)&&(this.compositionPendingKey=!1,!0))}mustFlushObserver(e){return"keydown"==e.type&&229!=e.keyCode}startMouseSelection(e){this.mouseSelection&&this.mouseSelection.destroy(),this.mouseSelection=e}update(e){this.mouseSelection&&this.mouseSelection.update(e),e.transactions.length&&(this.lastKeyCode=this.lastSelectionTime=0)}destroy(){this.mouseSelection&&this.mouseSelection.destroy()}}const i_=[{key:"Backspace",keyCode:8,inputType:"deleteContentBackward"},{key:"Enter",keyCode:13,inputType:"insertParagraph"},{key:"Delete",keyCode:46,inputType:"deleteContentForward"}],iK="dthko",iJ=[16,17,18,20,91,92,224,225];function i0(e){return .7*Math.max(0,e)+8}class i2{constructor(e,t,i,o){this.view=e,this.style=i,this.mustSelect=o,this.scrollSpeed={x:0,y:0},this.scrolling=-1,this.lastEvent=t,this.scrollParent=function(e){let t=e.ownerDocument;for(let i=e.parentNode;i&&i!=t.body;)if(1==i.nodeType){if(i.scrollHeight>i.clientHeight||i.scrollWidth>i.clientWidth)return i;i=i.assignedSlot||i.parentNode}else if(11==i.nodeType)i=i.host;else break;return null}(e.contentDOM);let a=e.contentDOM.ownerDocument;a.addEventListener("mousemove",this.move=this.move.bind(this)),a.addEventListener("mouseup",this.up=this.up.bind(this)),this.extend=t.shiftKey,this.multiple=e.state.facet(eD.allowMultipleSelections)&&function(e,t){let i=e.state.facet(t8);return i.length?i[0](t):tQ.mac?t.metaKey:t.ctrlKey}(e,t),this.dragMove=function(e,t){let i=e.state.facet(t6);return i.length?i[0](t):tQ.mac?!t.altKey:!t.ctrlKey}(e,t),this.dragging=!!function(e,t){let{main:i}=e.state.selection;if(i.empty)return!1;let o=e4(e.root);if(!o||0==o.rangeCount)return!0;let a=o.getRangeAt(0).getClientRects();for(let e=0;e<a.length;e++){let i=a[e];if(i.left<=t.clientX&&i.right>=t.clientX&&i.top<=t.clientY&&i.bottom>=t.clientY)return!0}return!1}(e,t)&&1==on(t)&&null}start(e){!1===this.dragging&&(e.preventDefault(),this.select(e))}move(e){var t;if(0==e.buttons)return this.destroy();if(!1!==this.dragging)return;this.select(this.lastEvent=e);let i=0,o=0,a=(null===(t=this.scrollParent)||void 0===t?void 0:t.getBoundingClientRect())||{left:0,top:0,right:this.view.win.innerWidth,bottom:this.view.win.innerHeight};e.clientX<=a.left+6?i=-i0(a.left-e.clientX):e.clientX>=a.right-6&&(i=i0(e.clientX-a.right)),e.clientY<=a.top+6?o=-i0(a.top-e.clientY):e.clientY>=a.bottom-6&&(o=i0(e.clientY-a.bottom)),this.setScrollSpeed(i,o)}up(e){null==this.dragging&&this.select(this.lastEvent),this.dragging||e.preventDefault(),this.destroy()}destroy(){this.setScrollSpeed(0,0);let e=this.view.contentDOM.ownerDocument;e.removeEventListener("mousemove",this.move),e.removeEventListener("mouseup",this.up),this.view.inputState.mouseSelection=null}setScrollSpeed(e,t){this.scrollSpeed={x:e,y:t},e||t?this.scrolling<0&&(this.scrolling=setInterval(()=>this.scroll(),50)):this.scrolling>-1&&(clearInterval(this.scrolling),this.scrolling=-1)}scroll(){this.scrollParent?(this.scrollParent.scrollLeft+=this.scrollSpeed.x,this.scrollParent.scrollTop+=this.scrollSpeed.y):this.view.win.scrollBy(this.scrollSpeed.x,this.scrollSpeed.y),!1===this.dragging&&this.select(this.lastEvent)}select(e){let t=this.style.get(e,this.extend,this.multiple);(this.mustSelect||!t.eq(this.view.state.selection)||t.main.assoc!=this.view.state.selection.main.assoc)&&this.view.dispatch({selection:t,userEvent:"select.pointer"}),this.mustSelect=!1}update(e){e.docChanged&&this.dragging&&(this.dragging=this.dragging.map(e.changes)),this.style.update(e)&&setTimeout(()=>this.select(this.lastEvent),20)}}function i1(e,t){if(!t.bubbles)return!0;if(t.defaultPrevented)return!1;for(let i=t.target,o;i!=e.contentDOM;i=i.parentNode)if(!i||11==i.nodeType||(o=tu.get(i))&&o.ignoreEvent(t))return!1;return!0}const i8=Object.create(null),i6=Object.create(null),i9=tQ.ie&&tQ.ie_version<15||tQ.ios&&tQ.webkit_version<604;function i3(e,t){let{state:i}=e,o,a=1,n=i.toText(t),r=n.lines==i.selection.ranges.length;if(null!=os&&i.selection.ranges.every(e=>e.empty)&&os==n.toString()){let e=-1;o=i.changeByRange(o=>{let s=i.doc.lineAt(o.from);if(s.from==e)return{range:o};e=s.from;let l=i.toText((r?n.line(a++).text:t)+i.lineBreak);return{changes:{from:s.from,insert:l},range:q.cursor(o.from+l.length)}})}else o=r?i.changeByRange(e=>{let t=n.line(a++);return{changes:{from:e.from,to:e.to,insert:t.text},range:q.cursor(e.from+t.length)}}):i.replaceSelection(n);e.dispatch(o,{userEvent:"input.paste",scrollIntoView:!0})}function i4(e,t,i,o){if(1==o)return q.cursor(t,i);{if(2==o)return function(e,t,i=1){let o=e.charCategorizer(t),a=e.doc.lineAt(t),n=t-a.from;if(0==a.length)return q.cursor(t);0==n?i=1:n==a.length&&(i=-1);let r=n,s=n;i<0?r=x(a.text,n,!1):s=x(a.text,n);let l=o(a.text.slice(r,s));for(;r>0;){let e=x(a.text,r,!1);if(o(a.text.slice(e,r))!=l)break;r=e}for(;s<a.length;){let e=x(a.text,s);if(o(a.text.slice(s,e))!=l)break;s=e}return q.range(r+a.from,s+a.from)}(e.state,t,i);let a=tK.find(e.docView,t),n=e.state.doc.lineAt(a?a.posAtEnd:t),r=a?a.posAtStart:n.from,s=a?a.posAtEnd:n.to;return s<e.state.doc.length&&s==n.to&&s++,q.range(r,s)}}i8.keydown=(e,t)=>{e.inputState.setSelectionOrigin("select"),27==t.keyCode&&(e.inputState.lastEscPress=Date.now())},i8.touchstart=(e,t)=>{e.inputState.lastTouchTime=Date.now(),e.inputState.setSelectionOrigin("select.pointer")},i8.touchmove=e=>{e.inputState.setSelectionOrigin("select.pointer")},i6.touchstart=i6.touchmove={passive:!0},i8.mousedown=(e,t)=>{if(e.observer.flush(),e.inputState.lastTouchTime>Date.now()-2e3)return;let i=null;for(let o of e.state.facet(t9))if(i=o(e,t))break;if(i||0!=t.button||(i=function(e,t){let i=oe(e,t),o=on(t),a=e.state.selection;return{update(e){e.docChanged&&(i.pos=e.changes.mapPos(i.pos),a=a.map(e.changes))},get(t,n,r){let s=oe(e,t),l,p=i4(e,s.pos,s.bias,o);if(i.pos!=s.pos&&!n){let t=i4(e,i.pos,i.bias,o),a=Math.min(t.from,p.from),n=Math.max(t.to,p.to);p=a<p.from?q.range(a,n):q.range(n,a)}return n?a.replaceRange(a.main.extend(p.from,p.to)):r&&1==o&&a.ranges.length>1&&(l=function(e,t){for(let i=0;i<e.ranges.length;i++){let{from:o,to:a}=e.ranges[i];if(o<=t&&a>=t)return q.create(e.ranges.slice(0,i).concat(e.ranges.slice(i+1)),e.mainIndex==i?0:e.mainIndex-(e.mainIndex>i?1:0))}return null}(a,s.pos))?l:r?a.addRange(p):q.create([p])}}}(e,t)),i){let o=e.root.activeElement!=e.contentDOM;e.inputState.startMouseSelection(new i2(e,t,i,o)),o&&e.observer.ignore(()=>tp(e.contentDOM)),e.inputState.mouseSelection&&e.inputState.mouseSelection.start(t)}};let i5=(e,t)=>e>=t.top&&e<=t.bottom,i7=(e,t,i)=>i5(t,i)&&e>=i.left&&e<=i.right;function oe(e,t){let i=e.posAtCoords({x:t.clientX,y:t.clientY},!1);return{pos:i,bias:function(e,t,i,o){let a=tK.find(e.docView,t);if(!a)return 1;let n=t-a.posAtStart;if(0==n)return 1;if(n==a.length)return -1;let r=a.coordsAt(n,-1);if(r&&i7(i,o,r))return -1;let s=a.coordsAt(n,1);return s&&i7(i,o,s)?1:r&&i5(o,r)?-1:1}(e,i,t.clientX,t.clientY)}}const ot=tQ.ie&&tQ.ie_version<=11;let oi=null,oo=0,oa=0;function on(e){if(!ot)return e.detail;let t=oi,i=oa;return oi=e,oa=Date.now(),oo=!t||i>Date.now()-400&&2>Math.abs(t.clientX-e.clientX)&&2>Math.abs(t.clientY-e.clientY)?(oo+1)%3:1}function or(e,t,i,o){if(!i)return;let a=e.posAtCoords({x:t.clientX,y:t.clientY},!1);t.preventDefault();let{mouseSelection:n}=e.inputState,r=o&&n&&n.dragging&&n.dragMove?{from:n.dragging.from,to:n.dragging.to}:null,s={from:a,insert:i},l=e.state.changes(r?[r,s]:s);e.focus(),e.dispatch({changes:l,selection:{anchor:l.mapPos(a,-1),head:l.mapPos(a,1)},userEvent:r?"move.drop":"input.drop"})}i8.dragstart=(e,t)=>{let{selection:{main:i}}=e.state,{mouseSelection:o}=e.inputState;o&&(o.dragging=i),t.dataTransfer&&(t.dataTransfer.setData("Text",e.state.sliceDoc(i.from,i.to)),t.dataTransfer.effectAllowed="copyMove")},i8.drop=(e,t)=>{if(!t.dataTransfer)return;if(e.state.readOnly)return t.preventDefault();let i=t.dataTransfer.files;if(i&&i.length){t.preventDefault();let o=Array(i.length),a=0,n=()=>{++a==i.length&&or(e,t,o.filter(e=>null!=e).join(e.state.lineBreak),!1)};for(let e=0;e<i.length;e++){let t=new FileReader;t.onerror=n,t.onload=()=>{/[\x00-\x08\x0e-\x1f]{2}/.test(t.result)||(o[e]=t.result),n()},t.readAsText(i[e])}}else or(e,t,t.dataTransfer.getData("Text"),!0)},i8.paste=(e,t)=>{if(e.state.readOnly)return t.preventDefault();e.observer.flush();let i=i9?null:t.clipboardData;i?(i3(e,i.getData("text/plain")||i.getData("text/uri-text")),t.preventDefault()):function(e){let t=e.dom.parentNode;if(!t)return;let i=t.appendChild(document.createElement("textarea"));i.style.cssText="position: fixed; left: -10000px; top: 10px",i.focus(),setTimeout(()=>{e.focus(),i.remove(),i3(e,i.value)},50)}(e)};let os=null;i8.copy=i8.cut=(e,t)=>{let{text:i,ranges:o,linewise:a}=function(e){let t=[],i=[],o=!1;for(let o of e.selection.ranges)o.empty||(t.push(e.sliceDoc(o.from,o.to)),i.push(o));if(!t.length){let a=-1;for(let{from:o}of e.selection.ranges){let n=e.doc.lineAt(o);n.number>a&&(t.push(n.text),i.push({from:n.from,to:Math.min(e.doc.length,n.to+1)})),a=n.number}o=!0}return{text:t.join(e.lineBreak),ranges:i,linewise:o}}(e.state);if(!i&&!a)return;os=a?i:null;let n=i9?null:t.clipboardData;n?(t.preventDefault(),n.clearData(),n.setData("text/plain",i)):function(e,t){let i=e.dom.parentNode;if(!i)return;let o=i.appendChild(document.createElement("textarea"));o.style.cssText="position: fixed; left: -10000px; top: 10px",o.value=t,o.focus(),o.selectionEnd=t.length,o.selectionStart=0,setTimeout(()=>{o.remove(),e.focus()},50)}(e,i),"cut"!=t.type||e.state.readOnly||e.dispatch({changes:o,scrollIntoView:!0,userEvent:"delete.cut"})};const ol=em.define();function op(e,t){let i=[];for(let o of e.facet(t7)){let a=o(e,t);a&&i.push(a)}return i?e.update({effects:i,annotations:ol.of(!0)}):null}function od(e){setTimeout(()=>{let t=e.hasFocus;if(t!=e.inputState.notifiedFocused){let i=op(e.state,t);i?e.dispatch(i):e.update([])}},10)}i8.focus=e=>{e.inputState.lastFocusTime=Date.now(),!e.scrollDOM.scrollTop&&(e.inputState.lastScrollTop||e.inputState.lastScrollLeft)&&(e.scrollDOM.scrollTop=e.inputState.lastScrollTop,e.scrollDOM.scrollLeft=e.inputState.lastScrollLeft),od(e)},i8.blur=e=>{e.observer.clearSelectionRange(),od(e)},i8.compositionstart=i8.compositionupdate=e=>{null==e.inputState.compositionFirstChange&&(e.inputState.compositionFirstChange=!0),e.inputState.composing<0&&(e.inputState.composing=0)},i8.compositionend=e=>{e.inputState.composing=-1,e.inputState.compositionEndedAt=Date.now(),e.inputState.compositionPendingKey=!0,e.inputState.compositionPendingChange=e.observer.pendingRecords().length>0,e.inputState.compositionFirstChange=null,tQ.chrome&&tQ.android?e.observer.flushSoon():e.inputState.compositionPendingChange?Promise.resolve().then(()=>e.observer.flush()):setTimeout(()=>{e.inputState.composing<0&&e.docView.compositionDeco.size&&e.update([])},50)},i8.contextmenu=e=>{e.inputState.lastContextMenu=Date.now()},i8.beforeinput=(e,t)=>{var i;let o;if(tQ.chrome&&tQ.android&&(o=i_.find(e=>e.inputType==t.inputType))&&(e.observer.delayAndroidKey(o.key,o.keyCode),"Backspace"==o.key||"Delete"==o.key)){let t=(null===(i=window.visualViewport)||void 0===i?void 0:i.height)||0;setTimeout(()=>{var i;((null===(i=window.visualViewport)||void 0===i?void 0:i.height)||0)>t+10&&e.hasFocus&&(e.contentDOM.blur(),e.focus())},100)}};const oc=["pre-wrap","normal","pre-line","break-spaces"];class of{constructor(e){this.lineWrapping=e,this.doc=s.empty,this.heightSamples={},this.lineHeight=14,this.charWidth=7,this.textHeight=14,this.lineLength=30,this.heightChanged=!1}heightForGap(e,t){let i=this.doc.lineAt(t).number-this.doc.lineAt(e).number+1;return this.lineWrapping&&(i+=Math.max(0,Math.ceil((t-e-i*this.lineLength*.5)/this.lineLength))),this.lineHeight*i}heightForLine(e){return this.lineWrapping?(1+Math.max(0,Math.ceil((e-this.lineLength)/(this.lineLength-5))))*this.lineHeight:this.lineHeight}setDoc(e){return this.doc=e,this}mustRefreshForWrapping(e){return oc.indexOf(e)>-1!=this.lineWrapping}mustRefreshForHeights(e){let t=!1;for(let i=0;i<e.length;i++){let o=e[i];o<0?i++:this.heightSamples[Math.floor(10*o)]||(t=!0,this.heightSamples[Math.floor(10*o)]=!0)}return t}refresh(e,t,i,o,a,n){let r=oc.indexOf(e)>-1,s=Math.round(t)!=Math.round(this.lineHeight)||this.lineWrapping!=r;if(this.lineWrapping=r,this.lineHeight=t,this.charWidth=i,this.textHeight=o,this.lineLength=a,s){this.heightSamples={};for(let e=0;e<n.length;e++){let t=n[e];t<0?e++:this.heightSamples[Math.floor(10*t)]=!0}}return s}}class oh{constructor(e,t){this.from=e,this.heights=t,this.index=0}get more(){return this.index<this.heights.length}}class oy{constructor(e,t,i,o,a){this.from=e,this.length=t,this.top=i,this.height=o,this.type=a}get to(){return this.from+this.length}get bottom(){return this.top+this.height}join(e){let t=(Array.isArray(this.type)?this.type:[this]).concat(Array.isArray(e.type)?e.type:[e]);return new oy(this.from,this.length+e.length,this.top,this.height+e.height,t)}}var ou=function(e){return e[e.ByPos=0]="ByPos",e[e.ByHeight=1]="ByHeight",e[e.ByPosNoHeight=2]="ByPosNoHeight",e}(ou||(ou={}));class om{constructor(e,t,i=2){this.length=e,this.height=t,this.flags=i}get outdated(){return(2&this.flags)>0}set outdated(e){this.flags=(e?2:0)|-3&this.flags}setHeight(e,t){this.height!=t&&(Math.abs(this.height-t)>.001&&(e.heightChanged=!0),this.height=t)}replace(e,t,i){return om.of(i)}decomposeLeft(e,t){t.push(this)}decomposeRight(e,t){t.push(this)}applyChanges(e,t,i,o){let a=this,n=i.doc;for(let r=o.length-1;r>=0;r--){let{fromA:s,toA:l,fromB:p,toB:d}=o[r],c=a.lineAt(s,ou.ByPosNoHeight,i.setDoc(t),0,0),f=c.to>=l?c:a.lineAt(l,ou.ByPosNoHeight,i,0,0);for(d+=f.to-l,l=f.to;r>0&&c.from<=o[r-1].toA;)s=o[r-1].fromA,p=o[r-1].fromB,r--,s<c.from&&(c=a.lineAt(s,ou.ByPosNoHeight,i,0,0));p+=c.from-s,s=c.from;let h=ov.build(i.setDoc(n),e,p,d);a=a.replace(s,l,h)}return a.updateHeight(i,0)}static empty(){return new og(0,0)}static of(e){if(1==e.length)return e[0];let t=0,i=e.length,o=0,a=0;for(;;)if(t==i){if(o>2*a){let a=e[t-1];a.break?e.splice(--t,1,a.left,null,a.right):e.splice(--t,1,a.left,a.right),i+=1+a.break,o-=a.size}else if(a>2*o){let t=e[i];t.break?e.splice(i,1,t.left,null,t.right):e.splice(i,1,t.left,t.right),i+=2+t.break,a-=t.size}else break}else if(o<a){let i=e[t++];i&&(o+=i.size)}else{let t=e[--i];t&&(a+=t.size)}let n=0;return null==e[t-1]?(n=1,t--):null==e[t]&&(n=1,i++),new ow(om.of(e.slice(0,t)),n,om.of(e.slice(i)))}}om.prototype.size=1;class ox extends om{constructor(e,t,i){super(e,t),this.type=i}blockAt(e,t,i,o){return new oy(o,this.length,i,this.height,this.type)}lineAt(e,t,i,o,a){return this.blockAt(0,i,o,a)}forEachLine(e,t,i,o,a,n){e<=a+this.length&&t>=a&&n(this.blockAt(0,i,o,a))}updateHeight(e,t=0,i=!1,o){return o&&o.from<=t&&o.more&&this.setHeight(e,o.heights[o.index++]),this.outdated=!1,this}toString(){return`block(${this.length})`}}class og extends ox{constructor(e,t){super(e,t,tV.Text),this.collapsed=0,this.widgetHeight=0}replace(e,t,i){let o=i[0];return 1==i.length&&(o instanceof og||o instanceof ob&&4&o.flags)&&10>Math.abs(this.length-o.length)?(o instanceof ob?o=new og(o.length,this.height):o.height=this.height,this.outdated||(o.outdated=!1),o):om.of(i)}updateHeight(e,t=0,i=!1,o){return o&&o.from<=t&&o.more?this.setHeight(e,o.heights[o.index++]):(i||this.outdated)&&this.setHeight(e,Math.max(this.widgetHeight,e.heightForLine(this.length-this.collapsed))),this.outdated=!1,this}toString(){return`line(${this.length}${this.collapsed?-this.collapsed:""}${this.widgetHeight?":"+this.widgetHeight:""})`}}class ob extends om{constructor(e){super(e,0)}heightMetrics(e,t){let i=e.doc.lineAt(t).number,o=e.doc.lineAt(t+this.length).number,a=o-i+1,n,r=0;if(e.lineWrapping){let t=Math.min(this.height,e.lineHeight*a);n=t/a,this.length>a+1&&(r=(this.height-t)/(this.length-a-1))}else n=this.height/a;return{firstLine:i,lastLine:o,perLine:n,perChar:r}}blockAt(e,t,i,o){let{firstLine:a,lastLine:n,perLine:r,perChar:s}=this.heightMetrics(t,o);if(t.lineWrapping){let a=o+Math.round(Math.max(0,Math.min(1,(e-i)/this.height))*this.length),n=t.doc.lineAt(a),l=r+n.length*s,p=Math.max(i,e-l/2);return new oy(n.from,n.length,p,l,tV.Text)}{let o=Math.max(0,Math.min(n-a,Math.floor((e-i)/r))),{from:s,length:l}=t.doc.line(a+o);return new oy(s,l,i+r*o,r,tV.Text)}}lineAt(e,t,i,o,a){if(t==ou.ByHeight)return this.blockAt(e,i,o,a);if(t==ou.ByPosNoHeight){let{from:t,to:o}=i.doc.lineAt(e);return new oy(t,o-t,0,0,tV.Text)}let{firstLine:n,perLine:r,perChar:s}=this.heightMetrics(i,a),l=i.doc.lineAt(e),p=r+l.length*s,d=l.number-n,c=o+r*d+s*(l.from-a-d);return new oy(l.from,l.length,Math.max(o,Math.min(c,o+this.height-p)),p,tV.Text)}forEachLine(e,t,i,o,a,n){e=Math.max(e,a),t=Math.min(t,a+this.length);let{firstLine:r,perLine:s,perChar:l}=this.heightMetrics(i,a);for(let p=e,d=o;p<=t;){let t=i.doc.lineAt(p);if(p==e){let i=t.number-r;d+=s*i+l*(e-a-i)}let o=s+l*t.length;n(new oy(t.from,t.length,d,o,tV.Text)),d+=o,p=t.to+1}}replace(e,t,i){let o=this.length-t;if(o>0){let e=i[i.length-1];e instanceof ob?i[i.length-1]=new ob(e.length+o):i.push(null,new ob(o-1))}if(e>0){let t=i[0];t instanceof ob?i[0]=new ob(e+t.length):i.unshift(new ob(e-1),null)}return om.of(i)}decomposeLeft(e,t){t.push(new ob(e-1),null)}decomposeRight(e,t){t.push(null,new ob(this.length-e-1))}updateHeight(e,t=0,i=!1,o){let a=t+this.length;if(o&&o.from<=t+this.length&&o.more){let i=[],n=Math.max(t,o.from),r=-1;for(o.from>t&&i.push(new ob(o.from-t-1).updateHeight(e,t));n<=a&&o.more;){let t=e.doc.lineAt(n).length;i.length&&i.push(null);let a=o.heights[o.index++];-1==r?r=a:Math.abs(a-r)>=.001&&(r=-2);let s=new og(t,a);s.outdated=!1,i.push(s),n+=t+1}n<=a&&i.push(null,new ob(a-n).updateHeight(e,n));let s=om.of(i);return(r<0||Math.abs(s.height-this.height)>=.001||Math.abs(r-this.heightMetrics(e,t).perLine)>=.001)&&(e.heightChanged=!0),s}return(i||this.outdated)&&(this.setHeight(e,e.heightForGap(t,t+this.length)),this.outdated=!1),this}toString(){return`gap(${this.length})`}}class ow extends om{constructor(e,t,i){super(e.length+t+i.length,e.height+i.height,t|(e.outdated||i.outdated?2:0)),this.left=e,this.right=i,this.size=e.size+i.size}get break(){return 1&this.flags}blockAt(e,t,i,o){let a=i+this.left.height;return e<a?this.left.blockAt(e,t,i,o):this.right.blockAt(e,t,a,o+this.left.length+this.break)}lineAt(e,t,i,o,a){let n=o+this.left.height,r=a+this.left.length+this.break,s=t==ou.ByHeight?e<n:e<r,l=s?this.left.lineAt(e,t,i,o,a):this.right.lineAt(e,t,i,n,r);if(this.break||(s?l.to<r:l.from>r))return l;let p=t==ou.ByPosNoHeight?ou.ByPosNoHeight:ou.ByPos;return s?l.join(this.right.lineAt(r,p,i,n,r)):this.left.lineAt(r,p,i,o,a).join(l)}forEachLine(e,t,i,o,a,n){let r=o+this.left.height,s=a+this.left.length+this.break;if(this.break)e<s&&this.left.forEachLine(e,t,i,o,a,n),t>=s&&this.right.forEachLine(e,t,i,r,s,n);else{let l=this.lineAt(s,ou.ByPos,i,o,a);e<l.from&&this.left.forEachLine(e,l.from-1,i,o,a,n),l.to>=e&&l.from<=t&&n(l),t>l.to&&this.right.forEachLine(l.to+1,t,i,r,s,n)}}replace(e,t,i){let o=this.left.length+this.break;if(t<o)return this.balanced(this.left.replace(e,t,i),this.right);if(e>this.left.length)return this.balanced(this.left,this.right.replace(e-o,t-o,i));let a=[];e>0&&this.decomposeLeft(e,a);let n=a.length;for(let e of i)a.push(e);if(e>0&&ok(a,n-1),t<this.length){let e=a.length;this.decomposeRight(t,a),ok(a,e)}return om.of(a)}decomposeLeft(e,t){let i=this.left.length;if(e<=i)return this.left.decomposeLeft(e,t);t.push(this.left),this.break&&e>=++i&&t.push(null),e>i&&this.right.decomposeLeft(e-i,t)}decomposeRight(e,t){let i=this.left.length,o=i+this.break;if(e>=o)return this.right.decomposeRight(e-o,t);e<i&&this.left.decomposeRight(e,t),this.break&&e<o&&t.push(null),t.push(this.right)}balanced(e,t){return e.size>2*t.size||t.size>2*e.size?om.of(this.break?[e,null,t]:[e,t]):(this.left=e,this.right=t,this.height=e.height+t.height,this.outdated=e.outdated||t.outdated,this.size=e.size+t.size,this.length=e.length+this.break+t.length,this)}updateHeight(e,t=0,i=!1,o){let{left:a,right:n}=this,r=t+a.length+this.break,s=null;return(o&&o.from<=t+a.length&&o.more?s=a=a.updateHeight(e,t,i,o):a.updateHeight(e,t,i),o&&o.from<=r+n.length&&o.more?s=n=n.updateHeight(e,r,i,o):n.updateHeight(e,r,i),s)?this.balanced(a,n):(this.height=this.left.height+this.right.height,this.outdated=!1,this)}toString(){return this.left+(this.break?" ":"-")+this.right}}function ok(e,t){let i,o;null==e[t]&&(i=e[t-1])instanceof ob&&(o=e[t+1])instanceof ob&&e.splice(t-1,3,new ob(i.length+1+o.length))}class ov{constructor(e,t){this.pos=e,this.oracle=t,this.nodes=[],this.lineStart=-1,this.lineEnd=-1,this.covering=null,this.writtenTo=e}get isCovered(){return this.covering&&this.nodes[this.nodes.length-1]==this.covering}span(e,t){if(this.lineStart>-1){let e=Math.min(t,this.lineEnd),i=this.nodes[this.nodes.length-1];i instanceof og?i.length+=e-this.pos:(e>this.pos||!this.isCovered)&&this.nodes.push(new og(e-this.pos,-1)),this.writtenTo=e,t>e&&(this.nodes.push(null),this.writtenTo++,this.lineStart=-1)}this.pos=t}point(e,t,i){if(e<t||i.heightRelevant){let o=i.widget?i.widget.estimatedHeight:0;o<0&&(o=this.oracle.lineHeight);let a=t-e;i.block?this.addBlock(new ox(a,o,i.type)):(a||o>=5)&&this.addLineDeco(o,a)}else t>e&&this.span(e,t);this.lineEnd>-1&&this.lineEnd<this.pos&&(this.lineEnd=this.oracle.doc.lineAt(this.pos).to)}enterLine(){if(this.lineStart>-1)return;let{from:e,to:t}=this.oracle.doc.lineAt(this.pos);this.lineStart=e,this.lineEnd=t,this.writtenTo<e&&((this.writtenTo<e-1||null==this.nodes[this.nodes.length-1])&&this.nodes.push(this.blankContent(this.writtenTo,e-1)),this.nodes.push(null)),this.pos>e&&this.nodes.push(new og(this.pos-e,-1)),this.writtenTo=this.pos}blankContent(e,t){let i=new ob(t-e);return this.oracle.doc.lineAt(e).to==t&&(i.flags|=4),i}ensureLine(){this.enterLine();let e=this.nodes.length?this.nodes[this.nodes.length-1]:null;if(e instanceof og)return e;let t=new og(0,-1);return this.nodes.push(t),t}addBlock(e){this.enterLine(),e.type!=tV.WidgetAfter||this.isCovered||this.ensureLine(),this.nodes.push(e),this.writtenTo=this.pos=this.pos+e.length,e.type!=tV.WidgetBefore&&(this.covering=e)}addLineDeco(e,t){let i=this.ensureLine();i.length+=t,i.collapsed+=t,i.widgetHeight=Math.max(i.widgetHeight,e),this.writtenTo=this.pos=this.pos+t}finish(e){let t=0==this.nodes.length?null:this.nodes[this.nodes.length-1];!(this.lineStart>-1)||t instanceof og||this.isCovered?(this.writtenTo<this.pos||null==t)&&this.nodes.push(this.blankContent(this.writtenTo,this.pos)):this.nodes.push(new og(0,-1));let i=e;for(let e of this.nodes)e instanceof og&&e.updateHeight(this.oracle,i),i+=e?e.length:1;return this.nodes}static build(e,t,i,o){let a=new ov(i,e);return eF.spans(t,i,o,a,0),a.finish(i)}}class oO{constructor(){this.changes=[]}compareRange(){}comparePoint(e,t,i,o){(e<t||i&&i.heightRelevant||o&&o.heightRelevant)&&t_(e,t,this.changes,5)}}function oS(e,t){let i=e.getBoundingClientRect(),o=e.ownerDocument,a=o.defaultView||window,n=Math.max(0,i.left),r=Math.min(a.innerWidth,i.right),s=Math.max(0,i.top),l=Math.min(a.innerHeight,i.bottom);for(let t=e.parentNode;t&&t!=o.body;)if(1==t.nodeType){let i=t,o=window.getComputedStyle(i);if((i.scrollHeight>i.clientHeight||i.scrollWidth>i.clientWidth)&&"visible"!=o.overflow){let o=i.getBoundingClientRect();n=Math.max(n,o.left),r=Math.min(r,o.right),s=Math.max(s,o.top),l=t==e.parentNode?o.bottom:Math.min(l,o.bottom)}t="absolute"==o.position||"fixed"==o.position?i.offsetParent:i.parentNode}else if(11==t.nodeType)t=t.host;else break;return{left:n-i.left,right:Math.max(n,r)-i.left,top:s-(i.top+t),bottom:Math.max(s,l)-(i.top+t)}}function oC(e,t){let i=e.getBoundingClientRect();return{left:0,right:i.right-i.left,top:t,bottom:i.bottom-(i.top+t)}}class oP{constructor(e,t,i){this.from=e,this.to=t,this.size=i}static same(e,t){if(e.length!=t.length)return!1;for(let i=0;i<e.length;i++){let o=e[i],a=t[i];if(o.from!=a.from||o.to!=a.to||o.size!=a.size)return!1}return!0}draw(e){return tZ.replace({widget:new oD(this.size,e)}).range(this.from,this.to)}}class oD extends tq{constructor(e,t){super(),this.size=e,this.vertical=t}eq(e){return e.size==this.size&&e.vertical==this.vertical}toDOM(){let e=document.createElement("div");return this.vertical?e.style.height=this.size+"px":(e.style.width=this.size+"px",e.style.height="2px",e.style.display="inline-block"),e}get estimatedHeight(){return this.vertical?this.size:-1}}class oT{constructor(e){this.state=e,this.pixelViewport={left:0,right:window.innerWidth,top:0,bottom:0},this.inView=!0,this.paddingTop=0,this.paddingBottom=0,this.contentDOMWidth=0,this.contentDOMHeight=0,this.editorHeight=0,this.editorWidth=0,this.scaler=oA,this.scrollTarget=null,this.printing=!1,this.mustMeasureContent=!0,this.defaultTextDirection=iw.LTR,this.visibleRanges=[],this.mustEnforceCursorAssoc=!1;let t=e.facet(ih).some(e=>"function"!=typeof e&&"cm-lineWrapping"==e.class);this.heightOracle=new of(t),this.stateDeco=e.facet(iy).filter(e=>"function"!=typeof e),this.heightMap=om.empty().applyChanges(this.stateDeco,s.empty,this.heightOracle.setDoc(e.doc),[new ig(0,0,0,e.doc.length)]),this.viewport=this.getViewport(0,null),this.updateViewportLines(),this.updateForViewport(),this.lineGaps=this.ensureLineGaps([]),this.lineGapDeco=tZ.set(this.lineGaps.map(e=>e.draw(!1))),this.computeVisibleRanges()}updateForViewport(){let e=[this.viewport],{main:t}=this.state.selection;for(let i=0;i<=1;i++){let o=i?t.head:t.anchor;if(!e.some(({from:e,to:t})=>o>=e&&o<=t)){let{from:t,to:i}=this.lineBlockAt(o);e.push(new oM(t,i))}}this.viewports=e.sort((e,t)=>e.from-t.from),this.scaler=this.heightMap.height<=7e6?oA:new oF(this.heightOracle,this.heightMap,this.viewports)}updateViewportLines(){this.viewportLines=[],this.heightMap.forEachLine(this.viewport.from,this.viewport.to,this.heightOracle.setDoc(this.state.doc),0,0,e=>{this.viewportLines.push(1==this.scaler.scale?e:oL(e,this.scaler))})}update(e,t=null){var i,o;let a;this.state=e.state;let n=this.stateDeco;this.stateDeco=this.state.facet(iy).filter(e=>"function"!=typeof e);let r=e.changedRanges,s=ig.extendWithRanges(r,(i=this.stateDeco,o=e?e.changes:B.empty(this.state.doc.length),a=new oO,eF.compare(n,i,o,a,0),a.changes)),l=this.heightMap.height;this.heightMap=this.heightMap.applyChanges(this.stateDeco,e.startState.doc,this.heightOracle.setDoc(this.state.doc),s),this.heightMap.height!=l&&(e.flags|=2);let p=s.length?this.mapViewport(this.viewport,e.changes):this.viewport;(t&&(t.range.head<p.from||t.range.head>p.to)||!this.viewportIsAppropriate(p))&&(p=this.getViewport(0,t));let d=!e.changes.empty||2&e.flags||p.from!=this.viewport.from||p.to!=this.viewport.to;this.viewport=p,this.updateForViewport(),d&&this.updateViewportLines(),(this.lineGaps.length||this.viewport.to-this.viewport.from>4e3)&&this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps,e.changes))),e.flags|=this.computeVisibleRanges(),t&&(this.scrollTarget=t),!this.mustEnforceCursorAssoc&&e.selectionSet&&e.view.lineWrapping&&e.state.selection.main.empty&&e.state.selection.main.assoc&&!e.state.facet(it)&&(this.mustEnforceCursorAssoc=!0)}measure(e){let t=e.contentDOM,i=window.getComputedStyle(t),o=this.heightOracle,a=i.whiteSpace;this.defaultTextDirection="rtl"==i.direction?iw.RTL:iw.LTR;let n=this.heightOracle.mustRefreshForWrapping(a),r=t.getBoundingClientRect(),l=n||this.mustMeasureContent||this.contentDOMHeight!=r.height;this.contentDOMHeight=r.height,this.mustMeasureContent=!1;let p=0,d=0,c=parseInt(i.paddingTop)||0,f=parseInt(i.paddingBottom)||0;(this.paddingTop!=c||this.paddingBottom!=f)&&(this.paddingTop=c,this.paddingBottom=f,p|=10),this.editorWidth!=e.scrollDOM.clientWidth&&(o.lineWrapping&&(l=!0),this.editorWidth=e.scrollDOM.clientWidth,p|=8);let h=(this.printing?oC:oS)(t,this.paddingTop),y=h.top-this.pixelViewport.top,u=h.bottom-this.pixelViewport.bottom;this.pixelViewport=h;let m=this.pixelViewport.bottom>this.pixelViewport.top&&this.pixelViewport.right>this.pixelViewport.left;if(m!=this.inView&&(this.inView=m,m&&(l=!0)),!this.inView&&!this.scrollTarget)return 0;let x=r.width;if((this.contentDOMWidth!=x||this.editorHeight!=e.scrollDOM.clientHeight)&&(this.contentDOMWidth=r.width,this.editorHeight=e.scrollDOM.clientHeight,p|=8),l){let t=e.docView.measureVisibleLineHeights(this.viewport);if(o.mustRefreshForHeights(t)&&(n=!0),n||o.lineWrapping&&Math.abs(x-this.contentDOMWidth)>o.charWidth){let{lineHeight:i,charWidth:r,textHeight:s}=e.docView.measureTextSize();(n=i>0&&o.refresh(a,i,r,s,x/r,t))&&(e.docView.minWidth=0,p|=8)}for(let i of(y>0&&u>0?d=Math.max(y,u):y<0&&u<0&&(d=Math.min(y,u)),o.heightChanged=!1,this.viewports)){let a=i.from==this.viewport.from?t:e.docView.measureVisibleLineHeights(i);this.heightMap=(n?om.empty().applyChanges(this.stateDeco,s.empty,this.heightOracle,[new ig(0,0,0,e.state.doc.length)]):this.heightMap).updateHeight(o,0,n,new oh(i.from,a))}o.heightChanged&&(p|=2)}let g=!this.viewportIsAppropriate(this.viewport,d)||this.scrollTarget&&(this.scrollTarget.range.head<this.viewport.from||this.scrollTarget.range.head>this.viewport.to);return g&&(this.viewport=this.getViewport(d,this.scrollTarget)),this.updateForViewport(),(2&p||g)&&this.updateViewportLines(),(this.lineGaps.length||this.viewport.to-this.viewport.from>4e3)&&this.updateLineGaps(this.ensureLineGaps(n?[]:this.lineGaps,e)),p|=this.computeVisibleRanges(),this.mustEnforceCursorAssoc&&(this.mustEnforceCursorAssoc=!1,e.docView.enforceCursorAssoc()),p}get visibleTop(){return this.scaler.fromDOM(this.pixelViewport.top)}get visibleBottom(){return this.scaler.fromDOM(this.pixelViewport.bottom)}getViewport(e,t){let i=.5-Math.max(-.5,Math.min(.5,e/1e3/2)),o=this.heightMap,a=this.heightOracle,{visibleTop:n,visibleBottom:r}=this,s=new oM(o.lineAt(n-1e3*i,ou.ByHeight,a,0,0).from,o.lineAt(r+(1-i)*1e3,ou.ByHeight,a,0,0).to);if(t){let{head:e}=t.range;if(e<s.from||e>s.to){let i=Math.min(this.editorHeight,this.pixelViewport.bottom-this.pixelViewport.top),n=o.lineAt(e,ou.ByPos,a,0,0),r;r="center"==t.y?(n.top+n.bottom)/2-i/2:"start"==t.y||"nearest"==t.y&&e<s.from?n.top:n.bottom-i,s=new oM(o.lineAt(r-500,ou.ByHeight,a,0,0).from,o.lineAt(r+i+500,ou.ByHeight,a,0,0).to)}}return s}mapViewport(e,t){let i=t.mapPos(e.from,-1),o=t.mapPos(e.to,1);return new oM(this.heightMap.lineAt(i,ou.ByPos,this.heightOracle,0,0).from,this.heightMap.lineAt(o,ou.ByPos,this.heightOracle,0,0).to)}viewportIsAppropriate({from:e,to:t},i=0){if(!this.inView)return!0;let{top:o}=this.heightMap.lineAt(e,ou.ByPos,this.heightOracle,0,0),{bottom:a}=this.heightMap.lineAt(t,ou.ByPos,this.heightOracle,0,0),{visibleTop:n,visibleBottom:r}=this;return(0==e||o<=n-Math.max(10,Math.min(-i,250)))&&(t==this.state.doc.length||a>=r+Math.max(10,Math.min(i,250)))&&o>n-2e3&&a<r+2e3}mapLineGaps(e,t){if(!e.length||t.empty)return e;let i=[];for(let o of e)t.touchesRange(o.from,o.to)||i.push(new oP(t.mapPos(o.from),t.mapPos(o.to),o.size));return i}ensureLineGaps(e,t){let i=this.heightOracle.lineWrapping,o=i?1e4:2e3,a=o>>1,n=o<<1;if(this.defaultTextDirection!=iw.LTR&&!i)return[];let r=[],s=(o,n,l,p)=>{if(n-o<a)return;let d=this.state.selection.main,c=[d.from];for(let e of(d.empty||c.push(d.to),c))if(e>o&&e<n){s(o,e-10,l,p),s(e+10,n,l,p);return}let f=function(e,t){for(let i of e)if(t(i))return i}(e,e=>e.from>=l.from&&e.to<=l.to&&Math.abs(e.from-o)<a&&Math.abs(e.to-n)<a&&!c.some(t=>e.from<t&&e.to>t));if(!f){if(n<l.to&&t&&i&&t.visibleRanges.some(e=>e.from<=n&&e.to>=n)){let e=t.moveToLineBoundary(q.cursor(n),!1,!0).head;e>o&&(n=e)}f=new oP(o,n,this.gapSize(l,o,n,p))}r.push(f)};for(let e of this.viewportLines){let t,a;if(e.length<n)continue;let r=function(e,t,i){let o=[],a=e,n=0;return eF.spans(i,e,t,{span(){},point(e,t){e>a&&(o.push({from:a,to:e}),n+=e-a),a=t}},20),a<t&&(o.push({from:a,to:t}),n+=t-a),{total:n,ranges:o}}(e.from,e.to,this.stateDeco);if(r.total<n)continue;let l=this.scrollTarget?this.scrollTarget.range.head:null;if(i){let i,n,s=o/this.heightOracle.lineLength*this.heightOracle.lineHeight;if(null!=l){let t=oQ(r,l),o=((this.visibleBottom-this.visibleTop)/2+s)/e.height;i=t-o,n=t+o}else i=(this.visibleTop-e.top-s)/e.height,n=(this.visibleBottom-e.top+s)/e.height;t=oR(r,i),a=oR(r,n)}else{let e,i,n=r.total*this.heightOracle.charWidth,s=o*this.heightOracle.charWidth;if(null!=l){let t=oQ(r,l),o=((this.pixelViewport.right-this.pixelViewport.left)/2+s)/n;e=t-o,i=t+o}else e=(this.pixelViewport.left-s)/n,i=(this.pixelViewport.right+s)/n;t=oR(r,e),a=oR(r,i)}t>e.from&&s(e.from,t,e,r),a<e.to&&s(a,e.to,e,r)}return r}gapSize(e,t,i,o){let a=oQ(o,i)-oQ(o,t);return this.heightOracle.lineWrapping?e.height*a:o.total*this.heightOracle.charWidth*a}updateLineGaps(e){oP.same(e,this.lineGaps)||(this.lineGaps=e,this.lineGapDeco=tZ.set(e.map(e=>e.draw(this.heightOracle.lineWrapping))))}computeVisibleRanges(){let e=this.stateDeco;this.lineGaps.length&&(e=e.concat(this.lineGapDeco));let t=[];eF.spans(e,this.viewport.from,this.viewport.to,{span(e,i){t.push({from:e,to:i})},point(){}},20);let i=t.length!=this.visibleRanges.length||this.visibleRanges.some((e,i)=>e.from!=t[i].from||e.to!=t[i].to);return this.visibleRanges=t,i?4:0}lineBlockAt(e){return e>=this.viewport.from&&e<=this.viewport.to&&this.viewportLines.find(t=>t.from<=e&&t.to>=e)||oL(this.heightMap.lineAt(e,ou.ByPos,this.heightOracle,0,0),this.scaler)}lineBlockAtHeight(e){return oL(this.heightMap.lineAt(this.scaler.fromDOM(e),ou.ByHeight,this.heightOracle,0,0),this.scaler)}elementAtHeight(e){return oL(this.heightMap.blockAt(this.scaler.fromDOM(e),this.heightOracle,0,0),this.scaler)}get docHeight(){return this.scaler.toDOM(this.heightMap.height)}get contentHeight(){return this.docHeight+this.paddingTop+this.paddingBottom}}class oM{constructor(e,t){this.from=e,this.to=t}}function oR({total:e,ranges:t},i){if(i<=0)return t[0].from;if(i>=1)return t[t.length-1].to;let o=Math.floor(e*i);for(let e=0;;e++){let{from:i,to:a}=t[e],n=a-i;if(o<=n)return i+o;o-=n}}function oQ(e,t){let i=0;for(let{from:o,to:a}of e.ranges){if(t<=a){i+=t-o;break}i+=a-o}return i/e.total}const oA={toDOM:e=>e,fromDOM:e=>e,scale:1};class oF{constructor(e,t,i){let o=0,a=0,n=0;for(let r of(this.viewports=i.map(({from:i,to:a})=>{let n=t.lineAt(i,ou.ByPos,e,0,0).top,r=t.lineAt(a,ou.ByPos,e,0,0).bottom;return o+=r-n,{from:i,to:a,top:n,bottom:r,domTop:0,domBottom:0}}),this.scale=(7e6-o)/(t.height-o),this.viewports))r.domTop=n+(r.top-a)*this.scale,n=r.domBottom=r.domTop+(r.bottom-r.top),a=r.bottom}toDOM(e){for(let t=0,i=0,o=0;;t++){let a=t<this.viewports.length?this.viewports[t]:null;if(!a||e<a.top)return o+(e-i)*this.scale;if(e<=a.bottom)return a.domTop+(e-a.top);i=a.bottom,o=a.domBottom}}fromDOM(e){for(let t=0,i=0,o=0;;t++){let a=t<this.viewports.length?this.viewports[t]:null;if(!a||e<a.domTop)return i+(e-o)/this.scale;if(e<=a.domBottom)return a.top+(e-a.domTop);i=a.bottom,o=a.domBottom}}}function oL(e,t){if(1==t.scale)return e;let i=t.toDOM(e.top),o=t.toDOM(e.bottom);return new oy(e.from,e.length,i,o-i,Array.isArray(e.type)?e.type.map(e=>oL(e,t)):e.type)}const oE=X.define({combine:e=>e.join(" ")}),oB=X.define({combine:e=>e.indexOf(!0)>-1}),oI=eY.newName(),oG=eY.newName(),o$=eY.newName(),oN={"&light":"."+oG,"&dark":"."+o$};function oz(e,t,i){return new eY(t,{finish:t=>/&/.test(t)?t.replace(/&\w*/,t=>{if("&"==t)return e;if(!i||!i[t])throw RangeError(`Unsupported selector: ${t}`);return i[t]}):e+" "+t})}const oW=oz("."+oI,{"&":{position:"relative !important",boxSizing:"border-box","&.cm-focused":{outline:"1px dotted #212121"},display:"flex !important",flexDirection:"column"},".cm-scroller":{display:"flex !important",alignItems:"flex-start !important",fontFamily:"monospace",lineHeight:1.4,height:"100%",overflowX:"auto",position:"relative",zIndex:0},".cm-content":{margin:0,flexGrow:2,flexShrink:0,display:"block",whiteSpace:"pre",wordWrap:"normal",boxSizing:"border-box",padding:"4px 0",outline:"none","&[contenteditable=true]":{WebkitUserModify:"read-write-plaintext-only"}},".cm-lineWrapping":{whiteSpace_fallback:"pre-wrap",whiteSpace:"break-spaces",wordBreak:"break-word",overflowWrap:"anywhere",flexShrink:1},"&light .cm-content":{caretColor:"black"},"&dark .cm-content":{caretColor:"white"},".cm-line":{display:"block",padding:"0 2px 0 6px"},".cm-layer":{position:"absolute",left:0,top:0,contain:"size style","& > *":{position:"absolute"}},"&light .cm-selectionBackground":{background:"#d9d9d9"},"&dark .cm-selectionBackground":{background:"#222"},"&light.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground":{background:"#d7d4f0"},"&dark.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground":{background:"#233"},".cm-cursorLayer":{pointerEvents:"none"},"&.cm-focused > .cm-scroller > .cm-cursorLayer":{animation:"steps(1) cm-blink 1.2s infinite"},"@keyframes cm-blink":{"0%":{},"50%":{opacity:0},"100%":{}},"@keyframes cm-blink2":{"0%":{},"50%":{opacity:0},"100%":{}},".cm-cursor, .cm-dropCursor":{borderLeft:"1.2px solid black",marginLeft:"-0.6px",pointerEvents:"none"},".cm-cursor":{display:"none"},"&dark .cm-cursor":{borderLeftColor:"#444"},".cm-dropCursor":{position:"absolute"},"&.cm-focused > .cm-scroller > .cm-cursorLayer .cm-cursor":{display:"block"},"&light .cm-activeLine":{backgroundColor:"#cceeff44"},"&dark .cm-activeLine":{backgroundColor:"#99eeff33"},"&light .cm-specialChar":{color:"red"},"&dark .cm-specialChar":{color:"#f78"},".cm-gutters":{flexShrink:0,display:"flex",height:"100%",boxSizing:"border-box",left:0,zIndex:200},"&light .cm-gutters":{backgroundColor:"#f5f5f5",color:"#6c6c6c",borderRight:"1px solid #ddd"},"&dark .cm-gutters":{backgroundColor:"#333338",color:"#ccc"},".cm-gutter":{display:"flex !important",flexDirection:"column",flexShrink:0,boxSizing:"border-box",minHeight:"100%",overflow:"hidden"},".cm-gutterElement":{boxSizing:"border-box"},".cm-lineNumbers .cm-gutterElement":{padding:"0 3px 0 5px",minWidth:"20px",textAlign:"right",whiteSpace:"nowrap"},"&light .cm-activeLineGutter":{backgroundColor:"#e2f2ff"},"&dark .cm-activeLineGutter":{backgroundColor:"#222227"},".cm-panels":{boxSizing:"border-box",position:"sticky",left:0,right:0},"&light .cm-panels":{backgroundColor:"#f5f5f5",color:"black"},"&light .cm-panels-top":{borderBottom:"1px solid #ddd"},"&light .cm-panels-bottom":{borderTop:"1px solid #ddd"},"&dark .cm-panels":{backgroundColor:"#333338",color:"white"},".cm-tab":{display:"inline-block",overflow:"hidden",verticalAlign:"bottom"},".cm-widgetBuffer":{verticalAlign:"text-top",height:"1em",width:0,display:"inline"},".cm-placeholder":{color:"#888",display:"inline-block",verticalAlign:"top"},".cm-highlightSpace:before":{content:"attr(data-display)",position:"absolute",pointerEvents:"none",color:"#888"},".cm-highlightTab":{backgroundImage:'url(\'data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="200" height="20"><path stroke="%23888" stroke-width="1" fill="none" d="M1 10H196L190 5M190 15L196 10M197 4L197 16"/></svg>\')',backgroundSize:"auto 100%",backgroundPosition:"right 90%",backgroundRepeat:"no-repeat"},".cm-trailingSpace":{backgroundColor:"#ff332255"},".cm-button":{verticalAlign:"middle",color:"inherit",fontSize:"70%",padding:".2em 1em",borderRadius:"1px"},"&light .cm-button":{backgroundImage:"linear-gradient(#eff1f5, #d9d9df)",border:"1px solid #888","&:active":{backgroundImage:"linear-gradient(#b4b4b4, #d0d3d6)"}},"&dark .cm-button":{backgroundImage:"linear-gradient(#393939, #111)",border:"1px solid #888","&:active":{backgroundImage:"linear-gradient(#111, #333)"}},".cm-textfield":{verticalAlign:"middle",color:"inherit",fontSize:"70%",border:"1px solid silver",padding:".2em .5em"},"&light .cm-textfield":{backgroundColor:"white"},"&dark .cm-textfield":{border:"1px solid #555",backgroundColor:"inherit"}},oN);class oj{constructor(e,t,i,o){this.typeOver=o,this.bounds=null,this.text="";let{impreciseHead:a,impreciseAnchor:n}=e.docView;if(e.state.readOnly&&t>-1)this.newSel=null;else if(t>-1&&(this.bounds=e.docView.domBoundsAround(t,i,0))){let t=a||n?[]:function(e){let t=[];if(e.root.activeElement!=e.contentDOM)return t;let{anchorNode:i,anchorOffset:o,focusNode:a,focusOffset:n}=e.observer.selectionRange;return i&&(t.push(new iE(i,o)),(a!=i||n!=o)&&t.push(new iE(a,n))),t}(e),i=new iF(t,e.state);i.readRange(this.bounds.startDOM,this.bounds.endDOM),this.text=i.text,this.newSel=function(e,t){if(0==e.length)return null;let i=e[0].pos,o=2==e.length?e[1].pos:i;return i>-1&&o>-1?q.single(i+t,o+t):null}(t,this.bounds.from)}else{let t=e.observer.selectionRange,i=a&&a.node==t.focusNode&&a.offset==t.focusOffset||!e5(e.contentDOM,t.focusNode)?e.state.selection.main.head:e.docView.posFromDOM(t.focusNode,t.focusOffset),o=n&&n.node==t.anchorNode&&n.offset==t.anchorOffset||!e5(e.contentDOM,t.anchorNode)?e.state.selection.main.anchor:e.docView.posFromDOM(t.anchorNode,t.anchorOffset);this.newSel=q.single(o,i)}}}function oq(e,t){let i;let{newSel:o}=t,a=e.state.selection.main;if(t.bounds){let{from:o,to:n}=t.bounds,r=a.from,l=null;(8===e.inputState.lastKeyCode&&e.inputState.lastKeyTime>Date.now()-100||tQ.android&&t.text.length<n-o)&&(r=a.to,l="end");let p=function(e,t,i,o){let a=Math.min(e.length,t.length),n=0;for(;n<a&&e.charCodeAt(n)==t.charCodeAt(n);)n++;if(n==a&&e.length==t.length)return null;let r=e.length,s=t.length;for(;r>0&&s>0&&e.charCodeAt(r-1)==t.charCodeAt(s-1);)r--,s--;if("end"==o){let e=Math.max(0,n-Math.min(r,s));i-=r+e-n}if(r<n&&e.length<t.length){let e=i<=n&&i>=r?n-i:0;n-=e,s=n+(s-r),r=n}else if(s<n){let e=i<=n&&i>=s?n-i:0;n-=e,r=n+(r-s),s=n}return{from:n,toA:r,toB:s}}(e.state.doc.sliceString(o,n,"￿"),t.text,r-o,l);p&&(tQ.chrome&&13==e.inputState.lastKeyCode&&p.toB==p.from+2&&"￿￿"==t.text.slice(p.from,p.toB)&&p.toB--,i={from:o+p.from,to:o+p.toA,insert:s.of(t.text.slice(p.from,p.toB).split("￿"))})}else o&&(!e.hasFocus&&e.state.facet(ir)||o.main.eq(a))&&(o=null);if(!i&&!o)return!1;if(!i&&t.typeOver&&!a.empty&&o&&o.main.empty?i={from:a.from,to:a.to,insert:e.state.doc.slice(a.from,a.to)}:i&&i.from>=a.from&&i.to<=a.to&&(i.from!=a.from||i.to!=a.to)&&a.to-a.from-(i.to-i.from)<=4?i={from:a.from,to:a.to,insert:e.state.doc.slice(a.from,i.from).append(i.insert).append(e.state.doc.slice(i.to,a.to))}:(tQ.mac||tQ.android)&&i&&i.from==i.to&&i.from==a.head-1&&/^\. ?$/.test(i.insert.toString())&&"off"==e.contentDOM.getAttribute("autocorrect")?(o&&2==i.insert.length&&(o=q.single(o.main.anchor-1,o.main.head-1)),i={from:a.from,to:a.to,insert:s.of([" "])}):tQ.chrome&&i&&i.from==i.to&&i.from==a.head&&"\n "==i.insert.toString()&&e.lineWrapping&&(o&&(o=q.single(o.main.anchor-1,o.main.head-1)),i={from:a.from,to:a.to,insert:s.of([" "])}),i){let t,n=e.state;if(tQ.ios&&e.inputState.flushIOSKey(e)||tQ.android&&(i.from==a.from&&i.to==a.to&&1==i.insert.length&&2==i.insert.lines&&tc(e.contentDOM,"Enter",13)||i.from==a.from-1&&i.to==a.to&&0==i.insert.length&&tc(e.contentDOM,"Backspace",8)||i.from==a.from&&i.to==a.to+1&&0==i.insert.length&&tc(e.contentDOM,"Delete",46)))return!0;let r=i.insert.toString();if(e.state.facet(t5).some(t=>t(e,i.from,i.to,r)))return!0;if(e.inputState.composing>=0&&e.inputState.composing++,i.from>=a.from&&i.to<=a.to&&i.to-i.from>=(a.to-a.from)/3&&(!o||o.main.empty&&o.main.from==i.from+i.insert.length)&&e.inputState.composing<0){let o=a.from<i.from?n.sliceDoc(a.from,i.from):"",r=a.to>i.to?n.sliceDoc(i.to,a.to):"";t=n.replaceSelection(e.state.toText(o+i.insert.sliceString(0,void 0,e.state.lineBreak)+r))}else{let r=n.changes(i),s=o&&o.main.to<=r.newLength?o.main:void 0;if(n.selection.ranges.length>1&&e.inputState.composing>=0&&i.to<=a.to&&i.to>=a.to-10){let o=e.state.sliceDoc(i.from,i.to),l=iG(e)||e.state.doc.lineAt(a.head),p=a.to-i.to,d=a.to-a.from;t=n.changeByRange(t=>{if(t.from==a.from&&t.to==a.to)return{changes:r,range:s||t.map(r)};let c=t.to-p,f=c-o.length;if(t.to-t.from!=d||e.state.sliceDoc(f,c)!=o||l&&t.to>=l.from&&t.from<=l.to)return{range:t};let h=n.changes({from:f,to:c,insert:i.insert}),y=t.to-a.to;return{changes:h,range:s?q.range(Math.max(0,s.anchor+y),Math.max(0,s.head+y)):t.map(h)}})}else t={changes:r,selection:s&&n.selection.replaceRange(s)}}let s="input.type";return(e.composing||e.inputState.compositionPendingChange&&e.inputState.compositionEndedAt>Date.now()-50)&&(e.inputState.compositionPendingChange=!1,s+=".compose",e.inputState.compositionFirstChange&&(s+=".start",e.inputState.compositionFirstChange=!1)),e.dispatch(t,{scrollIntoView:!0,userEvent:s}),!0}if(!o||o.main.eq(a))return!1;{let t=!1,i="select";return e.inputState.lastSelectionTime>Date.now()-50&&("select"==e.inputState.lastSelectionOrigin&&(t=!0),i=e.inputState.lastSelectionOrigin),e.dispatch({selection:o,scrollIntoView:t,userEvent:i}),!0}}const oV={childList:!0,characterData:!0,subtree:!0,attributes:!0,characterDataOldValue:!0},oZ=tQ.ie&&tQ.ie_version<=11;class oX{constructor(e){this.view=e,this.active=!1,this.selectionRange=new ts,this.selectionChanged=!1,this.delayedFlush=-1,this.resizeTimeout=-1,this.queue=[],this.delayedAndroidKey=null,this.flushingAndroidKey=-1,this.lastChange=0,this.scrollTargets=[],this.intersection=null,this.resizeScroll=null,this.resizeContent=null,this.intersecting=!1,this.gapIntersection=null,this.gaps=[],this.parentCheck=-1,this.dom=e.contentDOM,this.observer=new MutationObserver(t=>{for(let e of t)this.queue.push(e);(tQ.ie&&tQ.ie_version<=11||tQ.ios&&e.composing)&&t.some(e=>"childList"==e.type&&e.removedNodes.length||"characterData"==e.type&&e.oldValue.length>e.target.nodeValue.length)?this.flushSoon():this.flush()}),oZ&&(this.onCharData=e=>{this.queue.push({target:e.target,type:"characterData",oldValue:e.prevValue}),this.flushSoon()}),this.onSelectionChange=this.onSelectionChange.bind(this),this.onResize=this.onResize.bind(this),this.onPrint=this.onPrint.bind(this),this.onScroll=this.onScroll.bind(this),"function"==typeof ResizeObserver&&(this.resizeScroll=new ResizeObserver(()=>{var e;(null===(e=this.view.docView)||void 0===e?void 0:e.lastUpdate)<Date.now()-75&&this.onResize()}),this.resizeScroll.observe(e.scrollDOM),this.resizeContent=new ResizeObserver(()=>this.view.requestMeasure()),this.resizeContent.observe(e.contentDOM)),this.addWindowListeners(this.win=e.win),this.start(),"function"==typeof IntersectionObserver&&(this.intersection=new IntersectionObserver(e=>{this.parentCheck<0&&(this.parentCheck=setTimeout(this.listenForScroll.bind(this),1e3)),e.length>0&&e[e.length-1].intersectionRatio>0!=this.intersecting&&(this.intersecting=!this.intersecting,this.intersecting!=this.view.inView&&this.onScrollChanged(document.createEvent("Event")))},{}),this.intersection.observe(this.dom),this.gapIntersection=new IntersectionObserver(e=>{e.length>0&&e[e.length-1].intersectionRatio>0&&this.onScrollChanged(document.createEvent("Event"))},{})),this.listenForScroll(),this.readSelectionRange()}onScrollChanged(e){this.view.inputState.runScrollHandlers(this.view,e),this.intersecting&&this.view.measure()}onScroll(e){this.intersecting&&this.flush(!1),this.onScrollChanged(e)}onResize(){this.resizeTimeout<0&&(this.resizeTimeout=setTimeout(()=>{this.resizeTimeout=-1,this.view.requestMeasure()},50))}onPrint(){this.view.viewState.printing=!0,this.view.measure(),setTimeout(()=>{this.view.viewState.printing=!1,this.view.requestMeasure()},500)}updateGaps(e){if(this.gapIntersection&&(e.length!=this.gaps.length||this.gaps.some((t,i)=>t!=e[i]))){for(let t of(this.gapIntersection.disconnect(),e))this.gapIntersection.observe(t);this.gaps=e}}onSelectionChange(e){let t=this.selectionChanged;if(!this.readSelectionRange()||this.delayedAndroidKey)return;let{view:i}=this,o=this.selectionRange;if(i.state.facet(ir)?i.root.activeElement!=this.dom:!e7(i.dom,o))return;let a=o.anchorNode&&i.docView.nearest(o.anchorNode);if(a&&a.ignoreEvent(e)){t||(this.selectionChanged=!1);return}(tQ.ie&&tQ.ie_version<=11||tQ.android&&tQ.chrome)&&!i.state.selection.main.empty&&o.focusNode&&tt(o.focusNode,o.focusOffset,o.anchorNode,o.anchorOffset)?this.flushSoon():this.flush(!1)}readSelectionRange(){let{view:e}=this,t=tQ.safari&&11==e.root.nodeType&&function(e){let t=e.activeElement;for(;t&&t.shadowRoot;)t=t.shadowRoot.activeElement;return t}(this.dom.ownerDocument)==this.dom&&function(e){let t=null;function i(e){e.preventDefault(),e.stopImmediatePropagation(),t=e.getTargetRanges()[0]}if(e.contentDOM.addEventListener("beforeinput",i,!0),e.dom.ownerDocument.execCommand("indent"),e.contentDOM.removeEventListener("beforeinput",i,!0),!t)return null;let o=t.startContainer,a=t.startOffset,n=t.endContainer,r=t.endOffset,s=e.docView.domAtPos(e.state.selection.main.anchor);return tt(s.node,s.offset,n,r)&&([o,a,n,r]=[n,r,o,a]),{anchorNode:o,anchorOffset:a,focusNode:n,focusOffset:r}}(this.view)||e4(e.root);if(!t||this.selectionRange.eq(t))return!1;let i=e7(this.dom,t);return i&&!this.selectionChanged&&e.inputState.lastFocusTime>Date.now()-200&&e.inputState.lastTouchTime<Date.now()-300&&function(e,t){let i=t.focusNode,o=t.focusOffset;if(!i||t.anchorNode!=i||t.anchorOffset!=o)return!1;for(;;)if(o){if(1!=i.nodeType)return!1;let e=i.childNodes[o-1];"false"==e.contentEditable?o--:o=ta(i=e)}else{if(i==e)return!0;o=ti(i),i=i.parentNode}}(this.dom,t)?(this.view.inputState.lastFocusTime=0,e.docView.updateSelection(),!1):(this.selectionRange.setRange(t),i&&(this.selectionChanged=!0),!0)}setSelectionRange(e,t){this.selectionRange.set(e.node,e.offset,t.node,t.offset),this.selectionChanged=!1}clearSelectionRange(){this.selectionRange.set(null,0,null,0)}listenForScroll(){this.parentCheck=-1;let e=0,t=null;for(let i=this.dom;i;)if(1==i.nodeType)!t&&e<this.scrollTargets.length&&this.scrollTargets[e]==i?e++:t||(t=this.scrollTargets.slice(0,e)),t&&t.push(i),i=i.assignedSlot||i.parentNode;else if(11==i.nodeType)i=i.host;else break;if(e<this.scrollTargets.length&&!t&&(t=this.scrollTargets.slice(0,e)),t){for(let e of this.scrollTargets)e.removeEventListener("scroll",this.onScroll);for(let e of this.scrollTargets=t)e.addEventListener("scroll",this.onScroll)}}ignore(e){if(!this.active)return e();try{return this.stop(),e()}finally{this.start(),this.clear()}}start(){this.active||(this.observer.observe(this.dom,oV),oZ&&this.dom.addEventListener("DOMCharacterDataModified",this.onCharData),this.active=!0)}stop(){this.active&&(this.active=!1,this.observer.disconnect(),oZ&&this.dom.removeEventListener("DOMCharacterDataModified",this.onCharData))}clear(){this.processRecords(),this.queue.length=0,this.selectionChanged=!1}delayAndroidKey(e,t){var i;this.delayedAndroidKey||(this.flushingAndroidKey=this.view.win.requestAnimationFrame(()=>{let e=this.delayedAndroidKey;e&&(this.clearDelayedAndroidKey(),!this.flush()&&e.force&&tc(this.dom,e.key,e.keyCode))})),this.delayedAndroidKey&&"Enter"!=e||(this.delayedAndroidKey={key:e,keyCode:t,force:this.lastChange<Date.now()-50||!!(null===(i=this.delayedAndroidKey)||void 0===i?void 0:i.force)})}clearDelayedAndroidKey(){this.win.cancelAnimationFrame(this.flushingAndroidKey),this.delayedAndroidKey=null,this.flushingAndroidKey=-1}flushSoon(){this.delayedFlush<0&&(this.delayedFlush=this.view.win.requestAnimationFrame(()=>{this.delayedFlush=-1,this.flush()}))}forceFlush(){this.delayedFlush>=0&&(this.view.win.cancelAnimationFrame(this.delayedFlush),this.delayedFlush=-1),this.flush()}pendingRecords(){for(let e of this.observer.takeRecords())this.queue.push(e);return this.queue}processRecords(){let e=this.pendingRecords();e.length&&(this.queue=[]);let t=-1,i=-1,o=!1;for(let a of e){let e=this.readMutation(a);e&&(e.typeOver&&(o=!0),-1==t?{from:t,to:i}=e:(t=Math.min(e.from,t),i=Math.max(e.to,i)))}return{from:t,to:i,typeOver:o}}readChange(){let{from:e,to:t,typeOver:i}=this.processRecords(),o=this.selectionChanged&&e7(this.dom,this.selectionRange);return e<0&&!o?null:(e>-1&&(this.lastChange=Date.now()),this.view.inputState.lastFocusTime=0,this.selectionChanged=!1,new oj(this.view,e,t,i))}flush(e=!0){if(this.delayedFlush>=0||this.delayedAndroidKey)return!1;e&&this.readSelectionRange();let t=this.readChange();if(!t)return!1;let i=this.view.state,o=oq(this.view,t);return this.view.state==i&&this.view.update([]),o}readMutation(e){let t=this.view.docView.nearest(e.target);if(!t||t.ignoreMutation(e))return null;if(t.markDirty("attributes"==e.type),"attributes"==e.type&&(t.dirty|=4),"childList"==e.type){let i=oU(t,e.previousSibling||e.target.previousSibling,-1),o=oU(t,e.nextSibling||e.target.nextSibling,1);return{from:i?t.posAfter(i):t.posAtStart,to:o?t.posBefore(o):t.posAtEnd,typeOver:!1}}return"characterData"==e.type?{from:t.posAtStart,to:t.posAtEnd,typeOver:e.target.nodeValue==e.oldValue}:null}setWindow(e){e!=this.win&&(this.removeWindowListeners(this.win),this.win=e,this.addWindowListeners(this.win))}addWindowListeners(e){e.addEventListener("resize",this.onResize),e.addEventListener("beforeprint",this.onPrint),e.addEventListener("scroll",this.onScroll),e.document.addEventListener("selectionchange",this.onSelectionChange)}removeWindowListeners(e){e.removeEventListener("scroll",this.onScroll),e.removeEventListener("resize",this.onResize),e.removeEventListener("beforeprint",this.onPrint),e.document.removeEventListener("selectionchange",this.onSelectionChange)}destroy(){var e,t,i,o;for(let a of(this.stop(),null===(e=this.intersection)||void 0===e||e.disconnect(),null===(t=this.gapIntersection)||void 0===t||t.disconnect(),null===(i=this.resizeScroll)||void 0===i||i.disconnect(),null===(o=this.resizeContent)||void 0===o||o.disconnect(),this.scrollTargets))a.removeEventListener("scroll",this.onScroll);this.removeWindowListeners(this.win),clearTimeout(this.parentCheck),clearTimeout(this.resizeTimeout),this.win.cancelAnimationFrame(this.delayedFlush),this.win.cancelAnimationFrame(this.flushingAndroidKey)}}function oU(e,t,i){for(;t;){let o=tu.get(t);if(o&&o.parent==e)return o;let a=t.parentNode;t=a!=e.dom?a:i>0?t.nextSibling:t.previousSibling}return null}class oH{constructor(e={}){for(let t of(this.plugins=[],this.pluginMap=new Map,this.editorAttrs={},this.contentAttrs={},this.bidiCache=[],this.destroyed=!1,this.updateState=2,this.measureScheduled=-1,this.measureRequests=[],this.contentDOM=document.createElement("div"),this.scrollDOM=document.createElement("div"),this.scrollDOM.tabIndex=-1,this.scrollDOM.className="cm-scroller",this.scrollDOM.appendChild(this.contentDOM),this.announceDOM=document.createElement("div"),this.announceDOM.style.cssText="position: fixed; top: -10000px",this.announceDOM.setAttribute("aria-live","polite"),this.dom=document.createElement("div"),this.dom.appendChild(this.announceDOM),this.dom.appendChild(this.scrollDOM),this._dispatch=e.dispatch||(e=>this.update([e])),this.dispatch=this.dispatch.bind(this),this._root=e.root||function(e){for(;e;){if(e&&(9==e.nodeType||11==e.nodeType&&e.host))return e;e=e.assignedSlot||e.parentNode}return null}(e.parent)||document,this.viewState=new oT(e.state||eD.create(e)),this.plugins=this.state.facet(il).map(e=>new id(e)),this.plugins))t.update(this);this.observer=new oX(this),this.inputState=new iY(this),this.inputState.ensureHandlers(this,this.plugins),this.docView=new iB(this),this.mountStyles(),this.updateAttrs(),this.updateState=0,this.requestMeasure(),e.parent&&e.parent.appendChild(this.dom)}get state(){return this.viewState.state}get viewport(){return this.viewState.viewport}get visibleRanges(){return this.viewState.visibleRanges}get inView(){return this.viewState.inView}get composing(){return this.inputState.composing>0}get compositionStarted(){return this.inputState.composing>=0}get root(){return this._root}get win(){return this.dom.ownerDocument.defaultView||window}dispatch(...e){this._dispatch(1==e.length&&e[0]instanceof ew?e[0]:this.state.update(...e))}update(e){if(0!=this.updateState)throw Error("Calls to EditorView.update are not allowed while an update is in progress");let t=!1,i=!1,o,a=this.state;for(let t of e){if(t.startState!=a)throw RangeError("Trying to update state with a transaction that doesn't start from the previous state.");a=t.state}if(this.destroyed){this.viewState.state=a;return}let n=this.hasFocus,r=0,s=null;e.some(e=>e.annotation(ol))?(this.inputState.notifiedFocused=n,r=1):n==this.inputState.notifiedFocused||(this.inputState.notifiedFocused=n,(s=op(a,n))||(r=1));let l=this.observer.delayedAndroidKey,p=null;if(l?(this.observer.clearDelayedAndroidKey(),((p=this.observer.readChange())&&!this.state.doc.eq(a.doc)||!this.state.selection.eq(a.selection))&&(p=null)):this.observer.clear(),a.facet(eD.phrases)!=this.state.facet(eD.phrases))return this.setState(a);o=ib.create(this,a,e),o.flags|=r;let d=this.viewState.scrollTarget;try{for(let t of(this.updateState=2,e)){if(d&&(d=d.map(t.changes)),t.scrollIntoView){let{main:e}=t.state.selection;d=new ii(e.empty?e:q.cursor(e.head,e.head>e.anchor?-1:1))}for(let e of t.effects)e.is(io)&&(d=e.value)}this.viewState.update(o,d),this.bidiCache=oK.update(this.bidiCache,o.changes),o.empty||(this.updatePlugins(o),this.inputState.update(o)),t=this.docView.update(o),this.state.facet(ix)!=this.styleModules&&this.mountStyles(),i=this.updateAttrs(),this.showAnnouncements(e),this.docView.updateSelection(t,e.some(e=>e.isUserEvent("select.pointer")))}finally{this.updateState=0}if(o.startState.facet(oE)!=o.state.facet(oE)&&(this.viewState.mustMeasureContent=!0),(t||i||d||this.viewState.mustEnforceCursorAssoc||this.viewState.mustMeasureContent)&&this.requestMeasure(),!o.empty)for(let e of this.state.facet(t4))e(o);(s||p)&&Promise.resolve().then(()=>{s&&this.state==s.startState&&this.dispatch(s),p&&!oq(this,p)&&l.force&&tc(this.contentDOM,l.key,l.keyCode)})}setState(e){if(0!=this.updateState)throw Error("Calls to EditorView.setState are not allowed while an update is in progress");if(this.destroyed){this.viewState.state=e;return}this.updateState=2;let t=this.hasFocus;try{for(let e of this.plugins)e.destroy(this);for(let t of(this.viewState=new oT(e),this.plugins=e.facet(il).map(e=>new id(e)),this.pluginMap.clear(),this.plugins))t.update(this);this.docView=new iB(this),this.inputState.ensureHandlers(this,this.plugins),this.mountStyles(),this.updateAttrs(),this.bidiCache=[]}finally{this.updateState=0}t&&this.focus(),this.requestMeasure()}updatePlugins(e){let t=e.startState.facet(il),i=e.state.facet(il);if(t!=i){let o=[];for(let a of i){let i=t.indexOf(a);if(i<0)o.push(new id(a));else{let t=this.plugins[i];t.mustUpdate=e,o.push(t)}}for(let t of this.plugins)t.mustUpdate!=e&&t.destroy(this);this.plugins=o,this.pluginMap.clear(),this.inputState.ensureHandlers(this,this.plugins)}else for(let t of this.plugins)t.mustUpdate=e;for(let e=0;e<this.plugins.length;e++)this.plugins[e].update(this)}measure(e=!0){if(this.destroyed)return;this.measureScheduled>-1&&this.win.cancelAnimationFrame(this.measureScheduled),this.measureScheduled=0,e&&this.observer.forceFlush();let t=null,{scrollHeight:i,scrollTop:o,clientHeight:a}=this.scrollDOM,n=o>i-a-4?i:o;try{for(let e=0;;e++){this.updateState=1;let i=this.viewport,o=this.viewState.lineBlockAtHeight(n),a=this.viewState.measure(this);if(!a&&!this.measureRequests.length&&null==this.viewState.scrollTarget)break;if(e>5){console.warn(this.measureRequests.length?"Measure loop restarted more than 5 times":"Viewport failed to stabilize");break}let r=[];4&a||([this.measureRequests,r]=[r,this.measureRequests]);let s=r.map(e=>{try{return e.read(this)}catch(e){return ia(this.state,e),o_}}),l=ib.create(this,this.state,[]),p=!1,d=!1;l.flags|=a,t?t.flags|=a:t=l,this.updateState=2,l.empty||(this.updatePlugins(l),this.inputState.update(l),this.updateAttrs(),p=this.docView.update(l));for(let e=0;e<r.length;e++)if(s[e]!=o_)try{let t=r[e];t.write&&t.write(s[e],this)}catch(e){ia(this.state,e)}if(this.viewState.editorHeight){if(this.viewState.scrollTarget)this.docView.scrollIntoView(this.viewState.scrollTarget),this.viewState.scrollTarget=null,d=!0;else{let e=this.viewState.lineBlockAt(o.from).top-o.top;(e>1||e<-1)&&(this.scrollDOM.scrollTop+=e,d=!0)}}if(p&&this.docView.updateSelection(!0),this.viewport.from==i.from&&this.viewport.to==i.to&&!d&&0==this.measureRequests.length)break}}finally{this.updateState=0,this.measureScheduled=-1}if(t&&!t.empty)for(let e of this.state.facet(t4))e(t)}get themeClasses(){return oI+" "+(this.state.facet(oB)?o$:oG)+" "+this.state.facet(oE)}updateAttrs(){let e=oJ(this,ic,{class:"cm-editor"+(this.hasFocus?" cm-focused ":" ")+this.themeClasses}),t={spellcheck:"false",autocorrect:"off",autocapitalize:"off",translate:"no",contenteditable:this.state.facet(ir)?"true":"false",class:"cm-content",style:`${tQ.tabSize}: ${this.state.tabSize}`,role:"textbox","aria-multiline":"true"};this.state.readOnly&&(t["aria-readonly"]="true"),oJ(this,ih,t);let i=this.observer.ignore(()=>{let i=tj(this.contentDOM,this.contentAttrs,t),o=tj(this.dom,this.editorAttrs,e);return i||o});return this.editorAttrs=e,this.contentAttrs=t,i}showAnnouncements(e){let t=!0;for(let i of e)for(let e of i.effects)e.is(oH.announce)&&(t&&(this.announceDOM.textContent=""),t=!1,this.announceDOM.appendChild(document.createElement("div")).textContent=e.value)}mountStyles(){this.styleModules=this.state.facet(ix),eY.mount(this.root,this.styleModules.concat(oW).reverse())}readMeasured(){if(2==this.updateState)throw Error("Reading the editor layout isn't allowed during an update");0==this.updateState&&this.measureScheduled>-1&&this.measure(!1)}requestMeasure(e){if(this.measureScheduled<0&&(this.measureScheduled=this.win.requestAnimationFrame(()=>this.measure())),e&&!(this.measureRequests.indexOf(e)>-1)){if(null!=e.key){for(let t=0;t<this.measureRequests.length;t++)if(this.measureRequests[t].key===e.key){this.measureRequests[t]=e;return}}this.measureRequests.push(e)}}plugin(e){let t=this.pluginMap.get(e);return(void 0===t||t&&t.spec!=e)&&this.pluginMap.set(e,t=this.plugins.find(t=>t.spec==e)||null),t&&t.update(this).value}get documentTop(){return this.contentDOM.getBoundingClientRect().top+this.viewState.paddingTop}get documentPadding(){return{top:this.viewState.paddingTop,bottom:this.viewState.paddingBottom}}elementAtHeight(e){return this.readMeasured(),this.viewState.elementAtHeight(e)}lineBlockAtHeight(e){return this.readMeasured(),this.viewState.lineBlockAtHeight(e)}get viewportLineBlocks(){return this.viewState.viewportLines}lineBlockAt(e){return this.viewState.lineBlockAt(e)}get contentHeight(){return this.viewState.contentHeight}moveByChar(e,t,i){return iH(this,e,iU(this,e,t,i))}moveByGroup(e,t){return iH(this,e,iU(this,e,t,t=>{var i;let o,a;return i=e.head,a=(o=this.state.charCategorizer(i))(t),e=>{let t=o(e);return a==eC.Space&&(a=t),a==t}}))}moveToLineBoundary(e,t,i=!0){return function(e,t,i,o){let a=e.state.doc.lineAt(t.head),n=o&&e.lineWrapping?e.coordsAtPos(t.assoc<0&&t.head>a.from?t.head-1:t.head):null;if(n){let t=e.dom.getBoundingClientRect(),o=e.textDirectionAt(a.from),r=e.posAtCoords({x:i==(o==iw.LTR)?t.right-1:t.left+1,y:(n.top+n.bottom)/2});if(null!=r)return q.cursor(r,i?-1:1)}let r=tK.find(e.docView,t.head),s=r?i?r.posAtEnd:r.posAtStart:i?a.to:a.from;return q.cursor(s,i?-1:1)}(this,e,t,i)}moveVertically(e,t,i){return iH(this,e,function(e,t,i,o){let a=t.head,n=i?1:-1;if(a==(i?e.state.doc.length:0))return q.cursor(a,t.assoc);let r=t.goalColumn,s,l=e.contentDOM.getBoundingClientRect(),p=e.coordsAtPos(a),d=e.documentTop;if(p)null==r&&(r=p.left-l.left),s=n<0?p.top:p.bottom;else{let t=e.viewState.lineBlockAt(a);null==r&&(r=Math.min(l.right-l.left,e.defaultCharacterWidth*(a-t.from))),s=(n<0?t.top:t.bottom)+d}let c=l.left+r,f=null!=o?o:e.defaultLineHeight>>1;for(let i=0;;i+=10){let o=s+(f+i)*n,p=iZ(e,{x:c,y:o},!1,n);if(o<l.top||o>l.bottom||(n<0?p<a:p>a))return q.cursor(p,t.assoc,void 0,r)}}(this,e,t,i))}domAtPos(e){return this.docView.domAtPos(e)}posAtDOM(e,t=0){return this.docView.posFromDOM(e,t)}posAtCoords(e,t=!0){return this.readMeasured(),iZ(this,e,t)}coordsAtPos(e,t=1){this.readMeasured();let i=this.docView.coordsAt(e,t);if(!i||i.left==i.right)return i;let o=this.state.doc.lineAt(e),a=this.bidiSpans(o);return tr(i,a[iM.find(a,e-o.from,-1,t)].dir==iw.LTR==t>0)}get defaultCharacterWidth(){return this.viewState.heightOracle.charWidth}get defaultLineHeight(){return this.viewState.heightOracle.lineHeight}get textDirection(){return this.viewState.defaultTextDirection}textDirectionAt(e){return!this.state.facet(ie)||e<this.viewport.from||e>this.viewport.to?this.textDirection:(this.readMeasured(),this.docView.textDirectionAt(e))}get lineWrapping(){return this.viewState.heightOracle.lineWrapping}bidiSpans(e){if(e.length>oY)return iQ(e.length);let t=this.textDirectionAt(e.from);for(let i of this.bidiCache)if(i.from==e.from&&i.dir==t)return i.order;let i=function(e,t){let i=e.length,o=t==ik?1:2,a=t==ik?2:1;if(!e||1==o&&!iT.test(e))return iQ(i);for(let t=0,a=o,r=o;t<i;t++){var n;let i=(n=e.charCodeAt(t))<=247?iS[n]:1424<=n&&n<=1524?2:1536<=n&&n<=1785?iC[n-1536]:1774<=n&&n<=2220?4:8192<=n&&n<=8203?256:64336<=n&&n<=65023?4:8204==n?256:1;512==i?i=a:8==i&&4==r&&(i=16),iR[t]=4==i?2:i,7&i&&(r=i),a=i}for(let e=0,t=o,a=o;e<i;e++){let o=iR[e];if(128==o)e<i-1&&t==iR[e+1]&&24&t?o=iR[e]=t:iR[e]=256;else if(64==o){let o=e+1;for(;o<i&&64==iR[o];)o++;let n=e&&8==t||o<i&&8==iR[o]?1==a?1:8:256;for(let t=e;t<o;t++)iR[t]=n;e=o-1}else 8==o&&1==a&&(iR[e]=1);t=o,7&o&&(a=o)}for(let t=0,n=0,r=0,s,l,p;t<i;t++)if(l=iP[s=e.charCodeAt(t)]){if(l<0){for(let e=n-3;e>=0;e-=3)if(iD[e+1]==-l){let i=iD[e+2],r=2&i?o:4&i?1&i?a:o:0;r&&(iR[t]=iR[iD[e]]=r),n=e;break}}else if(189==iD.length)break;else iD[n++]=t,iD[n++]=s,iD[n++]=r}else if(2==(p=iR[t])||1==p){let e=p==o;r=e?0:1;for(let t=n-3;t>=0;t-=3){let i=iD[t+2];if(2&i)break;if(e)iD[t+2]|=2;else{if(4&i)break;iD[t+2]|=4}}}for(let e=0;e<i;e++)if(256==iR[e]){let t=e+1;for(;t<i&&256==iR[t];)t++;let a=(e?iR[e-1]:o)==1,n=a==((t<i?iR[t]:o)==1)?a?1:2:o;for(let i=e;i<t;i++)iR[i]=n;e=t-1}let r=[];if(1==o)for(let e=0;e<i;){let t=e,o=1!=iR[e++];for(;e<i&&o==(1!=iR[e]);)e++;if(o)for(let i=e;i>t;){let e=i,o=2!=iR[--i];for(;i>t&&o==(2!=iR[i-1]);)i--;r.push(new iM(i,e,o?2:1))}else r.push(new iM(t,e,0))}else for(let e=0;e<i;){let t=e,o=2==iR[e++];for(;e<i&&o==(2==iR[e]);)e++;r.push(new iM(t,e,o?1:2))}return r}(e.text,t);return this.bidiCache.push(new oK(e.from,e.to,t,i)),i}get hasFocus(){var e;return(this.dom.ownerDocument.hasFocus()||tQ.safari&&(null===(e=this.inputState)||void 0===e?void 0:e.lastContextMenu)>Date.now()-3e4)&&this.root.activeElement==this.contentDOM}focus(){this.observer.ignore(()=>{tp(this.contentDOM),this.docView.updateSelection()})}setRoot(e){this._root!=e&&(this._root=e,this.observer.setWindow((9==e.nodeType?e:e.ownerDocument).defaultView||window),this.mountStyles())}destroy(){for(let e of this.plugins)e.destroy(this);this.plugins=[],this.inputState.destroy(),this.dom.remove(),this.observer.destroy(),this.measureScheduled>-1&&this.win.cancelAnimationFrame(this.measureScheduled),this.destroyed=!0}static scrollIntoView(e,t={}){return io.of(new ii("number"==typeof e?q.cursor(e):e,t.y,t.x,t.yMargin,t.xMargin))}static domEventHandlers(e){return ip.define(()=>({}),{eventHandlers:e})}static theme(e,t){let i=eY.newName(),o=[oE.of(i),ix.of(oz(`.${i}`,e))];return t&&t.dark&&o.push(oB.of(!0)),o}static baseTheme(e){return ei.lowest(ix.of(oz("."+oI,e,oN)))}static findFromDOM(e){var t;let i=e.querySelector(".cm-content"),o=i&&tu.get(i)||tu.get(e);return(null===(t=null==o?void 0:o.rootView)||void 0===t?void 0:t.view)||null}}oH.styleModule=ix,oH.inputHandler=t5,oH.focusChangeEffect=t7,oH.perLineTextDirection=ie,oH.exceptionSink=t3,oH.updateListener=t4,oH.editable=ir,oH.mouseSelectionStyle=t9,oH.dragMovesSelection=t6,oH.clickAddsSelectionRange=t8,oH.decorations=iy,oH.atomicRanges=iu,oH.scrollMargins=im,oH.darkTheme=oB,oH.contentAttributes=ih,oH.editorAttributes=ic,oH.lineWrapping=oH.contentAttributes.of({class:"cm-lineWrapping"}),oH.announce=eb.define();const oY=4096,o_={};class oK{constructor(e,t,i,o){this.from=e,this.to=t,this.dir=i,this.order=o}static update(e,t){if(t.empty)return e;let i=[],o=e.length?e[e.length-1].dir:iw.LTR;for(let a=Math.max(0,e.length-10);a<e.length;a++){let n=e[a];n.dir!=o||t.touchesRange(n.from,n.to)||i.push(new oK(t.mapPos(n.from,1),t.mapPos(n.to,-1),n.dir,n.order))}return i}}function oJ(e,t,i){for(let o=e.state.facet(t),a=o.length-1;a>=0;a--){let t=o[a],n="function"==typeof t?t(e):t;n&&tz(n,i)}return i}const o0=tQ.mac?"mac":tQ.windows?"win":tQ.linux?"linux":"key";function o2(e,t,i){return t.altKey&&(e="Alt-"+e),t.ctrlKey&&(e="Ctrl-"+e),t.metaKey&&(e="Meta-"+e),!1!==i&&t.shiftKey&&(e="Shift-"+e),e}const o1=ei.default(oH.domEventHandlers({keydown:(e,t)=>o4(o9(t.state),e,t,"editor")})),o8=X.define({enables:o1}),o6=new WeakMap;function o9(e){let t=e.facet(o8),i=o6.get(t);return i||o6.set(t,i=function(e,t=o0){let i=Object.create(null),o=Object.create(null),a=(e,t)=>{let i=o[e];if(null==i)o[e]=t;else if(i!=t)throw Error("Key binding "+e+" is used both as a regular binding and as a multi-stroke prefix")},n=(e,o,n,r)=>{var s,l;let p=i[e]||(i[e]=Object.create(null)),d=o.split(/ (?!$)/).map(e=>(function(e,t){let i,o,a,n;let r=e.split(/-(?!$)/),s=r[r.length-1];"Space"==s&&(s=" ");for(let e=0;e<r.length-1;++e){let s=r[e];if(/^(cmd|meta|m)$/i.test(s))n=!0;else if(/^a(lt)?$/i.test(s))i=!0;else if(/^(c|ctrl|control)$/i.test(s))o=!0;else if(/^s(hift)?$/i.test(s))a=!0;else if(/^mod$/i.test(s))"mac"==t?n=!0:o=!0;else throw Error("Unrecognized modifier name: "+s)}return i&&(s="Alt-"+s),o&&(s="Ctrl-"+s),n&&(s="Meta-"+s),a&&(s="Shift-"+s),s})(e,t));for(let t=1;t<d.length;t++){let i=d.slice(0,t).join(" ");a(i,!0),p[i]||(p[i]={preventDefault:!0,run:[t=>{let o=o3={view:t,prefix:i,scope:e};return setTimeout(()=>{o3==o&&(o3=null)},4e3),!0}]})}let c=d.join(" ");a(c,!1);let f=p[c]||(p[c]={preventDefault:!1,run:(null===(l=null===(s=p._any)||void 0===s?void 0:s.run)||void 0===l?void 0:l.slice())||[]});n&&f.run.push(n),r&&(f.preventDefault=!0)};for(let o of e){let e=o.scope?o.scope.split(" "):["editor"];if(o.any)for(let t of e){let e=i[t]||(i[t]=Object.create(null));for(let t in e._any||(e._any={preventDefault:!1,run:[]}),e)e[t].run.push(o.any)}let a=o[t]||o.key;if(a)for(let t of e)n(t,a,o.run,o.preventDefault),o.shift&&n(t,"Shift-"+a,o.shift,o.preventDefault)}return i}(t.reduce((e,t)=>e.concat(t),[]))),i}let o3=null;function o4(e,t,i,o){var a;let n=("Esc"==(a=!(e6&&(t.ctrlKey||t.altKey||t.metaKey)||e8&&t.shiftKey&&t.key&&1==t.key.length||"Unidentified"==t.key)&&t.key||(t.shiftKey?e0:eJ)[t.keyCode]||t.key||"Unidentified")&&(a="Escape"),"Del"==a&&(a="Delete"),"Left"==a&&(a="ArrowLeft"),"Up"==a&&(a="ArrowUp"),"Right"==a&&(a="ArrowRight"),"Down"==a&&(a="ArrowDown"),a),r=S(v(n,0))==n.length&&" "!=n,s="",l=!1;o3&&o3.view==i&&o3.scope==o&&(s=o3.prefix+" ",(l=0>iJ.indexOf(t.keyCode))&&(o3=null));let p=new Set,d=e=>{if(e){for(let o of e.run)if(!p.has(o)&&(p.add(o),o(i,t)))return!0;e.preventDefault&&(l=!0)}return!1},c=e[o],f,h;if(c){if(d(c[s+o2(n,t,!r)]))return!0;if(r&&(t.altKey||t.metaKey||t.ctrlKey)&&!(tQ.windows&&t.ctrlKey&&t.altKey)&&(f=eJ[t.keyCode])&&f!=n){if(d(c[s+o2(f,t,!0)])||t.shiftKey&&(h=e0[t.keyCode])!=n&&h!=f&&d(c[s+o2(h,t,!1)]))return!0}else if(r&&t.shiftKey&&d(c[s+o2(n,t,!0)]))return!0;if(d(c._any))return!0}return l}class o5{constructor(e,t,i,o,a){this.className=e,this.left=t,this.top=i,this.width=o,this.height=a}draw(){let e=document.createElement("div");return e.className=this.className,this.adjust(e),e}update(e,t){return t.className==this.className&&(this.adjust(e),!0)}adjust(e){e.style.left=this.left+"px",e.style.top=this.top+"px",null!=this.width&&(e.style.width=this.width+"px"),e.style.height=this.height+"px"}eq(e){return this.left==e.left&&this.top==e.top&&this.width==e.width&&this.height==e.height&&this.className==e.className}static forRange(e,t,i){if(!i.empty)return function(e,t,i){if(i.to<=e.viewport.from||i.from>=e.viewport.to)return[];let o=Math.max(i.from,e.viewport.from),a=Math.min(i.to,e.viewport.to),n=e.textDirection==iw.LTR,r=e.contentDOM,s=r.getBoundingClientRect(),l=o7(e),p=r.querySelector(".cm-line"),d=p&&window.getComputedStyle(p),c=s.left+(d?parseInt(d.paddingLeft)+Math.min(0,parseInt(d.textIndent)):0),f=s.right-(d?parseInt(d.paddingRight):0),h=at(e,o),y=at(e,a),u=h.type==tV.Text?h:null,m=y.type==tV.Text?y:null;if(e.lineWrapping&&(u&&(u=ae(e,o,u)),m&&(m=ae(e,a,m))),u&&m&&u.from==m.from)return g(b(i.from,i.to,u));{let t=u?b(i.from,null,u):w(h,!1),o=m?b(null,i.to,m):w(y,!0),a=[];return(u||h).to<(m||y).from-1?a.push(x(c,t.bottom,f,o.top)):t.bottom<o.top&&e.elementAtHeight((t.bottom+o.top)/2).type==tV.Text&&(t.bottom=o.top=(t.bottom+o.top)/2),g(t).concat(a).concat(g(o))}function x(e,i,o,a){return new o5(t,e-l.left,i-l.top-.01,o-e,a-i+.01)}function g({top:e,bottom:t,horizontal:i}){let o=[];for(let a=0;a<i.length;a+=2)o.push(x(i[a],e,i[a+1],t));return o}function b(t,i,o){let a=1e9,r=-1e9,s=[];function l(t,i,l,p,d){let h=e.coordsAtPos(t,t==o.to?-2:2),y=e.coordsAtPos(l,l==o.from?2:-2);a=Math.min(h.top,y.top,a),r=Math.max(h.bottom,y.bottom,r),d==iw.LTR?s.push(n&&i?c:h.left,n&&p?f:y.right):s.push(!n&&p?c:y.left,!n&&i?f:h.right)}let p=null!=t?t:o.from,d=null!=i?i:o.to;for(let o of e.visibleRanges)if(o.to>p&&o.from<d)for(let a=Math.max(o.from,p),n=Math.min(o.to,d);;){let o=e.state.doc.lineAt(a);for(let r of e.bidiSpans(o)){let e=r.from+o.from,s=r.to+o.from;if(e>=n)break;s>a&&l(Math.max(e,a),null==t&&e<=p,Math.min(s,n),null==i&&s>=d,r.dir)}if((a=o.to+1)>=n)break}return 0==s.length&&l(p,null==t,d,null==i,e.textDirection),{top:a,bottom:r,horizontal:s}}function w(e,t){let i=s.top+(t?e.top:e.bottom);return{top:i,bottom:i,horizontal:[]}}}(e,t,i);{let o=e.coordsAtPos(i.head,i.assoc||1);if(!o)return[];let a=o7(e);return[new o5(t,o.left-a.left,o.top-a.top,null,o.bottom-o.top)]}}}function o7(e){let t=e.scrollDOM.getBoundingClientRect();return{left:(e.textDirection==iw.LTR?t.left:t.right-e.scrollDOM.clientWidth)-e.scrollDOM.scrollLeft,top:t.top-e.scrollDOM.scrollTop}}function ae(e,t,i){let o=q.cursor(t);return{from:Math.max(i.from,e.moveToLineBoundary(o,!1,!0).from),to:Math.min(i.to,e.moveToLineBoundary(o,!0,!0).from),type:tV.Text}}function at(e,t){let i=e.lineBlockAt(t);if(Array.isArray(i.type)){for(let e of i.type)if(e.to>t||e.to==t&&(e.to==i.to||e.type==tV.Text))return e}return i}class ai{constructor(e,t){this.view=e,this.layer=t,this.drawn=[],this.measureReq={read:this.measure.bind(this),write:this.draw.bind(this)},this.dom=e.scrollDOM.appendChild(document.createElement("div")),this.dom.classList.add("cm-layer"),t.above&&this.dom.classList.add("cm-layer-above"),t.class&&this.dom.classList.add(t.class),this.dom.setAttribute("aria-hidden","true"),this.setOrder(e.state),e.requestMeasure(this.measureReq),t.mount&&t.mount(this.dom,e)}update(e){e.startState.facet(ao)!=e.state.facet(ao)&&this.setOrder(e.state),(this.layer.update(e,this.dom)||e.geometryChanged)&&e.view.requestMeasure(this.measureReq)}setOrder(e){let t=0,i=e.facet(ao);for(;t<i.length&&i[t]!=this.layer;)t++;this.dom.style.zIndex=String((this.layer.above?150:-1)-t)}measure(){return this.layer.markers(this.view)}draw(e){if(e.length!=this.drawn.length||e.some((e,t)=>{var i;return i=this.drawn[t],!(e.constructor==i.constructor&&e.eq(i))})){let t=this.dom.firstChild,i=0;for(let o of e)o.update&&t&&o.constructor&&this.drawn[i].constructor&&o.update(t,this.drawn[i])?(t=t.nextSibling,i++):this.dom.insertBefore(o.draw(),t);for(;t;){let e=t.nextSibling;t.remove(),t=e}this.drawn=e}}destroy(){this.layer.destroy&&this.layer.destroy(this.dom,this.view),this.dom.remove()}}const ao=X.define();function aa(e){return[ip.define(t=>new ai(t,e)),ao.of(e)]}const an=!tQ.ios,ar=X.define({combine:e=>eT(e,{cursorBlinkRate:1200,drawRangeCursor:!0},{cursorBlinkRate:(e,t)=>Math.min(e,t),drawRangeCursor:(e,t)=>e||t})});function as(e={}){return[ar.of(e),ap,ac,ah,it.of(!0)]}function al(e){return e.startState.facet(ar)!=e.state.facet(ar)}const ap=aa({above:!0,markers(e){let{state:t}=e,i=t.facet(ar),o=[];for(let a of t.selection.ranges){let n=a==t.selection.main;if(a.empty?!n||an:i.drawRangeCursor){let t=n?"cm-cursor cm-cursor-primary":"cm-cursor cm-cursor-secondary",i=a.empty?a:q.cursor(a.head,a.head>a.anchor?-1:1);for(let a of o5.forRange(e,t,i))o.push(a)}}return o},update(e,t){e.transactions.some(e=>e.selection)&&(t.style.animationName="cm-blink"==t.style.animationName?"cm-blink2":"cm-blink");let i=al(e);return i&&ad(e.state,t),e.docChanged||e.selectionSet||i},mount(e,t){ad(t.state,e)},class:"cm-cursorLayer"});function ad(e,t){t.style.animationDuration=e.facet(ar).cursorBlinkRate+"ms"}const ac=aa({above:!1,markers:e=>e.state.selection.ranges.map(t=>t.empty?[]:o5.forRange(e,"cm-selectionBackground",t)).reduce((e,t)=>e.concat(t)),update:(e,t)=>e.docChanged||e.selectionSet||e.viewportChanged||al(e),class:"cm-selectionLayer"}),af={".cm-line":{"& ::selection":{backgroundColor:"transparent !important"},"&::selection":{backgroundColor:"transparent !important"}}};an&&(af[".cm-line"].caretColor="transparent !important");const ah=ei.highest(oH.theme(af)),ay=eb.define({map:(e,t)=>null==e?null:t.mapPos(e)}),au=J.define({create:()=>null,update:(e,t)=>(null!=e&&(e=t.changes.mapPos(e)),t.effects.reduce((e,t)=>t.is(ay)?t.value:e,e))}),am=ip.fromClass(class{constructor(e){this.view=e,this.cursor=null,this.measureReq={read:this.readPos.bind(this),write:this.drawCursor.bind(this)}}update(e){var t;let i=e.state.field(au);null==i?null!=this.cursor&&(null===(t=this.cursor)||void 0===t||t.remove(),this.cursor=null):(this.cursor||(this.cursor=this.view.scrollDOM.appendChild(document.createElement("div")),this.cursor.className="cm-dropCursor"),(e.startState.field(au)!=i||e.docChanged||e.geometryChanged)&&this.view.requestMeasure(this.measureReq))}readPos(){let e=this.view.state.field(au),t=null!=e&&this.view.coordsAtPos(e);if(!t)return null;let i=this.view.scrollDOM.getBoundingClientRect();return{left:t.left-i.left+this.view.scrollDOM.scrollLeft,top:t.top-i.top+this.view.scrollDOM.scrollTop,height:t.bottom-t.top}}drawCursor(e){this.cursor&&(e?(this.cursor.style.left=e.left+"px",this.cursor.style.top=e.top+"px",this.cursor.style.height=e.height+"px"):this.cursor.style.left="-100000px")}destroy(){this.cursor&&this.cursor.remove()}setDropPos(e){this.view.state.field(au)!=e&&this.view.dispatch({effects:ay.of(e)})}},{eventHandlers:{dragover(e){this.setDropPos(this.view.posAtCoords({x:e.clientX,y:e.clientY}))},dragleave(e){e.target!=this.view.contentDOM&&this.view.contentDOM.contains(e.relatedTarget)||this.setDropPos(null)},dragend(){this.setDropPos(null)},drop(){this.setDropPos(null)}}});function ax(e,t,i,o,a){t.lastIndex=0;for(let n=e.iterRange(i,o),r=i,s;!n.next().done;r+=n.value.length)if(!n.lineBreak)for(;s=t.exec(n.value);)a(r+s.index,s)}class ag{constructor(e){let{regexp:t,decoration:i,decorate:o,boundary:a,maxLength:n=1e3}=e;if(!t.global)throw RangeError("The regular expression given to MatchDecorator should have its 'g' flag set");if(this.regexp=t,o)this.addMatch=(e,t,i,a)=>o(a,i,i+e[0].length,e,t);else if("function"==typeof i)this.addMatch=(e,t,o,a)=>{let n=i(e,t,o);n&&a(o,o+e[0].length,n)};else if(i)this.addMatch=(e,t,o,a)=>a(o,o+e[0].length,i);else throw RangeError("Either 'decorate' or 'decoration' should be provided to MatchDecorator");this.boundary=a,this.maxLength=n}createDeco(e){let t=new eL,i=t.add.bind(t);for(let{from:t,to:o}of function(e,t){let i=e.visibleRanges;if(1==i.length&&i[0].from==e.viewport.from&&i[0].to==e.viewport.to)return i;let o=[];for(let{from:a,to:n}of i)a=Math.max(e.state.doc.lineAt(a).from,a-t),n=Math.min(e.state.doc.lineAt(n).to,n+t),o.length&&o[o.length-1].to>=a?o[o.length-1].to=n:o.push({from:a,to:n});return o}(e,this.maxLength))ax(e.state.doc,this.regexp,t,o,(t,o)=>this.addMatch(o,e,t,i));return t.finish()}updateDeco(e,t){let i=1e9,o=-1;return(e.docChanged&&e.changes.iterChanges((t,a,n,r)=>{r>e.view.viewport.from&&n<e.view.viewport.to&&(i=Math.min(n,i),o=Math.max(r,o))}),e.viewportChanged||o-i>1e3)?this.createDeco(e.view):o>-1?this.updateRange(e.view,t.map(e.changes),i,o):t}updateRange(e,t,i,o){for(let a of e.visibleRanges){let n=Math.max(a.from,i),r=Math.min(a.to,o);if(r>n){let i=e.state.doc.lineAt(n),o=i.to<r?e.state.doc.lineAt(r):i,s=Math.max(a.from,i.from),l=Math.min(a.to,o.to);if(this.boundary){for(;n>i.from;n--)if(this.boundary.test(i.text[n-1-i.from])){s=n;break}for(;r<o.to;r++)if(this.boundary.test(o.text[r-o.from])){l=r;break}}let p=[],d,c=(e,t,i)=>p.push(i.range(e,t));if(i==o)for(this.regexp.lastIndex=s-i.from;(d=this.regexp.exec(i.text))&&d.index<l-i.from;)this.addMatch(d,e,d.index+i.from,c);else ax(e.state.doc,this.regexp,s,l,(t,i)=>this.addMatch(i,e,t,c));t=t.update({filterFrom:s,filterTo:l,filter:(e,t)=>e<s||t>l,add:p})}}return t}}const ab=null!=/x/.unicode?"gu":"g",aw=RegExp("[\x00-\b\n-\x1f\x7f-\x9f\xad؜​‎‏\u2028\u2029‭‮⁦⁧⁩\uFEFF￹-￼]",ab),ak={0:"null",7:"bell",8:"backspace",10:"newline",11:"vertical tab",13:"carriage return",27:"escape",8203:"zero width space",8204:"zero width non-joiner",8205:"zero width joiner",8206:"left-to-right mark",8207:"right-to-left mark",8232:"line separator",8237:"left-to-right override",8238:"right-to-left override",8294:"left-to-right isolate",8295:"right-to-left isolate",8297:"pop directional isolate",8233:"paragraph separator",65279:"zero width no-break space",65532:"object replacement"};let av=null;const aO=X.define({combine(e){let t=eT(e,{render:null,specialChars:aw,addSpecialChars:null});return(t.replaceTabs=!function(){var e;if(null==av&&"undefined"!=typeof document&&document.body){let t=document.body.style;av=(null!==(e=t.tabSize)&&void 0!==e?e:t.MozTabSize)!=null}return av||!1}())&&(t.specialChars=RegExp("	|"+t.specialChars.source,ab)),t.addSpecialChars&&(t.specialChars=RegExp(t.specialChars.source+"|"+t.addSpecialChars.source,ab)),t}});function aS(e={}){return[aO.of(e),aC||(aC=ip.fromClass(class{constructor(e){this.view=e,this.decorations=tZ.none,this.decorationCache=Object.create(null),this.decorator=this.makeDecorator(e.state.facet(aO)),this.decorations=this.decorator.createDeco(e)}makeDecorator(e){return new ag({regexp:e.specialChars,decoration:(t,i,o)=>{let{doc:a}=i.state,n=v(t[0],0);if(9==n){let e=a.lineAt(o),t=i.state.tabSize,n=eV(e.text,t,o-e.from);return tZ.replace({widget:new aD((t-n%t)*this.view.defaultCharacterWidth)})}return this.decorationCache[n]||(this.decorationCache[n]=tZ.replace({widget:new aP(e,n)}))},boundary:e.replaceTabs?void 0:/[^]/})}update(e){let t=e.state.facet(aO);e.startState.facet(aO)!=t?(this.decorator=this.makeDecorator(t),this.decorations=this.decorator.createDeco(e.view)):this.decorations=this.decorator.updateDeco(e,this.decorations)}},{decorations:e=>e.decorations}))]}let aC=null;class aP extends tq{constructor(e,t){super(),this.options=e,this.code=t}eq(e){return e.code==this.code}toDOM(e){var t;let i=(t=this.code)>=32?"•":10==t?"␤":String.fromCharCode(9216+t),o=e.state.phrase("Control character")+" "+(ak[this.code]||"0x"+this.code.toString(16)),a=this.options.render&&this.options.render(this.code,o,i);if(a)return a;let n=document.createElement("span");return n.textContent=i,n.title=o,n.setAttribute("aria-label",o),n.className="cm-specialChar",n}ignoreEvent(){return!1}}class aD extends tq{constructor(e){super(),this.width=e}eq(e){return e.width==this.width}toDOM(){let e=document.createElement("span");return e.textContent="	",e.className="cm-tab",e.style.width=this.width+"px",e}ignoreEvent(){return!1}}const aT=tZ.line({class:"cm-activeLine"}),aM=ip.fromClass(class{constructor(e){this.decorations=this.getDeco(e)}update(e){(e.docChanged||e.selectionSet)&&(this.decorations=this.getDeco(e.view))}getDeco(e){let t=-1,i=[];for(let o of e.state.selection.ranges){let a=e.lineBlockAt(o.head);a.from>t&&(i.push(aT.range(a.from)),t=a.from)}return tZ.set(i)}},{decorations:e=>e.decorations});function aR(e,t){var i;let o,a=e.posAtCoords({x:t.clientX,y:t.clientY},!1),n=e.state.doc.lineAt(a),r=a-n.from,s=r>2e3?-1:r==n.length?(i=t.clientX,(o=e.coordsAtPos(e.viewport.from))?Math.round(Math.abs((o.left-i)/e.defaultCharacterWidth)):-1):eV(n.text,e.state.tabSize,a-n.from);return{line:n.number,col:s,off:r}}const aQ={Alt:[18,e=>e.altKey],Control:[17,e=>e.ctrlKey],Shift:[16,e=>e.shiftKey],Meta:[91,e=>e.metaKey]},aA={style:"cursor: crosshair"},aF="-10000px";class aL{constructor(e,t,i){this.facet=t,this.createTooltipView=i,this.input=e.state.facet(t),this.tooltips=this.input.filter(e=>e),this.tooltipViews=this.tooltips.map(i)}update(e){var t;let i=e.state.facet(this.facet),o=i.filter(e=>e);if(i===this.input){for(let t of this.tooltipViews)t.update&&t.update(e);return!1}let a=[];for(let t=0;t<o.length;t++){let i=o[t],n=-1;if(i){for(let e=0;e<this.tooltips.length;e++){let t=this.tooltips[e];t&&t.create==i.create&&(n=e)}if(n<0)a[t]=this.createTooltipView(i);else{let i=a[t]=this.tooltipViews[n];i.update&&i.update(e)}}}for(let e of this.tooltipViews)0>a.indexOf(e)&&(e.dom.remove(),null===(t=e.destroy)||void 0===t||t.call(e));return this.input=i,this.tooltips=o,this.tooltipViews=a,!0}}function aE(e){let{win:t}=e;return{top:0,left:0,bottom:t.innerHeight,right:t.innerWidth}}const aB=X.define({combine:e=>{var t,i,o;return{position:tQ.ios?"absolute":(null===(t=e.find(e=>e.position))||void 0===t?void 0:t.position)||"fixed",parent:(null===(i=e.find(e=>e.parent))||void 0===i?void 0:i.parent)||null,tooltipSpace:(null===(o=e.find(e=>e.tooltipSpace))||void 0===o?void 0:o.tooltipSpace)||aE}}}),aI=new WeakMap,aG=ip.fromClass(class{constructor(e){this.view=e,this.inView=!0,this.lastTransaction=0,this.measureTimeout=-1;let t=e.state.facet(aB);this.position=t.position,this.parent=t.parent,this.classes=e.themeClasses,this.createContainer(),this.measureReq={read:this.readMeasure.bind(this),write:this.writeMeasure.bind(this),key:this},this.manager=new aL(e,az,e=>this.createTooltip(e)),this.intersectionObserver="function"==typeof IntersectionObserver?new IntersectionObserver(e=>{Date.now()>this.lastTransaction-50&&e.length>0&&e[e.length-1].intersectionRatio<1&&this.measureSoon()},{threshold:[1]}):null,this.observeIntersection(),e.win.addEventListener("resize",this.measureSoon=this.measureSoon.bind(this)),this.maybeMeasure()}createContainer(){this.parent?(this.container=document.createElement("div"),this.container.style.position="relative",this.container.className=this.view.themeClasses,this.parent.appendChild(this.container)):this.container=this.view.dom}observeIntersection(){if(this.intersectionObserver)for(let e of(this.intersectionObserver.disconnect(),this.manager.tooltipViews))this.intersectionObserver.observe(e.dom)}measureSoon(){this.measureTimeout<0&&(this.measureTimeout=setTimeout(()=>{this.measureTimeout=-1,this.maybeMeasure()},50))}update(e){e.transactions.length&&(this.lastTransaction=Date.now());let t=this.manager.update(e);t&&this.observeIntersection();let i=t||e.geometryChanged,o=e.state.facet(aB);if(o.position!=this.position){for(let e of(this.position=o.position,this.manager.tooltipViews))e.dom.style.position=this.position;i=!0}if(o.parent!=this.parent){for(let e of(this.parent&&this.container.remove(),this.parent=o.parent,this.createContainer(),this.manager.tooltipViews))this.container.appendChild(e.dom);i=!0}else this.parent&&this.view.themeClasses!=this.classes&&(this.classes=this.container.className=this.view.themeClasses);i&&this.maybeMeasure()}createTooltip(e){let t=e.create(this.view);if(t.dom.classList.add("cm-tooltip"),e.arrow&&!t.dom.querySelector(".cm-tooltip > .cm-tooltip-arrow")){let e=document.createElement("div");e.className="cm-tooltip-arrow",t.dom.appendChild(e)}return t.dom.style.position=this.position,t.dom.style.top=aF,this.container.appendChild(t.dom),t.mount&&t.mount(this.view),t}destroy(){var e,t;for(let t of(this.view.win.removeEventListener("resize",this.measureSoon),this.manager.tooltipViews))t.dom.remove(),null===(e=t.destroy)||void 0===e||e.call(t);null===(t=this.intersectionObserver)||void 0===t||t.disconnect(),clearTimeout(this.measureTimeout)}readMeasure(){let e=this.view.dom.getBoundingClientRect();return{editor:e,parent:this.parent?this.container.getBoundingClientRect():e,pos:this.manager.tooltips.map((e,t)=>{let i=this.manager.tooltipViews[t];return i.getCoords?i.getCoords(e.pos):this.view.coordsAtPos(e.pos)}),size:this.manager.tooltipViews.map(({dom:e})=>e.getBoundingClientRect()),space:this.view.state.facet(aB).tooltipSpace(this.view)}}writeMeasure(e){var t;let{editor:i,space:o}=e,a=[];for(let n=0;n<this.manager.tooltips.length;n++){let r=this.manager.tooltips[n],s=this.manager.tooltipViews[n],{dom:l}=s,p=e.pos[n],d=e.size[n];if(!p||p.bottom<=Math.max(i.top,o.top)||p.top>=Math.min(i.bottom,o.bottom)||p.right<Math.max(i.left,o.left)-.1||p.left>Math.min(i.right,o.right)+.1){l.style.top=aF;continue}let c=r.arrow?s.dom.querySelector(".cm-tooltip-arrow"):null,f=c?7:0,h=d.right-d.left,y=null!==(t=aI.get(s))&&void 0!==t?t:d.bottom-d.top,u=s.offset||aN,m=this.view.textDirection==iw.LTR,x=d.width>o.right-o.left?m?o.left:o.right-d.width:m?Math.min(p.left-(c?14:0)+u.x,o.right-h):Math.max(o.left,p.left-h+(c?14:0)-u.x),g=!!r.above;!r.strictSide&&(g?p.top-(d.bottom-d.top)-u.y<o.top:p.bottom+(d.bottom-d.top)+u.y>o.bottom)&&g==o.bottom-p.bottom>p.top-o.top&&(g=!g);let b=(g?p.top-o.top:o.bottom-p.bottom)-f;if(b<y&&!1!==s.resize){if(b<this.view.defaultLineHeight){l.style.top=aF;continue}aI.set(s,y),l.style.height=(y=b)+"px"}else l.style.height&&(l.style.height="");let w=g?p.top-y-f-u.y:p.bottom+f+u.y,k=x+h;if(!0!==s.overlap)for(let e of a)e.left<k&&e.right>x&&e.top<w+y&&e.bottom>w&&(w=g?e.top-y-2-f:e.bottom+f+2);"absolute"==this.position?(l.style.top=w-e.parent.top+"px",l.style.left=x-e.parent.left+"px"):(l.style.top=w+"px",l.style.left=x+"px"),c&&(c.style.left=`${p.left+(m?u.x:-u.x)-(x+14-7)}px`),!0!==s.overlap&&a.push({left:x,top:w,right:k,bottom:w+y}),l.classList.toggle("cm-tooltip-above",g),l.classList.toggle("cm-tooltip-below",!g),s.positioned&&s.positioned(e.space)}}maybeMeasure(){if(this.manager.tooltips.length&&(this.view.inView&&this.view.requestMeasure(this.measureReq),this.inView!=this.view.inView&&(this.inView=this.view.inView,!this.inView)))for(let e of this.manager.tooltipViews)e.dom.style.top=aF}},{eventHandlers:{scroll(){this.maybeMeasure()}}}),a$=oH.baseTheme({".cm-tooltip":{zIndex:100,boxSizing:"border-box"},"&light .cm-tooltip":{border:"1px solid #bbb",backgroundColor:"#f5f5f5"},"&light .cm-tooltip-section:not(:first-child)":{borderTop:"1px solid #bbb"},"&dark .cm-tooltip":{backgroundColor:"#333338",color:"white"},".cm-tooltip-arrow":{height:"7px",width:"14px",position:"absolute",zIndex:-1,overflow:"hidden","&:before, &:after":{content:"''",position:"absolute",width:0,height:0,borderLeft:"7px solid transparent",borderRight:"7px solid transparent"},".cm-tooltip-above &":{bottom:"-7px","&:before":{borderTop:"7px solid #bbb"},"&:after":{borderTop:"7px solid #f5f5f5",bottom:"1px"}},".cm-tooltip-below &":{top:"-7px","&:before":{borderBottom:"7px solid #bbb"},"&:after":{borderBottom:"7px solid #f5f5f5",top:"1px"}}},"&dark .cm-tooltip .cm-tooltip-arrow":{"&:before":{borderTopColor:"#333338",borderBottomColor:"#333338"},"&:after":{borderTopColor:"transparent",borderBottomColor:"transparent"}}}),aN={x:0,y:0},az=X.define({enables:[aG,a$]}),aW=X.define();class aj{constructor(e){this.view=e,this.mounted=!1,this.dom=document.createElement("div"),this.dom.classList.add("cm-tooltip-hover"),this.manager=new aL(e,aW,e=>this.createHostedView(e))}static create(e){return new aj(e)}createHostedView(e){let t=e.create(this.view);return t.dom.classList.add("cm-tooltip-section"),this.dom.appendChild(t.dom),this.mounted&&t.mount&&t.mount(this.view),t}mount(e){for(let t of this.manager.tooltipViews)t.mount&&t.mount(e);this.mounted=!0}positioned(e){for(let t of this.manager.tooltipViews)t.positioned&&t.positioned(e)}update(e){this.manager.update(e)}destroy(){var e;for(let t of this.manager.tooltipViews)null===(e=t.destroy)||void 0===e||e.call(t)}}const aq=az.compute([aW],e=>{let t=e.facet(aW).filter(e=>e);return 0===t.length?null:{pos:Math.min(...t.map(e=>e.pos)),end:Math.max(...t.filter(e=>null!=e.end).map(e=>e.end)),create:aj.create,above:t[0].above,arrow:t.some(e=>e.arrow)}});class aV{constructor(e,t,i,o,a){this.view=e,this.source=t,this.field=i,this.setHover=o,this.hoverTime=a,this.hoverTimeout=-1,this.restartTimeout=-1,this.pending=null,this.lastMove={x:0,y:0,target:e.dom,time:0},this.checkHover=this.checkHover.bind(this),e.dom.addEventListener("mouseleave",this.mouseleave=this.mouseleave.bind(this)),e.dom.addEventListener("mousemove",this.mousemove=this.mousemove.bind(this))}update(){this.pending&&(this.pending=null,clearTimeout(this.restartTimeout),this.restartTimeout=setTimeout(()=>this.startHover(),20))}get active(){return this.view.state.field(this.field)}checkHover(){if(this.hoverTimeout=-1,this.active)return;let e=Date.now()-this.lastMove.time;e<this.hoverTime?this.hoverTimeout=setTimeout(this.checkHover,this.hoverTime-e):this.startHover()}startHover(){clearTimeout(this.restartTimeout);let{lastMove:e}=this,t=this.view.contentDOM.contains(e.target)?this.view.posAtCoords(e):null;if(null==t)return;let i=this.view.coordsAtPos(t);if(null==i||e.y<i.top||e.y>i.bottom||e.x<i.left-this.view.defaultCharacterWidth||e.x>i.right+this.view.defaultCharacterWidth)return;let o=this.view.bidiSpans(this.view.state.doc.lineAt(t)).find(e=>e.from<=t&&e.to>=t),a=o&&o.dir==iw.RTL?-1:1,n=this.source(this.view,t,e.x<i.left?-a:a);if(null==n?void 0:n.then){let e=this.pending={pos:t};n.then(t=>{this.pending==e&&(this.pending=null,t&&this.view.dispatch({effects:this.setHover.of(t)}))},e=>ia(this.view.state,e,"hover tooltip"))}else n&&this.view.dispatch({effects:this.setHover.of(n)})}mousemove(e){var t;this.lastMove={x:e.clientX,y:e.clientY,target:e.target,time:Date.now()},this.hoverTimeout<0&&(this.hoverTimeout=setTimeout(this.checkHover,this.hoverTime));let i=this.active;if(i&&!aZ(this.lastMove.target)||this.pending){let{pos:o}=i||this.pending,a=null!==(t=null==i?void 0:i.end)&&void 0!==t?t:o;(o==a?this.view.posAtCoords(this.lastMove)!=o:!function(e,t,i,o,a,n){let r=document.createRange(),s=e.domAtPos(t),l=e.domAtPos(i);r.setEnd(l.node,l.offset),r.setStart(s.node,s.offset);let p=r.getClientRects();r.detach();for(let e=0;e<p.length;e++){let t=p[e];if(6>=Math.max(t.top-a,a-t.bottom,t.left-o,o-t.right))return!0}return!1}(this.view,o,a,e.clientX,e.clientY,0))&&(this.view.dispatch({effects:this.setHover.of(null)}),this.pending=null)}}mouseleave(e){clearTimeout(this.hoverTimeout),this.hoverTimeout=-1,this.active&&!aZ(e.relatedTarget)&&this.view.dispatch({effects:this.setHover.of(null)})}destroy(){clearTimeout(this.hoverTimeout),this.view.dom.removeEventListener("mouseleave",this.mouseleave),this.view.dom.removeEventListener("mousemove",this.mousemove)}}function aZ(e){for(let t=e;t;t=t.parentNode)if(1==t.nodeType&&t.classList.contains("cm-tooltip"))return!0;return!1}function aX(e,t){let i=e.plugin(aG);if(!i)return null;let o=i.manager.tooltips.indexOf(t);return o<0?null:i.manager.tooltipViews[o]}const aU=eb.define(),aH=X.define({combine(e){let t,i;for(let o of e)t=t||o.topContainer,i=i||o.bottomContainer;return{topContainer:t,bottomContainer:i}}});function aY(e,t){let i=e.plugin(a_),o=i?i.specs.indexOf(t):-1;return o>-1?i.panels[o]:null}const a_=ip.fromClass(class{constructor(e){this.input=e.state.facet(a0),this.specs=this.input.filter(e=>e),this.panels=this.specs.map(t=>t(e));let t=e.state.facet(aH);for(let i of(this.top=new aK(e,!0,t.topContainer),this.bottom=new aK(e,!1,t.bottomContainer),this.top.sync(this.panels.filter(e=>e.top)),this.bottom.sync(this.panels.filter(e=>!e.top)),this.panels))i.dom.classList.add("cm-panel"),i.mount&&i.mount()}update(e){let t=e.state.facet(aH);this.top.container!=t.topContainer&&(this.top.sync([]),this.top=new aK(e.view,!0,t.topContainer)),this.bottom.container!=t.bottomContainer&&(this.bottom.sync([]),this.bottom=new aK(e.view,!1,t.bottomContainer)),this.top.syncClasses(),this.bottom.syncClasses();let i=e.state.facet(a0);if(i!=this.input){let t=i.filter(e=>e),o=[],a=[],n=[],r=[];for(let i of t){let t=this.specs.indexOf(i),s;t<0?(s=i(e.view),r.push(s)):(s=this.panels[t]).update&&s.update(e),o.push(s),(s.top?a:n).push(s)}for(let e of(this.specs=t,this.panels=o,this.top.sync(a),this.bottom.sync(n),r))e.dom.classList.add("cm-panel"),e.mount&&e.mount()}else for(let t of this.panels)t.update&&t.update(e)}destroy(){this.top.sync([]),this.bottom.sync([])}},{provide:e=>oH.scrollMargins.of(t=>{let i=t.plugin(e);return i&&{top:i.top.scrollMargin(),bottom:i.bottom.scrollMargin()}})});class aK{constructor(e,t,i){this.view=e,this.top=t,this.container=i,this.dom=void 0,this.classes="",this.panels=[],this.syncClasses()}sync(e){for(let t of this.panels)t.destroy&&0>e.indexOf(t)&&t.destroy();this.panels=e,this.syncDOM()}syncDOM(){if(0==this.panels.length){this.dom&&(this.dom.remove(),this.dom=void 0);return}if(!this.dom){this.dom=document.createElement("div"),this.dom.className=this.top?"cm-panels cm-panels-top":"cm-panels cm-panels-bottom",this.dom.style[this.top?"top":"bottom"]="0";let e=this.container||this.view.dom;e.insertBefore(this.dom,this.top?e.firstChild:null)}let e=this.dom.firstChild;for(let t of this.panels)if(t.dom.parentNode==this.dom){for(;e!=t.dom;)e=aJ(e);e=e.nextSibling}else this.dom.insertBefore(t.dom,e);for(;e;)e=aJ(e)}scrollMargin(){return!this.dom||this.container?0:Math.max(0,this.top?this.dom.getBoundingClientRect().bottom-Math.max(0,this.view.scrollDOM.getBoundingClientRect().top):Math.min(innerHeight,this.view.scrollDOM.getBoundingClientRect().bottom)-this.dom.getBoundingClientRect().top)}syncClasses(){if(this.container&&this.classes!=this.view.themeClasses){for(let e of this.classes.split(" "))e&&this.container.classList.remove(e);for(let e of(this.classes=this.view.themeClasses).split(" "))e&&this.container.classList.add(e)}}}function aJ(e){let t=e.nextSibling;return e.remove(),t}const a0=X.define({enables:a_});class a2 extends eM{compare(e){return this==e||this.constructor==e.constructor&&this.eq(e)}eq(e){return!1}destroy(e){}}a2.prototype.elementClass="",a2.prototype.toDOM=void 0,a2.prototype.mapMode=L.TrackBefore,a2.prototype.startSide=a2.prototype.endSide=-1,a2.prototype.point=!0;const a1=X.define(),a8={class:"",renderEmptyElements:!1,elementStyle:"",markers:()=>eF.empty,lineMarker:()=>null,lineMarkerChange:null,initialSpacer:null,updateSpacer:null,domEventHandlers:{}},a6=X.define(),a9=X.define({combine:e=>e.some(e=>e)});function a3(e){let t=[a4];return e&&!1===e.fixed&&t.push(a9.of(!0)),t}const a4=ip.fromClass(class{constructor(e){for(let t of(this.view=e,this.prevViewport=e.viewport,this.dom=document.createElement("div"),this.dom.className="cm-gutters",this.dom.setAttribute("aria-hidden","true"),this.dom.style.minHeight=this.view.contentHeight+"px",this.gutters=e.state.facet(a6).map(t=>new nt(e,t)),this.gutters))this.dom.appendChild(t.dom);this.fixed=!e.state.facet(a9),this.fixed&&(this.dom.style.position="sticky"),this.syncGutters(!1),e.scrollDOM.insertBefore(this.dom,e.contentDOM)}update(e){if(this.updateGutters(e)){let t=this.prevViewport,i=e.view.viewport,o=Math.min(t.to,i.to)-Math.max(t.from,i.from);this.syncGutters(o<(i.to-i.from)*.8)}e.geometryChanged&&(this.dom.style.minHeight=this.view.contentHeight+"px"),this.view.state.facet(a9)!=!this.fixed&&(this.fixed=!this.fixed,this.dom.style.position=this.fixed?"sticky":""),this.prevViewport=e.view.viewport}syncGutters(e){let t=this.dom.nextSibling;e&&this.dom.remove();let i=eF.iter(this.view.state.facet(a1),this.view.viewport.from),o=[],a=this.gutters.map(e=>new ne(e,this.view.viewport,-this.view.documentPadding.top));for(let e of this.view.viewportLineBlocks){let t;if(Array.isArray(e.type)){for(let i of e.type)if(i.type==tV.Text){t=i;break}}else t=e.type==tV.Text?e:void 0;if(t)for(let n of(o.length&&(o=[]),a7(i,o,e.from),a))n.line(this.view,t,o)}for(let e of a)e.finish();e&&this.view.scrollDOM.insertBefore(this.dom,t)}updateGutters(e){let t=e.startState.facet(a6),i=e.state.facet(a6),o=e.docChanged||e.heightChanged||e.viewportChanged||!eF.eq(e.startState.facet(a1),e.state.facet(a1),e.view.viewport.from,e.view.viewport.to);if(t==i)for(let t of this.gutters)t.update(e)&&(o=!0);else{o=!0;let a=[];for(let o of i){let i=t.indexOf(o);i<0?a.push(new nt(this.view,o)):(this.gutters[i].update(e),a.push(this.gutters[i]))}for(let e of this.gutters)e.dom.remove(),0>a.indexOf(e)&&e.destroy();for(let e of a)this.dom.appendChild(e.dom);this.gutters=a}return o}destroy(){for(let e of this.gutters)e.destroy();this.dom.remove()}},{provide:e=>oH.scrollMargins.of(t=>{let i=t.plugin(e);return i&&0!=i.gutters.length&&i.fixed?t.textDirection==iw.LTR?{left:i.dom.offsetWidth}:{right:i.dom.offsetWidth}:null})});function a5(e){return Array.isArray(e)?e:[e]}function a7(e,t,i){for(;e.value&&e.from<=i;)e.from==i&&t.push(e.value),e.next()}class ne{constructor(e,t,i){this.gutter=e,this.height=i,this.i=0,this.cursor=eF.iter(e.markers,t.from)}line(e,t,i){let o=[];a7(this.cursor,o,t.from),i.length&&(o=o.concat(i));let a=this.gutter.config.lineMarker(e,t,o);a&&o.unshift(a);let n=this.gutter;if(0==o.length&&!n.config.renderEmptyElements)return;let r=t.top-this.height;if(this.i==n.elements.length){let i=new ni(e,t.height,r,o);n.elements.push(i),n.dom.appendChild(i.dom)}else n.elements[this.i].update(e,t.height,r,o);this.height=t.bottom,this.i++}finish(){let e=this.gutter;for(;e.elements.length>this.i;){let t=e.elements.pop();e.dom.removeChild(t.dom),t.destroy()}}}class nt{constructor(e,t){for(let i in this.view=e,this.config=t,this.elements=[],this.spacer=null,this.dom=document.createElement("div"),this.dom.className="cm-gutter"+(this.config.class?" "+this.config.class:""),t.domEventHandlers)this.dom.addEventListener(i,o=>{let a=o.target,n;if(a!=this.dom&&this.dom.contains(a)){for(;a.parentNode!=this.dom;)a=a.parentNode;let e=a.getBoundingClientRect();n=(e.top+e.bottom)/2}else n=o.clientY;let r=e.lineBlockAtHeight(n-e.documentTop);t.domEventHandlers[i](e,r,o)&&o.preventDefault()});this.markers=a5(t.markers(e)),t.initialSpacer&&(this.spacer=new ni(e,0,0,[t.initialSpacer(e)]),this.dom.appendChild(this.spacer.dom),this.spacer.dom.style.cssText+="visibility: hidden; pointer-events: none")}update(e){let t=this.markers;if(this.markers=a5(this.config.markers(e.view)),this.spacer&&this.config.updateSpacer){let t=this.config.updateSpacer(this.spacer.markers[0],e);t!=this.spacer.markers[0]&&this.spacer.update(e.view,0,0,[t])}let i=e.view.viewport;return!eF.eq(this.markers,t,i.from,i.to)||!!this.config.lineMarkerChange&&this.config.lineMarkerChange(e)}destroy(){for(let e of this.elements)e.destroy()}}class ni{constructor(e,t,i,o){this.height=-1,this.above=0,this.markers=[],this.dom=document.createElement("div"),this.dom.className="cm-gutterElement",this.update(e,t,i,o)}update(e,t,i,o){this.height!=t&&(this.dom.style.height=(this.height=t)+"px"),this.above!=i&&(this.dom.style.marginTop=(this.above=i)?i+"px":""),!function(e,t){if(e.length!=t.length)return!1;for(let i=0;i<e.length;i++)if(!e[i].compare(t[i]))return!1;return!0}(this.markers,o)&&this.setMarkers(e,o)}setMarkers(e,t){let i="cm-gutterElement",o=this.dom.firstChild;for(let a=0,n=0;;){let r=n,s=a<t.length?t[a++]:null,l=!1;if(s){let e=s.elementClass;e&&(i+=" "+e);for(let e=n;e<this.markers.length;e++)if(this.markers[e].compare(s)){r=e,l=!0;break}}else r=this.markers.length;for(;n<r;){let e=this.markers[n++];if(e.toDOM){e.destroy(o);let t=o.nextSibling;o.remove(),o=t}}if(!s)break;s.toDOM&&(l?o=o.nextSibling:this.dom.insertBefore(s.toDOM(e),o)),l&&n++}this.dom.className=i,this.markers=t}destroy(){this.setMarkers(null,[])}}const no=X.define(),na=X.define({combine:e=>eT(e,{formatNumber:String,domEventHandlers:{}},{domEventHandlers(e,t){let i=Object.assign({},e);for(let e in t){let o=i[e],a=t[e];i[e]=o?(e,t,i)=>o(e,t,i)||a(e,t,i):a}return i}})});class nn extends a2{constructor(e){super(),this.number=e}eq(e){return this.number==e.number}toDOM(){return document.createTextNode(this.number)}}function nr(e,t){return e.state.facet(na).formatNumber(t,e.state)}const ns=a6.compute([na],e=>({class:"cm-lineNumbers",renderEmptyElements:!1,markers:e=>e.state.facet(no),lineMarker:(e,t,i)=>i.some(e=>e.toDOM)?null:new nn(nr(e,e.state.doc.lineAt(t.from).number)),lineMarkerChange:e=>e.startState.facet(na)!=e.state.facet(na),initialSpacer:e=>new nn(nr(e,nl(e.state.doc.lines))),updateSpacer(e,t){let i=nr(t.view,nl(t.view.state.doc.lines));return i==e.number?e:new nn(i)},domEventHandlers:e.facet(na).domEventHandlers}));function nl(e){let t=9;for(;t<e;)t=10*t+9;return t}const np=new class extends a2{constructor(){super(...arguments),this.elementClass="cm-activeLineGutter"}},nd=a1.compute(["selection"],e=>{let t=[],i=-1;for(let o of e.selection.ranges){let a=e.doc.lineAt(o.head).from;a>i&&(i=a,t.push(np.range(a)))}return eF.of(t)});let nc=0;class nf{constructor(e,t){this.from=e,this.to=t}}class nh{constructor(e={}){this.id=nc++,this.perNode=!!e.perNode,this.deserialize=e.deserialize||(()=>{throw Error("This node type doesn't define a deserialize function")})}add(e){if(this.perNode)throw RangeError("Can't add per-node props to node types");return"function"!=typeof e&&(e=nu.match(e)),t=>{let i=e(t);return void 0===i?null:[this,i]}}}nh.closedBy=new nh({deserialize:e=>e.split(" ")}),nh.openedBy=new nh({deserialize:e=>e.split(" ")}),nh.group=new nh({deserialize:e=>e.split(" ")}),nh.contextHash=new nh({perNode:!0}),nh.lookAhead=new nh({perNode:!0}),nh.mounted=new nh({perNode:!0});const ny=Object.create(null);class nu{constructor(e,t,i,o=0){this.name=e,this.props=t,this.id=i,this.flags=o}static define(e){let t=e.props&&e.props.length?Object.create(null):ny,i=(e.top?1:0)|(e.skipped?2:0)|(e.error?4:0)|(null==e.name?8:0),o=new nu(e.name||"",t,e.id,i);if(e.props){for(let i of e.props)if(Array.isArray(i)||(i=i(o)),i){if(i[0].perNode)throw RangeError("Can't store a per-node prop on a node type");t[i[0].id]=i[1]}}return o}prop(e){return this.props[e.id]}get isTop(){return(1&this.flags)>0}get isSkipped(){return(2&this.flags)>0}get isError(){return(4&this.flags)>0}get isAnonymous(){return(8&this.flags)>0}is(e){if("string"==typeof e){if(this.name==e)return!0;let t=this.prop(nh.group);return!!t&&t.indexOf(e)>-1}return this.id==e}static match(e){let t=Object.create(null);for(let i in e)for(let o of i.split(" "))t[o]=e[i];return e=>{for(let i=e.prop(nh.group),o=-1;o<(i?i.length:0);o++){let a=t[o<0?e.name:i[o]];if(a)return a}}}}nu.none=new nu("",Object.create(null),0,8);class nm{constructor(e){this.types=e;for(let t=0;t<e.length;t++)if(e[t].id!=t)throw RangeError("Node type ids should correspond to array positions when creating a node set")}extend(...e){let t=[];for(let i of this.types){let o=null;for(let t of e){let e=t(i);e&&(o||(o=Object.assign({},i.props)),o[e[0].id]=e[1])}t.push(o?new nu(i.name,o,i.id,i.flags):i)}return new nm(t)}}const nx=new WeakMap,ng=new WeakMap;!function(e){e[e.ExcludeBuffers=1]="ExcludeBuffers",e[e.IncludeAnonymous=2]="IncludeAnonymous",e[e.IgnoreMounts=4]="IgnoreMounts",e[e.IgnoreOverlays=8]="IgnoreOverlays"}(P||(P={}));class nb{constructor(e,t,i,o,a){if(this.type=e,this.children=t,this.positions=i,this.length=o,this.props=null,a&&a.length)for(let[e,t]of(this.props=Object.create(null),a))this.props["number"==typeof e?e:e.id]=t}toString(){let e=this.prop(nh.mounted);if(e&&!e.overlay)return e.tree.toString();let t="";for(let e of this.children){let i=e.toString();i&&(t&&(t+=","),t+=i)}return this.type.name?(/\W/.test(this.type.name)&&!this.type.isError?JSON.stringify(this.type.name):this.type.name)+(t.length?"("+t+")":""):t}cursor(e=0){return new nR(this.topNode,e)}cursorAt(e,t=0,i=0){let o=nx.get(this)||this.topNode,a=new nR(o);return a.moveTo(e,t),nx.set(this,a._tree),a}get topNode(){return new nC(this,0,0,null)}resolve(e,t=0){let i=nS(nx.get(this)||this.topNode,e,t,!1);return nx.set(this,i),i}resolveInner(e,t=0){let i=nS(ng.get(this)||this.topNode,e,t,!0);return ng.set(this,i),i}iterate(e){let{enter:t,leave:i,from:o=0,to:a=this.length}=e;for(let n=this.cursor((e.mode||0)|P.IncludeAnonymous);;){let e=!1;if(n.from<=a&&n.to>=o&&(n.type.isAnonymous||!1!==t(n))){if(n.firstChild())continue;e=!0}for(;e&&i&&!n.type.isAnonymous&&i(n),!n.nextSibling();){if(!n.parent())return;e=!0}}}prop(e){return e.perNode?this.props?this.props[e.id]:void 0:this.type.prop(e)}get propValues(){let e=[];if(this.props)for(let t in this.props)e.push([+t,this.props[t]]);return e}balance(e={}){return this.children.length<=8?this:nL(nu.none,this.children,this.positions,0,this.children.length,0,this.length,(e,t,i)=>new nb(this.type,e,t,i,this.propValues),e.makeTree||((e,t,i)=>new nb(nu.none,e,t,i)))}static build(e){return function(e){var t;let{buffer:i,nodeSet:o,maxBufferLength:a=1024,reused:n=[],minRepeatType:r=o.types.length}=e,s=Array.isArray(i)?new nw(i,i.length):i,l=o.types,p=0,d=0;function c(e,t,i,a,n,r,s,l){let p=[],d=[];for(;e.length>a;)p.push(e.pop()),d.push(t.pop()+i-n);e.push(f(o.types[s],p,d,r-n,l-r)),t.push(n-i)}function f(e,t,i,o,a=0,n){if(p){let e=[nh.contextHash,p];n=n?[e].concat(n):[e]}if(a>25){let e=[nh.lookAhead,a];n=n?[e].concat(n):[e]}return new nb(e,t,i,o,n)}let h=[],y=[];for(;s.pos>0;)!function e(t,i,h,y,u){let{id:m,start:x,end:g,size:b}=s,w=d;for(;b<0;){if(s.next(),-1==b){let e=n[m];h.push(e),y.push(x-t);return}if(-3==b){p=m;return}if(-4==b){d=m;return}throw RangeError(`Unrecognized record size: ${b}`)}let k=l[m],v,O,S=x-t;if(g-x<=a&&(O=function(e,t){let i=s.fork(),o=0,n=0,l=0,p=i.end-a,d={size:0,start:0,skip:0};t:for(let a=i.pos-e;i.pos>a;){let e=i.size;if(i.id==t&&e>=0){d.size=o,d.start=n,d.skip=l,l+=4,o+=4,i.next();continue}let s=i.pos-e;if(e<0||s<a||i.start<p)break;let c=i.id>=r?4:0,f=i.start;for(i.next();i.pos>s;){if(i.size<0){if(-3==i.size)c+=4;else break t}else i.id>=r&&(c+=4);i.next()}n=f,o+=e,l+=c}return(t<0||o==e)&&(d.size=o,d.start=n,d.skip=l),d.size>4?d:void 0}(s.pos-i,u))){let e=new Uint16Array(O.size-O.skip),i=s.pos-O.size,a=e.length;for(;s.pos>i;)a=function e(t,i,o){let{id:a,start:n,end:l,size:c}=s;if(s.next(),c>=0&&a<r){let r=o;if(c>4){let a=s.pos-(c-4);for(;s.pos>a;)o=e(t,i,o)}i[--o]=r,i[--o]=l-t,i[--o]=n-t,i[--o]=a}else -3==c?p=a:-4==c&&(d=a);return o}(O.start,e,a);v=new nk(e,g-O.start,o),S=O.start-t}else{let t=s.pos-b;s.next();let i=[],o=[],n=m>=r?m:-1,l=0,p=g;for(;s.pos>t;)n>=0&&s.id==n&&s.size>=0?(s.end<=p-a&&(c(i,o,x,l,s.end,p,n,w),l=i.length,p=s.end),s.next()):e(x,t,i,o,n);if(n>=0&&l>0&&l<i.length&&c(i,o,x,l,x,p,n,w),i.reverse(),o.reverse(),n>-1&&l>0){let e=function(e){return(t,i,o)=>{let a=0,n=t.length-1,r,s;if(n>=0&&(r=t[n])instanceof nb){if(!n&&r.type==e&&r.length==o)return r;(s=r.prop(nh.lookAhead))&&(a=i[n]+r.length+s)}return f(e,t,i,o,a)}}(k);v=nL(k,i,o,0,i.length,0,g-x,e,e)}else v=f(k,i,o,g-x,w-g)}h.push(v),y.push(S)}(e.start||0,e.bufferStart||0,h,y,-1);let u=null!==(t=e.length)&&void 0!==t?t:h.length?y[0]+h[0].length:0;return new nb(l[e.topID],h.reverse(),y.reverse(),u)}(e)}}nb.empty=new nb(nu.none,[],[],0);class nw{constructor(e,t){this.buffer=e,this.index=t}get id(){return this.buffer[this.index-4]}get start(){return this.buffer[this.index-3]}get end(){return this.buffer[this.index-2]}get size(){return this.buffer[this.index-1]}get pos(){return this.index}next(){this.index-=4}fork(){return new nw(this.buffer,this.index)}}class nk{constructor(e,t,i){this.buffer=e,this.length=t,this.set=i}get type(){return nu.none}toString(){let e=[];for(let t=0;t<this.buffer.length;)e.push(this.childString(t)),t=this.buffer[t+3];return e.join(",")}childString(e){let t=this.buffer[e],i=this.buffer[e+3],o=this.set.types[t],a=o.name;if(/\W/.test(a)&&!o.isError&&(a=JSON.stringify(a)),i==(e+=4))return a;let n=[];for(;e<i;)n.push(this.childString(e)),e=this.buffer[e+3];return a+"("+n.join(",")+")"}findChild(e,t,i,o,a){let{buffer:n}=this,r=-1;for(let s=e;s!=t&&(!nv(a,o,n[s+1],n[s+2])||(r=s,!(i>0)));s=n[s+3]);return r}slice(e,t,i){let o=this.buffer,a=new Uint16Array(t-e),n=0;for(let r=e,s=0;r<t;){a[s++]=o[r++],a[s++]=o[r++]-i;let t=a[s++]=o[r++]-i;a[s++]=o[r++]-e,n=Math.max(n,t)}return new nk(a,n,this.set)}}function nv(e,t,i,o){switch(e){case -2:return i<t;case -1:return o>=t&&i<t;case 0:return i<t&&o>t;case 1:return i<=t&&o>t;case 2:return o>t;case 4:return!0}}function nO(e,t){let i=e.childBefore(t);for(;i;){let t=i.lastChild;if(!t||t.to!=i.to)break;t.type.isError&&t.from==t.to?(e=i,i=t.prevSibling):i=t}return e}function nS(e,t,i,o){for(var a;e.from==e.to||(i<1?e.from>=t:e.from>t)||(i>-1?e.to<=t:e.to<t);){let t=!o&&e instanceof nC&&e.index<0?null:e.parent;if(!t)return e;e=t}let n=o?0:P.IgnoreOverlays;if(o)for(let o=e,r=o.parent;r;r=(o=r).parent)o instanceof nC&&o.index<0&&(null===(a=r.enter(t,i,n))||void 0===a?void 0:a.from)!=o.from&&(e=r);for(;;){let o=e.enter(t,i,n);if(!o)return e;e=o}}class nC{constructor(e,t,i,o){this._tree=e,this.from=t,this.index=i,this._parent=o}get type(){return this._tree.type}get name(){return this._tree.type.name}get to(){return this.from+this._tree.length}nextChild(e,t,i,o,a=0){for(let n=this;;){for(let{children:r,positions:s}=n._tree,l=t>0?r.length:-1;e!=l;e+=t){let l=r[e],p=s[e]+n.from;if(nv(o,i,p,p+l.length)){if(l instanceof nk){if(a&P.ExcludeBuffers)continue;let r=l.findChild(0,l.buffer.length,t,i-p,o);if(r>-1)return new nM(new nT(n,l,e,p),null,r)}else if(a&P.IncludeAnonymous||!l.type.isAnonymous||nQ(l)){let r;if(!(a&P.IgnoreMounts)&&l.props&&(r=l.prop(nh.mounted))&&!r.overlay)return new nC(r.tree,p,e,n);let s=new nC(l,p,e,n);return a&P.IncludeAnonymous||!s.type.isAnonymous?s:s.nextChild(t<0?l.children.length-1:0,t,i,o)}}}if(a&P.IncludeAnonymous||!n.type.isAnonymous||(e=n.index>=0?n.index+t:t<0?-1:n._parent._tree.children.length,!(n=n._parent)))return null}}get firstChild(){return this.nextChild(0,1,0,4)}get lastChild(){return this.nextChild(this._tree.children.length-1,-1,0,4)}childAfter(e){return this.nextChild(0,1,e,2)}childBefore(e){return this.nextChild(this._tree.children.length-1,-1,e,-2)}enter(e,t,i=0){let o;if(!(i&P.IgnoreOverlays)&&(o=this._tree.prop(nh.mounted))&&o.overlay){let i=e-this.from;for(let{from:e,to:a}of o.overlay)if((t>0?e<=i:e<i)&&(t<0?a>=i:a>i))return new nC(o.tree,o.overlay[0].from+this.from,-1,this)}return this.nextChild(0,1,e,t,i)}nextSignificantParent(){let e=this;for(;e.type.isAnonymous&&e._parent;)e=e._parent;return e}get parent(){return this._parent?this._parent.nextSignificantParent():null}get nextSibling(){return this._parent&&this.index>=0?this._parent.nextChild(this.index+1,1,0,4):null}get prevSibling(){return this._parent&&this.index>=0?this._parent.nextChild(this.index-1,-1,0,4):null}cursor(e=0){return new nR(this,e)}get tree(){return this._tree}toTree(){return this._tree}resolve(e,t=0){return nS(this,e,t,!1)}resolveInner(e,t=0){return nS(this,e,t,!0)}enterUnfinishedNodesBefore(e){return nO(this,e)}getChild(e,t=null,i=null){let o=nP(this,e,t,i);return o.length?o[0]:null}getChildren(e,t=null,i=null){return nP(this,e,t,i)}toString(){return this._tree.toString()}get node(){return this}matchContext(e){return nD(this,e)}}function nP(e,t,i,o){let a=e.cursor(),n=[];if(!a.firstChild())return n;if(null!=i){for(;!a.type.is(i);)if(!a.nextSibling())return n}for(;;){if(null!=o&&a.type.is(o))return n;if(a.type.is(t)&&n.push(a.node),!a.nextSibling())return null==o?n:[]}}function nD(e,t,i=t.length-1){for(let o=e.parent;i>=0;o=o.parent){if(!o)return!1;if(!o.type.isAnonymous){if(t[i]&&t[i]!=o.name)return!1;i--}}return!0}class nT{constructor(e,t,i,o){this.parent=e,this.buffer=t,this.index=i,this.start=o}}class nM{get name(){return this.type.name}get from(){return this.context.start+this.context.buffer.buffer[this.index+1]}get to(){return this.context.start+this.context.buffer.buffer[this.index+2]}constructor(e,t,i){this.context=e,this._parent=t,this.index=i,this.type=e.buffer.set.types[e.buffer.buffer[i]]}child(e,t,i){let{buffer:o}=this.context,a=o.findChild(this.index+4,o.buffer[this.index+3],e,t-this.context.start,i);return a<0?null:new nM(this.context,this,a)}get firstChild(){return this.child(1,0,4)}get lastChild(){return this.child(-1,0,4)}childAfter(e){return this.child(1,e,2)}childBefore(e){return this.child(-1,e,-2)}enter(e,t,i=0){if(i&P.ExcludeBuffers)return null;let{buffer:o}=this.context,a=o.findChild(this.index+4,o.buffer[this.index+3],t>0?1:-1,e-this.context.start,t);return a<0?null:new nM(this.context,this,a)}get parent(){return this._parent||this.context.parent.nextSignificantParent()}externalSibling(e){return this._parent?null:this.context.parent.nextChild(this.context.index+e,e,0,4)}get nextSibling(){let{buffer:e}=this.context,t=e.buffer[this.index+3];return t<(this._parent?e.buffer[this._parent.index+3]:e.buffer.length)?new nM(this.context,this._parent,t):this.externalSibling(1)}get prevSibling(){let{buffer:e}=this.context,t=this._parent?this._parent.index+4:0;return this.index==t?this.externalSibling(-1):new nM(this.context,this._parent,e.findChild(t,this.index,-1,0,4))}cursor(e=0){return new nR(this,e)}get tree(){return null}toTree(){let e=[],t=[],{buffer:i}=this.context,o=this.index+4,a=i.buffer[this.index+3];if(a>o){let n=i.buffer[this.index+1];e.push(i.slice(o,a,n)),t.push(0)}return new nb(this.type,e,t,this.to-this.from)}resolve(e,t=0){return nS(this,e,t,!1)}resolveInner(e,t=0){return nS(this,e,t,!0)}enterUnfinishedNodesBefore(e){return nO(this,e)}toString(){return this.context.buffer.childString(this.index)}getChild(e,t=null,i=null){let o=nP(this,e,t,i);return o.length?o[0]:null}getChildren(e,t=null,i=null){return nP(this,e,t,i)}get node(){return this}matchContext(e){return nD(this,e)}}class nR{get name(){return this.type.name}constructor(e,t=0){if(this.mode=t,this.buffer=null,this.stack=[],this.index=0,this.bufferNode=null,e instanceof nC)this.yieldNode(e);else{this._tree=e.context.parent,this.buffer=e.context;for(let t=e._parent;t;t=t._parent)this.stack.unshift(t.index);this.bufferNode=e,this.yieldBuf(e.index)}}yieldNode(e){return!!e&&(this._tree=e,this.type=e.type,this.from=e.from,this.to=e.to,!0)}yieldBuf(e,t){this.index=e;let{start:i,buffer:o}=this.buffer;return this.type=t||o.set.types[o.buffer[e]],this.from=i+o.buffer[e+1],this.to=i+o.buffer[e+2],!0}yield(e){return!!e&&(e instanceof nC?(this.buffer=null,this.yieldNode(e)):(this.buffer=e.context,this.yieldBuf(e.index,e.type)))}toString(){return this.buffer?this.buffer.buffer.childString(this.index):this._tree.toString()}enterChild(e,t,i){if(!this.buffer)return this.yield(this._tree.nextChild(e<0?this._tree._tree.children.length-1:0,e,t,i,this.mode));let{buffer:o}=this.buffer,a=o.findChild(this.index+4,o.buffer[this.index+3],e,t-this.buffer.start,i);return!(a<0)&&(this.stack.push(this.index),this.yieldBuf(a))}firstChild(){return this.enterChild(1,0,4)}lastChild(){return this.enterChild(-1,0,4)}childAfter(e){return this.enterChild(1,e,2)}childBefore(e){return this.enterChild(-1,e,-2)}enter(e,t,i=this.mode){return this.buffer?!(i&P.ExcludeBuffers)&&this.enterChild(1,e,t):this.yield(this._tree.enter(e,t,i))}parent(){if(!this.buffer)return this.yieldNode(this.mode&P.IncludeAnonymous?this._tree._parent:this._tree.parent);if(this.stack.length)return this.yieldBuf(this.stack.pop());let e=this.mode&P.IncludeAnonymous?this.buffer.parent:this.buffer.parent.nextSignificantParent();return this.buffer=null,this.yieldNode(e)}sibling(e){if(!this.buffer)return!!this._tree._parent&&this.yield(this._tree.index<0?null:this._tree._parent.nextChild(this._tree.index+e,e,0,4,this.mode));let{buffer:t}=this.buffer,i=this.stack.length-1;if(e<0){let e=i<0?0:this.stack[i]+4;if(this.index!=e)return this.yieldBuf(t.findChild(e,this.index,-1,0,4))}else{let e=t.buffer[this.index+3];if(e<(i<0?t.buffer.length:t.buffer[this.stack[i]+3]))return this.yieldBuf(e)}return i<0&&this.yield(this.buffer.parent.nextChild(this.buffer.index+e,e,0,4,this.mode))}nextSibling(){return this.sibling(1)}prevSibling(){return this.sibling(-1)}atLastNode(e){let t,i,{buffer:o}=this;if(o){if(e>0){if(this.index<o.buffer.buffer.length)return!1}else for(let e=0;e<this.index;e++)if(o.buffer.buffer[e+3]<this.index)return!1;({index:t,parent:i}=o)}else({index:t,_parent:i}=this._tree);for(;i;{index:t,_parent:i}=i)if(t>-1)for(let o=t+e,a=e<0?-1:i._tree.children.length;o!=a;o+=e){let e=i._tree.children[o];if(this.mode&P.IncludeAnonymous||e instanceof nk||!e.type.isAnonymous||nQ(e))return!1}return!0}move(e,t){if(t&&this.enterChild(e,0,4))return!0;for(;;){if(this.sibling(e))return!0;if(this.atLastNode(e)||!this.parent())return!1}}next(e=!0){return this.move(1,e)}prev(e=!0){return this.move(-1,e)}moveTo(e,t=0){for(;(this.from==this.to||(t<1?this.from>=e:this.from>e)||(t>-1?this.to<=e:this.to<e))&&this.parent(););for(;this.enterChild(1,e,t););return this}get node(){if(!this.buffer)return this._tree;let e=this.bufferNode,t=null,i=0;if(e&&e.context==this.buffer)t:for(let o=this.index,a=this.stack.length;a>=0;){for(let n=e;n;n=n._parent)if(n.index==o){if(o==this.index)return n;t=n,i=a+1;break t}o=this.stack[--a]}for(let e=i;e<this.stack.length;e++)t=new nM(this.buffer,t,this.stack[e]);return this.bufferNode=new nM(this.buffer,t,this.index)}get tree(){return this.buffer?null:this._tree._tree}iterate(e,t){for(let i=0;;){let o=!1;if(this.type.isAnonymous||!1!==e(this)){if(this.firstChild()){i++;continue}this.type.isAnonymous||(o=!0)}for(;o&&t&&t(this),o=this.type.isAnonymous,!this.nextSibling();){if(!i)return;this.parent(),i--,o=!0}}}matchContext(e){if(!this.buffer)return nD(this.node,e);let{buffer:t}=this.buffer,{types:i}=t.set;for(let o=e.length-1,a=this.stack.length-1;o>=0;a--){if(a<0)return nD(this.node,e,o);let n=i[t.buffer[this.stack[a]]];if(!n.isAnonymous){if(e[o]&&e[o]!=n.name)return!1;o--}}return!0}}function nQ(e){return e.children.some(e=>e instanceof nk||!e.type.isAnonymous||nQ(e))}const nA=new WeakMap;function nF(e,t){if(!e.isAnonymous||t instanceof nk||t.type!=e)return 1;let i=nA.get(t);if(null==i){for(let o of(i=1,t.children)){if(o.type!=e||!(o instanceof nb)){i=1;break}i+=nF(e,o)}nA.set(t,i)}return i}function nL(e,t,i,o,a,n,r,s,l){let p=0;for(let i=o;i<a;i++)p+=nF(e,t[i]);let d=Math.ceil(1.5*p/8),c=[],f=[];return!function t(i,o,a,r,s){for(let p=a;p<r;){let a=p,h=o[p],y=nF(e,i[p]);for(p++;p<r;p++){let t=nF(e,i[p]);if(y+t>=d)break;y+=t}if(p==a+1){if(y>d){let e=i[a];t(e.children,e.positions,0,e.children.length,o[a]+s);continue}c.push(i[a])}else{let t=o[p-1]+i[p-1].length-h;c.push(nL(e,i,o,a,p,h,t,null,l))}f.push(h+s-n)}}(t,i,o,a,0),(s||l)(c,f,r)}class nE{constructor(e,t,i,o,a=!1,n=!1){this.from=e,this.to=t,this.tree=i,this.offset=o,this.open=(a?1:0)|(n?2:0)}get openStart(){return(1&this.open)>0}get openEnd(){return(2&this.open)>0}static addTree(e,t=[],i=!1){let o=[new nE(0,e.length,e,0,!1,i)];for(let i of t)i.to>e.length&&o.push(i);return o}static applyChanges(e,t,i=128){if(!t.length)return e;let o=[],a=1,n=e.length?e[0]:null;for(let r=0,s=0,l=0;;r++){let p=r<t.length?t[r]:null,d=p?p.fromA:1e9;if(d-s>=i)for(;n&&n.from<d;){let t=n;if(s>=t.from||d<=t.to||l){let e=Math.max(t.from,s)-l,i=Math.min(t.to,d)-l;t=e>=i?null:new nE(e,i,t.tree,t.offset+l,r>0,!!p)}if(t&&o.push(t),n.to>d)break;n=a<e.length?e[a++]:null}if(!p)break;s=p.toA,l=p.toA-p.toB}return o}}class nB{startParse(e,t,i){return"string"==typeof e&&(e=new nI(e)),i=i?i.length?i.map(e=>new nf(e.from,e.to)):[new nf(0,0)]:[new nf(0,e.length)],this.createParse(e,t||[],i)}parse(e,t,i){let o=this.startParse(e,t,i);for(;;){let e=o.advance();if(e)return e}}}class nI{constructor(e){this.string=e}get length(){return this.string.length}chunk(e){return this.string.slice(e)}get lineChunks(){return!1}read(e,t){return this.string.slice(e,t)}}new nh({perNode:!0});let nG=0;class n${constructor(e,t,i){this.set=e,this.base=t,this.modified=i,this.id=nG++}static define(e){if(null==e?void 0:e.base)throw Error("Can not derive from a modified tag");let t=new n$([],null,[]);if(t.set.push(t),e)for(let i of e.set)t.set.push(i);return t}static defineModifier(){let e=new nz;return t=>t.modified.indexOf(e)>-1?t:nz.get(t.base||t,t.modified.concat(e).sort((e,t)=>e.id-t.id))}}let nN=0;class nz{constructor(){this.instances=[],this.id=nN++}static get(e,t){if(!t.length)return e;let i=t[0].instances.find(i=>{var o;return i.base==e&&(o=i.modified,t.length==o.length&&t.every((e,t)=>e==o[t]))});if(i)return i;let o=[],a=new n$(o,e,t);for(let e of t)e.instances.push(a);let n=function(e){let t=[[]];for(let i=0;i<e.length;i++)for(let o=0,a=t.length;o<a;o++)t.push(t[o].concat(e[i]));return t.sort((e,t)=>t.length-e.length)}(t);for(let t of e.set)if(!t.modified.length)for(let e of n)o.push(nz.get(t,e));return a}}function nW(e){let t=Object.create(null);for(let i in e){let o=e[i];for(let e of(Array.isArray(o)||(o=[o]),i.split(" ")))if(e){let i=[],a=2,n=e;for(let t=0;;){if("..."==n&&t>0&&t+3==e.length){a=1;break}let o=/^"(?:[^"\\]|\\.)*?"|[^\/!]+/.exec(n);if(!o)throw RangeError("Invalid path: "+e);if(i.push("*"==o[0]?"":'"'==o[0][0]?JSON.parse(o[0]):o[0]),(t+=o[0].length)==e.length)break;let r=e[t++];if(t==e.length&&"!"==r){a=0;break}if("/"!=r)throw RangeError("Invalid path: "+e);n=e.slice(t)}let r=i.length-1,s=i[r];if(!s)throw RangeError("Invalid path: "+e);let l=new nq(o,a,r>0?i.slice(0,r):null);t[s]=l.sort(t[s])}}return nj.add(t)}const nj=new nh;class nq{constructor(e,t,i,o){this.tags=e,this.mode=t,this.context=i,this.next=o}get opaque(){return 0==this.mode}get inherit(){return 1==this.mode}sort(e){return!e||e.depth<this.depth?(this.next=e,this):(e.next=this.sort(e.next),e)}get depth(){return this.context?this.context.length:0}}function nV(e,t){let i=Object.create(null);for(let t of e)if(Array.isArray(t.tag))for(let e of t.tag)i[e.id]=t.class;else i[t.tag.id]=t.class;let{scope:o,all:a=null}=t||{};return{style:e=>{let t=a;for(let o of e)for(let e of o.set){let o=i[e.id];if(o){t=t?t+" "+o:o;break}}return t},scope:o}}nq.empty=new nq([],2,null);class nZ{constructor(e,t,i){this.at=e,this.highlighters=t,this.span=i,this.class=""}startSpan(e,t){t!=this.class&&(this.flush(e),e>this.at&&(this.at=e),this.class=t)}flush(e){e>this.at&&this.class&&this.span(this.at,e,this.class)}highlightRange(e,t,i,o,a){let{type:n,from:r,to:s}=e;if(r>=i||s<=t)return;n.isTop&&(a=this.highlighters.filter(e=>!e.scope||e.scope(n)));let l=o,p=function(e){let t=e.type.prop(nj);for(;t&&t.context&&!e.matchContext(t.context);)t=t.next;return t||null}(e)||nq.empty,d=function(e,t){let i=null;for(let o of e){let e=o.style(t);e&&(i=i?i+" "+e:e)}return i}(a,p.tags);if(d&&(l&&(l+=" "),l+=d,1==p.mode&&(o+=(o?" ":"")+d)),this.startSpan(Math.max(t,r),l),p.opaque)return;let c=e.tree&&e.tree.prop(nh.mounted);if(c&&c.overlay){let n=e.node.enter(c.overlay[0].from+r,1),p=this.highlighters.filter(e=>!e.scope||e.scope(c.tree.type)),d=e.firstChild();for(let f=0,h=r;;f++){let y=f<c.overlay.length?c.overlay[f]:null,u=y?y.from+r:s,m=Math.max(t,h),x=Math.min(i,u);if(m<x&&d)for(;e.from<x&&(this.highlightRange(e,m,x,o,a),this.startSpan(Math.min(x,e.to),l),!(e.to>=u)&&e.nextSibling()););if(!y||u>i)break;(h=y.to+r)>t&&(this.highlightRange(n.cursor(),Math.max(t,y.from+r),Math.min(i,h),"",p),this.startSpan(Math.min(i,h),l))}d&&e.parent()}else if(e.firstChild()){c&&(o="");do{if(e.to<=t)continue;if(e.from>=i)break;this.highlightRange(e,t,i,o,a),this.startSpan(Math.min(i,e.to),l)}while(e.nextSibling())e.parent()}}}const nX=n$.define,nU=nX(),nH=nX(),nY=nX(nH),n_=nX(nH),nK=nX(),nJ=nX(nK),n0=nX(nK),n2=nX(),n1=nX(n2),n8=nX(),n6=nX(),n9=nX(),n3=nX(n9),n4=nX(),n5={comment:nU,lineComment:nX(nU),blockComment:nX(nU),docComment:nX(nU),name:nH,variableName:nX(nH),typeName:nY,tagName:nX(nY),propertyName:n_,attributeName:nX(n_),className:nX(nH),labelName:nX(nH),namespace:nX(nH),macroName:nX(nH),literal:nK,string:nJ,docString:nX(nJ),character:nX(nJ),attributeValue:nX(nJ),number:n0,integer:nX(n0),float:nX(n0),bool:nX(nK),regexp:nX(nK),escape:nX(nK),color:nX(nK),url:nX(nK),keyword:n8,self:nX(n8),null:nX(n8),atom:nX(n8),unit:nX(n8),modifier:nX(n8),operatorKeyword:nX(n8),controlKeyword:nX(n8),definitionKeyword:nX(n8),moduleKeyword:nX(n8),operator:n6,derefOperator:nX(n6),arithmeticOperator:nX(n6),logicOperator:nX(n6),bitwiseOperator:nX(n6),compareOperator:nX(n6),updateOperator:nX(n6),definitionOperator:nX(n6),typeOperator:nX(n6),controlOperator:nX(n6),punctuation:n9,separator:nX(n9),bracket:n3,angleBracket:nX(n3),squareBracket:nX(n3),paren:nX(n3),brace:nX(n3),content:n2,heading:n1,heading1:nX(n1),heading2:nX(n1),heading3:nX(n1),heading4:nX(n1),heading5:nX(n1),heading6:nX(n1),contentSeparator:nX(n2),list:nX(n2),quote:nX(n2),emphasis:nX(n2),strong:nX(n2),link:nX(n2),monospace:nX(n2),strikethrough:nX(n2),inserted:nX(),deleted:nX(),changed:nX(),invalid:nX(),meta:n4,documentMeta:nX(n4),annotation:nX(n4),processingInstruction:nX(n4),definition:n$.defineModifier(),constant:n$.defineModifier(),function:n$.defineModifier(),standard:n$.defineModifier(),local:n$.defineModifier(),special:n$.defineModifier()};nV([{tag:n5.link,class:"tok-link"},{tag:n5.heading,class:"tok-heading"},{tag:n5.emphasis,class:"tok-emphasis"},{tag:n5.strong,class:"tok-strong"},{tag:n5.keyword,class:"tok-keyword"},{tag:n5.atom,class:"tok-atom"},{tag:n5.bool,class:"tok-bool"},{tag:n5.url,class:"tok-url"},{tag:n5.labelName,class:"tok-labelName"},{tag:n5.inserted,class:"tok-inserted"},{tag:n5.deleted,class:"tok-deleted"},{tag:n5.literal,class:"tok-literal"},{tag:n5.string,class:"tok-string"},{tag:n5.number,class:"tok-number"},{tag:[n5.regexp,n5.escape,n5.special(n5.string)],class:"tok-string2"},{tag:n5.variableName,class:"tok-variableName"},{tag:n5.local(n5.variableName),class:"tok-variableName tok-local"},{tag:n5.definition(n5.variableName),class:"tok-variableName tok-definition"},{tag:n5.special(n5.variableName),class:"tok-variableName2"},{tag:n5.definition(n5.propertyName),class:"tok-propertyName tok-definition"},{tag:n5.typeName,class:"tok-typeName"},{tag:n5.namespace,class:"tok-namespace"},{tag:n5.className,class:"tok-className"},{tag:n5.macroName,class:"tok-macroName"},{tag:n5.propertyName,class:"tok-propertyName"},{tag:n5.operator,class:"tok-operator"},{tag:n5.comment,class:"tok-comment"},{tag:n5.meta,class:"tok-meta"},{tag:n5.invalid,class:"tok-invalid"},{tag:n5.punctuation,class:"tok-punctuation"}]);const n7=new nh;function re(e){return X.define({combine:e?t=>t.concat(e):void 0})}const rt=new nh;class ri{constructor(e,t,i=[],o=""){this.data=e,this.name=o,eD.prototype.hasOwnProperty("tree")||Object.defineProperty(eD.prototype,"tree",{get(){return rn(this)}}),this.parser=t,this.extension=[ry.of(this),eD.languageData.of((e,t,i)=>{let o=ro(e,t,i),a=o.type.prop(n7);if(!a)return[];let n=e.facet(a),r=o.type.prop(rt);if(r){let a=o.resolve(t-o.from,i);for(let t of r)if(t.test(a,e)){let i=e.facet(t.facet);return"replace"==t.type?i:i.concat(n)}}return n})].concat(i)}isActiveAt(e,t,i=-1){return ro(e,t,i).type.prop(n7)==this.data}findRegions(e){let t=e.facet(ry);if((null==t?void 0:t.data)==this.data)return[{from:0,to:e.doc.length}];if(!t||!t.allowsNesting)return[];let i=[],o=(e,t)=>{if(e.prop(n7)==this.data){i.push({from:t,to:t+e.length});return}let a=e.prop(nh.mounted);if(a){if(a.tree.prop(n7)==this.data){if(a.overlay)for(let e of a.overlay)i.push({from:e.from+t,to:e.to+t});else i.push({from:t,to:t+e.length});return}if(a.overlay){let e=i.length;if(o(a.tree,a.overlay[0].from+t),i.length>e)return}}for(let i=0;i<e.children.length;i++){let a=e.children[i];a instanceof nb&&o(a,e.positions[i]+t)}};return o(rn(e),0),i}get allowsNesting(){return!0}}function ro(e,t,i){let o=e.facet(ry),a=rn(e).topNode;if(!o||o.allowsNesting)for(let e=a;e;e=e.enter(t,i,P.ExcludeBuffers))e.type.isTop&&(a=e);return a}ri.setState=eb.define();class ra extends ri{constructor(e,t,i){super(e,t,[],i),this.parser=t}static define(e){let t=re(e.languageData);return new ra(t,e.parser.configure({props:[n7.add(e=>e.isTop?t:void 0)]}),e.name)}configure(e,t){return new ra(this.data,this.parser.configure(e),t||this.name)}get allowsNesting(){return this.parser.hasWrappers()}}function rn(e){let t=e.field(ri.state,!1);return t?t.tree:nb.empty}class rr{constructor(e){this.doc=e,this.cursorPos=0,this.string="",this.cursor=e.iter()}get length(){return this.doc.length}syncTo(e){return this.string=this.cursor.next(e-this.cursorPos).value,this.cursorPos=e+this.string.length,this.cursorPos-this.string.length}chunk(e){return this.syncTo(e),this.string}get lineChunks(){return!0}read(e,t){let i=this.cursorPos-this.string.length;return e<i||t>=this.cursorPos?this.doc.sliceString(e,t):this.string.slice(e-i,t-i)}}let rs=null;class rl{constructor(e,t,i=[],o,a,n,r,s){this.parser=e,this.state=t,this.fragments=i,this.tree=o,this.treeLen=a,this.viewport=n,this.skipped=r,this.scheduleOn=s,this.parse=null,this.tempSkipped=[]}static create(e,t,i){return new rl(e,t,[],nb.empty,0,i,[],null)}startParse(){return this.parser.startParse(new rr(this.state.doc),this.fragments)}work(e,t){return(null!=t&&t>=this.state.doc.length&&(t=void 0),this.tree!=nb.empty&&this.isDone(null!=t?t:this.state.doc.length))?(this.takeTree(),!0):this.withContext(()=>{var i;if("number"==typeof e){let t=Date.now()+e;e=()=>Date.now()>t}for(this.parse||(this.parse=this.startParse()),null!=t&&(null==this.parse.stoppedAt||this.parse.stoppedAt>t)&&t<this.state.doc.length&&this.parse.stopAt(t);;){let o=this.parse.advance();if(o){if(this.fragments=this.withoutTempSkipped(nE.addTree(o,this.fragments,null!=this.parse.stoppedAt)),this.treeLen=null!==(i=this.parse.stoppedAt)&&void 0!==i?i:this.state.doc.length,this.tree=o,this.parse=null,!(this.treeLen<(null!=t?t:this.state.doc.length)))return!0;this.parse=this.startParse()}if(e())return!1}})}takeTree(){let e,t;this.parse&&(e=this.parse.parsedPos)>=this.treeLen&&((null==this.parse.stoppedAt||this.parse.stoppedAt>e)&&this.parse.stopAt(e),this.withContext(()=>{for(;!(t=this.parse.advance()););}),this.treeLen=e,this.tree=t,this.fragments=this.withoutTempSkipped(nE.addTree(this.tree,this.fragments,!0)),this.parse=null)}withContext(e){let t=rs;rs=this;try{return e()}finally{rs=t}}withoutTempSkipped(e){for(let t;t=this.tempSkipped.pop();)e=rp(e,t.from,t.to);return e}changes(e,t){let{fragments:i,tree:o,treeLen:a,viewport:n,skipped:r}=this;if(this.takeTree(),!e.empty){let t=[];if(e.iterChangedRanges((e,i,o,a)=>t.push({fromA:e,toA:i,fromB:o,toB:a})),i=nE.applyChanges(i,t),o=nb.empty,a=0,n={from:e.mapPos(n.from,-1),to:e.mapPos(n.to,1)},this.skipped.length)for(let t of(r=[],this.skipped)){let i=e.mapPos(t.from,1),o=e.mapPos(t.to,-1);i<o&&r.push({from:i,to:o})}}return new rl(this.parser,t,i,o,a,n,r,this.scheduleOn)}updateViewport(e){if(this.viewport.from==e.from&&this.viewport.to==e.to)return!1;this.viewport=e;let t=this.skipped.length;for(let t=0;t<this.skipped.length;t++){let{from:i,to:o}=this.skipped[t];i<e.to&&o>e.from&&(this.fragments=rp(this.fragments,i,o),this.skipped.splice(t--,1))}return!(this.skipped.length>=t)&&(this.reset(),!0)}reset(){this.parse&&(this.takeTree(),this.parse=null)}skipUntilInView(e,t){this.skipped.push({from:e,to:t})}static getSkippingParser(e){return new class extends nB{createParse(t,i,o){let a=o[0].from,n=o[o.length-1].to;return{parsedPos:a,advance(){let t=rs;if(t){for(let e of o)t.tempSkipped.push(e);e&&(t.scheduleOn=t.scheduleOn?Promise.all([t.scheduleOn,e]):e)}return this.parsedPos=n,new nb(nu.none,[],[],n-a)},stoppedAt:null,stopAt(){}}}}}isDone(e){e=Math.min(e,this.state.doc.length);let t=this.fragments;return this.treeLen>=e&&t.length&&0==t[0].from&&t[0].to>=e}static get(){return rs}}function rp(e,t,i){return nE.applyChanges(e,[{fromA:t,toA:i,fromB:t,toB:i}])}class rd{constructor(e){this.context=e,this.tree=e.tree}apply(e){if(!e.docChanged&&this.tree==this.context.tree)return this;let t=this.context.changes(e.changes,e.state),i=this.context.treeLen==e.startState.doc.length?void 0:Math.max(e.changes.mapPos(this.context.treeLen),t.viewport.to);return t.work(20,i)||t.takeTree(),new rd(t)}static init(e){let t=Math.min(3e3,e.doc.length),i=rl.create(e.facet(ry).parser,e,{from:0,to:t});return i.work(20,t)||i.takeTree(),new rd(i)}}ri.state=J.define({create:rd.init,update(e,t){for(let e of t.effects)if(e.is(ri.setState))return e.value;return t.startState.facet(ry)!=t.state.facet(ry)?rd.init(t.state):e.apply(t)}});let rc=e=>{let t=setTimeout(()=>e(),500);return()=>clearTimeout(t)};"undefined"!=typeof requestIdleCallback&&(rc=e=>{let t=-1,i=setTimeout(()=>{t=requestIdleCallback(e,{timeout:400})},100);return()=>t<0?clearTimeout(i):cancelIdleCallback(t)});const rf="undefined"!=typeof navigator&&(null===(D=navigator.scheduling)||void 0===D?void 0:D.isInputPending)?()=>navigator.scheduling.isInputPending():null,rh=ip.fromClass(class{constructor(e){this.view=e,this.working=null,this.workScheduled=0,this.chunkEnd=-1,this.chunkBudget=-1,this.work=this.work.bind(this),this.scheduleWork()}update(e){let t=this.view.state.field(ri.state).context;(t.updateViewport(e.view.viewport)||this.view.viewport.to>t.treeLen)&&this.scheduleWork(),e.docChanged&&(this.view.hasFocus&&(this.chunkBudget+=50),this.scheduleWork()),this.checkAsyncSchedule(t)}scheduleWork(){if(this.working)return;let{state:e}=this.view,t=e.field(ri.state);t.tree==t.context.tree&&t.context.isDone(e.doc.length)||(this.working=rc(this.work))}work(e){this.working=null;let t=Date.now();if(this.chunkEnd<t&&(this.chunkEnd<0||this.view.hasFocus)&&(this.chunkEnd=t+3e4,this.chunkBudget=3e3),this.chunkBudget<=0)return;let{state:i,viewport:{to:o}}=this.view,a=i.field(ri.state);if(a.tree==a.context.tree&&a.context.isDone(o+1e5))return;let n=Date.now()+Math.min(this.chunkBudget,100,e&&!rf?Math.max(25,e.timeRemaining()-5):1e9),r=a.context.treeLen<o&&i.doc.length>o+1e3,s=a.context.work(()=>rf&&rf()||Date.now()>n,o+(r?0:1e5));this.chunkBudget-=Date.now()-t,(s||this.chunkBudget<=0)&&(a.context.takeTree(),this.view.dispatch({effects:ri.setState.of(new rd(a.context))})),this.chunkBudget>0&&!(s&&!r)&&this.scheduleWork(),this.checkAsyncSchedule(a.context)}checkAsyncSchedule(e){e.scheduleOn&&(this.workScheduled++,e.scheduleOn.then(()=>this.scheduleWork()).catch(e=>ia(this.view.state,e)).then(()=>this.workScheduled--),e.scheduleOn=null)}destroy(){this.working&&this.working()}isWorking(){return!!(this.working||this.workScheduled>0)}},{eventHandlers:{focus(){this.scheduleWork()}}}),ry=X.define({combine:e=>e.length?e[0]:null,enables:e=>[ri.state,rh,oH.contentAttributes.compute([e],t=>{let i=t.facet(e);return i&&i.name?{"data-language":i.name}:{}})]});class ru{constructor(e,t=[]){this.language=e,this.support=t,this.extension=[e,t]}}const rm=X.define(),rx=X.define({combine:e=>{if(!e.length)return"  ";let t=e[0];if(!t||/\S/.test(t)||Array.from(t).some(e=>e!=t[0]))throw Error("Invalid indent unit: "+JSON.stringify(e[0]));return t}});function rg(e){let t=e.facet(rx);return 9==t.charCodeAt(0)?e.tabSize*t.length:t.length}function rb(e,t){let i="",o=e.tabSize,a=e.facet(rx)[0];if("	"==a){for(;t>=o;)i+="	",t-=o;a=" "}for(let e=0;e<t;e++)i+=a;return i}function rw(e,t){var i;for(let i of(e instanceof eD&&(e=new rk(e)),e.state.facet(rm))){let o=i(e,t);if(void 0!==o)return o}let o=rn(e.state);return o?(i=e,rO(o.resolveInner(t).enterUnfinishedNodesBefore(t),t,i)):null}class rk{constructor(e,t={}){this.state=e,this.options=t,this.unit=rg(e)}lineAt(e,t=1){let i=this.state.doc.lineAt(e),{simulateBreak:o,simulateDoubleBreak:a}=this.options;return null!=o&&o>=i.from&&o<=i.to?a&&o==e?{text:"",from:e}:(t<0?o<e:o<=e)?{text:i.text.slice(o-i.from),from:o}:{text:i.text.slice(0,o-i.from),from:i.from}:i}textAfterPos(e,t=1){if(this.options.simulateDoubleBreak&&e==this.options.simulateBreak)return"";let{text:i,from:o}=this.lineAt(e,t);return i.slice(e-o,Math.min(i.length,e+100-o))}column(e,t=1){let{text:i,from:o}=this.lineAt(e,t),a=this.countColumn(i,e-o),n=this.options.overrideIndentation?this.options.overrideIndentation(o):-1;return n>-1&&(a+=n-this.countColumn(i,i.search(/\S|$/))),a}countColumn(e,t=e.length){return eV(e,this.state.tabSize,t)}lineIndent(e,t=1){let{text:i,from:o}=this.lineAt(e,t),a=this.options.overrideIndentation;if(a){let e=a(o);if(e>-1)return e}return this.countColumn(i,i.search(/\S|$/))}get simulatedBreak(){return this.options.simulateBreak||null}}const rv=new nh;function rO(e,t,i){for(;e;e=e.parent){let o=function(e){let t=e.type.prop(rv);if(t)return t;let i=e.firstChild,o;if(i&&(o=i.type.prop(nh.closedBy))){let t=e.lastChild,i=t&&o.indexOf(t.name)>-1;return e=>rP(e,!0,1,void 0,i&&!(e.pos==e.options.simulateBreak&&e.options.simulateDoubleBreak)?t.from:void 0)}return null==e.parent?rS:null}(e);if(o)return o(rC.create(i,t,e))}return null}function rS(){return 0}class rC extends rk{constructor(e,t,i){super(e.state,e.options),this.base=e,this.pos=t,this.node=i}static create(e,t,i){return new rC(e,t,i)}get textAfter(){return this.textAfterPos(this.pos)}get baseIndent(){let e=this.state.doc.lineAt(this.node.from);for(;;){let t=this.node.resolve(e.from);for(;t.parent&&t.parent.from==t.from;)t=t.parent;if(function(e,t){for(let i=t;i;i=i.parent)if(e==i)return!0;return!1}(t,this.node))break;e=this.state.doc.lineAt(t.from)}return this.lineIndent(e.from)}continue(){let e=this.node.parent;return e?rO(e,this.pos,this.base):0}}function rP(e,t,i,o,a){let n=e.textAfter,r=n.match(/^\s*/)[0].length,s=o&&n.slice(r,r+o.length)==o||a==e.pos+r,l=t?function(e){let t=e.node,i=t.childAfter(t.from),o=t.lastChild;if(!i)return null;let a=e.options.simulateBreak,n=e.state.doc.lineAt(i.from),r=null==a||a<=n.from?n.to:Math.min(n.to,a);for(let e=i.to;;){let a=t.childAfter(e);if(!a||a==o)return null;if(!a.type.isSkipped)return a.from<r?i:null;e=a.to}}(e):null;return l?s?e.column(l.from):e.column(l.to):e.baseIndent+(s?0:e.unit*i)}function rD({except:e,units:t=1}={}){return i=>{let o=e&&e.test(i.textAfter);return i.baseIndent+(o?0:t*i.unit)}}const rT=X.define(),rM=new nh;function rR(e,t,i){for(let o of e.facet(rT)){let a=o(e,t,i);if(a)return a}return function(e,t,i){let o=rn(e);if(o.length<i)return null;let a=o.resolveInner(i,1),n=null;for(let r=a;r;r=r.parent){if(r.to<=i||r.from>i)continue;if(n&&r.from<t)break;let a=r.type.prop(rM);if(a&&(r.to<o.length-50||o.length==e.doc.length||!function(e){let t=e.lastChild;return t&&t.to==e.to&&t.type.isError}(r))){let o=a(r,e);o&&o.from<=i&&o.from>=t&&o.to>i&&(n=o)}}return n}(e,t,i)}function rQ(e,t){let i=t.mapPos(e.from,1),o=t.mapPos(e.to,-1);return i>=o?void 0:{from:i,to:o}}const rA=eb.define({map:rQ}),rF=eb.define({map:rQ});function rL(e){let t=[];for(let{head:i}of e.state.selection.ranges)t.some(e=>e.from<=i&&e.to>=i)||t.push(e.lineBlockAt(i));return t}const rE=J.define({create:()=>tZ.none,update(e,t){for(let i of(e=e.map(t.changes),t.effects))i.is(rA)&&!function(e,t,i){let o=!1;return e.between(t,t,(e,a)=>{e==t&&a==i&&(o=!0)}),o}(e,i.value.from,i.value.to)?e=e.update({add:[rj.range(i.value.from,i.value.to)]}):i.is(rF)&&(e=e.update({filter:(e,t)=>i.value.from!=e||i.value.to!=t,filterFrom:i.value.from,filterTo:i.value.to}));if(t.selection){let i=!1,{head:o}=t.selection.main;e.between(o,o,(e,t)=>{e<o&&t>o&&(i=!0)}),i&&(e=e.update({filterFrom:o,filterTo:o,filter:(e,t)=>t<=o||e>=o}))}return e},provide:e=>oH.decorations.from(e),toJSON(e,t){let i=[];return e.between(0,t.doc.length,(e,t)=>{i.push(e,t)}),i},fromJSON(e){if(!Array.isArray(e)||e.length%2)throw RangeError("Invalid JSON for fold state");let t=[];for(let i=0;i<e.length;){let o=e[i++],a=e[i++];if("number"!=typeof o||"number"!=typeof a)throw RangeError("Invalid JSON for fold state");t.push(rj.range(o,a))}return tZ.set(t,!0)}});function rB(e,t,i){var o;let a=null;return null===(o=e.field(rE,!1))||void 0===o||o.between(t,i,(e,t)=>{(!a||a.from>e)&&(a={from:e,to:t})}),a}function rI(e,t){return e.field(rE,!1)?t:t.concat(eb.appendConfig.of(rW()))}function rG(e,t,i=!0){let o=e.state.doc.lineAt(t.from).number,a=e.state.doc.lineAt(t.to).number;return oH.announce.of(`${e.state.phrase(i?"Folded lines":"Unfolded lines")} ${o} ${e.state.phrase("to")} ${a}.`)}const r$=[{key:"Ctrl-Shift-[",mac:"Cmd-Alt-[",run:e=>{for(let t of rL(e)){let i=rR(e.state,t.from,t.to);if(i)return e.dispatch({effects:rI(e.state,[rA.of(i),rG(e,i)])}),!0}return!1}},{key:"Ctrl-Shift-]",mac:"Cmd-Alt-]",run:e=>{if(!e.state.field(rE,!1))return!1;let t=[];for(let i of rL(e)){let o=rB(e.state,i.from,i.to);o&&t.push(rF.of(o),rG(e,o,!1))}return t.length&&e.dispatch({effects:t}),t.length>0}},{key:"Ctrl-Alt-[",run:e=>{let{state:t}=e,i=[];for(let o=0;o<t.doc.length;){let a=e.lineBlockAt(o),n=rR(t,a.from,a.to);n&&i.push(rA.of(n)),o=(n?e.lineBlockAt(n.to):a).to+1}return i.length&&e.dispatch({effects:rI(e.state,i)}),!!i.length}},{key:"Ctrl-Alt-]",run:e=>{let t=e.state.field(rE,!1);if(!t||!t.size)return!1;let i=[];return t.between(0,e.state.doc.length,(e,t)=>{i.push(rF.of({from:e,to:t}))}),e.dispatch({effects:i}),!0}}],rN={placeholderDOM:null,placeholderText:"…"},rz=X.define({combine:e=>eT(e,rN)});function rW(e){let t=[rE,rZ];return e&&t.push(rz.of(e)),t}const rj=tZ.replace({widget:new class extends tq{toDOM(e){let{state:t}=e,i=t.facet(rz),o=t=>{let i=e.lineBlockAt(e.posAtDOM(t.target)),o=rB(e.state,i.from,i.to);o&&e.dispatch({effects:rF.of(o)}),t.preventDefault()};if(i.placeholderDOM)return i.placeholderDOM(e,o);let a=document.createElement("span");return a.textContent=i.placeholderText,a.setAttribute("aria-label",t.phrase("folded code")),a.title=t.phrase("unfold"),a.className="cm-foldPlaceholder",a.onclick=o,a}}}),rq={openText:"⌄",closedText:"›",markerDOM:null,domEventHandlers:{},foldingChanged:()=>!1};class rV extends a2{constructor(e,t){super(),this.config=e,this.open=t}eq(e){return this.config==e.config&&this.open==e.open}toDOM(e){if(this.config.markerDOM)return this.config.markerDOM(this.open);let t=document.createElement("span");return t.textContent=this.open?this.config.openText:this.config.closedText,t.title=e.state.phrase(this.open?"Fold line":"Unfold line"),t}}const rZ=oH.baseTheme({".cm-foldPlaceholder":{backgroundColor:"#eee",border:"1px solid #ddd",color:"#888",borderRadius:".2em",margin:"0 1px",padding:"0 1px",cursor:"pointer"},".cm-foldGutter span":{padding:"0 1px",cursor:"pointer"}});class rX{constructor(e,t){let i;function o(e){let t=eY.newName();return(i||(i=Object.create(null)))["."+t]=e,t}this.specs=e;let a="string"==typeof t.all?t.all:t.all?o(t.all):void 0,n=t.scope;this.scope=n instanceof ri?e=>e.prop(n7)==n.data:n?e=>e==n:void 0,this.style=nV(e.map(e=>({tag:e.tag,class:e.class||o(Object.assign({},e,{tag:null}))})),{all:a}).style,this.module=i?new eY(i):null,this.themeType=t.themeType}static define(e,t){return new rX(e,t||{})}}const rU=X.define(),rH=X.define({combine:e=>e.length?[e[0]]:null});function rY(e){let t=e.facet(rU);return t.length?t:e.facet(rH)}function r_(e,t){let i=[rK],o;return e instanceof rX&&(e.module&&i.push(oH.styleModule.of(e.module)),o=e.themeType),(null==t?void 0:t.fallback)?i.push(rH.of(e)):o?i.push(rU.computeN([oH.darkTheme],t=>t.facet(oH.darkTheme)==("dark"==o)?[e]:[])):i.push(rU.of(e)),i}const rK=ei.high(ip.fromClass(class{constructor(e){this.markCache=Object.create(null),this.tree=rn(e.state),this.decorations=this.buildDeco(e,rY(e.state))}update(e){let t=rn(e.state),i=rY(e.state),o=i!=rY(e.startState);t.length<e.view.viewport.to&&!o&&t.type==this.tree.type?this.decorations=this.decorations.map(e.changes):(t!=this.tree||e.viewportChanged||o)&&(this.tree=t,this.decorations=this.buildDeco(e.view,i))}buildDeco(e,t){if(!t||!this.tree.length)return tZ.none;let i=new eL;for(let{from:o,to:a}of e.visibleRanges)!function(e,t,i,o=0,a=e.length){let n=new nZ(o,Array.isArray(t)?t:[t],i);n.highlightRange(e.cursor(),o,a,"",n.highlighters),n.flush(a)}(this.tree,t,(e,t,o)=>{i.add(e,t,this.markCache[o]||(this.markCache[o]=tZ.mark({class:o})))},o,a);return i.finish()}},{decorations:e=>e.decorations})),rJ=rX.define([{tag:n5.meta,color:"#404740"},{tag:n5.link,textDecoration:"underline"},{tag:n5.heading,textDecoration:"underline",fontWeight:"bold"},{tag:n5.emphasis,fontStyle:"italic"},{tag:n5.strong,fontWeight:"bold"},{tag:n5.strikethrough,textDecoration:"line-through"},{tag:n5.keyword,color:"#708"},{tag:[n5.atom,n5.bool,n5.url,n5.contentSeparator,n5.labelName],color:"#219"},{tag:[n5.literal,n5.inserted],color:"#164"},{tag:[n5.string,n5.deleted],color:"#a11"},{tag:[n5.regexp,n5.escape,n5.special(n5.string)],color:"#e40"},{tag:n5.definition(n5.variableName),color:"#00f"},{tag:n5.local(n5.variableName),color:"#30a"},{tag:[n5.typeName,n5.namespace],color:"#085"},{tag:n5.className,color:"#167"},{tag:[n5.special(n5.variableName),n5.macroName],color:"#256"},{tag:n5.definition(n5.propertyName),color:"#00c"},{tag:n5.comment,color:"#940"},{tag:n5.invalid,color:"#f00"}]),r0=oH.baseTheme({"&.cm-focused .cm-matchingBracket":{backgroundColor:"#328c8252"},"&.cm-focused .cm-nonmatchingBracket":{backgroundColor:"#bb555544"}}),r2="()[]{}",r1=X.define({combine:e=>eT(e,{afterCursor:!0,brackets:r2,maxScanDistance:1e4,renderMatch:r9})}),r8=tZ.mark({class:"cm-matchingBracket"}),r6=tZ.mark({class:"cm-nonmatchingBracket"});function r9(e){let t=[],i=e.matched?r8:r6;return t.push(i.range(e.start.from,e.start.to)),e.end&&t.push(i.range(e.end.from,e.end.to)),t}const r3=J.define({create:()=>tZ.none,update(e,t){if(!t.docChanged&&!t.selection)return e;let i=[],o=t.state.facet(r1);for(let e of t.state.selection.ranges){if(!e.empty)continue;let a=si(t.state,e.head,-1,o)||e.head>0&&si(t.state,e.head-1,1,o)||o.afterCursor&&(si(t.state,e.head,1,o)||e.head<t.state.doc.length&&si(t.state,e.head+1,-1,o));a&&(i=i.concat(o.renderMatch(a,t.state)))}return tZ.set(i,!0)},provide:e=>oH.decorations.from(e)}),r4=[r3,r0];function r5(e={}){return[r1.of(e),r4]}const r7=new nh;function se(e,t,i){let o=e.prop(t<0?nh.openedBy:nh.closedBy);if(o)return o;if(1==e.name.length){let o=i.indexOf(e.name);if(o>-1&&o%2==(t<0?1:0))return[i[o+t]]}return null}function st(e){let t=e.type.prop(r7);return t?t(e.node):e}function si(e,t,i,o={}){let a=o.maxScanDistance||1e4,n=o.brackets||r2,r=rn(e),s=r.resolveInner(t,i);for(let e=s;e;e=e.parent){let o=se(e.type,i,n);if(o&&e.from<e.to){let a=st(e);if(a&&(i>0?t>=a.from&&t<a.to:t>a.from&&t<=a.to))return function(e,t,i,o,a,n,r){let s=o.parent,l={from:a.from,to:a.to},p=0,d=null==s?void 0:s.cursor();if(d&&(i<0?d.childBefore(o.from):d.childAfter(o.to)))do if(i<0?d.to<=o.from:d.from>=o.to){if(0==p&&n.indexOf(d.type.name)>-1&&d.from<d.to){let e=st(d);return{start:l,end:e?{from:e.from,to:e.to}:void 0,matched:!0}}if(se(d.type,i,r))p++;else if(se(d.type,-i,r)){if(0==p){let e=st(d);return{start:l,end:e&&e.from<e.to?{from:e.from,to:e.to}:void 0,matched:!1}}p--}}while(i<0?d.prevSibling():d.nextSibling())return{start:l,matched:!1}}(0,0,i,e,a,o,n)}}return function(e,t,i,o,a,n,r){let s=i<0?e.sliceDoc(t-1,t):e.sliceDoc(t,t+1),l=r.indexOf(s);if(l<0||l%2==0!=i>0)return null;let p={from:i<0?t-1:t,to:i>0?t+1:t},d=e.doc.iterRange(t,i>0?e.doc.length:0),c=0;for(let e=0;!d.next().done&&e<=n;){let n=d.value;i<0&&(e+=n.length);let s=t+e*i;for(let e=i>0?0:n.length-1,t=i>0?n.length:-1;e!=t;e+=i){let t=r.indexOf(n[e]);if(!(t<0)&&o.resolveInner(s+e,1).type==a){if(t%2==0==i>0)c++;else{if(1==c)return{start:p,end:{from:s+e,to:s+e+1},matched:t>>1==l>>1};c--}}}i>0&&(e+=n.length)}return d.done?{start:p,matched:!1}:null}(e,t,i,r,s.type,a,n)}function so(e,t,i,o=0,a=0){null==t&&-1==(t=e.search(/[^\s\u00a0]/))&&(t=e.length);let n=a;for(let a=o;a<t;a++)9==e.charCodeAt(a)?n+=i-n%i:n++;return n}class sa{constructor(e,t,i,o){this.string=e,this.tabSize=t,this.indentUnit=i,this.overrideIndent=o,this.pos=0,this.start=0,this.lastColumnPos=0,this.lastColumnValue=0}eol(){return this.pos>=this.string.length}sol(){return 0==this.pos}peek(){return this.string.charAt(this.pos)||void 0}next(){if(this.pos<this.string.length)return this.string.charAt(this.pos++)}eat(e){let t=this.string.charAt(this.pos);if("string"==typeof e?t==e:t&&(e instanceof RegExp?e.test(t):e(t)))return++this.pos,t}eatWhile(e){let t=this.pos;for(;this.eat(e););return this.pos>t}eatSpace(){let e=this.pos;for(;/[\s\u00a0]/.test(this.string.charAt(this.pos));)++this.pos;return this.pos>e}skipToEnd(){this.pos=this.string.length}skipTo(e){let t=this.string.indexOf(e,this.pos);if(t>-1)return this.pos=t,!0}backUp(e){this.pos-=e}column(){return this.lastColumnPos<this.start&&(this.lastColumnValue=so(this.string,this.start,this.tabSize,this.lastColumnPos,this.lastColumnValue),this.lastColumnPos=this.start),this.lastColumnValue}indentation(){var e;return null!==(e=this.overrideIndent)&&void 0!==e?e:so(this.string,null,this.tabSize)}match(e,t,i){if("string"==typeof e){let o=e=>i?e.toLowerCase():e;return o(this.string.substr(this.pos,e.length))==o(e)?(!1!==t&&(this.pos+=e.length),!0):null}{let i=this.string.slice(this.pos).match(e);return i&&i.index>0?null:(i&&!1!==t&&(this.pos+=i[0].length),i)}}current(){return this.string.slice(this.start,this.pos)}}function sn(e){if("object"!=typeof e)return e;let t={};for(let i in e){let o=e[i];t[i]=o instanceof Array?o.slice():o}return t}const sr=new WeakMap;class ss extends ri{constructor(e){let t=re(e.languageData),i=function(e){return{name:e.name||"",token:e.token,blankLine:e.blankLine||(()=>{}),startState:e.startState||(()=>!0),copyState:e.copyState||sn,indent:e.indent||(()=>null),languageData:e.languageData||{},tokenTable:e.tokenTable||sc}}(e),o;super(t,new class extends nB{createParse(e,t,i){return new sp(o,e,t,i)}},[rm.of((e,t)=>this.getIndent(e,t))],e.name),this.topNode=function(e){let t=nu.define({id:sf.length,name:"Document",props:[n7.add(()=>e)]});return sf.push(t),t}(t),o=this,this.streamParser=i,this.stateAfter=new nh({perNode:!0}),this.tokenTable=e.tokenTable?new sm(i.tokenTable):sx}static define(e){return new ss(e)}getIndent(e,t){let i,o=rn(e.state),a=o.resolve(t);for(;a&&a.type!=this.topNode;)a=a.parent;if(!a)return null;let{overrideIndentation:n}=e.options;n&&null!=(i=sr.get(e.state))&&i<t-1e4&&(i=void 0);let r=sl(this,o,0,a.from,null!=i?i:t),s,l;if(r?(l=r.state,s=r.pos+1):(l=this.streamParser.startState(e.unit),s=0),t-s>1e4)return null;for(;s<t;){let i=e.state.doc.lineAt(s),o=Math.min(t,i.to);if(i.length){let t=n?n(i.from):-1,a=new sa(i.text,e.state.tabSize,e.unit,t<0?void 0:t);for(;a.pos<o-i.from;)sd(this.streamParser.token,a,l)}else this.streamParser.blankLine(l,e.unit);if(o==t)break;s=i.to+1}let p=e.lineAt(t);return n&&null==i&&sr.set(e.state,p.from),this.streamParser.indent(l,/^\s*(.*)/.exec(p.text)[1],e)}get allowsNesting(){return!1}}function sl(e,t,i,o,a){let n=i>=o&&i+t.length<=a&&t.prop(e.stateAfter);if(n)return{state:e.streamParser.copyState(n),pos:i+t.length};for(let n=t.children.length-1;n>=0;n--){let r=t.children[n],s=i+t.positions[n],l=r instanceof nb&&s<a&&sl(e,r,s,o,a);if(l)return l}return null}class sp{constructor(e,t,i,o){this.lang=e,this.input=t,this.fragments=i,this.ranges=o,this.stoppedAt=null,this.chunks=[],this.chunkPos=[],this.chunk=[],this.chunkReused=void 0,this.rangeIndex=0,this.to=o[o.length-1].to;let a=rl.get(),n=o[0].from,{state:r,tree:s}=function(e,t,i,o){for(let o of t){let t=o.from+(o.openStart?25:0),a=o.to-(o.openEnd?25:0),n=t<=i&&a>i&&sl(e,o.tree,0-o.offset,i,a),r;if(n&&(r=function e(t,i,o,a,n){if(n&&o<=0&&a>=i.length)return i;n||i.type!=t.topNode||(n=!0);for(let r=i.children.length-1;r>=0;r--){let s=i.positions[r],l=i.children[r],p;if(s<a&&l instanceof nb){if(!(p=e(t,l,o-s,a-s,n)))break;return n?new nb(i.type,i.children.slice(0,r).concat(p),i.positions.slice(0,r+1),s+p.length):p}}return null}(e,o.tree,i+o.offset,n.pos+o.offset,!1)))return{state:n.state,tree:r}}return{state:e.streamParser.startState(o?rg(o):4),tree:nb.empty}}(e,i,n,null==a?void 0:a.state);this.state=r,this.parsedPos=this.chunkStart=n+s.length;for(let e=0;e<s.children.length;e++)this.chunks.push(s.children[e]),this.chunkPos.push(s.positions[e]);a&&this.parsedPos<a.viewport.from-1e5&&(this.state=this.lang.streamParser.startState(rg(a.state)),a.skipUntilInView(this.parsedPos,a.viewport.from),this.parsedPos=a.viewport.from),this.moveRangeIndex()}advance(){let e=rl.get(),t=null==this.stoppedAt?this.to:Math.min(this.to,this.stoppedAt),i=Math.min(t,this.chunkStart+2048);for(e&&(i=Math.min(i,e.viewport.to));this.parsedPos<i;)this.parseLine(e);return(this.chunkStart<this.parsedPos&&this.finishChunk(),this.parsedPos>=t)?this.finish():e&&this.parsedPos>=e.viewport.to?(e.skipUntilInView(this.parsedPos,t),this.finish()):null}stopAt(e){this.stoppedAt=e}lineAfter(e){let t=this.input.chunk(e);if(this.input.lineChunks)"\n"==t&&(t="");else{let e=t.indexOf("\n");e>-1&&(t=t.slice(0,e))}return e+t.length<=this.to?t:t.slice(0,this.to-e)}nextLine(){let e=this.parsedPos,t=this.lineAfter(e),i=e+t.length;for(let e=this.rangeIndex;;){let o=this.ranges[e].to;if(o>=i||(t=t.slice(0,o-(i-t.length)),++e==this.ranges.length))break;let a=this.ranges[e].from,n=this.lineAfter(a);t+=n,i=a+n.length}return{line:t,end:i}}skipGapsTo(e,t,i){for(;;){let o=this.ranges[this.rangeIndex].to,a=e+t;if(i>0?o>a:o>=a)break;t+=this.ranges[++this.rangeIndex].from-o}return t}moveRangeIndex(){for(;this.ranges[this.rangeIndex].to<this.parsedPos;)this.rangeIndex++}emitToken(e,t,i,o,a){if(this.ranges.length>1){a=this.skipGapsTo(t,a,1),t+=a;let e=this.chunk.length;a=this.skipGapsTo(i,a,-1),i+=a,o+=this.chunk.length-e}return this.chunk.push(e,t,i,o),a}parseLine(e){let{line:t,end:i}=this.nextLine(),o=0,{streamParser:a}=this.lang,n=new sa(t,e?e.state.tabSize:4,e?rg(e.state):2);if(n.eol())a.blankLine(this.state,n.indentUnit);else for(;!n.eol();){let e=sd(a.token,n,this.state);if(e&&(o=this.emitToken(this.lang.tokenTable.resolve(e),this.parsedPos+n.start,this.parsedPos+n.pos,4,o)),n.start>1e4)break}this.parsedPos=i,this.moveRangeIndex(),this.parsedPos<this.to&&this.parsedPos++}finishChunk(){let e=nb.build({buffer:this.chunk,start:this.chunkStart,length:this.parsedPos-this.chunkStart,nodeSet:sh,topID:0,maxBufferLength:2048,reused:this.chunkReused});e=new nb(e.type,e.children,e.positions,e.length,[[this.lang.stateAfter,this.lang.streamParser.copyState(this.state)]]),this.chunks.push(e),this.chunkPos.push(this.chunkStart-this.ranges[0].from),this.chunk=[],this.chunkReused=void 0,this.chunkStart=this.parsedPos}finish(){return new nb(this.lang.topNode,this.chunks,this.chunkPos,this.parsedPos-this.ranges[0].from).balance()}}function sd(e,t,i){t.start=t.pos;for(let o=0;o<10;o++){let o=e(t,i);if(t.pos>t.start)return o}throw Error("Stream parser failed to advance stream.")}const sc=Object.create(null),sf=[nu.none],sh=new nm(sf),sy=[],su=Object.create(null);for(let[e,t]of[["variable","variableName"],["variable-2","variableName.special"],["string-2","string.special"],["def","variableName.definition"],["tag","tagName"],["attribute","attributeName"],["type","typeName"],["builtin","variableName.standard"],["qualifier","modifier"],["error","invalid"],["header","heading"],["property","propertyName"]])su[e]=sb(sc,t);class sm{constructor(e){this.extra=e,this.table=Object.assign(Object.create(null),su)}resolve(e){return e?this.table[e]||(this.table[e]=sb(this.extra,e)):0}}const sx=new sm(sc);function sg(e,t){sy.indexOf(e)>-1||(sy.push(e),console.warn(t))}function sb(e,t){let i=null;for(let o of t.split(".")){let t=e[o]||n5[o];t?"function"==typeof t?i?i=t(i):sg(o,`Modifier ${o} used at start of tag`):i?sg(o,`Tag ${o} used as modifier`):i=t:sg(o,`Unknown highlighting tag ${o}`)}if(!i)return 0;let o=t.replace(/ /g,"_"),a=nu.define({id:sf.length,name:o,props:[nW({[o]:i})]});return sf.push(a),a.id}class sw{constructor(e,t,i){this.state=e,this.pos=t,this.explicit=i,this.abortListeners=[]}tokenBefore(e){let t=rn(this.state).resolveInner(this.pos,-1);for(;t&&0>e.indexOf(t.name);)t=t.parent;return t?{from:t.from,to:this.pos,text:this.state.sliceDoc(t.from,this.pos),type:t.type}:null}matchBefore(e){let t=this.state.doc.lineAt(this.pos),i=Math.max(t.from,this.pos-250),o=t.text.slice(i-t.from,this.pos-t.from),a=o.search(sC(e,!1));return a<0?null:{from:i+a,to:this.pos,text:o.slice(a)}}get aborted(){return null==this.abortListeners}addEventListener(e,t){"abort"==e&&this.abortListeners&&this.abortListeners.push(t)}}function sk(e){let t=Object.keys(e).join(""),i=/\w/.test(t);return i&&(t=t.replace(/\w/g,"")),`[${i?"\\w":""}${t.replace(/[^\w\s]/g,"\\$&")}]`}function sv(e){let t=e.map(e=>"string"==typeof e?{label:e}:e),[i,o]=t.every(e=>/^\w+$/.test(e.label))?[/\w*$/,/\w+$/]:function(e){let t=Object.create(null),i=Object.create(null);for(let{label:o}of e){t[o[0]]=!0;for(let e=1;e<o.length;e++)i[o[e]]=!0}let o=sk(t)+sk(i)+"*$";return[RegExp("^"+o),new RegExp(o)]}(t);return e=>{let a=e.matchBefore(o);return a||e.explicit?{from:a?a.from:e.pos,options:t,validFor:i}:null}}class sO{constructor(e,t,i,o){this.completion=e,this.source=t,this.match=i,this.score=o}}function sS(e){return e.selection.main.from}function sC(e,t){var i;let{source:o}=e,a=t&&"^"!=o[0],n="$"!=o[o.length-1];return a||n?RegExp(`${a?"^":""}(?:${o})${n?"$":""}`,null!==(i=e.flags)&&void 0!==i?i:e.ignoreCase?"i":""):e}const sP=em.define(),sD=new WeakMap;function sT(e){if(!Array.isArray(e))return e;let t=sD.get(e);return t||sD.set(e,t=sv(e)),t}const sM=eb.define(),sR=eb.define();class sQ{constructor(e){this.pattern=e,this.chars=[],this.folded=[],this.any=[],this.precise=[],this.byWord=[];for(let t=0;t<e.length;){let i=v(e,t),o=S(i);this.chars.push(i);let a=e.slice(t,t+o),n=a.toUpperCase();this.folded.push(v(n==a?a.toLowerCase():n,0)),t+=o}this.astral=e.length!=this.chars.length}match(e){if(0==this.pattern.length)return[-100];if(e.length<this.pattern.length)return null;let{chars:t,folded:i,any:o,precise:a,byWord:n}=this;if(1==t.length){let o=v(e,0),a=S(o),n=a==e.length?0:-100;if(o==t[0]);else{if(o!=i[0])return null;n+=-200}return[n,0,a]}let r=e.indexOf(this.pattern);if(0==r)return[e.length==this.pattern.length?0:-100,0,this.pattern.length];let s=t.length,l=0;if(r<0){for(let a=0,n=Math.min(e.length,200);a<n&&l<s;){let n=v(e,a);(n==t[l]||n==i[l])&&(o[l++]=a),a+=S(n)}if(l<s)return null}let p=0,d=0,c=!1,f=0,h=-1,y=-1,u=/[a-z]/.test(e),m=!0;for(let o=0,l=Math.min(e.length,200),x=0;o<l&&d<s;){let l=v(e,o);r<0&&(p<s&&l==t[p]&&(a[p++]=o),f<s&&(l==t[f]||l==i[f]?(0==f&&(h=o),y=o+1,f++):f=0));let g,b=l<255?l>=48&&l<=57||l>=97&&l<=122?2:l>=65&&l<=90?1:0:(g=O(l))!=g.toLowerCase()?1:g!=g.toUpperCase()?2:0;(!o||1==b&&u||0==x&&0!=b)&&(t[d]==l||i[d]==l&&(c=!0)?n[d++]=o:n.length&&(m=!1)),x=b,o+=S(l)}return d==s&&0==n[0]&&m?this.result(-100+(c?-200:0),n,e):f==s&&0==h?[-200-e.length+(y==e.length?0:-100),0,y]:r>-1?[-700-e.length,r,r+this.pattern.length]:f==s?[-900-e.length,h,y]:d==s?this.result(-100+(c?-200:0)+-700+(m?0:-1100),n,e):2==t.length?null:this.result((o[0]?-700:0)+-200+-1100,o,e)}result(e,t,i){let o=[e-i.length],a=1;for(let e of t){let t=e+(this.astral?S(v(i,e)):1);a>1&&o[a-1]==e?o[a-1]=t:(o[a++]=e,o[a++]=t)}return o}}const sA=X.define({combine:e=>eT(e,{activateOnTyping:!0,selectOnOpen:!0,override:null,closeOnBlur:!0,maxRenderedOptions:100,defaultKeymap:!0,tooltipClass:()=>"",optionClass:()=>"",aboveCursor:!1,icons:!0,addToOptions:[],positionInfo:sL,compareCompletions:(e,t)=>e.label.localeCompare(t.label),interactionDelay:75},{defaultKeymap:(e,t)=>e&&t,closeOnBlur:(e,t)=>e&&t,icons:(e,t)=>e&&t,tooltipClass:(e,t)=>i=>sF(e(i),t(i)),optionClass:(e,t)=>i=>sF(e(i),t(i)),addToOptions:(e,t)=>e.concat(t)})});function sF(e,t){return e?t?e+" "+t:e:t}function sL(e,t,i,o,a){let n=e.textDirection==iw.RTL,r=n,s=!1,l="top",p,d,c=t.left-a.left,f=a.right-t.right,h=o.right-o.left,y=o.bottom-o.top;if(r&&c<Math.min(h,f)?r=!1:!r&&f<Math.min(h,c)&&(r=!0),h<=(r?c:f))p=Math.max(a.top,Math.min(i.top,a.bottom-y))-t.top,d=Math.min(400,r?c:f);else{s=!0,d=Math.min(400,(n?t.right:a.right-t.left)-30);let e=a.bottom-t.bottom;e>=y||e>t.top?p=i.bottom-t.top:(l="bottom",p=t.bottom-i.top)}return{style:`${l}: ${p}px; max-width: ${d}px`,class:"cm-completionInfo-"+(s?n?"left-narrow":"right-narrow":r?"left":"right")}}function sE(e,t="option"){return i=>{let o=i.state.field(sK,!1);if(!o||!o.open||o.open.disabled||Date.now()-o.open.timestamp<i.state.facet(sA).interactionDelay)return!1;let a=1,n;"page"==t&&(n=aX(i,o.open.tooltip))&&(a=Math.max(2,Math.floor(n.dom.offsetHeight/n.dom.querySelector("li").offsetHeight)-1));let{length:r}=o.open.options,s=o.open.selected>-1?o.open.selected+a*(e?1:-1):e?0:r-1;return s<0?s="page"==t?0:r-1:s>=r&&(s="page"==t?r-1:0),i.dispatch({effects:s_.of(s)}),!0}}class sB{constructor(e,t){this.active=e,this.context=t,this.time=Date.now(),this.updates=[],this.done=void 0}}const sI=ip.fromClass(class{constructor(e){for(let t of(this.view=e,this.debounceUpdate=-1,this.running=[],this.debounceAccept=-1,this.composing=0,e.state.field(sK).active))1==t.state&&this.startQuery(t)}update(e){let t=e.state.field(sK);if(!e.selectionSet&&!e.docChanged&&e.startState.field(sK)==t)return;let i=e.transactions.some(e=>(e.selection||e.docChanged)&&!sX(e));for(let t=0;t<this.running.length;t++){let o=this.running[t];if(i||o.updates.length+e.transactions.length>50&&Date.now()-o.time>1e3){for(let e of o.context.abortListeners)try{e()}catch(e){ia(this.view.state,e)}o.context.abortListeners=null,this.running.splice(t--,1)}else o.updates.push(...e.transactions)}if(this.debounceUpdate>-1&&clearTimeout(this.debounceUpdate),this.debounceUpdate=t.active.some(e=>1==e.state&&!this.running.some(t=>t.active.source==e.source))?setTimeout(()=>this.startUpdate(),50):-1,0!=this.composing)for(let t of e.transactions)"input"==sX(t)?this.composing=2:2==this.composing&&t.selection&&(this.composing=3)}startUpdate(){this.debounceUpdate=-1;let{state:e}=this.view;for(let t of e.field(sK).active)1!=t.state||this.running.some(e=>e.active.source==t.source)||this.startQuery(t)}startQuery(e){let{state:t}=this.view,i=sS(t),o=new sw(t,i,e.explicitPos==i),a=new sB(e,o);this.running.push(a),Promise.resolve(e.source(o)).then(e=>{a.context.aborted||(a.done=e||null,this.scheduleAccept())},e=>{this.view.dispatch({effects:sR.of(null)}),ia(this.view.state,e)})}scheduleAccept(){this.running.every(e=>void 0!==e.done)?this.accept():this.debounceAccept<0&&(this.debounceAccept=setTimeout(()=>this.accept(),50))}accept(){var e;this.debounceAccept>-1&&clearTimeout(this.debounceAccept),this.debounceAccept=-1;let t=[],i=this.view.state.facet(sA);for(let o=0;o<this.running.length;o++){let a=this.running[o];if(void 0===a.done)continue;if(this.running.splice(o--,1),a.done){let o=new sH(a.active.source,a.active.explicitPos,a.done,a.done.from,null!==(e=a.done.to)&&void 0!==e?e:sS(a.updates.length?a.updates[0].startState:this.view.state));for(let e of a.updates)o=o.update(e,i);if(o.hasResult()){t.push(o);continue}}let n=this.view.state.field(sK).active.find(e=>e.source==a.active.source);if(n&&1==n.state){if(null==a.done){let e=new sU(a.active.source,0);for(let t of a.updates)e=e.update(t,i);1!=e.state&&t.push(e)}else this.startQuery(n)}}t.length&&this.view.dispatch({effects:sY.of(t)})}},{eventHandlers:{blur(e){let t=this.view.state.field(sK,!1);if(t&&t.tooltip&&this.view.state.facet(sA).closeOnBlur){let i=t.open&&aX(this.view,t.open.tooltip);i&&i.dom.contains(e.relatedTarget)||this.view.dispatch({effects:sR.of(null)})}},compositionstart(){this.composing=1},compositionend(){3==this.composing&&setTimeout(()=>this.view.dispatch({effects:sM.of(!1)}),20),this.composing=0}}});function sG(e,t){let i=t.completion.apply||t.completion.label,o=e.state.field(sK).active.find(e=>e.source==t.source);return o instanceof sH&&("string"==typeof i?e.dispatch(Object.assign(Object.assign({},function(e,t,i,o){let{main:a}=e.selection,n=i-a.from,r=o-a.from;return Object.assign(Object.assign({},e.changeByRange(s=>s!=a&&i!=o&&e.sliceDoc(s.from+n,s.from+r)!=e.sliceDoc(i,o)?{range:s}:{changes:{from:s.from+n,to:o==a.from?s.to:s.from+r,insert:t},range:q.cursor(s.from+n+t.length)})),{userEvent:"input.complete"})}(e.state,i,o.from,o.to)),{annotations:sP.of(t.completion)})):i(e,t.completion,o.from,o.to),!0)}function s$(e,t,i){if(e<=i)return{from:0,to:e};if(t<0&&(t=0),t<=e>>1){let e=Math.floor(t/i);return{from:e*i,to:(e+1)*i}}let o=Math.floor((e-t)/i);return{from:e-(o+1)*i,to:e-o*i}}class sN{constructor(e,t){this.view=e,this.stateField=t,this.info=null,this.placeInfoReq={read:()=>this.measureInfo(),write:e=>this.placeInfo(e),key:this},this.space=null,this.currentClass="";let i=e.state.field(t),{options:o,selected:a}=i.open,n=e.state.facet(sA);this.optionContent=function(e){let t=e.addToOptions.slice();return e.icons&&t.push({render(e){let t=document.createElement("div");return t.classList.add("cm-completionIcon"),e.type&&t.classList.add(...e.type.split(/\s+/g).map(e=>"cm-completionIcon-"+e)),t.setAttribute("aria-hidden","true"),t},position:20}),t.push({render(e,t,i){let o=document.createElement("span");o.className="cm-completionLabel";let{label:a}=e,n=0;for(let e=1;e<i.length;){let t=i[e++],r=i[e++];t>n&&o.appendChild(document.createTextNode(a.slice(n,t)));let s=o.appendChild(document.createElement("span"));s.appendChild(document.createTextNode(a.slice(t,r))),s.className="cm-completionMatchedText",n=r}return n<a.length&&o.appendChild(document.createTextNode(a.slice(n))),o},position:50},{render(e){if(!e.detail)return null;let t=document.createElement("span");return t.className="cm-completionDetail",t.textContent=e.detail,t},position:80}),t.sort((e,t)=>e.position-t.position).map(e=>e.render)}(n),this.optionClass=n.optionClass,this.tooltipClass=n.tooltipClass,this.range=s$(o.length,a,n.maxRenderedOptions),this.dom=document.createElement("div"),this.dom.className="cm-tooltip-autocomplete",this.updateTooltipClass(e.state),this.dom.addEventListener("mousedown",t=>{for(let i=t.target,a;i&&i!=this.dom;i=i.parentNode)if("LI"==i.nodeName&&(a=/-(\d+)$/.exec(i.id))&&+a[1]<o.length){sG(e,o[+a[1]]),t.preventDefault();return}}),this.dom.addEventListener("focusout",t=>{let i=e.state.field(this.stateField,!1);i&&i.tooltip&&e.state.facet(sA).closeOnBlur&&t.relatedTarget!=e.contentDOM&&e.dispatch({effects:sR.of(null)})}),this.list=this.dom.appendChild(this.createListBox(o,i.id,this.range)),this.list.addEventListener("scroll",()=>{this.info&&this.view.requestMeasure(this.placeInfoReq)})}mount(){this.updateSel()}update(e){var t,i,o;let a=e.state.field(this.stateField),n=e.startState.field(this.stateField);this.updateTooltipClass(e.state),a!=n&&(this.updateSel(),(null===(t=a.open)||void 0===t?void 0:t.disabled)!=(null===(i=n.open)||void 0===i?void 0:i.disabled)&&this.dom.classList.toggle("cm-tooltip-autocomplete-disabled",!!(null===(o=a.open)||void 0===o?void 0:o.disabled)))}updateTooltipClass(e){let t=this.tooltipClass(e);if(t!=this.currentClass){for(let e of this.currentClass.split(" "))e&&this.dom.classList.remove(e);for(let e of t.split(" "))e&&this.dom.classList.add(e);this.currentClass=t}}positioned(e){this.space=e,this.info&&this.view.requestMeasure(this.placeInfoReq)}updateSel(){let e=this.view.state.field(this.stateField),t=e.open;if((t.selected>-1&&t.selected<this.range.from||t.selected>=this.range.to)&&(this.range=s$(t.options.length,t.selected,this.view.state.facet(sA).maxRenderedOptions),this.list.remove(),this.list=this.dom.appendChild(this.createListBox(t.options,e.id,this.range)),this.list.addEventListener("scroll",()=>{this.info&&this.view.requestMeasure(this.placeInfoReq)})),this.updateSelectedOption(t.selected)){this.info&&(this.info.remove(),this.info=null);let{completion:i}=t.options[t.selected],{info:o}=i;if(!o)return;let a="string"==typeof o?document.createTextNode(o):o(i);if(!a)return;"then"in a?a.then(t=>{t&&this.view.state.field(this.stateField,!1)==e&&this.addInfoPane(t)}).catch(e=>ia(this.view.state,e,"completion info")):this.addInfoPane(a)}}addInfoPane(e){let t=this.info=document.createElement("div");t.className="cm-tooltip cm-completionInfo",t.appendChild(e),this.dom.appendChild(t),this.view.requestMeasure(this.placeInfoReq)}updateSelectedOption(e){var t,i;let o,a,n=null;for(let t=this.list.firstChild,i=this.range.from;t;t=t.nextSibling,i++)"LI"==t.nodeName&&t.id?i==e?t.hasAttribute("aria-selected")||(t.setAttribute("aria-selected","true"),n=t):t.hasAttribute("aria-selected")&&t.removeAttribute("aria-selected"):i--;return n&&(t=this.list,i=n,o=t.getBoundingClientRect(),(a=i.getBoundingClientRect()).top<o.top?t.scrollTop-=o.top-a.top:a.bottom>o.bottom&&(t.scrollTop+=a.bottom-o.bottom)),n}measureInfo(){let e=this.dom.querySelector("[aria-selected]");if(!e||!this.info)return null;let t=this.dom.getBoundingClientRect(),i=this.info.getBoundingClientRect(),o=e.getBoundingClientRect(),a=this.space;if(!a){let e=this.dom.ownerDocument.defaultView||window;a={left:0,top:0,right:e.innerWidth,bottom:e.innerHeight}}return o.top>Math.min(a.bottom,t.bottom)-10||o.bottom<Math.max(a.top,t.top)+10?null:this.view.state.facet(sA).positionInfo(this.view,t,o,i,a)}placeInfo(e){this.info&&(e?(e.style&&(this.info.style.cssText=e.style),this.info.className="cm-tooltip cm-completionInfo "+(e.class||"")):this.info.style.cssText="top: -1e6px")}createListBox(e,t,i){let o=document.createElement("ul");o.id=t,o.setAttribute("role","listbox"),o.setAttribute("aria-expanded","true"),o.setAttribute("aria-label",this.view.state.phrase("Completions"));let a=null;for(let n=i.from;n<i.to;n++){let{completion:r,match:s}=e[n],{section:l}=r;if(l){let e="string"==typeof l?l:l.name;e!=a&&(n>i.from||0==i.from)&&(a=e,"string"!=typeof l&&l.header?o.appendChild(l.header(l)):o.appendChild(document.createElement("completion-section")).textContent=e)}let p=o.appendChild(document.createElement("li"));p.id=t+"-"+n,p.setAttribute("role","option");let d=this.optionClass(r);for(let e of(d&&(p.className=d),this.optionContent)){let t=e(r,this.view.state,s);t&&p.appendChild(t)}}return i.from&&o.classList.add("cm-completionListIncompleteTop"),i.to<e.length&&o.classList.add("cm-completionListIncompleteBottom"),o}}function sz(e){return 100*(e.boost||0)+(e.apply?10:0)+(e.info?5:0)+(e.type?1:0)}class sW{constructor(e,t,i,o,a,n){this.options=e,this.attrs=t,this.tooltip=i,this.timestamp=o,this.selected=a,this.disabled=n}setSelected(e,t){return e==this.selected||e>=this.options.length?this:new sW(this.options,sV(t,e),this.tooltip,this.timestamp,e,this.disabled)}static build(e,t,i,o,a){let n=function(e,t){let i=[],o=null,a=e=>{i.push(e);let{section:t}=e.completion;if(t){o||(o=[]);let e="string"==typeof t?t:t.name;o.some(t=>t.name==e)||o.push("string"==typeof t?{name:e}:t)}};for(let o of e)if(o.hasResult()){if(!1===o.result.filter){let e=o.result.getMatch;for(let t of o.result.options){let n=[1e9-i.length];if(e)for(let i of e(t))n.push(i);a(new sO(t,o.source,n,n[0]))}}else{let e=new sQ(t.sliceDoc(o.from,o.to)),i;for(let t of o.result.options)(i=e.match(t.label))&&a(new sO(t,o.source,i,i[0]+(t.boost||0)))}}if(o){let e=Object.create(null),t=0;for(let i of o.sort((e,t)=>{var i,o;return(null!==(i=e.rank)&&void 0!==i?i:1e9)-(null!==(o=t.rank)&&void 0!==o?o:1e9)||(e.name<t.name?-1:1)}))t-=1e5,e[i.name]=t;for(let t of i){let{section:i}=t.completion;i&&(t.score+=e["string"==typeof i?i:i.name])}}let n=[],r=null,s=t.facet(sA).compareCompletions;for(let e of i.sort((e,t)=>t.score-e.score||s(e.completion,t.completion)))r&&r.label==e.completion.label&&r.detail==e.completion.detail&&(null==r.type||null==e.completion.type||r.type==e.completion.type)&&r.apply==e.completion.apply?sz(e.completion)>sz(r)&&(n[n.length-1]=e):n.push(e),r=e.completion;return n}(e,t);if(!n.length)return o&&e.some(e=>1==e.state)?new sW(o.options,o.attrs,o.tooltip,o.timestamp,o.selected,!0):null;let r=t.facet(sA).selectOnOpen?0:-1;if(o&&o.selected!=r&&-1!=o.selected){let e=o.options[o.selected].completion;for(let t=0;t<n.length;t++)if(n[t].completion==e){r=t;break}}return new sW(n,sV(i,r),{pos:e.reduce((e,t)=>t.hasResult()?Math.min(e,t.from):e,1e8),create:e=>new sN(e,sK),above:a.aboveCursor},o?o.timestamp:Date.now(),r,!1)}map(e){return new sW(this.options,this.attrs,Object.assign(Object.assign({},this.tooltip),{pos:e.mapPos(this.tooltip.pos)}),this.timestamp,this.selected,this.disabled)}}class sj{constructor(e,t,i){this.active=e,this.id=t,this.open=i}static start(){return new sj(sZ,"cm-ac-"+Math.floor(2e6*Math.random()).toString(36),null)}update(e){let{state:t}=e,i=t.facet(sA),o=(i.override||t.languageDataAt("autocomplete",sS(t)).map(sT)).map(t=>(this.active.find(e=>e.source==t)||new sU(t,this.active.some(e=>0!=e.state)?1:0)).update(e,i));o.length==this.active.length&&o.every((e,t)=>e==this.active[t])&&(o=this.active);let a=this.open;for(let n of(a&&e.docChanged&&(a=a.map(e.changes)),e.selection||o.some(t=>t.hasResult()&&e.changes.touchesRange(t.from,t.to))||!function(e,t){if(e==t)return!0;for(let i=0,o=0;;){for(;i<e.length&&!e[i].hasResult;)i++;for(;o<t.length&&!t[o].hasResult;)o++;let a=i==e.length,n=o==t.length;if(a||n)return a==n;if(e[i++].result!=t[o++].result)return!1}}(o,this.active)?a=sW.build(o,t,this.id,a,i):a&&a.disabled&&!o.some(e=>1==e.state)&&(a=null),!a&&o.every(e=>1!=e.state)&&o.some(e=>e.hasResult())&&(o=o.map(e=>e.hasResult()?new sU(e.source,0):e)),e.effects))n.is(s_)&&(a=a&&a.setSelected(n.value,this.id));return o==this.active&&a==this.open?this:new sj(o,this.id,a)}get tooltip(){return this.open?this.open.tooltip:null}get attrs(){return this.open?this.open.attrs:sq}}const sq={"aria-autocomplete":"list"};function sV(e,t){let i={"aria-autocomplete":"list","aria-haspopup":"listbox","aria-controls":e};return t>-1&&(i["aria-activedescendant"]=e+"-"+t),i}const sZ=[];function sX(e){return e.isUserEvent("input.type")?"input":e.isUserEvent("delete.backward")?"delete":null}class sU{constructor(e,t,i=-1){this.source=e,this.state=t,this.explicitPos=i}hasResult(){return!1}update(e,t){let i=sX(e),o=this;for(let a of(i?o=o.handleUserEvent(e,i,t):e.docChanged?o=o.handleChange(e):e.selection&&0!=o.state&&(o=new sU(o.source,0)),e.effects))if(a.is(sM))o=new sU(o.source,1,a.value?sS(e.state):-1);else if(a.is(sR))o=new sU(o.source,0);else if(a.is(sY))for(let e of a.value)e.source==o.source&&(o=e);return o}handleUserEvent(e,t,i){return"delete"!=t&&i.activateOnTyping?new sU(this.source,1):this.map(e.changes)}handleChange(e){return e.changes.touchesRange(sS(e.startState))?new sU(this.source,0):this.map(e.changes)}map(e){return e.empty||this.explicitPos<0?this:new sU(this.source,this.state,e.mapPos(this.explicitPos))}}class sH extends sU{constructor(e,t,i,o,a){super(e,2,t),this.result=i,this.from=o,this.to=a}hasResult(){return!0}handleUserEvent(e,t,i){var o;let a=e.changes.mapPos(this.from),n=e.changes.mapPos(this.to,1),r=sS(e.state);if((this.explicitPos<0?r<=a:r<this.from)||r>n||"delete"==t&&sS(e.startState)==this.from)return new sU(this.source,"input"==t&&i.activateOnTyping?1:0);let s=this.explicitPos<0?-1:e.changes.mapPos(this.explicitPos),l;return!function(e,t,i,o){if(!e)return!1;let a=t.sliceDoc(i,o);return"function"==typeof e?e(a,i,o,t):sC(e,!0).test(a)}(this.result.validFor,e.state,a,n)?this.result.update&&(l=this.result.update(this.result,a,n,new sw(e.state,r,s>=0)))?new sH(this.source,s,l,l.from,null!==(o=l.to)&&void 0!==o?o:sS(e.state)):new sU(this.source,1,s):new sH(this.source,s,this.result,a,n)}handleChange(e){return e.changes.touchesRange(this.from,this.to)?new sU(this.source,0):this.map(e.changes)}map(e){return e.empty?this:new sH(this.source,this.explicitPos<0?-1:e.mapPos(this.explicitPos),this.result,e.mapPos(this.from),e.mapPos(this.to,1))}}const sY=eb.define({map:(e,t)=>e.map(e=>e.map(t))}),s_=eb.define(),sK=J.define({create:()=>sj.start(),update:(e,t)=>e.update(t),provide:e=>[az.from(e,e=>e.tooltip),oH.contentAttributes.from(e,e=>e.attrs)]}),sJ=oH.baseTheme({".cm-tooltip.cm-tooltip-autocomplete":{"& > ul":{fontFamily:"monospace",whiteSpace:"nowrap",overflow:"hidden auto",maxWidth_fallback:"700px",maxWidth:"min(700px, 95vw)",minWidth:"250px",maxHeight:"10em",height:"100%",listStyle:"none",margin:0,padding:0,"& > li, & > completion-section":{padding:"1px 3px",lineHeight:1.2},"& > li":{overflowX:"hidden",textOverflow:"ellipsis",cursor:"pointer"},"& > completion-section":{display:"list-item",borderBottom:"1px solid silver",paddingLeft:"0.5em",opacity:.7}}},"&light .cm-tooltip-autocomplete ul li[aria-selected]":{background:"#17c",color:"white"},"&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]":{background:"#777"},"&dark .cm-tooltip-autocomplete ul li[aria-selected]":{background:"#347",color:"white"},"&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]":{background:"#444"},".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after":{content:'"\xb7\xb7\xb7"',opacity:.5,display:"block",textAlign:"center"},".cm-tooltip.cm-completionInfo":{position:"absolute",padding:"3px 9px",width:"max-content",maxWidth:"400px",boxSizing:"border-box"},".cm-completionInfo.cm-completionInfo-left":{right:"100%"},".cm-completionInfo.cm-completionInfo-right":{left:"100%"},".cm-completionInfo.cm-completionInfo-left-narrow":{right:"30px"},".cm-completionInfo.cm-completionInfo-right-narrow":{left:"30px"},"&light .cm-snippetField":{backgroundColor:"#00000022"},"&dark .cm-snippetField":{backgroundColor:"#ffffff22"},".cm-snippetFieldPosition":{verticalAlign:"text-top",width:0,height:"1.15em",display:"inline-block",margin:"0 -0.7px -.7em",borderLeft:"1.4px dotted #888"},".cm-completionMatchedText":{textDecoration:"underline"},".cm-completionDetail":{marginLeft:"0.5em",fontStyle:"italic"},".cm-completionIcon":{fontSize:"90%",width:".8em",display:"inline-block",textAlign:"center",paddingRight:".6em",opacity:"0.6",boxSizing:"content-box"},".cm-completionIcon-function, .cm-completionIcon-method":{"&:after":{content:"'ƒ'"}},".cm-completionIcon-class":{"&:after":{content:"'○'"}},".cm-completionIcon-interface":{"&:after":{content:"'◌'"}},".cm-completionIcon-variable":{"&:after":{content:"'\uD835\uDC65'"}},".cm-completionIcon-constant":{"&:after":{content:"'\uD835\uDC36'"}},".cm-completionIcon-type":{"&:after":{content:"'\uD835\uDC61'"}},".cm-completionIcon-enum":{"&:after":{content:"'∪'"}},".cm-completionIcon-property":{"&:after":{content:"'□'"}},".cm-completionIcon-keyword":{"&:after":{content:"'\uD83D\uDD11︎'"}},".cm-completionIcon-namespace":{"&:after":{content:"'▢'"}},".cm-completionIcon-text":{"&:after":{content:"'abc'",fontSize:"50%",verticalAlign:"middle"}}});class s0{constructor(e,t,i,o){this.field=e,this.line=t,this.from=i,this.to=o}}class s2{constructor(e,t,i){this.field=e,this.from=t,this.to=i}map(e){let t=e.mapPos(this.from,-1,L.TrackDel),i=e.mapPos(this.to,1,L.TrackDel);return null==t||null==i?null:new s2(this.field,t,i)}}class s1{constructor(e,t){this.lines=e,this.fieldPositions=t}instantiate(e,t){let i=[],o=[t],a=e.doc.lineAt(t),n=/^\s*/.exec(a.text)[0];for(let a of this.lines){if(i.length){let i=n,r=/^\t*/.exec(a)[0].length;for(let t=0;t<r;t++)i+=e.facet(rx);o.push(t+i.length-r),a=i+a.slice(r)}i.push(a),t+=a.length+1}return{text:i,ranges:this.fieldPositions.map(e=>new s2(e.field,o[e.line]+e.from,o[e.line]+e.to))}}static parse(e){let t=[],i=[],o=[],a;for(let n of e.split(/\r\n?|\n/)){for(;a=/[#$]\{(?:(\d+)(?::([^}]*))?|([^}]*))\}/.exec(n);){let e=a[1]?+a[1]:null,r=a[2]||a[3]||"",s=-1;for(let i=0;i<t.length;i++)(null!=e?t[i].seq==e:r&&t[i].name==r)&&(s=i);if(s<0){let i=0;for(;i<t.length&&(null==e||null!=t[i].seq&&t[i].seq<e);)i++;for(let a of(t.splice(i,0,{seq:e,name:r}),s=i,o))a.field>=s&&a.field++}o.push(new s0(s,i.length,a.index,a.index+r.length)),n=n.slice(0,a.index)+r+n.slice(a.index+a[0].length)}for(let e;e=/\\([{}])/.exec(n);)for(let t of(n=n.slice(0,e.index)+e[1]+n.slice(e.index+e[0].length),o))t.line==i.length&&t.from>e.index&&(t.from--,t.to--);i.push(n)}return new s1(i,o)}}let s8=tZ.widget({widget:new class extends tq{toDOM(){let e=document.createElement("span");return e.className="cm-snippetFieldPosition",e}ignoreEvent(){return!1}}}),s6=tZ.mark({class:"cm-snippetField"});class s9{constructor(e,t){this.ranges=e,this.active=t,this.deco=tZ.set(e.map(e=>(e.from==e.to?s8:s6).range(e.from,e.to)))}map(e){let t=[];for(let i of this.ranges){let o=i.map(e);if(!o)return null;t.push(o)}return new s9(t,this.active)}selectionInsideField(e){return e.ranges.every(e=>this.ranges.some(t=>t.field==this.active&&t.from<=e.from&&t.to>=e.to))}}const s3=eb.define({map:(e,t)=>e&&e.map(t)}),s4=eb.define(),s5=J.define({create:()=>null,update(e,t){for(let i of t.effects){if(i.is(s3))return i.value;if(i.is(s4)&&e)return new s9(e.ranges,i.value)}return e&&t.docChanged&&(e=e.map(t.changes)),e&&t.selection&&!e.selectionInsideField(t.selection)&&(e=null),e},provide:e=>oH.decorations.from(e,e=>e?e.deco:tZ.none)});function s7(e,t){return q.create(e.filter(e=>e.field==t).map(e=>q.range(e.from,e.to)))}function le(e){return({state:t,dispatch:i})=>{let o=t.field(s5,!1);if(!o||e<0&&0==o.active)return!1;let a=o.active+e,n=e>0&&!o.ranges.some(t=>t.field==a+e);return i(t.update({selection:s7(o.ranges,a),effects:s3.of(n?null:new s9(o.ranges,a))})),!0}}const lt=le(1),li=le(-1),lo=[{key:"Tab",run:lt,shift:li},{key:"Escape",run:({state:e,dispatch:t})=>!!e.field(s5,!1)&&(t(e.update({effects:s3.of(null)})),!0)}],la=X.define({combine:e=>e.length?e[0]:lo}),ln=ei.highest(o8.compute([la],e=>e.facet(la)));function lr(e,t){let i;return Object.assign(Object.assign({},t),{apply:(i=s1.parse(e),(e,t,o,a)=>{let{text:n,ranges:r}=i.instantiate(e.state,o),l={changes:{from:o,to:a,insert:s.of(n)},scrollIntoView:!0,annotations:t?sP.of(t):void 0};if(r.length&&(l.selection=s7(r,0)),r.length>1){let t=new s9(r,0),i=l.effects=[s3.of(t)];void 0===e.state.field(s5,!1)&&i.push(eb.appendConfig.of([s5,ln,ls,sJ]))}e.dispatch(e.state.update(l))})})}const ls=oH.domEventHandlers({mousedown(e,t){let i=t.state.field(s5,!1),o;if(!i||null==(o=t.posAtCoords({x:e.clientX,y:e.clientY})))return!1;let a=i.ranges.find(e=>e.from<=o&&e.to>=o);return!!a&&a.field!=i.active&&(t.dispatch({selection:s7(i.ranges,a.field),effects:s3.of(i.ranges.some(e=>e.field>a.field)?new s9(i.ranges,a.field):null)}),!0)}}),ll={brackets:["(","[","{","'",'"'],before:")]}:;>",stringPrefixes:[]},lp=eb.define({map(e,t){let i=t.mapPos(e,-1,L.TrackAfter);return null==i?void 0:i}}),ld=new class extends eM{};ld.startSide=1,ld.endSide=-1;const lc=J.define({create:()=>eF.empty,update(e,t){if(t.selection){let i=t.state.doc.lineAt(t.selection.main.head).from,o=t.startState.doc.lineAt(t.startState.selection.main.head).from;i!=t.changes.mapPos(o,-1)&&(e=eF.empty)}for(let i of(e=e.map(t.changes),t.effects))i.is(lp)&&(e=e.update({add:[ld.range(i.value,i.value+1)]}));return e}}),lf="()[]{}<>";function lh(e){for(let t=0;t<lf.length;t+=2)if(lf.charCodeAt(t)==e)return lf.charAt(t+1);return O(e<128?e:e+1)}function ly(e,t){return e.languageDataAt("closeBrackets",t)[0]||ll}const lu="object"==typeof navigator&&/Android\b/.test(navigator.userAgent),lm=oH.inputHandler.of((e,t,i,o)=>{if((lu?e.composing:e.compositionStarted)||e.state.readOnly)return!1;let a=e.state.selection.main;if(o.length>2||2==o.length&&1==S(v(o,0))||t!=a.from||i!=a.to)return!1;let n=function(e,t){let i=ly(e,e.selection.main.head),o=i.brackets||ll.brackets;for(let a of o){let n=lh(v(a,0));if(t==a)return n==a?function(e,t,i,o){let a=o.stringPrefixes||ll.stringPrefixes,n=null,r=e.changeByRange(o=>{if(!o.empty)return{changes:[{insert:t,from:o.from},{insert:t,from:o.to}],effects:lp.of(o.to+t.length),range:q.range(o.anchor+t.length,o.head+t.length)};let r=o.head,s=lb(e.doc,r),l;if(s==t){if(lw(e,r))return{changes:{insert:t+t,from:r},effects:lp.of(r+t.length),range:q.cursor(r+t.length)};if(lg(e,r)){let o=i&&e.sliceDoc(r,r+3*t.length)==t+t+t?t+t+t:t;return{changes:{from:r,to:r+o.length,insert:o},range:q.cursor(r+o.length)}}}else if(i&&e.sliceDoc(r-2*t.length,r)==t+t&&(l=lk(e,r-2*t.length,a))>-1&&lw(e,l))return{changes:{insert:t+t+t+t,from:r},effects:lp.of(r+t.length),range:q.cursor(r+t.length)};else if(e.charCategorizer(r)(s)!=eC.Word&&lk(e,r,a)>-1&&!function(e,t,i,o){let a=rn(e).resolveInner(t,-1),n=o.reduce((e,t)=>Math.max(e,t.length),0);for(let r=0;r<5;r++){let r=e.sliceDoc(a.from,Math.min(a.to,a.from+i.length+n)),s=r.indexOf(i);if(!s||s>-1&&o.indexOf(r.slice(0,s))>-1){let t=a.firstChild;for(;t&&t.from==a.from&&t.to-t.from>i.length+s;){if(e.sliceDoc(t.to-i.length,t.to)==i)return!1;t=t.firstChild}return!0}let l=a.to==t&&a.parent;if(!l)break;a=l}return!1}(e,r,t,a))return{changes:{insert:t+t,from:r},effects:lp.of(r+t.length),range:q.cursor(r+t.length)};return{range:n=o}});return n?null:e.update(r,{scrollIntoView:!0,userEvent:"input.type"})}(e,a,o.indexOf(a+a+a)>-1,i):function(e,t,i,o){let a=null,n=e.changeByRange(n=>{if(!n.empty)return{changes:[{insert:t,from:n.from},{insert:i,from:n.to}],effects:lp.of(n.to+t.length),range:q.range(n.anchor+t.length,n.head+t.length)};let r=lb(e.doc,n.head);return!r||/\s/.test(r)||o.indexOf(r)>-1?{changes:{insert:t+i,from:n.head},effects:lp.of(n.head+t.length),range:q.cursor(n.head+t.length)}:{range:a=n}});return a?null:e.update(n,{scrollIntoView:!0,userEvent:"input.type"})}(e,a,n,i.before||ll.before);if(t==n&&lg(e,e.selection.main.from))return function(e,t,i){let o=null,a=e.changeByRange(t=>t.empty&&lb(e.doc,t.head)==i?{changes:{from:t.head,to:t.head+i.length,insert:i},range:q.cursor(t.head+i.length)}:o={range:t});return o?null:e.update(a,{scrollIntoView:!0,userEvent:"input.type"})}(e,0,n)}return null}(e.state,o);return!!n&&(e.dispatch(n),!0)}),lx=[{key:"Backspace",run:({state:e,dispatch:t})=>{if(e.readOnly)return!1;let i=ly(e,e.selection.main.head).brackets||ll.brackets,o=null,a=e.changeByRange(t=>{if(t.empty){let o=function(e,t){let i=e.sliceString(t-2,t);return S(v(i,0))==i.length?i:i.slice(1)}(e.doc,t.head);for(let a of i)if(a==o&&lb(e.doc,t.head)==lh(v(a,0)))return{changes:{from:t.head-a.length,to:t.head+a.length},range:q.cursor(t.head-a.length)}}return{range:o=t}});return o||t(e.update(a,{scrollIntoView:!0,userEvent:"delete.backward"})),!o}}];function lg(e,t){let i=!1;return e.field(lc).between(0,e.doc.length,e=>{e==t&&(i=!0)}),i}function lb(e,t){let i=e.sliceString(t,t+2);return i.slice(0,S(v(i,0)))}function lw(e,t){let i=rn(e).resolveInner(t+1);return i.parent&&i.from==t}function lk(e,t,i){let o=e.charCategorizer(t);if(o(e.sliceDoc(t-1,t))!=eC.Word)return t;for(let a of i){let i=t-a.length;if(e.sliceDoc(i,t)==a&&o(e.sliceDoc(i-1,i))!=eC.Word)return i}return -1}function lv(e={}){return[sK,sA.of(e),sI,lS,sJ]}const lO=[{key:"Ctrl-Space",run:e=>!!e.state.field(sK,!1)&&(e.dispatch({effects:sM.of(!0)}),!0)},{key:"Escape",run:e=>{let t=e.state.field(sK,!1);return!!(t&&t.active.some(e=>0!=e.state))&&(e.dispatch({effects:sR.of(null)}),!0)}},{key:"ArrowDown",run:sE(!0)},{key:"ArrowUp",run:sE(!1)},{key:"PageDown",run:sE(!0,"page")},{key:"PageUp",run:sE(!1,"page")},{key:"Enter",run:e=>{let t=e.state.field(sK,!1);return!(e.state.readOnly||!t||!t.open||t.open.selected<0||Date.now()-t.open.timestamp<e.state.facet(sA).interactionDelay)&&(!!t.open.disabled||sG(e,t.open.options[t.open.selected]))}}],lS=ei.highest(o8.computeN([sA],e=>e.facet(sA).defaultKeymap?[lO]:[]));let lC=[{label:"AASTriangle",type:"keyword",info:"AASTriangle[\xce\\[PlusMinus], \xceb2, a] returns a filled triangle with angles \xce\\[PlusMinus] and \xce.b2 and side length a, where a is adj"},{label:"AbelianGroup",type:"keyword",info:"AbelianGroup[{n , n , \xe2\x80\xa6}] represents the direct product of the cyclic groups of degrees n , n , \xe2\x80\xa6.\n "},{label:"Abort",type:"keyword",info:"Abort[] generates an interrupt to abort a computation. "},{label:"AbortKernels",type:"keyword",info:"AbortKernels[] aborts evaluations running in all parallel subkernels."},{label:"AbortProtect",type:"keyword",info:"AbortProtect[expr] evaluates expr, saving any aborts until the evaluation is complete. "},{label:"AbortScheduledTask",type:"keyword",info:"AbortScheduledTask[task] interrupts any currently evaluating instances of the cloud task task."},{label:"Above",type:"keyword",info:"Above is a symbol that represents the region above an object for purposes of placement."},{label:"Abs",type:"keyword",info:"Abs[z] gives the absolute value of the real or complex number z. "},{label:"AbsArg",type:"keyword",info:"AbsArg[z] gives the list {Abs[z], Arg[z]} of the number z."},{label:"AbsArgPlot",type:"keyword",info:"AbsArgPlot[f, {x, x   , x   }] generates a plot of Abs[f] colored by Arg[f] as a function of x \xe2\x88\x88 \xef\x9e\\[Micro] f"},{label:"Absolute",type:"keyword",info:"System`Absolute"},{label:"AbsoluteCorrelation",type:"keyword",info:"                                                                                                    "},{label:"AbsoluteCorrelationFunction",type:"keyword",info:"AbsoluteCorrelationFunction[data, hspec] estimates the absolute correlation function at lags hspec f"},{label:"AbsoluteCurrentValue",type:"keyword",info:"AbsoluteCurrentValue[item] gives the absolute current value of item at a location in the Wolfram Sys"},{label:"AbsoluteDashing",type:"keyword",info:"AbsoluteDashing[{d , d , \xe2\x80\xa6}] is a graphics directive which specifies that lines which follow are to "},{label:"AbsoluteFileName",type:"keyword",info:'AbsoluteFileName["name"] gives the full absolute version of the name for a file in your filesystem.'},{label:"AbsoluteOptions",type:"keyword",info:"AbsoluteOptions[expr] gives the absolute settings of options specified in an expression such as a gr"},{label:"AbsolutePointSize",type:"keyword",info:"AbsolutePointSize[d] is a graphics directive which specifies that points which follow are to be show"},{label:"AbsoluteThickness",type:"keyword",info:"AbsoluteThickness[d] is a graphics directive which specifies that lines which follow are to be drawn"},{label:"AbsoluteTime",type:"keyword",info:"AbsoluteTime[] gives the total number of seconds since the beginning of January 1, 1900, in your tim"},{label:"AbsoluteTiming",type:"keyword",info:"AbsoluteTiming[expr] evaluates expr, returning a list of the absolute number of seconds in real time"},{label:"AcceptanceThreshold",type:"keyword",info:"AcceptanceThreshold is an option that specifies the minimum threshold at which a result is considere"},{label:"AccountingForm",type:"keyword",info:"AccountingForm[expr] prints with all numbers in expr given in standard accounting notation. Accounti"},{label:"Accumulate",type:"keyword",info:"Accumulate[list] gives a list of the successive accumulated totals of elements in list. "},{label:"Accuracy",type:"keyword",info:"Accuracy[x] gives the effective number of digits to the right of the decimal point in the number x. "},{label:"AccuracyGoal",type:"keyword",info:"AccuracyGoal is an option for various numerical operations which specifies how many effective digits"},{label:"AcousticAbsorbingValue",type:"keyword",info:"AcousticAbsorbingValue[pred, vars, pars] represents a time or frequency domain absorbing boundary co"},{label:"AcousticImpedanceValue",type:"keyword",info:"AcousticImpedanceValue[pred, vars, pars] represents a time or frequency domain impedance boundary co"},{label:"AcousticNormalVelocityValue",type:"keyword",info:"AcousticNormalVelocityValue[pred, vars, pars] represents a time or frequency domain normal velocity "},{label:"AcousticPDEComponent",type:"keyword",info:"AcousticPDEComponent[vars, pars] yields an acoustic PDE term component with variables vars and param"},{label:"AcousticPressureCondition",type:"keyword",info:"AcousticPressureCondition[pred, vars, pars] represents a time or frequency domain pressure boundary "},{label:"AcousticRadiationValue",type:"keyword",info:"AcousticRadiationValue[pred, vars, pars] represents a time or frequency radiation boundary condition"},{label:"AcousticSoundHardValue",type:"keyword",info:"AcousticSoundHardValue[pred, vars, pars] represents a time or frequency domain sound hard boundary c"},{label:"AcousticSoundSoftCondition",type:"keyword",info:"AcousticSoundSoftCondition[pred, vars, pars] represents a time or frequency domain sound soft bounda"},{label:"ActionDelay",type:"keyword",info:"System`ActionDelay"},{label:"ActionMenu",type:"keyword",info:"ActionMenu[name, {lbl  :> act , lbl  :> act , \xe2\x80\xa6}] represents an action menu with label name and with"},{label:"ActionMenuBox",type:"keyword",info:"System`ActionMenuBox"},{label:"ActionMenuBoxOptions",type:"keyword",info:"ActionMenuBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Action"},{label:"Activate",type:"keyword",info:"Activate[expr] replaces all instances of Inactive[f] in expr with f.Activate[expr, patt] replaces on"},{label:"Active",type:"keyword",info:"Active is an option for ButtonBox, Cell, and Notebook that specifies whether a button should be acti"},{label:"ActiveClassification",type:"keyword",info:"ActiveClassification[f, {conf , conf , \xe2\x80\xa6}] gives an object representing the result of active classif"},{label:"ActiveClassificationObject",type:"keyword",info:"ActiveClassificationObject[\xe2\x80\xa6] represents the result of an ActiveClassification process."},{label:"ActiveItem",type:"keyword",info:"System`ActiveItem"},{label:"ActivePrediction",type:"keyword",info:"ActivePrediction[f, {conf , conf , \xe2\x80\xa6}] gives an object representing the result of active prediction "},{label:"ActivePredictionObject",type:"keyword",info:"ActivePredictionObject[\xe2\x80\xa6] represents the result of an ActivePrediction process."},{label:"ActiveStyle",type:"keyword",info:"ActiveStyle is an option for Hyperlink and related constructs that specifies styles to add when the "},{label:"AcyclicGraphQ",type:"keyword",info:"AcyclicGraphQ[g] yields True if the graph g is an acyclic graph and False otherwise."},{label:"AddOnHelpPath",type:"keyword",info:"AddOnHelpPath is a global option that specifies which directories are searched for additional help f"},{label:"AddSides",type:"keyword",info:"AddSides[rel, x] adds x to each side of the equation or inequality rel.AddSides[rel , rel ] adds the"},{label:"AddTo",type:"keyword",info:"x += dx adds dx to x and returns the new value of x. "},{label:"AddToSearchIndex",type:"keyword",info:"AddToSearchIndex[obj, content] adds the specified content to the existing search index object obj. A"},{label:"AddUsers",type:"keyword",info:"AddUsers[group, {user , \xe2\x80\xa6}] adds the users user  to the permissions group group. \n                  "},{label:"AdjacencyGraph",type:"keyword",info:"AdjacencyGraph[amat] gives the graph with adjacency matrix amat.AdjacencyGraph[{v , v , \xe2\x80\xa6}, amat] gi"},{label:"AdjacencyList",type:"keyword",info:"AdjacencyList[g, v] gives a list of vertices adjacent to vertex v.AdjacencyList[g, patt] gives a lis"},{label:"AdjacencyMatrix",type:"keyword",info:"AdjacencyMatrix[g] gives the vertex\xe2\x80\x93vertex adjacency matrix of the graph g.AdjacencyMatrix[{v \xef\x94\xa2 w, \xe2\x80\xa6"},{label:"AdjacentMeshCells",type:"keyword",info:"AdjacentMeshCells[mr, cellspec, d] gives cells of dimension d adjacent to the cell specified by cell"},{label:"Adjugate",type:"keyword",info:"Adjugate[m] gives the adjugate of a square matrix m."},{label:"AdjustmentBox",type:"keyword",info:"AdjustmentBox[box, opts] is a low-level box construct which displays with the placement of box adjus"},{label:"AdjustmentBoxOptions",type:"keyword",info:"AdjustmentBoxOptions is an option that specifies settings for AdjustmentBox objects."},{label:"AdjustTimeSeriesForecast",type:"keyword",info:"AdjustTimeSeriesForecast[tproc, forecast, newdata] adjusts forecast using new observations newdata a"},{label:"AdministrativeDivisionData",type:"keyword",info:"AdministrativeDivisionData[entity, property] gives the value of the specified property for the admin"},{label:"AffineHalfSpace",type:"keyword",info:"AffineHalfSpace[{p , \xe2\x80\xa6, p     }, w] represents AffineSpace[{p , \xe2\x80\xa6, p     }] extended in the directio"},{label:"AffineSpace",type:"keyword",info:"AffineSpace[{p , \xe2\x80\xa6, p     }] represents the affine space passing through the points p .AffineSpace[p"},{label:"AffineStateSpaceModel",type:"keyword",info:"AffineStateSpaceModel[{a, b, c, d}, x] represents the affine state-space model x ' (t) \xef\x90\\[PlusMinus] a(x(t)) + b"},{label:"AffineTransform",type:"keyword",info:"AffineTransform[m] gives a TransformationFunction that represents an affine transform that maps r to"},{label:"After",type:"keyword",info:"After is a symbol that represents the region after an object for purposes of placement."},{label:"AggregatedEntityClass",type:"keyword",info:'AggregatedEntityClass[class, "prop" \xef\x94\xa2 f] represents an entity class containing a single entity with '},{label:"AggregationLayer",type:"keyword",info:"AggregationLayer[f] represents a layer that aggregates an array of arbitrary rank into a vector, usi"},{label:"AircraftData",type:"keyword",info:"AircraftData[entity, property] gives the value of the specified property for the aircraft entity.Air"},{label:"AirportData",type:"keyword",info:"AirportData[entity, property] gives the value of the specified property for the airport entity.Airpo"},{label:"AirPressureData",type:"keyword",info:"AirPressureData[] gives the most recent measurement for air pressure near the current location.AirPr"},{label:"AirSoundAttenuation",type:"keyword",info:"AirSoundAttenuation[spec, frequency] returns the sound attenuation coefficient in moist air for the "},{label:"AirTemperatureData",type:"keyword",info:"AirTemperatureData[] gives the most recent measurement for air temperature near the current location"},{label:"AiryAi",type:"keyword",info:"AiryAi[z] gives the Airy function Ai(z). "},{label:"AiryAiPrime",type:"keyword",info:"                                                           \xe2\x80.b2\nAiryAiPrime[z] gives the derivative of "},{label:"AiryAiZero",type:"keyword",info:"                               th                                                                   "},{label:"AiryBi",type:"keyword",info:"AiryBi[z] gives the Airy function Bi(z). "},{label:"AiryBiPrime",type:"keyword",info:"                                                           \xe2\x80.b2\nAiryBiPrime[z] gives the derivative of "},{label:"AiryBiZero",type:"keyword",info:"                               th                                                                   "},{label:"AlgebraicIntegerQ",type:"keyword",info:"AlgebraicIntegerQ[a] yields True if a is an algebraic integer, and yields False otherwise."},{label:"AlgebraicNumber",type:"keyword",info:"                                                                                                    "},{label:"AlgebraicNumberDenominator",type:"keyword",info:"AlgebraicNumberDenominator[a] gives the smallest positive integer n such that n a is an algebraic in"},{label:"AlgebraicNumberNorm",type:"keyword",info:"AlgebraicNumberNorm[a] gives the norm of the algebraic number a."},{label:"AlgebraicNumberPolynomial",type:"keyword",info:"AlgebraicNumberPolynomial[a, x] gives the polynomial in x corresponding to the AlgebraicNumber objec"},{label:"AlgebraicNumberTrace",type:"keyword",info:"AlgebraicNumberTrace[a] gives the trace of the algebraic number a."},{label:"AlgebraicRules",type:"keyword",info:"System`AlgebraicRules"},{label:"AlgebraicRulesData",type:"keyword",info:"AlgebraicRulesData is an object returned by AlgebraicRules. Its OutputForm appears to be a list of r"},{label:"Algebraics",type:"keyword",info:"Algebraics represents the domain of algebraic numbers, as in x \xe2\x88\x88 Algebraics. "},{label:"AlgebraicUnitQ",type:"keyword",info:"AlgebraicUnitQ[a] yields True if a is an algebraic unit, and yields False otherwise."},{label:"Alignment",type:"keyword",info:"Alignment is an option which specifies how the contents of a displayed object should be aligned with"},{label:"AlignmentMarker",type:"keyword",info:"System`AlignmentMarker"},{label:"AlignmentPoint",type:"keyword",info:"AlignmentPoint is an option which specifies how objects should by default be aligned when they appea"},{label:"All",type:"keyword",info:"All is a setting used for certain options. In Part and related functions, All specifies all parts at"},{label:"AllowAdultContent",type:"keyword",info:"System`AllowAdultContent"},{label:"AllowedCloudExtraParameters",type:"keyword",info:"AllowedCloudExtraParameters is an option for APIFunction and related functions that specifies whethe"},{label:"AllowedCloudParameterExtensions",type:"keyword",info:"AllowedCloudParameterExtensions is an option for APIFunction and related functions that specifies wh"},{label:"AllowedDimensions",type:"keyword",info:"AllowedDimensions is an option for Grid and related functions that specifies the allowed minimum and"},{label:"AllowedFrequencyRange",type:"keyword",info:"AllowedFrequencyRange is an option for audio and signal processing functions that specifies the rang"},{label:"AllowedHeads",type:"keyword",info:"AllowedHeads is an option that specifies the heads of subexpressions into which a function may desce"},{label:"AllowGroupClose",type:"keyword",info:"AllowGroupClose is an option for Cell that specifies whether a cell group can be closed normally."},{label:"AllowIncomplete",type:"keyword",info:"System`AllowIncomplete"},{label:"AllowInlineCells",type:"keyword",info:"AllowInlineCells is an option for SelectedCells, Cell, and related constructs that specifies whether"},{label:"AllowKernelInitialization",type:"keyword",info:"System`AllowKernelInitialization"},{label:"AllowLooseGrammar",type:"keyword",info:"AllowLooseGrammar is an option for GrammarRules and related functions that specifies whether grammat"},{label:"AllowReverseGroupClose",type:"keyword",info:"AllowReverseGroupClose is an option for Cell that specifies whether a cell group can be reverse clos"},{label:"AllowScriptLevelChange",type:"keyword",info:"AllowScriptLevelChange is an option for fractions and grids that controls whether certain operators,"},{label:"AllowVersionUpdate",type:"keyword",info:"AllowVersionUpdate is an option for PacletInstall and PacletInstallSubmit that specifies whether a n"},{label:"AllTrue",type:"keyword",info:"AllTrue[{e , e , \xe2\x80\xa6}, test] yields True if test[e ] is True for all of the e .AllTrue[expr, test, lev"},{label:"Alphabet",type:"keyword",info:"Alphabet[] gives a list of the lowercase letters a through z in the English alphabet.Alphabet[type] "},{label:"AlphabeticOrder",type:"keyword",info:'AlphabeticOrder[string , string ] gives 1 if "string " appears before "string " in alphabetical orde'},{label:"AlphabeticSort",type:"keyword",info:"AlphabeticSort[list] sorts the elements of list into alphabetical order.AlphabeticSort[list, lang] s"},{label:"AlphaChannel",type:"keyword",info:"AlphaChannel[color] returns the opacity of color.AlphaChannel[image] returns the alpha channel of im"},{label:"AlternateImage",type:"keyword",info:"AlternateImage is an option to CDFInformation that specifies an image that should be used if the plu"},{label:"AlternatingFactorial",type:"keyword",info:"AlternatingFactorial[n] gives the alternating factorial a(n)."},{label:"AlternatingGroup",type:"keyword",info:"AlternatingGroup[n] represents the alternating group of degree n."},{label:"AlternativeHypothesis",type:"keyword",info:"AlternativeHypothesis is an option for hypothesis testing functions like LocationTest that specifies"},{label:"Alternatives",type:"keyword",info:"p  | p  | \xe2\x80\xa6 is a pattern object that represents any of the patterns p . \n 1    2                    "},{label:"AltitudeMethod",type:"keyword",info:"AltitudeMethod is an option for SunPosition, MoonPosition, and related functions that determines whe"},{label:"AmbientLight",type:"keyword",info:"AmbientLight[col] is a three-dimensional graphics directive that specifies the uniform ambient light"},{label:"AmbiguityFunction",type:"keyword",info:"AmbiguityFunction is an option for SemanticInterpretation, Interpreter, and related functions that s"},{label:"AmbiguityList",type:"keyword",info:"AmbiguityList[{expr , expr , \xe2\x80\xa6}] represents possible results derived from an ambiguous semantic inte"},{label:"Analytic",type:"keyword",info:"Analytic is an option for Limit and Series. With Analytic -> True, unrecognized functions are treate"},{label:"AnatomyData",type:"keyword",info:"AnatomyData[entity, property] gives the value of the specified property for the anatomical structure"},{label:"AnatomyForm",type:"keyword",info:"AnatomyForm[g] is a graphics directive used in AnatomyPlot3D that specifies how anatomy entity\xe2\x80\x90based"},{label:"AnatomyPlot3D",type:"keyword",info:"AnatomyPlot3D[primitives, options] represents a three-dimensional graphical image that works with an"},{label:"AnatomySkinStyle",type:"keyword",info:"AnatomySkinStyle is an option of AnatomyPlot3D that specifies what style to use for automatically in"},{label:"AnatomyStyling",type:"keyword",info:"AnatomyStyling[g] is a graphics directive used in AnatomyPlot3D that specifies how anatomy entity\xe2\x80\x90ba"},{label:"AnchoredSearch",type:"keyword",info:"AnchoredSearch is an option for Find and FindList that specifies whether the text searched for must "},{label:"And",type:"keyword",info:"e  && e  && \xe2\x80\xa6 is the logical AND function. It evaluates its arguments in order, giving False immedia"},{label:"AndersonDarlingTest",type:"keyword",info:"AndersonDarlingTest[data] tests whether data is normally distributed using the Anderson\xe2\x80\x93Darling test"},{label:"AngerJ",type:"keyword",info:"                                                                                                 \xce\xbc\nA"},{label:"AngleBisector",type:"keyword",info:"AngleBisector[{q , p, q }] gives the bisector of the interior angle at p formed by the triangle with"},{label:"AngleBracket",type:"keyword",info:"AngleBracket[x, y, \xe2\x80\xa6] displays as \xe2\x8c\xa9 x, y, \xe2\x80\xa6 \xe2\x8c\xaa."},{label:"AnglePath",type:"keyword",info:"AnglePath[{\xce\xb8 , \xce\xb8 , \xce\xb8 , \xe2\x80\xa6}] gives the list of 2D coordinates corresponding to a path that starts at {"},{label:"AnglePath3D",type:"keyword",info:"AnglePath3D[{{\xce\\[PlusMinus] , \xce.b2 , \xce.b3 }, {\xce\\[PlusMinus] , \xce.b2 , \xce.b3 }, \xe2\x80\xa6}] gives the list of 3D coordinates of a path of an object"},{label:"AngleVector",type:"keyword",info:"AngleVector[\xce\xb8] gives the list representing the 2D unit vector at angle \xce\xb8 relative to the x axis.Angl"},{label:"AngularGauge",type:"keyword",info:"AngularGauge[value] draws a gauge showing value in the range 0 to 1.AngularGauge[value, {min, max}] "},{label:"Animate",type:"keyword",info:"Animate[expr, {u, u   , u   }] generates an animation of expr in which u varies continuously from u "},{label:"AnimatedImage",type:"keyword",info:"AnimatedImage[{image , image , \xe2\x80\xa6}] generates an animation whose frames are the successive image . An"},{label:"AnimationCycleOffset",type:"keyword",info:"AnimationCycleOffset is an option for cells that specifies the relative position of the next graphic"},{label:"AnimationCycleRepetitions",type:"keyword",info:"AnimationCycleRepetitions is an option for cells that specifies the number of times a given animatio"},{label:"AnimationDirection",type:"keyword",info:"AnimationDirection is an option which specifies the direction to run an animation. "},{label:"AnimationDisplayTime",type:"keyword",info:"AnimationDisplayTime is an option for Cell that specifies the minimum time in seconds for which a ce"},{label:"AnimationRate",type:"keyword",info:"AnimationRate is an option for Animate and Animator that specifies at what rate an animation should "},{label:"AnimationRepetitions",type:"keyword",info:"AnimationRepetitions is an option to Animate and related functions that specifies how many times the"},{label:"AnimationRunning",type:"keyword",info:"AnimationRunning is an option to Animate and related functions that specifies whether the animation "},{label:"AnimationRunTime",type:"keyword",info:"AnimationRunTime is an option to Animator and related functions that indicates how long the animatio"},{label:"AnimationTimeIndex",type:"keyword",info:"AnimationTimeIndex is an option to Animator and related functions that specifies the current time in"},{label:"AnimationVideo",type:"keyword",info:"AnimationVideo[fexpr, {u, u   , u   }] generates a video of fexpr in which u varies from u    to u  "},{label:"Animator",type:"keyword",info:"Animator[u] represents an object that displays with the value of u being continually increased from "},{label:"AnimatorBox",type:"keyword",info:"System`AnimatorBox"},{label:"AnimatorBoxOptions",type:"keyword",info:"AnimatorBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Animator"},{label:"AnimatorElements",type:"keyword",info:"System`AnimatorElements"},{label:"Annotate",type:"keyword",info:"Annotate[obj, key \xef\x94\xa2 value] sets the annotation key \xef\x94\xa2 value for the object obj.Annotate[{obj, itemspe"},{label:"Annotation",type:"keyword",info:'Annotation[expr, data] represents an expression expr, with annotation data.Annotation[expr, data, "t'},{label:"AnnotationDelete",type:"keyword",info:"AnnotationDelete[obj] deletes all annotations of the object obj.AnnotationDelete[{obj, itemspec}] de"},{label:"AnnotationKeys",type:"keyword",info:"AnnotationKeys[obj] lists all annotation keys available for the object obj.AnnotationKeys[{obj, item"},{label:"AnnotationRules",type:"keyword",info:"AnnotationRules is an option that allows specification of annotations to objects and items in object"},{label:"AnnotationValue",type:"keyword",info:"AnnotationValue[obj, key] gives the annotation value associated with key for the object obj.Annotati"},{label:"Annuity",type:"keyword",info:"Annuity[p, t] represents an annuity of fixed payments p made over t periods.Annuity[p, t, q] represe"},{label:"AnnuityDue",type:"keyword",info:"AnnuityDue[p, t] represents an annuity due of fixed payments p made over t periods.AnnuityDue[p, t, "},{label:"Annulus",type:"keyword",info:"Annulus[{x, y}, {r     , r     }] represents an annulus centered at {x, y} with inner radius r      "},{label:"AnomalyDetection",type:"keyword",info:"AnomalyDetection[{example , example , \xe2\x80\xa6}] generates an AnomalyDetectorFunction[\xe2\x80\xa6] based on the examp"},{label:"AnomalyDetector",type:"keyword",info:"AnomalyDetector is an option for functions such as Classify that specifies an anomaly detector for t"},{label:"AnomalyDetectorFunction",type:"keyword",info:"AnomalyDetectorFunction[\xe2\x80\xa6] represents a function generated by AnomalyDetection for detecting whether"},{label:"Anonymous",type:"keyword",info:"Anonymous represents an option or other value that indicates the absence of a name."},{label:"Antialiasing",type:"keyword",info:"Antialiasing is an option that specifies whether antialiasing should be done."},{label:"Antihermitian",type:"keyword",info:"Antihermitian[{1, 2}] represents the symmetry of an antihermitian matrix."},{label:"AntihermitianMatrixQ",type:"keyword",info:"AntihermitianMatrixQ[m] gives True if m is explicitly antihermitian, and False otherwise."},{label:"Antisymmetric",type:"keyword",info:"Antisymmetric[{s , \xe2\x80\xa6, s }] represents the symmetry of a tensor that is antisymmetric in the slots s "},{label:"AntisymmetricMatrixQ",type:"keyword",info:"AntisymmetricMatrixQ[m] gives True if m is explicitly antisymmetric, and False otherwise."},{label:"Antonyms",type:"keyword",info:'Antonyms["word"] returns the antonyms associated with the specified word.'},{label:"AnyOrder",type:"keyword",info:"AnyOrder[p , p , \xe2\x80\xa6] is a grammar rules pattern object that represents a sequence of elements matchin"},{label:"AnySubset",type:"keyword",info:"AnySubset[{c , c , \xe2\x80\xa6}] represents an element in an interpreter or form that accepts any subset of th"},{label:"AnyTrue",type:"keyword",info:"AnyTrue[{e , e , \xe2\x80\xa6}, test] yields True if test[e ] is True for any of the e .AnyTrue[expr, test, lev"},{label:"Apart",type:"keyword",info:"Apart[expr] rewrites a rational expression as a sum of terms with minimal denominators. Apart[expr, "},{label:"ApartSquareFree",type:"keyword",info:"ApartSquareFree[expr] rewrites a rational expression as a sum of terms whose denominators are powers"},{label:"APIFunction",type:"keyword",info:"APIFunction[{name  \xef\x94\xa2 type , name  \xef\x94\xa2 type , \xe2\x80\xa6}, fun] represents an API with parameters name  that eva"},{label:"Appearance",type:"keyword",info:"Appearance is an option for displayed objects such as Button and Slider that specifies the general t"},{label:"AppearanceElements",type:"keyword",info:"AppearanceElements is an option for functions like Manipulate that specifies what elements should be"},{label:"AppearanceRules",type:"keyword",info:"AppearanceRules is an option for form and page generation functions that specifies the overall appea"},{label:"AppellF1",type:"keyword",info:"AppellF1[a, b , b , c, x, y] is the Appell hypergeometric function of two variables F  (a ; b , b  ;"},{label:"Append",type:"keyword",info:"Append[expr, elem] gives expr with elem appended. Append[elem] represents an operator form of Append"},{label:"AppendCheck",type:"keyword",info:"System`AppendCheck"},{label:"AppendLayer",type:"keyword",info:"AppendLayer[] represents a net layer that takes an input array and appends another array to it."},{label:"AppendTo",type:"keyword",info:"AppendTo[x, elem] appends elem to the value of x, and resets x to the result. "},{label:"Application",type:"keyword",info:"f \xef\x94\\[Degree] g or Application[f, g] represents the formal application of f to g."},{label:"ApplicationIdentificationKey",type:"keyword",info:"System`ApplicationIdentificationKey"},{label:"Apply",type:"keyword",info:"f @@ expr or Apply[f, expr] replaces the head of expr by f. f@@@expr or Apply[f, expr, {1}] replaces"},{label:"ApplySides",type:"keyword",info:"ApplySides[f, rel] applies f to each side of the equation or inequality rel."},{label:"ApplyTo",type:"keyword",info:"ApplyTo[x, f] or x//= f computes f[x] and resets x to the result."},{label:"ArcCos",type:"keyword",info:"                                  -1\nArcCos[z] gives the arc cosine cos  (z) of the complex number z"},{label:"ArcCosh",type:"keyword",info:"                                                   -1\nArcCosh[z] gives the inverse hyperbolic cosine"},{label:"ArcCot",type:"keyword",info:"                                     -1\nArcCot[z] gives the arc cotangent cot  (z) of the complex nu"},{label:"ArcCoth",type:"keyword",info:"                                                      -1\nArcCoth[z] gives the inverse hyperbolic cot"},{label:"ArcCsc",type:"keyword",info:"                                    -1\nArcCsc[z] gives the arc cosecant csc  (z) of the complex numb"},{label:"ArcCsch",type:"keyword",info:"                                                     -1\nArcCsch[z] gives the inverse hyperbolic cose"},{label:"ArcCurvature",type:"keyword",info:"ArcCurvature[{x , \xe2\x80\xa6, x }, t] gives the curvature of the parametrized curve whose Cartesian coordinat"},{label:"ARCHProcess",type:"keyword",info:"ARCHProcess[\xce\xba, {\xce\\[PlusMinus] , \xe2\x80\xa6, \xce\\[PlusMinus] }] represents an autoregressive conditionally heteroscedastic process of or"},{label:"ArcLength",type:"keyword",info:"ArcLength[reg] gives the length of the one-dimensional region reg.ArcLength[{x , \xe2\x80\xa6, x }, {t, t   , t"},{label:"ArcSec",type:"keyword",info:"                                  -1\nArcSec[z] gives the arc secant sec  (z) of the complex number z"},{label:"ArcSech",type:"keyword",info:"                                                   -1\nArcSech[z] gives the inverse hyperbolic secant"},{label:"ArcSin",type:"keyword",info:"                                -1\nArcSin[z] gives the arc sine sin  (z) of the complex number z. "},{label:"ArcSinDistribution",type:"keyword",info:"ArcSinDistribution[{x   , x   }] represents the arc sine distribution supported between x    and x  "},{label:"ArcSinh",type:"keyword",info:"                                                 -1\nArcSinh[z] gives the inverse hyperbolic sine sin"},{label:"ArcTan",type:"keyword",info:"                                   -1                                                               "},{label:"ArcTanh",type:"keyword",info:"                                                    -1\nArcTanh[z] gives the inverse hyperbolic tange"},{label:"Area",type:"keyword",info:"Area[reg] gives the area of the two-dimensional region reg.Area[{x , \xe2\x80\xa6, x }, {s, s   , s   }, {t, t "},{label:"Arg",type:"keyword",info:"Arg[z] gives the argument of the complex number z. "},{label:"ArgMax",type:"keyword",info:"ArgMax[f, x] gives a position x    at which f is maximized.ArgMax[f, {x, y, \xe2\x80\xa6}] gives a position {x "},{label:"ArgMin",type:"keyword",info:"ArgMin[f, x] gives a position x    at which f is minimized.ArgMin[f, {x, y, \xe2\x80\xa6}] gives a position {x "},{label:"ArgumentCountQ",type:"keyword",info:"ArgumentCountQ[head, len, min, max] tests whether the number len of arguments of a function head is "},{label:"ArgumentsOptions",type:"keyword",info:"ArgumentsOptions[f[args], n] tries to separate args into a list of n positional arguments followed b"},{label:"ARIMAProcess",type:"keyword",info:"                                                                                                    "},{label:"ArithmeticGeometricMean",type:"keyword",info:"ArithmeticGeometricMean[a, b] gives the arithmetic\xe2\x80\x90geometric mean of a and b. "},{label:"ARMAProcess",type:"keyword",info:"ARMAProcess[{a , \xe2\x80\xa6, a }, {b , \xe2\x80\xa6, b }, v] represents a weakly stationary autoregressive moving-averag"},{label:"Around",type:"keyword",info:"Around[x, \xce.b4] represents an approximate number or quantity with a value around x and an uncertainty \xce.b4"},{label:"AroundReplace",type:"keyword",info:"AroundReplace[expr, {s  \xef\x94\xa2 Around[x , \xce.b4 ], s  \xef\x94\xa2 Around[x , \xce.b4 ], \xe2\x80\xa6}] propagates uncertainty in expr by"},{label:"ARProcess",type:"keyword",info:"ARProcess[{a , \xe2\x80\xa6, a }, v] represents a weakly stationary autoregressive process of order p with norm"},{label:"Array",type:"keyword",info:"Array[f, n] generates a list of length n, with elements f[i]. Array[f, n, r] generates a list using "},{label:"ArrayComponents",type:"keyword",info:"ArrayComponents[array] gives an array in which all identical elements of array are replaced by an in"},{label:"ArrayDepth",type:"keyword",info:"ArrayDepth[expr] gives the depth to which expr is a full array, with all the parts at a particular l"},{label:"ArrayFilter",type:"keyword",info:"ArrayFilter[f, array, r] applies f to all range-r blocks in the specified array.ArrayFilter[f, array"},{label:"ArrayFlatten",type:"keyword",info:"ArrayFlatten[{{m  , m  , \xe2\x80\xa6}, {m  , m  , \xe2\x80\xa6}, \xe2\x80\xa6}] creates a single flattened matrix from a matrix of m"},{label:"ArrayMesh",type:"keyword",info:"ArrayMesh[array] generates a mesh region from an array of rank d in which each cell has a geometric "},{label:"ArrayPad",type:"keyword",info:"ArrayPad[array, m] gives an array with m zeros of padding on every side. ArrayPad[array, m, padding]"},{label:"ArrayPlot",type:"keyword",info:"ArrayPlot[array] generates a plot in which the values in an array are shown in a discrete array of s"},{label:"ArrayPlot3D",type:"keyword",info:"ArrayPlot3D[array] generates a plot in which the values in an array are shown in a discrete array of"},{label:"ArrayQ",type:"keyword",info:"ArrayQ[expr] gives True if expr is a full array or a SparseArray object, and gives False otherwise. "},{label:"ArrayReduce",type:"keyword",info:"ArrayReduce[f, array, n] reduces dimension n of array by applying f.ArrayReduce[f, array, n  ;; n ] "},{label:"ArrayResample",type:"keyword",info:"ArrayResample[array, {n , n , \xe2\x80\xa6}] resamples array to have dimensions {n , n , \xe2\x80\xa6}.ArrayResample[array"},{label:"ArrayReshape",type:"keyword",info:"ArrayReshape[list, dims] arranges the elements of list into a rectangular array with dimensions dims"},{label:"ArrayRules",type:"keyword",info:"ArrayRules[SparseArray[\xe2\x80\xa6]] gives the rules {pos  \xef\x94\xa2 val , pos  \xef\x94\xa2 val , \xe2\x80\xa6} specifying elements in a sp"},{label:"Arrays",type:"keyword",info:"Arrays[{d , \xe2\x80\xa6, d }] represents the domain of arrays of rank r and dimensions d .Arrays[{d , \xe2\x80\xa6, d }, "},{label:"Arrow",type:"keyword",info:"Arrow[{pt , pt }] is a graphics primitive that represents an arrow from pt  to pt .Arrow[{pt , pt },"},{label:"Arrow3DBox",type:"keyword",info:"System`Arrow3DBox"},{label:"ArrowBox",type:"keyword",info:"System`ArrowBox"},{label:"Arrowheads",type:"keyword",info:"Arrowheads[spec] is a graphics directive specifying that arrows that follow should have arrowheads w"},{label:"ASATriangle",type:"keyword",info:"ASATriangle[\xce\\[PlusMinus], c, \xce.b2] returns a filled triangle with angles \xce\\[PlusMinus] and \xce.b2 and side length c, and c is adjac"},{label:"Ask",type:"keyword",info:'Ask["key"] is a construct for use inside AskFunction that gives the value associated with key, or in'},{label:"AskAppend",type:"keyword",info:'AskAppend["key"] is a construct for use inside AskFunction that asks for a new value, appends it to '},{label:"AskConfirm",type:"keyword",info:'AskConfirm["key"] is a construct for use inside AskFunction that asks for confirmation of the curren'},{label:"AskDisplay",type:"keyword",info:"AskDisplay[expr] is a construct for use inside AskFunction that displays the result of evaluating ex"},{label:"AskedQ",type:"keyword",info:'AskedQ["key"] is a construct for use inside AskFunction that gives True if a value is currently asso'},{label:"AskedValue",type:"keyword",info:'AskedValue["key"] is a construct for use inside AskFunction that gives the value associated with key'},{label:"AskFunction",type:"keyword",info:"AskFunction[body] evaluates body, interactively asking for values specified by Ask[\xe2\x80\xa6] and related co"},{label:"AskState",type:"keyword",info:"AskState[] is a construct for use inside AskFunction that returns an association of all values in th"},{label:"AskTemplateDisplay",type:"keyword",info:"AskTemplateDisplay[fun] is a construct for use inside AskFunction that displays the result of applyi"},{label:"AspectRatio",type:"keyword",info:"AspectRatio is an option for Graphics and related functions that specifies the ratio of height to wi"},{label:"AspectRatioFixed",type:"keyword",info:"AspectRatioFixed is an option for Cell that specifies whether graphics in the cell should be constra"},{label:"Assert",type:"keyword",info:"Assert[test] represents the assertion that test is True. If assertions have been enabled, test is ev"},{label:"AssessmentFunction",type:"keyword",info:"AssessmentFunction[key] represents a tool for assessing whether answers are correct according to the"},{label:"AssessmentResultObject",type:"keyword",info:"AssessmentResultObject[assoc] represents the results of an assessment.AssessmentResultObject[{aro , "},{label:"AssociateTo",type:"keyword",info:"AssociateTo[a, key \xef\x94\xa2 val] changes the association a by adding the key-value pair key \xef\x94\xa2 val.Associate"},{label:"Association",type:"keyword",info:"Association[key  \xef\x94\xa2 val , key  \xef\x94\xa2 val , \xe2\x80\xa6] or \xef\x84\x93 key  \xef\x94\xa2 val , key  \xef\x94\xa2 val , \xe2\x80\xa6 \xef\x84\x94 represents an associatio"},{label:"AssociationFormat",type:"keyword",info:"AssociationFormat is an option to TextString and related functions that determines how associations "},{label:"AssociationMap",type:"keyword",info:"AssociationMap[f, {key , key , \xe2\x80\xa6}] creates the association \xef\x84\x93 key  \xef\x94\xa2 f[key ], key  \xef\x94\xa2 f[key ], \xe2\x80\xa6 \xef\x84\x94.Ass"},{label:"AssociationQ",type:"keyword",info:"AssociationQ[expr] gives True if expr is a valid Association object, and False otherwise."},{label:"AssociationThread",type:"keyword",info:"AssociationThread[{key , key , \xe2\x80\xa6} \xef\x94\xa2 {val , val , \xe2\x80\xa6}] gives the association \xef\x84\x93 key  \xef\x94\xa2 val , key  \xef\x94\xa2 val"},{label:"AssumeDeterministic",type:"keyword",info:"AssumeDeterministic is an option for functions such as BayesianMinimization that specifies whether o"},{label:"Assuming",type:"keyword",info:"Assuming[assum, expr] evaluates expr with assum appended to ECAssumptions, so that assum is included "},{label:"Assumptions",type:"keyword",info:"Assumptions is an option for functions such as Simplify, Refine, and Integrate that specifies defaul"},{label:"AstronomicalData",type:"keyword",info:'AstronomicalData["name", "property"] gives the value of the specified property of the astronomical o'},{label:"Asymptotic",type:"keyword",info:"Asymptotic[expr, x \xef\x94\xa2 x ] gives an asymptotic approximation for expr near x .Asymptotic[expr, {x, x ,"},{label:"AsymptoticDSolveValue",type:"keyword",info:"AsymptoticDSolveValue[eqn, f, x \xef\x94\xa2 x ] computes an asymptotic approximation to the differential equat"},{label:"AsymptoticEqual",type:"keyword",info:"                           *                                                             *          "},{label:"AsymptoticEquivalent",type:"keyword",info:"                                *                                           *                       "},{label:"AsymptoticExpectation",type:"keyword",info:"AsymptoticExpectation[expr, x \xef\x8f\x92 dist, a \xef\x94\xa2 a ] computes an asymptotic approximation for the expectati"},{label:"AsymptoticGreater",type:"keyword",info:"                             *                                                             *        "},{label:"AsymptoticGreaterEqual",type:"keyword",info:"                                  *                                                             *   "},{label:"AsymptoticIntegrate",type:"keyword",info:"                                                                                                    "},{label:"AsymptoticLess",type:"keyword",info:"                          *                                                             *           "},{label:"AsymptoticLessEqual",type:"keyword",info:"                               *                                                             *      "},{label:"AsymptoticOutputTracker",type:"keyword",info:"AsymptoticOutputTracker[sys, {f , \xe2\x80\xa6}, {p , \xe2\x80\xa6}] gives the state feedback control law that causes the "},{label:"AsymptoticProbability",type:"keyword",info:"AsymptoticProbability[pred, x \xef\x8f\x92 dist, a \xef\x94\xa2 a ] computes an asymptotic approximation for the probabili"},{label:"AsymptoticProduct",type:"keyword",info:"                                                                                                    "},{label:"AsymptoticRSolveValue",type:"keyword",info:"AsymptoticRSolveValue[eqn, f, x \xef\x94\xa2 \xe2\x88\x9e] computes an asymptotic approximation to the difference equation"},{label:"AsymptoticSolve",type:"keyword",info:"AsymptoticSolve[eqn, y \xef\x94\xa2 b, x -> a] computes asymptotic approximations of solutions y[x] of the equa"},{label:"AsymptoticSum",type:"keyword",info:"                                                                                                    "},{label:"Asynchronous",type:"keyword",info:"Asynchronous is an option for WolframAlpha that determines whether to use the asynchronous features "},{label:"AsynchronousTaskObject",type:"keyword",info:'AsynchronousTaskObject["name", id, sessionid] is an object that represents asynchronous evaluations '},{label:"AsynchronousTasks",type:"keyword",info:"AsynchronousTasks[] returns a list of running asynchronous tasks."},{label:"Atom",type:"keyword",info:'Atom["sym"] represents an atom with atomic symbol "sym".Atom["sym", name \xef\x94\xa2 value, \xe2\x80\xa6] represents an a'},{label:"AtomCoordinates",type:"keyword",info:"AtomCoordinates is an option for Molecule and related functions that specifies the three-dimensional"},{label:"AtomCount",type:"keyword",info:"AtomCount[mol] gives the number of atoms in the molecule represented by mol.AtomCount[mol, patt] giv"},{label:"AtomDiagramCoordinates",type:"keyword",info:"AtomDiagramCoordinates is an option for Molecule and related functions that specifies the two-dimens"},{label:"AtomLabels",type:"keyword",info:"AtomLabels is an option for MoleculePlot and MoleculePlot3D that specifies what labels and label pos"},{label:"AtomLabelStyle",type:"keyword",info:"AtomLabelStyle is an option for MoleculePlot and MoleculePlot3D that specifies the style to use for "},{label:"AtomList",type:"keyword",info:"AtomList[mol] gives the list of atoms in the molecule represented by mol.AtomList[mol, patt] gives t"},{label:"AtomQ",type:"keyword",info:"AtomQ[expr] yields True if expr is an expression which cannot be divided into subexpressions, and yi"},{label:"AttachCell",type:"keyword",info:"AttachCell[expr] makes expr a cell attached to the current cell being evaluated.AttachCell[obj, expr"},{label:"AttachedCell",type:"keyword",info:"AttachedCell is an option for Cells that indicates whether to find cells that created with AttachCel"},{label:"AttentionLayer",type:"keyword",info:"AttentionLayer[] represents a trainable net layer that learns to pay attention to certain portions o"},{label:"Attributes",type:"keyword",info:'Attributes[symbol] gives the list of attributes for a symbol. Attributes["symbol"] gives the attribu'},{label:"Audio",type:"keyword",info:"Audio[file] represents audio stored in the given file.Audio[url] represents audio stored in the give"},{label:"AudioAmplify",type:"keyword",info:"AudioAmplify[audio, s] multiplies all samples of audio by a factor s. "},{label:"AudioAnnotate",type:"keyword",info:"AudioAnnotate[audio, prop] computes the property prop and adds it as an annotation to audio.AudioAnn"},{label:"AudioAnnotationLookup",type:"keyword",info:"AudioAnnotationLookup[audio] gives all annotations associated to audio.AudioAnnotationLookup[audio, "},{label:"AudioBlockMap",type:"keyword",info:"AudioBlockMap[f, audio, dur] applies f to non-overlapping partitions of length dur in audio. AudioBl"},{label:"AudioCapture",type:"keyword",info:"AudioCapture[] creates a temporary interactive interface for capturing an audio signal.AudioCapture["},{label:"AudioChannelAssignment",type:"keyword",info:"AudioChannelAssignment is an option for Audio and related functions that specifies a mapping from au"},{label:"AudioChannelCombine",type:"keyword",info:"AudioChannelCombine[{audio , audio , \xe2\x80\xa6}] creates a multichannel audio object by combining the sequen"},{label:"AudioChannelMix",type:"keyword",info:"AudioChannelMix[audio] mixes channels of audio by averaging and returns a center-panned stereo audio"},{label:"AudioChannels",type:"keyword",info:"AudioChannels[audio] returns the number of channels in the Audio object audio.AudioChannels[video] r"},{label:"AudioChannelSeparate",type:"keyword",info:"AudioChannelSeparate[audio] gives a list of Audio objects, each of which represents one channel of a"},{label:"AudioData",type:"keyword",info:'AudioData[audio] gives an array of audio samples.AudioData[audio, "type"] gives an array of audio sa'},{label:"AudioDelay",type:"keyword",info:"AudioDelay[audio, delay] creates audio by adding repeated decaying echos to audio spaced by the spec"},{label:"AudioDelete",type:"keyword",info:"AudioDelete[audio, t] deletes the first t seconds of audio.AudioDelete[audio, -t] deletes the last t"},{label:"AudioDevice",type:"keyword",info:"AudioDevice is an option for Audio and related functions that specifies the device to use for playba"},{label:"AudioDistance",type:"keyword",info:"AudioDistance[audio , audio ] returns a distance measure between audio  and audio .\n                "},{label:"AudioEncoding",type:"keyword",info:"AudioEncoding is an option for Export and other functions that specifies the audio encoding to use w"},{label:"AudioFade",type:"keyword",info:"AudioFade[audio] returns audio in which the beginning and end of audio are faded.AudioFade[audio, t]"},{label:"AudioFrequencyShift",type:"keyword",info:"AudioFrequencyShift[audio, freq] gives audio by shifting the spectrum of audio by freq.AudioFrequenc"},{label:"AudioGenerator",type:"keyword",info:"AudioGenerator[model] generates one second of audio of a given model.AudioGenerator[model, t] genera"},{label:"AudioIdentify",type:"keyword",info:"AudioIdentify[audio] yields the result of attempting to identify what audio is a recording of.AudioI"},{label:"AudioInputDevice",type:"keyword",info:"AudioInputDevice is an option for AudioCapture that specifies the device to use for audio recording."},{label:"AudioInsert",type:"keyword",info:"AudioInsert[audio, t \xef\x94\xa2 new] inserts the audio signal new at time t.AudioInsert[audio, {t , t , \xe2\x80\xa6} \xef\x94\xa2 "},{label:"AudioInstanceQ",type:"keyword",info:"AudioInstanceQ[audio, obj] gives True if audio sounds to be an instance of the object obj, and gives"},{label:"AudioIntervals",type:"keyword",info:"AudioIntervals[audio] returns audible intervals of audio.AudioIntervals[audio, crit] returns interva"},{label:"AudioJoin",type:"keyword",info:"AudioJoin[audio , audio , \xe2\x80\xa6] or AudioJoin[{audio , audio , \xe2\x80\xa6}] concatenates all audio  and returns a"},{label:"AudioLabel",type:"keyword",info:"AudioLabel is an option for an Audio object that specifies the label to show on the object."},{label:"AudioLength",type:"keyword",info:"AudioLength[audio] returns the number of samples in the Audio object audio."},{label:"AudioLocalMeasurements",type:"keyword",info:'AudioLocalMeasurements[audio, "prop"] computes the property "prop" locally for partitions of audio.A'},{label:"AudioLooping",type:"keyword",info:"AudioLooping is an option for AudioStream and related functions to specify the playback looping."},{label:"AudioLoudness",type:"keyword",info:"AudioLoudness[audio] computes the loudness of audio according to the EBU momentary definition.AudioL"},{label:"AudioMeasurements",type:"keyword",info:'AudioMeasurements[audio, "prop"] computes the property "prop" for the entire audio.AudioMeasurements'},{label:"AudioNormalize",type:"keyword",info:"AudioNormalize[audio] normalizes audio so that the maximum absolute value of its samples is 1.AudioN"},{label:"AudioOutputDevice",type:"keyword",info:"AudioOutputDevice is an option for Audio and related functions that specifies the device to use for "},{label:"AudioOverlay",type:"keyword",info:"AudioOverlay[{audio , audio , \xe2\x80\xa6}] returns an audio object by overlaying all audio .\n                "},{label:"AudioPad",type:"keyword",info:"AudioPad[audio, t] adds t seconds of silence to the end of audio.AudioPad[audio, {t , t }] adds t  s"},{label:"AudioPan",type:"keyword",info:"AudioPan[audio] returns a center-panned stereo audio object from a mono audio. AudioPan[audio, pan] "},{label:"AudioPartition",type:"keyword",info:"AudioPartition[audio, dur] partitions an audio object into non-overlapping segments of duration dur."},{label:"AudioPause",type:"keyword",info:"AudioPause[] pauses the playback of all AudioStream objects.AudioPause[astream] pauses the playback "},{label:"AudioPitchShift",type:"keyword",info:"AudioPitchShift[audio, r] applies pitch shifting to audio by the ratio r, shifting every frequency f"},{label:"AudioPlay",type:"keyword",info:"AudioPlay[audio] returns a new AudioStream object from audio and starts the playback.AudioPlay[astre"},{label:"AudioPlot",type:"keyword",info:"AudioPlot[audio] plots the waveform of audio.AudioPlot[{audio , audio , \xe2\x80\xa6}] plots waveforms of all a"},{label:"AudioQ",type:"keyword",info:"AudioQ[audio] yields True if audio has the form of a valid Audio object, and False otherwise."},{label:"AudioRecord",type:"keyword",info:"AudioRecord[] returns a new AudioStream object and starts to record from the default input audio dev"},{label:"AudioReplace",type:"keyword",info:"AudioReplace[audio, {t , t } \xef\x94\xa2 new] replaces the audio signal between t  and t  with the new signal "},{label:"AudioResample",type:"keyword",info:"AudioResample[audio, sr] resamples audio to have the sample rate of sr."},{label:"AudioReverb",type:"keyword",info:"AudioReverb[audio] adds reverberation to audio.AudioReverb[audio, model] adds reverberation followin"},{label:"AudioReverse",type:"keyword",info:"AudioReverse[audio] reverses audio so that the signal is played backward."},{label:"AudioSampleRate",type:"keyword",info:"AudioSampleRate[audio] returns the sample rate of the Audio object audio.AudioSampleRate[video] retu"},{label:"AudioSpectralMap",type:"keyword",info:"AudioSpectralMap[f, audio] transforms audio by applying the function f to its short-time Fourier tra"},{label:"AudioSpectralTransformation",type:"keyword",info:"AudioSpectralTransformation[f, audio] returns a modified version of audio by applying a time-frequen"},{label:"AudioSplit",type:"keyword",info:"AudioSplit[audio, t] splits audio at time t.AudioSplit[audio, {t , t , \xe2\x80\xa6}] splits audio at times t ."},{label:"AudioStop",type:"keyword",info:"AudioStop[] stops the playback of all AudioStream objects.AudioStop[astream] stops the playback of t"},{label:"AudioStream",type:"keyword",info:"AudioStream[source] creates a new AudioStream object from source.AudioStream[id] is an object that r"},{label:"AudioStreams",type:"keyword",info:"AudioStreams[] returns all existing streams.AudioStreams[audio] returns all existing streams that or"},{label:"AudioTimeStretch",type:"keyword",info:"AudioTimeStretch[audio, r] applies time stretching to audio by the specified factor r."},{label:"AudioTrackApply",type:"keyword",info:"AudioTrackApply[f, video] applies the function f to the first audio track of the Video object video."},{label:"AudioTrackSelection",type:"keyword",info:"AudioTrackSelection is an option that specifies the audio tracks of interest."},{label:"AudioTrim",type:"keyword",info:"AudioTrim[audio] trims silence from the beginning and end of audio.AudioTrim[audio, t] returns the f"},{label:"AudioType",type:"keyword",info:"AudioType[audio] returns the data type used to represent samples in the Audio object audio."},{label:"AugmentedPolyhedron",type:"keyword",info:"AugmentedPolyhedron[poly] gives the augmented polyhedron poly by replacing each face by a pyramid. A"},{label:"AugmentedSymmetricPolynomial",type:"keyword",info:"AugmentedSymmetricPolynomial[{r , r , \xe2\x80\xa6}] represents a formal augmented symmetric polynomial with ex"},{label:"Authenticate",type:"keyword",info:"System`Authenticate"},{label:"Authentication",type:"keyword",info:"Authentication is an option for cloud, web and SSH access functions that allows authentication param"},{label:"AuthenticationDialog",type:"keyword",info:"AuthenticationDialog[] initiates a standard dialog for entering username/password authentication inf"},{label:"AutoAction",type:"keyword",info:"AutoAction is an option for objects such as Slider, Locator, and Button that specifies whether they "},{label:"Autocomplete",type:"keyword",info:'Autocomplete[{string , string , \xe2\x80\xa6}, "string"] gives a list of the string  that can complete string.A'},{label:"AutocompletionFunction",type:"keyword",info:"AutocompletionFunction[\xe2\x80\xa6] represents a function to be applied to a string to generate possible compl"},{label:"AutoCopy",type:"keyword",info:"AutoCopy is an option for notebooks and cloud objects that specifies whether to automatically make a"},{label:"AutocorrelationTest",type:"keyword",info:"AutocorrelationTest[data] tests whether the data is autocorrelated.AutocorrelationTest[data, k] test"},{label:"AutoDelete",type:"keyword",info:"AutoDelete is an option for boxes that specifies whether a box is automatically deleted when its con"},{label:"AutoEvaluateEvents",type:"keyword",info:"System`AutoEvaluateEvents"},{label:"AutoGeneratedPackage",type:"keyword",info:"AutoGeneratedPackage is an option for notebooks that specifies whether a package is automatically cr"},{label:"AutoIndent",type:"keyword",info:"AutoIndent is an option for Style and Cell that specifies what automatic indentation should be done "},{label:"AutoIndentSpacings",type:"keyword",info:"System`AutoIndentSpacings"},{label:"AutoItalicWords",type:"keyword",info:"AutoItalicWords is an option for Cell that gives a list of words that should automatically be put in"},{label:"AutoloadPath",type:"keyword",info:"AutoloadPath is a global option that specifies from which directories packages are automatically loa"},{label:"AutoMatch",type:"keyword",info:"System`AutoMatch"},{label:"Automatic",type:"keyword",info:"Automatic represents an option or other value that is to be chosen automatically by a built\xe2\x80\x90in funct"},{label:"AutomaticImageSize",type:"keyword",info:"System`AutomaticImageSize"},{label:"AutoMultiplicationSymbol",type:"keyword",info:"AutoMultiplicationSymbol is an option for objects such as Cell and Notebook that specifies when to a"},{label:"AutoNumberFormatting",type:"keyword",info:"System`AutoNumberFormatting"},{label:"AutoOpenNotebooks",type:"keyword",info:"AutoOpenNotebooks is a global option that specifies which notebooks should be automatically opened w"},{label:"AutoOpenPalettes",type:"keyword",info:"AutoOpenPalettes is a global option that specifies the palettes that are automatically opened when t"},{label:"AutoOperatorRenderings",type:"keyword",info:"AutoOperatorRenderings is an option for cells and notebooks that specifies automatic renderings to b"},{label:"AutoQuoteCharacters",type:"keyword",info:"System`AutoQuoteCharacters"},{label:"AutoRefreshed",type:"keyword",info:"AutoRefreshed[expr] represents an expression to be reevaluated every hour and made available in the "},{label:"AutoRemove",type:"keyword",info:"AutoRemove is an option specifying whether tasks, generators, cloud objects and related constructs s"},{label:"AutorunSequencing",type:"keyword",info:"AutorunSequencing is an option for Manipulate that specifies how autorun should use the controls pro"},{label:"AutoScaling",type:"keyword",info:"System`AutoScaling"},{label:"AutoScroll",type:"keyword",info:"AutoScroll is an option to SelectionMove and related functions that specifies whether a notebook sho"},{label:"AutoSpacing",type:"keyword",info:"AutoSpacing is an option for Style and Cell that specifies whether spaces between successive charact"},{label:"AutoStyleOptions",type:"keyword",info:"System`AutoStyleOptions"},{label:"AutoStyleWords",type:"keyword",info:"System`AutoStyleWords"},{label:"AutoSubmitting",type:"keyword",info:"AutoSubmitting[spec] represents an element of a form that automatically submits the whole form if it"},{label:"Axes",type:"keyword",info:"Axes is an option for graphics functions that specifies whether axes should be drawn. "},{label:"AxesEdge",type:"keyword",info:"AxesEdge is an option for three-dimensional graphics functions that specifies on which edges of the "},{label:"AxesLabel",type:"keyword",info:"AxesLabel is an option for graphics functions that specifies labels for axes. "},{label:"AxesOrigin",type:"keyword",info:"AxesOrigin is an option for graphics functions that specifies where any axes drawn should cross. "},{label:"AxesStyle",type:"keyword",info:"AxesStyle is an option for graphics functions that specifies how axes should be rendered. "},{label:"AxiomaticTheory",type:"keyword",info:'AxiomaticTheory["theory"] gives an axiomatic representation of the specified axiomatic theory.Axioma'},{label:"Axis",type:"keyword",info:"Axis is a symbol that represents the axis for purposes of alignment and positioning. "},{label:"Axis3DBox",type:"keyword",info:"System`Axis3DBox"},{label:"Axis3DBoxOptions",type:"keyword",info:"System`Axis3DBoxOptions"},{label:"AxisBox",type:"keyword",info:"System`AxisBox"},{label:"AxisBoxOptions",type:"keyword",info:"System`AxisBoxOptions"},{label:"AxisLabel",type:"keyword",info:"AxisLabel is an option for AxisObject that specifies a label for the axis."},{label:"AxisObject",type:"keyword",info:"AxisObject[path] is a Graphics primitive that represents an axis with a quantitative scale along the"},{label:"AxisStyle",type:"keyword",info:"AxisStyle is an option for AxisObject that specifies how to style the path of an axis."},{label:"BabyMonsterGroupB",type:"keyword",info:"BabyMonsterGroupB[] represents the sporadic simple baby monster group B."},{label:"Back",type:"keyword",info:"Back is a symbol that represents the back of a graphic for purposes of placement and alignment."},{label:"BackFaceColor",type:"keyword",info:"System`BackFaceColor"},{label:"BackFaceGlowColor",type:"keyword",info:"System`BackFaceGlowColor"},{label:"BackFaceOpacity",type:"keyword",info:"System`BackFaceOpacity"},{label:"BackFaceSpecularColor",type:"keyword",info:"System`BackFaceSpecularColor"},{label:"BackFaceSpecularExponent",type:"keyword",info:"System`BackFaceSpecularExponent"},{label:"BackFaceSurfaceAppearance",type:"keyword",info:"System`BackFaceSurfaceAppearance"},{label:"BackFaceTexture",type:"keyword",info:"System`BackFaceTexture"},{label:"Background",type:"keyword",info:"Background is an option that specifies what background color to use. "},{label:"BackgroundAppearance",type:"keyword",info:"System`BackgroundAppearance"},{label:"BackgroundTasksSettings",type:"keyword",info:"System`BackgroundTasksSettings"},{label:"Backslash",type:"keyword",info:"Backslash[x, y, \xe2\x80\xa6] displays as x \xe2\x88\x96 y \xe2\x88\x96 \xe2\x80\xa6."},{label:"Backsubstitution",type:"keyword",info:"System`Backsubstitution"},{label:"Backward",type:"keyword",info:"Backward is a symbol that represents the backward direction for purposes of motion and animation."},{label:"Ball",type:"keyword",info:"Ball[p] represents the unit ball centered at the point p.Ball[p, r] represents the ball of radius r "},{label:"Band",type:"keyword",info:"Band[{i, j}] represents the sequence of positions on the diagonal band that starts with {i, j} in a "},{label:"BandpassFilter",type:"keyword",info:"BandpassFilter[data, {\xcf\x89 , \xcf\x89 }] applies a bandpass filter with cutoff frequencies \xcf\x89  and \xcf\x89  to an arr"},{label:"BandstopFilter",type:"keyword",info:"BandstopFilter[data, {\xcf\x89 , \xcf\x89 }] applies a bandstop filter with cutoff frequencies \xcf\x89  and \xcf\x89  to an arr"},{label:"BarabasiAlbertGraphDistribution",type:"keyword",info:"BarabasiAlbertGraphDistribution[n, k] represents a Barabasi\xe2\x80\x93Albert graph distribution for n-vertex g"},{label:"BarChart",type:"keyword",info:"BarChart[{y , y , \xe2\x80\xa6, y }] makes a bar chart with bar lengths y ,  y , \xe2\x80\xa6.BarChart[{\xe2\x80\xa6, w [y , \xe2\x80\xa6], \xe2\x80\xa6, w"},{label:"BarChart3D",type:"keyword",info:"BarChart3D[{y , y , \xe2\x80\xa6}] makes a 3D bar chart with bar lengths y , y , \xe2\x80\xa6 .BarChart3D[{\xe2\x80\xa6, w [y , \xe2\x80\xa6], \xe2\x80\xa6"},{label:"BarcodeImage",type:"keyword",info:'BarcodeImage["string", format] generates a barcode image of "string" in the specified format.Barcode'},{label:"BarcodeRecognize",type:"keyword",info:"BarcodeRecognize[image] recognizes a barcode in image and returns it as a string.BarcodeRecognize[im"},{label:"BaringhausHenzeTest",type:"keyword",info:"BaringhausHenzeTest[data] tests whether data follows a MultinormalDistribution using the Baringhaus\xe2\x80\x93"},{label:"BarLegend",type:"keyword",info:"BarLegend[cf] generates a legend that identifies colors from the color function cf with an automatic"},{label:"BarlowProschanImportance",type:"keyword",info:"BarlowProschanImportance[rdist] gives the Barlow\xe2\x80\x93Proschan importances for all components in the Reli"},{label:"BarnesG",type:"keyword",info:"BarnesG[z] gives the Barnes G-function G(z)."},{label:"BarOrigin",type:"keyword",info:"BarOrigin is an option to BarChart and related functions that specifies the origin placement for bar"},{label:"BarSpacing",type:"keyword",info:"BarSpacing is an option to BarChart and related functions that controls the spacing between bars and"},{label:"BartlettHannWindow",type:"keyword",info:"BartlettHannWindow[x] represents a Bartlett\xe2\x80\x93Hann window function of x."},{label:"BartlettWindow",type:"keyword",info:"BartlettWindow[x] represents a Bartlett window function of x."},{label:"BaseDecode",type:"keyword",info:'BaseDecode["string"] decodes the Base64 data contained in a string and returns the result as a byte '},{label:"BaseEncode",type:"keyword",info:'BaseEncode[ba] encodes the byte array ba as a Base64 string.BaseEncode[ba, "encoding"] encodes using'},{label:"BaseForm",type:"keyword",info:"BaseForm[expr, n] prints with the numbers in expr given in base n. "},{label:"Baseline",type:"keyword",info:"Baseline is a symbol that represents the baseline for purposes of alignment and positioning. "},{label:"BaselinePosition",type:"keyword",info:"BaselinePosition is an option that specifies where the baseline of an object is considered to be for"},{label:"BaseStyle",type:"keyword",info:"BaseStyle is an option for formatting and related constructs that specifies the base style to use fo"},{label:"BasicRecurrentLayer",type:"keyword",info:"BasicRecurrentLayer[n] represents a trainable recurrent layer that takes a sequence of vectors and p"},{label:"BatchNormalizationLayer",type:"keyword",info:"BatchNormalizationLayer[] represents a trainable net layer that normalizes its input data by learnin"},{label:"BatchSize",type:"keyword",info:"BatchSize is an option for NetTrain and related functions that specifies the size of a batch of exam"},{label:"BatesDistribution",type:"keyword",info:"BatesDistribution[n] represents the distribution of a mean of n random variables uniformly distribut"},{label:"BattleLemarieWavelet",type:"keyword",info:"BattleLemarieWavelet[] represents the Battle\xe2\x80\x93Lemari\xc3\xa9 wavelet of order 3.BattleLemarieWavelet[n] repr"},{label:"BayesianMaximization",type:"keyword",info:"BayesianMaximization[f, {conf , conf , \xe2\x80\xa6}] gives an object representing the result of Bayesian maxim"},{label:"BayesianMaximizationObject",type:"keyword",info:"BayesianMaximizationObject[\xe2\x80\xa6] represents the result of a Bayesian maximization process."},{label:"BayesianMinimization",type:"keyword",info:"BayesianMinimization[f, {conf , conf , \xe2\x80\xa6}] gives an object representing the result of Bayesian minim"},{label:"BayesianMinimizationObject",type:"keyword",info:"BayesianMinimizationObject[\xe2\x80\xa6] represents the result of a Bayesian minimization process. "},{label:"Because",type:"keyword",info:"Because[x, y] displays as x \xe2\x88\\[Micro] y."},{label:"BeckmannDistribution",type:"keyword",info:"BeckmannDistribution[\xce\xbc , \xce\xbc , \xcf\x83 , \xcf\x83 ] represents the Beckmann distribution with means \xce\xbc  and \xce\xbc  and s"},{label:"Beep",type:"keyword",info:"Beep[] generates an audible beep when evaluated. "},{label:"Before",type:"keyword",info:"Before is a symbol that represents the region before an object for purposes of placement."},{label:"Begin",type:"keyword",info:'Begin["context`"] resets the current context. '},{label:"BeginDialogPacket",type:"keyword",info:"BeginDialogPacket[integer] is a WSTP packet that indicates the start of the Dialog subsession refere"},{label:"BeginPackage",type:"keyword",info:'BeginPackage["context`"] makes context` and System` the only active contexts. BeginPackage["context`'},{label:"BellB",type:"keyword",info:"BellB[n] gives the Bell number B . BellB[n, x] gives the Bell polynomial B (x). \n                   "},{label:"BellY",type:"keyword",info:"BellY[n, k, {x , \xe2\x80\xa6, x         }] gives the partial Bell polynomial Y    (x , \xe2\x80\xa6, x         ).BellY[n,"},{label:"Below",type:"keyword",info:"Below is a symbol that represents the region below an object for purposes of placement."},{label:"BenfordDistribution",type:"keyword",info:"BenfordDistribution[b] represents a Benford distribution with base parameter b."},{label:"BeniniDistribution",type:"keyword",info:"BeniniDistribution[\xce\\[PlusMinus], \xce.b2, \xcf\x83] represents a Benini distribution with shape parameters \xce\\[PlusMinus] and \xce.b2 and scale"},{label:"BenktanderGibratDistribution",type:"keyword",info:"BenktanderGibratDistribution[a, b] represents a Benktander distribution of type I with parameters a "},{label:"BenktanderWeibullDistribution",type:"keyword",info:"BenktanderWeibullDistribution[a, b] represents a Benktander distribution of type II with parameters "},{label:"BernoulliB",type:"keyword",info:"BernoulliB[n] gives the Bernoulli number B . BernoulliB[n, x] gives the Bernoulli polynomial B (x). "},{label:"BernoulliDistribution",type:"keyword",info:"BernoulliDistribution[p] represents a Bernoulli distribution with probability parameter p."},{label:"BernoulliGraphDistribution",type:"keyword",info:"BernoulliGraphDistribution[n, p] represents a Bernoulli graph distribution for n-vertex graphs with "},{label:"BernoulliProcess",type:"keyword",info:"BernoulliProcess[p] represents a Bernoulli process with event probability p."},{label:"BernsteinBasis",type:"keyword",info:"                                         th\nBernsteinBasis[d, n, x] represents the n\xef\x8e\xa0   Bernstein ba"},{label:"BesagL",type:"keyword",info:"BesagL[pdata, r] estimates Besag's L function L(r) for point data pdata at radius r.BesagL[pproc, r]"},{label:"BesselFilterModel",type:"keyword",info:"BesselFilterModel[n] designs a lowpass Bessel filter of order n and cutoff frequency 1.BesselFilterM"},{label:"BesselI",type:"keyword",info:"BesselI[n, z] gives the modified Bessel function of the first kind I (z). \n                         "},{label:"BesselJ",type:"keyword",info:"BesselJ[n, z] gives the Bessel function of the first kind J (z). \n                                  "},{label:"BesselJZero",type:"keyword",info:"                                   th                                                               "},{label:"BesselK",type:"keyword",info:"BesselK[n, z] gives the modified Bessel function of the second kind K (z). \n                        "},{label:"BesselY",type:"keyword",info:"BesselY[n, z] gives the Bessel function of the second kind Y (z). \n                                 "},{label:"BesselYZero",type:"keyword",info:"                                   th                                                               "},{label:"Beta",type:"keyword",info:"Beta[a, b] gives the Euler beta function \xce\x92(a, b). Beta[z, a, b] gives the incomplete beta function \xce\x92"},{label:"BetaBinomialDistribution",type:"keyword",info:"BetaBinomialDistribution[\xce\\[PlusMinus], \xce.b2, n] represents a beta binomial mixture distribution with beta distribu"},{label:"BetaDistribution",type:"keyword",info:"BetaDistribution[\xce\\[PlusMinus], \xce.b2] represents a continuous beta distribution with shape parameters \xce\\[PlusMinus] and \xce.b2."},{label:"BetaNegativeBinomialDistribution",type:"keyword",info:"BetaNegativeBinomialDistribution[\xce\\[PlusMinus], \xce.b2, n] represents a beta negative binomial mixture distribution w"},{label:"BetaPrimeDistribution",type:"keyword",info:"BetaPrimeDistribution[p, q] represents a beta prime distribution with shape parameters p and q. Beta"},{label:"BetaRegularized",type:"keyword",info:"BetaRegularized[z, a, b] gives the regularized incomplete beta function I (a, b). \n                 "},{label:"Between",type:"keyword",info:"Between[x, {min, max}] is equivalent to min \xe2\x89\xa4 x \xe2\x89\xa4 max.Between[x, {{min , max }, {min , max }, \xe2\x80\xa6}] is"},{label:"BetweennessCentrality",type:"keyword",info:"BetweennessCentrality[g] gives a list of betweenness centralities for the vertices in the graph g.Be"},{label:"Beveled",type:"keyword",info:"System`Beveled"},{label:"BeveledPolyhedron",type:"keyword",info:"BeveledPolyhedron[poly] gives the beveled polyhedron of poly, by beveling each edge. BeveledPolyhedr"},{label:"BezierCurve",type:"keyword",info:"BezierCurve[{pt , pt , \xe2\x80\xa6}] is a graphics primitive that represents a B\xc3\xa9zier curve with control point"},{label:"BezierCurve3DBox",type:"keyword",info:"System`BezierCurve3DBox"},{label:"BezierCurve3DBoxOptions",type:"keyword",info:"BezierCurve3DBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Bez"},{label:"BezierCurveBox",type:"keyword",info:"System`BezierCurveBox"},{label:"BezierCurveBoxOptions",type:"keyword",info:"BezierCurveBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Bezie"},{label:"BezierFunction",type:"keyword",info:"BezierFunction[{pt , pt , \xe2\x80\xa6}] represents a B\xc3\xa9zier function for a curve defined by the control points"},{label:"BilateralFilter",type:"keyword",info:"BilateralFilter[data, \xcf\x83, \xce\xbc] applies a bilateral filter of spatial spread \xcf\x83 and pixel value spread \xce\xbc "},{label:"BilateralLaplaceTransform",type:"keyword",info:"BilateralLaplaceTransform[expr, t, s] gives the bilateral Laplace transform of expr. BilateralLaplac"},{label:"BilateralZTransform",type:"keyword",info:"BilateralZTransform[expr, n, z] gives the bilateral Z transform of expr.BilateralZTransform[expr, {n"},{label:"Binarize",type:"keyword",info:"Binarize[image] creates a binary image from image by replacing all values above a globally determine"},{label:"BinaryDeserialize",type:"keyword",info:"BinaryDeserialize[ByteArray[\xe2\x80\xa6]] recovers an expression from a binary representation generated by Bin"},{label:"BinaryDistance",type:"keyword",info:"BinaryDistance[u, v] gives the binary distance between vectors u and v, equal to 0 if they are ident"},{label:"BinaryFormat",type:"keyword",info:"BinaryFormat is an option for OpenRead and related functions that specifies that a stream should be "},{label:"BinaryImageQ",type:"keyword",info:"BinaryImageQ[image] yields True if image has the form of a binary Image or Image3D object, and False"},{label:"BinaryRead",type:"keyword",info:"BinaryRead[stream] reads one byte of raw binary data from an input stream, and returns an integer fr"},{label:"BinaryReadList",type:"keyword",info:'BinaryReadList["file"] reads all remaining bytes from a file, and returns them as a list of integers'},{label:"BinarySerialize",type:"keyword",info:"BinarySerialize[expr] gives a binary representation of any expression expr as a ByteArray object."},{label:"BinaryWrite",type:"keyword",info:"BinaryWrite[channel, b] writes a byte of data, specified as an integer from 0 to 255. BinaryWrite[ch"},{label:"BinCounts",type:"keyword",info:"BinCounts[{x , x , \xe2\x80\xa6}] counts the number of elements x  whose values lie in successive integer bins."},{label:"BinLists",type:"keyword",info:"BinLists[{x , x , \xe2\x80\xa6}] gives lists of the elements x  whose values lie in successive integer bins.Bin"},{label:"BinnedVariogramList",type:"keyword",info:"BinnedVariogramList[{loc  \xef\x94\xa2 val , loc  \xef\x94\xa2 val , \xe2\x80\xa6}] computes a variogram using binned values. BinnedV"},{label:"Binomial",type:"keyword",info:"Binomial[n, m] gives the binomial coefficient (n).\n\n                                               m"},{label:"BinomialDistribution",type:"keyword",info:"BinomialDistribution[n, p] represents a binomial distribution with n trials and success probability "},{label:"BinomialPointProcess",type:"keyword",info:"BinomialPointProcess[n, reg] represents a binomial point process with n points in the region reg."},{label:"BinomialProcess",type:"keyword",info:"BinomialProcess[p] represents a binomial process with event probability p."},{label:"BinormalDistribution",type:"keyword",info:"                                                                                                    "},{label:"BiorthogonalSplineWavelet",type:"keyword",info:"BiorthogonalSplineWavelet[] represents a biorthogonal spline wavelet of order 4 and dual order 2.Bio"},{label:"BioSequence",type:"keyword",info:'BioSequence[type, "seq"] represents the biomolecular sequence of the given type corresponding to a s'},{label:"BioSequenceBackTranslateList",type:"keyword",info:"BioSequenceBackTranslateList[bioseq] gives the generalized back translations of a peptide sequence b"},{label:"BioSequenceComplement",type:"keyword",info:"BioSequenceComplement[bioseq] gives the biological complement of the sequence bioseq."},{label:"BioSequenceInstances",type:"keyword",info:"BioSequenceInstances[bioseq] expands the possibly degenerate sequence bioseq into all fully specifie"},{label:"BioSequenceModify",type:"keyword",info:'BioSequenceModify[seq, "mod"] gives the result of applying the modification "mod" to the sequence se'},{label:"BioSequencePlot",type:"keyword",info:"BioSequencePlot[bioseq] creates a two-dimensional schematic diagram of the biomolecular sequence bio"},{label:"BioSequenceQ",type:"keyword",info:"BioSequenceQ[bioseq] returns True if bioseq is a valid BioSequence expression, and False otherwise.B"},{label:"BioSequenceReverseComplement",type:"keyword",info:"BioSequenceReverseComplement[bioseq] biologically complements and reverses the sequence bioseq."},{label:"BioSequenceTranscribe",type:"keyword",info:"BioSequenceTranscribe[bioseq] transcribes DNA into RNA or inverts the transcription of RNA back to D"},{label:"BioSequenceTranslate",type:"keyword",info:"BioSequenceTranslate[bioseq] translates a DNA or RNA sequence bioseq to a peptide sequence.BioSequen"},{label:"BipartiteGraphQ",type:"keyword",info:"BipartiteGraphQ[g] yields True if the graph g is a bipartite graph and False otherwise."},{label:"BiquadraticFilterModel",type:"keyword",info:"BiquadraticFilterModel[{\xcf\x89, q}] creates a lowpass biquadratic filter using the characteristic frequen"},{label:"BirnbaumImportance",type:"keyword",info:"BirnbaumImportance[rdist, t] gives the Birnbaum importances for all components in the ReliabilityDis"},{label:"BirnbaumSaundersDistribution",type:"keyword",info:"BirnbaumSaundersDistribution[\xce\\[PlusMinus], \xce\xbb] represents the Birnbaum\xe2\x80\x93Saunders distribution with shape paramete"},{label:"BitAnd",type:"keyword",info:"BitAnd[n , n , \xe2\x80\xa6] gives the bitwise AND of the integers n . \n        1   2                          "},{label:"BitClear",type:"keyword",info:"                                                                      k\nBitClear[n, k] sets to 0 the"},{label:"BitGet",type:"keyword",info:"                                                               k\nBitGet[n, k] gets the bit correspon"},{label:"BitLength",type:"keyword",info:"BitLength[n] gives the number of binary bits necessary to represent the integer n. "},{label:"BitNot",type:"keyword",info:"BitNot[n] gives the bitwise NOT of the integer n. "},{label:"BitOr",type:"keyword",info:"BitOr[n , n , \xe2\x80\xa6] gives the bitwise OR of the integers n . \n       1   2                             "},{label:"BitRate",type:"keyword",info:"BitRate is an option that specifies an approximate number of bits per second when creating video and"},{label:"BitSet",type:"keyword",info:"                                                                    k\nBitSet[n, k] sets to 1 the bit"},{label:"BitShiftLeft",type:"keyword",info:"BitShiftLeft[n, k] shifts the binary bits in the integer n to the left by k places, padding with zer"},{label:"BitShiftRight",type:"keyword",info:"BitShiftRight[n, k] shifts the binary bits in the integer n to the right by k places, dropping bits "},{label:"BitXor",type:"keyword",info:"BitXor[n , n , \xe2\x80\xa6] gives the bitwise XOR of the integers n . \n        1   2                          "},{label:"BiweightLocation",type:"keyword",info:"BiweightLocation[list] gives the value of the biweight location estimator of the elements in list.Bi"},{label:"BiweightMidvariance",type:"keyword",info:"BiweightMidvariance[list] gives the value of the biweight midvariance of the elements in list.Biweig"},{label:"Black",type:"keyword",info:"Black represents the color black in graphics or style specifications. "},{label:"BlackmanHarrisWindow",type:"keyword",info:"BlackmanHarrisWindow[x] represents a Blackman\xe2\x80\x93Harris window function of x."},{label:"BlackmanNuttallWindow",type:"keyword",info:"BlackmanNuttallWindow[x] represents a Blackman\xe2\x80\x93Nuttall window function of x."},{label:"BlackmanWindow",type:"keyword",info:"BlackmanWindow[x] represents a Blackman window function of x."},{label:"Blank",type:"keyword",info:"_ or Blank[] is a pattern object that can stand for any Wolfram Language expression. _h or Blank[h] "},{label:"BlankForm",type:"keyword",info:"BlankForm is an internal symbol used for formatting and printing."},{label:"BlankNullSequence",type:"keyword",info:"___ (three _ characters) or BlankNullSequence[] is a pattern object that can stand for any sequence "},{label:"BlankSequence",type:"keyword",info:"__ (two _ characters) or BlankSequence[] is a pattern object that can stand for any sequence of one "},{label:"Blend",type:"keyword",info:"Blend[{col , col }, x] gives a color obtained by blending a fraction 1 - x of color col  and x of co"},{label:"Block",type:"keyword",info:"Block[{x, y, \xe2\x80\xa6}, expr] specifies that expr is to be evaluated with local values for the symbols x, y"},{label:"BlockchainAddressData",type:"keyword",info:'BlockchainAddressData["address"] gives available information connected with the specified address on'},{label:"BlockchainBase",type:"keyword",info:"BlockchainBase is an option for various blockchain functions that specifies which blockchain to use."},{label:"BlockchainBlockData",type:"keyword",info:'BlockchainBlockData["hash"] gives information about the block with the specified hash on the blockch'},{label:"BlockchainContractValue",type:"keyword",info:"BlockchainContractValue[caddr] gets the result obtained from a Wolfram expression contract at blockc"},{label:"BlockchainData",type:"keyword",info:"BlockchainData[] gives information about the blockchain specified by ECBlockchainBase.BlockchainData["},{label:"BlockchainGet",type:"keyword",info:"BlockchainGet[id] retrieves data from the Wolfram blockchain for the transaction with the specified "},{label:"BlockchainKeyEncode",type:"keyword",info:"BlockchainKeyEncode[key, form] encodes a private or public key in the specified blockchain format."},{label:"BlockchainPut",type:"keyword",info:"BlockchainPut[expr] adds expr to the Wolfram blockchain."},{label:"BlockchainTokenData",type:"keyword",info:'BlockchainTokenData["name"] gives information about the use of tokens with the specified name on a b'},{label:"BlockchainTransaction",type:"keyword",info:"BlockchainTransaction[assoc] represents a blockchain transaction built from the components in the as"},{label:"BlockchainTransactionData",type:"keyword",info:"BlockchainTransactionData[txid] gives information about the blockchain transaction with ID txid on t"},{label:"BlockchainTransactionSign",type:"keyword",info:"BlockchainTransactionSign[obj, key] digitally signs a blockchain transaction using the specified pri"},{label:"BlockchainTransactionSubmit",type:"keyword",info:"BlockchainTransactionSubmit[obj] submits the transaction specified in the BlockchainTransaction obje"},{label:"BlockMap",type:"keyword",info:"BlockMap[f, list, n] applies f to non-overlapping sublists of length n in list. BlockMap[f, list, n,"},{label:"BlockRandom",type:"keyword",info:"BlockRandom[expr] evaluates expr with all pseudorandom generators localized, so that uses of SeedRan"},{label:"BlomqvistBeta",type:"keyword",info:"                                                                                                    "},{label:"BlomqvistBetaTest",type:"keyword",info:"BlomqvistBetaTest[v , v ] tests whether the vectors v  and v  are independent.BlomqvistBetaTest[m , "},{label:"Blue",type:"keyword",info:"Blue represents the color blue in graphics or style specifications. "},{label:"Blur",type:"keyword",info:"Blur[image] gives a blurred version of image.Blur[image, r] gives a version of image blurred over pi"},{label:"BodePlot",type:"keyword",info:"BodePlot[lsys] generates a Bode plot of a linear time-invariant system lsys.BodePlot[lsys, {\xcf\x89   , \xcf\x89 "},{label:"BohmanWindow",type:"keyword",info:"BohmanWindow[x] represents a Bohman window function of x."},{label:"Bold",type:"keyword",info:"Bold represents a bold font weight."},{label:"Bond",type:"keyword",info:"Bond[{id , id }] represents a single chemical bond between atoms with indices id  and id .Bond[{id ,"},{label:"BondCount",type:"keyword",info:"BondCount[mol] gives the number of bonds in the molecule mol.BondCount[mol, patt] gives the number o"},{label:"BondLabels",type:"keyword",info:"BondLabels is an option for MoleculePlot and MoleculePlot3D that specifies what labels and label pos"},{label:"BondLabelStyle",type:"keyword",info:"BondLabelStyle is an option for MoleculePlot and MoleculePlot3D that specifies the style to use for "},{label:"BondList",type:"keyword",info:"BondList[mol] gives the list of bonds in the molecule mol.BondList[mol, patt] gives the list of bond"},{label:"BondQ",type:"keyword",info:"BondQ[m, bond] gives True if bond is a bond in the molecule m, and False otherwise."},{label:"Bookmarks",type:"keyword",info:"Bookmarks is an option for Manipulate and related functions that gives a list of bookmark settings."},{label:"Boole",type:"keyword",info:"Boole[expr] yields 1 if expr is True and 0 if it is False. "},{label:"BooleanConsecutiveFunction",type:"keyword",info:"                                                                                                    "},{label:"BooleanConvert",type:"keyword",info:"BooleanConvert[expr] converts the Boolean expression expr to disjunctive normal form.BooleanConvert["},{label:"BooleanCountingFunction",type:"keyword",info:"BooleanCountingFunction[k   , n] represents a Boolean function of n variables that gives True if at "},{label:"BooleanFunction",type:"keyword",info:"                                       th\nBooleanFunction[k, n] represents the k\xef\x8e\xa0   Boolean function"},{label:"BooleanGraph",type:"keyword",info:"BooleanGraph[bfunc, g , \xe2\x80\xa6, g ] gives the Boolean graph defined by the Boolean function bfunc on the "},{label:"BooleanMaxterms",type:"keyword",info:"                                       th\nBooleanMaxterms[k, n] represents the k\xef\x8e\xa0   maxterm in n var"},{label:"BooleanMinimize",type:"keyword",info:"BooleanMinimize[expr] finds a minimal-length disjunctive normal form representation of expr.BooleanM"},{label:"BooleanMinterms",type:"keyword",info:"                                       th\nBooleanMinterms[k, n] represents the k\xef\x8e\xa0   minterm in n var"},{label:"BooleanQ",type:"keyword",info:"BooleanQ[expr] returns True if expr is either True or False."},{label:"BooleanRegion",type:"keyword",info:"BooleanRegion[bfunc, {reg , reg , \xe2\x80\xa6}] represents the Boolean combination bfunc of regions reg , reg "},{label:"Booleans",type:"keyword",info:"Booleans represents the domain of Booleans, as in x \xe2\x88\x88 Booleans. "},{label:"BooleanStrings",type:"keyword",info:"BooleanStrings is an option to TextString and related functions that determines what strings corresp"},{label:"BooleanTable",type:"keyword",info:"BooleanTable[bf] gives a list of truth values for all possible combinations of variable values suppl"},{label:"BooleanVariables",type:"keyword",info:"BooleanVariables[expr] gives a list of the Boolean variables in the Boolean expression expr.BooleanV"},{label:"BorderDimensions",type:"keyword",info:"BorderDimensions[image] gives the pixel width of uniform borders of image in the form {{left, right}"},{label:"BorelTannerDistribution",type:"keyword",info:"BorelTannerDistribution[\xce\\[PlusMinus], n] represents a Borel\xe2\x80\x93Tanner distribution with shape parameters \xce\\[PlusMinus] and n."},{label:"Bottom",type:"keyword",info:"Bottom is a symbol that represents the bottom for purposes of alignment and positioning. "},{label:"BottomHatTransform",type:"keyword",info:"BottomHatTransform[image, ker] gives the morphological bottom-hat transform of image with respect to"},{label:"BoundaryDiscretizeGraphics",type:"keyword",info:"BoundaryDiscretizeGraphics[g] discretizes a 2D or 3D graphic g into a BoundaryMeshRegion.BoundaryDis"},{label:"BoundaryDiscretizeRegion",type:"keyword",info:"BoundaryDiscretizeRegion[reg] discretizes the region reg into a BoundaryMeshRegion.BoundaryDiscretiz"},{label:"BoundaryMesh",type:"keyword",info:"BoundaryMesh[mreg] gives a BoundaryMeshRegion from a MeshRegion mreg. "},{label:"BoundaryMeshRegion",type:"keyword",info:"BoundaryMeshRegion[{p , p , \xe2\x80\xa6}, {bcell [{i , \xe2\x80\xa6}], bcell [{j , \xe2\x80\xa6}], \xe2\x80\xa6}] yields a mesh with boundary c"},{label:"BoundaryMeshRegionQ",type:"keyword",info:"BoundaryMeshRegionQ[reg] yields True if the region reg is a valid BoundaryMeshRegion object and Fals"},{label:"BoundaryStyle",type:"keyword",info:"BoundaryStyle is an option for plotting functions that specifies the style in which boundaries of re"},{label:"BoundedRegionQ",type:"keyword",info:"BoundedRegionQ[reg] gives True if reg is a bounded region and False otherwise. "},{label:"BoundingRegion",type:"keyword",info:"BoundingRegion[{pt , pt , \xe2\x80\xa6}] gives the minimal axis-aligned bounding box for the points pt , pt , \xe2\x80\xa6"},{label:"Bounds",type:"keyword",info:"System`Bounds"},{label:"Box",type:"keyword",info:"System`Box"},{label:"BoxBaselineShift",type:"keyword",info:"BoxBaselineShift is an option for AdjustmentBox that specifies how much the baseline of the box shou"},{label:"BoxData",type:"keyword",info:"BoxData[boxes] is a low-level representation of the contents of a typesetting cell."},{label:"BoxDimensions",type:"keyword",info:"System`BoxDimensions"},{label:"Boxed",type:"keyword",info:"Boxed is an option for Graphics3D that specifies whether to draw the edges of the bounding box in a "},{label:"Boxes",type:"keyword",info:"Boxes is a symbol that represents typeset boxes in InputField and related functions."},{label:"BoxForm",type:"keyword",info:"System`BoxForm"},{label:"BoxFormFormatTypes",type:"keyword",info:"BoxFormFormatTypes is a global option that specifies the list of typeset format types that are curre"},{label:"BoxFrame",type:"keyword",info:"BoxFrame is an option for FrameBox objects that specifies whether to draw a frame around the content"},{label:"BoxID",type:"keyword",info:"System`BoxID"},{label:"BoxMargins",type:"keyword",info:"BoxMargins is an option for AdjustmentBox objects that specifies the margins to leave around the con"},{label:"BoxMatrix",type:"keyword",info:"BoxMatrix[r] gives a (2 r + 1) \xc3\x97 (2r + 1) matrix of 1s.BoxMatrix[r, w] gives a (2 r + 1) \xc3\x97 (2r + 1) "},{label:"BoxObject",type:"keyword",info:"BoxObject[id] is an object that represents a box structure in an open notebook in the front end."},{label:"BoxRatios",type:"keyword",info:"BoxRatios is an option for Graphics3D that gives the ratios of side lengths for the bounding box of "},{label:"BoxRotation",type:"keyword",info:"System`BoxRotation"},{label:"BoxRotationPoint",type:"keyword",info:"System`BoxRotationPoint"},{label:"BoxStyle",type:"keyword",info:"BoxStyle is an option for three-dimensional graphics functions that specifies how the bounding box s"},{label:"BoxWhiskerChart",type:"keyword",info:"BoxWhiskerChart[{x , x , \xe2\x80\xa6}] makes a box\xe2\x80\x90and\xe2\x80\x90whisker chart for the values x .BoxWhiskerChart[{x , x "},{label:"Bra",type:"keyword",info:"System`Bra"},{label:"BracketingBar",type:"keyword",info:"BracketingBar[x, y, \xe2\x80\xa6] displays as \xef\x98\x83 x, y, \xe2\x80\xa6 \xef\x98\x84."},{label:"BraKet",type:"keyword",info:"System`BraKet"},{label:"BrayCurtisDistance",type:"keyword",info:"BrayCurtisDistance[u, v] gives the Bray\xe2\x80\x93Curtis distance between vectors u and v."},{label:"BreadthFirstScan",type:"keyword",info:"BreadthFirstScan[g, s, {event  \xef\x94\xa2 f , event  \xef\x94\xa2 f , \xe2\x80\xa6}] performs a breadth-first scan (bfs) of the gra"},{label:"Break",type:"keyword",info:"Break[] exits the nearest enclosing Do, For, or While. "},{label:"BridgeData",type:"keyword",info:"BridgeData[entity, property] gives the value of the specified property for the bridge entity.BridgeD"},{label:"BrightnessEqualize",type:"keyword",info:"BrightnessEqualize[image] adjusts the brightness across image, correcting uneven illumination.Bright"},{label:"BroadcastStationData",type:"keyword",info:"BroadcastStationData[entity, property] gives the value of the specified property for the broadcast s"},{label:"Brown",type:"keyword",info:"Brown represents the color brown in graphics or style specifications. "},{label:"BrownForsytheTest",type:"keyword",info:"                                                                                                    "},{label:"BrownianBridgeProcess",type:"keyword",info:"BrownianBridgeProcess[\xcf\x83, {t , a}, {t , b}] represents the Brownian bridge process from value a at ti"},{label:"BrowserCategory",type:"keyword",info:"System`BrowserCategory"},{label:"BSplineBasis",type:"keyword",info:"                                                                                                    "},{label:"BSplineCurve",type:"keyword",info:"BSplineCurve[{pt , pt , \xe2\x80\xa6}] is a graphics primitive that represents a nonuniform rational B-spline c"},{label:"BSplineCurve3DBox",type:"keyword",info:"System`BSplineCurve3DBox"},{label:"BSplineCurve3DBoxOptions",type:"keyword",info:"BSplineCurve3DBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for BS"},{label:"BSplineCurveBox",type:"keyword",info:"System`BSplineCurveBox"},{label:"BSplineCurveBoxOptions",type:"keyword",info:"BSplineCurveBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for BSpl"},{label:"BSplineFunction",type:"keyword",info:"BSplineFunction[{pt , pt , \xe2\x80\xa6}] represents a B-spline function for a curve defined by the control poi"},{label:"BSplineSurface",type:"keyword",info:"BSplineSurface[array] is a graphics primitive that represents a nonuniform rational B-spline surface"},{label:"BSplineSurface3DBox",type:"keyword",info:"System`BSplineSurface3DBox"},{label:"BSplineSurface3DBoxOptions",type:"keyword",info:"BSplineSurface3DBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for "},{label:"BubbleChart",type:"keyword",info:"BubbleChart[{{x , y , z }, {x , y , z }, \xe2\x80\xa6}] makes a bubble chart with bubbles at positions {x , y }"},{label:"BubbleChart3D",type:"keyword",info:"BubbleChart3D[{{x , y , z , u }, {x , y , z , u }, \xe2\x80\xa6}] makes a 3D bubble chart with bubbles at posit"},{label:"BubbleScale",type:"keyword",info:"BubbleScale is an option to BubbleChart and related functions that specifies how the scale of each b"},{label:"BubbleSizes",type:"keyword",info:"BubbleSizes is an option to BubbleChart and related functions that specifies the range of sizes used"},{label:"BuildingData",type:"keyword",info:"BuildingData[entity, property] gives the value of the specified property for the building entity.Bui"},{label:"BulletGauge",type:"keyword",info:"BulletGauge[value, reference, {min, max}] draws a bullet gauge showing value and reference in a rang"},{label:"BusinessDayQ",type:"keyword",info:"BusinessDayQ[date] returns True if the date is a business day and returns False otherwise."},{label:"ButterflyGraph",type:"keyword",info:"ButterflyGraph[n] gives the order-n butterfly graph. ButterflyGraph[n, b] gives the base-b order-n b"},{label:"ButterworthFilterModel",type:"keyword",info:"ButterworthFilterModel[n] creates a lowpass Butterworth filter of order n and cutoff frequency of 1."},{label:"Button",type:"keyword",info:"Button[label, action] represents a button that is labeled with label, and evaluates action whenever "},{label:"ButtonBar",type:"keyword",info:"ButtonBar[{lbl  :> act , lbl  :> act , \xe2\x80\xa6}] represents a bar of buttons with labels lbl  that perform"},{label:"ButtonBox",type:"keyword",info:"ButtonBox[boxes] is a low-level box construct that represents a button in a notebook expression."},{label:"ButtonBoxOptions",type:"keyword",info:"ButtonBoxOptions is an option that specifies settings for ButtonBox."},{label:"ButtonCell",type:"keyword",info:"System`ButtonCell"},{label:"ButtonContents",type:"keyword",info:"System`ButtonContents"},{label:"ButtonData",type:"keyword",info:"ButtonData is an option for the low-level function ButtonBox that specifies the second argument to g"},{label:"ButtonEvaluator",type:"keyword",info:"ButtonEvaluator is an option for the low-level function ButtonBox that specifies where the expressio"},{label:"ButtonExpandable",type:"keyword",info:"ButtonExpandable is an option for the low-level function ButtonBox that specifies whether the button"},{label:"ButtonFrame",type:"keyword",info:"ButtonFrame is an option for the low-level function ButtonBox that specifies the type of frame to di"},{label:"ButtonFunction",type:"keyword",info:"ButtonFunction is an option for the low-level function ButtonBox that specifies the function to exec"},{label:"ButtonMargins",type:"keyword",info:"ButtonMargins is an option for ButtonBox that specifies how much space in printer's points to leave "},{label:"ButtonMinHeight",type:"keyword",info:"ButtonMinHeight is an option for the low-level function ButtonBox that specifies the minimum total h"},{label:"ButtonNote",type:"keyword",info:"ButtonNote is an option for ButtonBox that specifies what should be displayed in the status line of "},{label:"ButtonNotebook",type:"keyword",info:"ButtonNotebook[] gives the notebook, if any, that contains the button which initiated the current ev"},{label:"ButtonSource",type:"keyword",info:"ButtonSource is an option for the low-level function ButtonBox that specifies the first argument to "},{label:"ButtonStyle",type:"keyword",info:"ButtonStyle is an option for ButtonBox that specifies the default properties for the button. "},{label:"ButtonStyleMenuListing",type:"keyword",info:"System`ButtonStyleMenuListing"},{label:"Byte",type:"keyword",info:"Byte represents a single byte of data in Read. "},{label:"ByteArray",type:"keyword",info:'ByteArray[{b , b , \xe2\x80\xa6}] constructs a ByteArray object containing the byte values b .ByteArray["string'},{label:"ByteArrayFormat",type:"keyword",info:"ByteArrayFormat[ba] attempts to determine what ImportByteArray format could be used to import the By"},{label:"ByteArrayFormatQ",type:"keyword",info:'ByteArrayFormatQ[ba, "fmt"] gives True if the ByteArray object ba might be imported as format "fmt" '},{label:"ByteArrayQ",type:"keyword",info:"ByteArrayQ[expr] gives True if expr is a valid ByteArray object, and False otherwise."},{label:"ByteArrayToString",type:"keyword",info:"ByteArrayToString[ba] returns a string by decoding the data in the byte array ba, assuming UTF-8 enc"},{label:"ByteCount",type:"keyword",info:"ByteCount[expr] gives the number of bytes used internally by the Wolfram System to store expr. "},{label:"ByteOrdering",type:"keyword",info:"ByteOrdering is an option for BinaryRead, BinaryWrite, and related functions that specifies what ord"},{label:"C",type:"keyword",info:"                                    th\nC[i] is the default form for the i\xef\x8e\xa0\xef\x8e\xa0   parameter or constant "},{label:"CachedValue",type:"keyword",info:"System`CachedValue"},{label:"CacheGraphics",type:"keyword",info:"System`CacheGraphics"},{label:"CachePersistence",type:"keyword",info:"CachePersistence is an option for CloudObject and related cloud functions that specifies the time du"},{label:"CalendarConvert",type:"keyword",info:"CalendarConvert[date, calendar] converts the date object date to the specified calendar type calenda"},{label:"CalendarData",type:"keyword",info:"CalendarData[cal] gives the default parameters associated with the date calendar cal.CalendarData[co"},{label:"CalendarType",type:"keyword",info:"CalendarType is an option that determines the calendar system in which all dates are to be interpret"},{label:"Callout",type:"keyword",info:"Callout[data, expr] displays expr in a plot as a callout pointing to data.Callout[data, expr, pos] d"},{label:"CalloutMarker",type:"keyword",info:"CalloutMarker is an option for Callout that specifies what marker to draw at the end of the leader i"},{label:"CalloutStyle",type:"keyword",info:"CalloutStyle is an option for Callout that specifies what style to use for callouts."},{label:"CallPacket",type:"keyword",info:"CallPacket[integer, list] is a WSTP packet encapsulating a request to invoke the external function n"},{label:"CanberraDistance",type:"keyword",info:"CanberraDistance[u, v] gives the Canberra distance between vectors u and v."},{label:"Cancel",type:"keyword",info:"Cancel[expr] cancels out common factors in the numerator and denominator of expr. "},{label:"CancelButton",type:"keyword",info:"CancelButton[] represents a Cancel button in a dialog that closes the dialog window when clicked.Can"},{label:"CandlestickChart",type:"keyword",info:"CandlestickChart[{{date , {open , high , low , close }}, \xe2\x80\xa6}] makes a chart with candles representing"},{label:"CanonicalGraph",type:"keyword",info:"CanonicalGraph[g] gives a canonical form of the graph g.CanonicalGraph[{v \xef\x94\xa2 w, \xe2\x80\xa6}] uses rules v \xef\x94\xa2 w "},{label:"CanonicalizePolygon",type:"keyword",info:"CanonicalizePolygon[poly] gives a canonical representation of the polygon poly with shared coordinat"},{label:"CanonicalizePolyhedron",type:"keyword",info:"CanonicalizePolyhedron[poly] gives a canonical representation of the polyhedron poly with shared coo"},{label:"CanonicalizeRegion",type:"keyword",info:"CanonicalizeRegion[reg] gives a canonical representation of the region reg."},{label:"CanonicalName",type:"keyword",info:"CanonicalName[entity] gives the canonical name for the entity specified by entity.CanonicalName[{ent"},{label:"CanonicalWarpingCorrespondence",type:"keyword",info:"CanonicalWarpingCorrespondence[s , s ] gives the canonical time warping (CTW) correspondence between"},{label:"CanonicalWarpingDistance",type:"keyword",info:"CanonicalWarpingDistance[s , s ] gives the canonical time warping (CTW) distance between sequences s"},{label:"CantorMesh",type:"keyword",info:"                                                     th                                             "},{label:"CantorStaircase",type:"keyword",info:"CantorStaircase[x] gives the Cantor staircase function F (x).\n                                      "},{label:"Canvas",type:"keyword",info:"Canvas[] represents an empty canvas in the current notebook in which you can do free-form drawing.Ca"},{label:"Cap",type:"keyword",info:"Cap[x, y, \xe2\x80\xa6] displays as x \xe2\x8c\xa2 y \xe2\x8c\xa2 \xe2\x80\xa6."},{label:"CapForm",type:"keyword",info:"CapForm[type] is a graphics primitive that specifies what type of caps should be used at the ends of"},{label:"CapitalDifferentialD",type:"keyword",info:"CapitalDifferentialD[x] displays as \xef\x9d\x8b x."},{label:"Capitalize",type:"keyword",info:"Capitalize[string] yields a string in which the first character has been made uppercase.Capitalize[s"},{label:"CapsuleShape",type:"keyword",info:"CapsuleShape[{{x , y , z }, {x , y , z }}, r] represents the filled capsule between points {x , y , "},{label:"CaptureRunning",type:"keyword",info:"CaptureRunning is an option for signal acquisition functions that specifies whether to immediately s"},{label:"CardinalBSplineBasis",type:"keyword",info:"System`CardinalBSplineBasis"},{label:"CarlemanLinearize",type:"keyword",info:"CarlemanLinearize[sys, spec] Carleman linearizes the nonlinear state-space model sys according to sp"},{label:"CarlsonRC",type:"keyword",info:"CarlsonRC[x, y] gives the Carlson's elliptic integral R (x, y).\n                                    "},{label:"CarlsonRD",type:"keyword",info:"CarlsonRD[x, y, z] gives the Carlson's elliptic integral R (x, y, z).\n                              "},{label:"CarlsonRE",type:"keyword",info:"CarlsonRE[x, y] gives the Carlson's elliptic integral R (x, y).\n                                    "},{label:"CarlsonRF",type:"keyword",info:"CarlsonRF[x, y, z] gives the Carlson's elliptic integral R (x, y, z).\n                              "},{label:"CarlsonRG",type:"keyword",info:"CarlsonRG[x, y, z] gives the Carlson's elliptic integral R (x, y, z).\n                              "},{label:"CarlsonRJ",type:"keyword",info:"CarlsonRJ[x, y, z, \xcf\x81] gives Carlson's elliptic integral R (x, y, z, \xcf\x81).\n                            "},{label:"CarlsonRK",type:"keyword",info:"CarlsonRK[x, y] gives the Carlson's elliptic integral R (x, y).\n                                    "},{label:"CarlsonRM",type:"keyword",info:"CarlsonRM[x, y, \xcf\x81] gives Carlson's elliptic integral R (x, y, \xcf\x81).\n                                  "},{label:"CarmichaelLambda",type:"keyword",info:"CarmichaelLambda[n] gives the Carmichael function \xce\xbb(n)."},{label:"CaseOrdering",type:"keyword",info:"CaseOrdering is an option for AlphabeticSort and related functions that specifies how upper versus l"},{label:"Cases",type:"keyword",info:"Cases[{e , e , \xe2\x80\xa6}, pattern] gives a list of the e  that match the pattern. Cases[{e , \xe2\x80\xa6}, pattern \xef\x94\xa2 "},{label:"CaseSensitive",type:"keyword",info:"CaseSensitive[patt] represents a string pattern that requires matching typographical case, even with"},{label:"Cashflow",type:"keyword",info:"Cashflow[{c , c , \xe2\x80\xa6, c }] represents a series of cash flows occurring at unit time intervals.Cashflo"},{label:"Casoratian",type:"keyword",info:"Casoratian[{y , y , \xe2\x80\xa6}, n] gives the Casoratian determinant for the sequences y , y , \xe2\x80\xa6 depending on"},{label:"Catalan",type:"keyword",info:"Catalan is Catalan's constant, with numerical value \xe2\x89\x83 0.915966. "},{label:"CatalanNumber",type:"keyword",info:"                             th\nCatalanNumber[n] gives the n\xef\x8e\xa0   Catalan number C .\n                 "},{label:"Catch",type:"keyword",info:"Catch[expr] returns the argument of the first Throw generated in the evaluation of expr. Catch[expr,"},{label:"CategoricalDistribution",type:"keyword",info:"CategoricalDistribution[{c , c , \xe2\x80\xa6}] generates a uniform categorical distribution over classes c , c"},{label:"Catenate",type:"keyword",info:"Catenate[{list , list , \xe2\x80\xa6}] yields a single list with all elements from the list  in order. Catenate"},{label:"CatenateLayer",type:"keyword",info:"CatenateLayer[] represents a net layer that takes a list of input arrays and catenates them.Catenate"},{label:"CauchyDistribution",type:"keyword",info:"CauchyDistribution[a, b] represents a Cauchy distribution with location parameter a and scale parame"},{label:"CauchyPointProcess",type:"keyword",info:"                                                                                                    "},{label:"CauchyWindow",type:"keyword",info:"CauchyWindow[x] represents a Cauchy window function of x.CauchyWindow[x, \xce\\[PlusMinus]] uses the parameter \xce\\[PlusMinus].\n"},{label:"CayleyGraph",type:"keyword",info:"CayleyGraph[group] returns a Cayley graph representation of group."},{label:"CDF",type:"keyword",info:"CDF[dist, x] gives the cumulative distribution function for the distribution dist evaluated at x.CDF"},{label:"CDFDeploy",type:"keyword",info:'CDFDeploy["file.cdf", expr] deploys expr in a form that can be played by Wolfram Player.CDFDeploy["f'},{label:"CDFInformation",type:"keyword",info:"CDFInformation[expr] gives a list of properties relevant to a CDF deployed with the content expr.CDF"},{label:"CDFWavelet",type:"keyword",info:'CDFWavelet[] represents a Cohen\xe2\x80\x93Daubechies\xe2\x80\x93Feauveau wavelet of type "9/7". CDFWavelet["type"] repres'},{label:"Ceiling",type:"keyword",info:"Ceiling[x] gives the smallest integer greater than or equal to x. Ceiling[x, a] gives the smallest m"},{label:"CelestialSystem",type:"keyword",info:"CelestialSystem is an option for SunPosition, MoonPosition, and related functions that specifies the"},{label:"Cell",type:"keyword",info:"Cell[contents] is the low-level representation of a cell inside a Wolfram System notebook. Cell[cont"},{label:"CellAutoOverwrite",type:"keyword",info:"CellAutoOverwrite is an option for Cell which specifies whether an output cell should be overwritten"},{label:"CellBaseline",type:"keyword",info:"CellBaseline is an option for Cell which specifies where the baseline of the cell should be assumed "},{label:"CellBoundingBox",type:"keyword",info:"System`CellBoundingBox"},{label:"CellBracketOptions",type:"keyword",info:"CellBracketOptions is an option for cells that specifies settings for cell brackets."},{label:"CellChangeTimes",type:"keyword",info:"CellChangeTimes is an option to Cell that specifies when changes were made to the cell."},{label:"CellContents",type:"keyword",info:"System`CellContents"},{label:"CellContext",type:"keyword",info:"CellContext is an option for Cell which specifies the context to use for the evaluation of the conte"},{label:"CellDingbat",type:"keyword",info:"CellDingbat is an option for Cell which specifies what dingbat to use to emphasize a cell. "},{label:"CellDynamicExpression",type:"keyword",info:"CellDynamicExpression is an option for cells that specifies an expression to be dynamically updated "},{label:"CellEditDuplicate",type:"keyword",info:"CellEditDuplicate is an option for Cell which specifies whether the front end should make a copy of "},{label:"CellElementsBoundingBox",type:"keyword",info:"System`CellElementsBoundingBox"},{label:"CellElementSpacings",type:"keyword",info:"System`CellElementSpacings"},{label:"CellEpilog",type:"keyword",info:"CellEpilog is an option for Cell which gives an expression to evaluate after each ordinary evaluatio"},{label:"CellEvaluationDuplicate",type:"keyword",info:"CellEvaluationDuplicate is an option for Cell which specifies whether the front end should make a co"},{label:"CellEvaluationFunction",type:"keyword",info:"CellEvaluationFunction is an option for Cell that gives a function to be applied to every expression"},{label:"CellEvaluationLanguage",type:"keyword",info:"System`CellEvaluationLanguage"},{label:"CellEventActions",type:"keyword",info:"CellEventActions is an option for Cell that gives a list of actions to perform when specified events"},{label:"CellFrame",type:"keyword",info:"CellFrame is an option for Cell that specifies whether a frame should be drawn around a cell. "},{label:"CellFrameColor",type:"keyword",info:"CellFrameColor is an option that specifies the color of the frame around a cell."},{label:"CellFrameLabelMargins",type:"keyword",info:"CellFrameLabelMargins is an option for cells that specifies the absolute margins in printer's points"},{label:"CellFrameLabels",type:"keyword",info:"CellFrameLabels is an option that specifies the labels associated with the frame around a cell."},{label:"CellFrameMargins",type:"keyword",info:"CellFrameMargins is an option for Cell that specifies the absolute margins in printer\xe2\x80\x99s points to le"},{label:"CellFrameStyle",type:"keyword",info:"System`CellFrameStyle"},{label:"CellGroup",type:"keyword",info:"CellGroup[{cell , cell , \xe2\x80\xa6}] gives an open group of cells that can appear in a Wolfram System notebo"},{label:"CellGroupData",type:"keyword",info:"CellGroupData[{cell , cell , \xe2\x80\xa6}] is a low-level construct that represents an open group of cells in "},{label:"CellGrouping",type:"keyword",info:"CellGrouping is a notebook option that specifies how cells in the notebook should be assembled into "},{label:"CellGroupingRules",type:"keyword",info:"CellGroupingRules is an option for cells that specifies the rules used for grouping a cell."},{label:"CellHorizontalScrolling",type:"keyword",info:"CellHorizontalScrolling is an option for cells that specifies whether the contents of a cell can be "},{label:"CellID",type:"keyword",info:"CellID is an option for Cell that specifies a unique ID number for a cell."},{label:"CellInsertionPointCell",type:"keyword",info:"System`CellInsertionPointCell"},{label:"CellLabel",type:"keyword",info:"CellLabel is an option for Cell which gives the label to use for a particular cell. "},{label:"CellLabelAutoDelete",type:"keyword",info:"CellLabelAutoDelete is an option for Cell which specifies whether a label for the cell should be aut"},{label:"CellLabelMargins",type:"keyword",info:"CellLabelMargins is an option for cells that specifies the absolute margins in printer's points arou"},{label:"CellLabelPositioning",type:"keyword",info:"CellLabelPositioning is an option for cells that specifies where the label for a cell is positioned."},{label:"CellLabelStyle",type:"keyword",info:"CellLabelStyle is an option for Cell that specifies the style to use in displaying cell labels marki"},{label:"CellLabelTemplate",type:"keyword",info:"System`CellLabelTemplate"},{label:"CellMargins",type:"keyword",info:"CellMargins is an option for Cell that specifies the absolute margins in printer's points to leave a"},{label:"CellObject",type:"keyword",info:"CellObject[id] is an object that represents a cell in an open notebook in the front end."},{label:"CellOpen",type:"keyword",info:"CellOpen is an option for Cell that specifies whether the contents of a cell should be explicitly di"},{label:"CellPrint",type:"keyword",info:"CellPrint[expr] inserts expr as a complete cell in the current notebook just below the cell being ev"},{label:"CellProlog",type:"keyword",info:"CellProlog is an option to Cell that gives an expression to evaluate before each ordinary evaluation"},{label:"Cells",type:"keyword",info:"Cells[] returns a list of CellObject expressions corresponding to cells in the current notebook.Cell"},{label:"CellSize",type:"keyword",info:"CellSize is an option for cells that specifies the width and height of an inline cell."},{label:"CellStyle",type:"keyword",info:"CellStyle is a setting for functions such as NotebookFind and Cells that specifies the name of a cel"},{label:"CellTags",type:"keyword",info:"CellTags is an option for Cell that gives a list of tags to associate with a cell. "},{label:"CellTrayWidgets",type:"keyword",info:"System`CellTrayWidgets"},{label:"CellularAutomaton",type:"keyword",info:"CellularAutomaton[rule, init, t] generates a list representing the evolution of the cellular automat"},{label:"CensoredDistribution",type:"keyword",info:"CensoredDistribution[{x   , x   }, dist] represents the distribution of values that come from dist a"},{label:"Censoring",type:"keyword",info:"Censoring[t, c] represents a censored event time t with censoring c.Censoring[{t , t , \xe2\x80\xa6}, c] repres"},{label:"Center",type:"keyword",info:"Center is a symbol that represents the center for purposes of alignment and positioning. "},{label:"CenterArray",type:"keyword",info:"CenterArray[a, n] creates a list of length n with the elements of a at the center and zeros elsewher"},{label:"CenterDot",type:"keyword",info:"CenterDot[x, y, \xe2\x80\xa6] displays as x \xc2\\[CenterDot] y \xc2\\[CenterDot] \xe2\x80\xa6."},{label:"CenteredInterval",type:"keyword",info:"CenteredInterval[x, dx] for real numbers x and dx gives a centered interval that contains the real i"},{label:"CentralFeature",type:"keyword",info:"CentralFeature[{x , x , \xe2\x80\xa6}] gives the central feature of the elements x .CentralFeature[{x  \xef\x94\xa2 v , x "},{label:"CentralMoment",type:"keyword",info:"                                   th                                                               "},{label:"CentralMomentGeneratingFunction",type:"keyword",info:"CentralMomentGeneratingFunction[dist, t] gives the central moment-generating function for the distri"},{label:"Cepstrogram",type:"keyword",info:"Cepstrogram[data] plots the array of power cepstra computed on each partition of data.Cepstrogram[da"},{label:"CepstrogramArray",type:"keyword",info:"CepstrogramArray[data] computes an array of cepstra on data.CepstrogramArray[data, n] uses partition"},{label:"CepstrumArray",type:"keyword",info:"CepstrumArray[data] computes the power cepstrum of data.CepstrumArray[data, type] computes the speci"},{label:"CForm",type:"keyword",info:"CForm[expr] prints as a C language version of expr. "},{label:"ChampernowneNumber",type:"keyword",info:"ChampernowneNumber[b] gives the base-b Champernowne number C .ChampernowneNumber[] gives the base-10"},{label:"ChangeOptions",type:"keyword",info:"System`ChangeOptions"},{label:"ChannelBase",type:"keyword",info:"ChannelBase is an option specifying the base URL of the server to use for brokering channel communic"},{label:"ChannelBrokerAction",type:"keyword",info:"ChannelBrokerAction is an option specifying the action to execute on the channel broker server in ad"},{label:"ChannelDatabin",type:"keyword",info:"System`ChannelDatabin"},{label:"ChannelHistoryLength",type:"keyword",info:"ChannelHistoryLength is an option to ChannelListen that specifies the maximum number of messages to "},{label:"ChannelListen",type:"keyword",info:"ChannelListen[channel] starts listening on the specified channel.ChannelListen[channel, func] applie"},{label:"ChannelListener",type:"keyword",info:"ChannelListener[\xe2\x80\xa6] represents a channel listener created by ChannelListen."},{label:"ChannelListeners",type:"keyword",info:"ChannelListeners[] gives a list of currently active channel listeners."},{label:"ChannelListenerWait",type:"keyword",info:"System`ChannelListenerWait"},{label:"ChannelObject",type:"keyword",info:'ChannelObject[] gives a new anonymous channel specification.\\!\xef\x9f\x89\xef\x9f\x88RowBox[{"ChannelObject", "[", ""mqtt'},{label:"ChannelPreSendFunction",type:"keyword",info:"System`ChannelPreSendFunction"},{label:"ChannelReceiverFunction",type:"keyword",info:"ChannelReceiverFunction[fun] represents a channel receiver function that applies fun to any channel "},{label:"ChannelSend",type:"keyword",info:"ChannelSend[channel, msg] sends the specified message msg to the specified channel."},{label:"ChannelSubscribers",type:"keyword",info:"ChannelSubscribers[channel] gives a list of users currently subscribed to the specified channel.Chan"},{label:"ChanVeseBinarize",type:"keyword",info:"ChanVeseBinarize[image] finds a two-level segmentation of image by computing optimal contours around"},{label:"Character",type:"keyword",info:"Character represents a single character in Read. "},{label:"CharacterCounts",type:"keyword",info:'CharacterCounts["string"] gives an association whose keys are the distinct characters in string, and'},{label:"CharacterEncoding",type:"keyword",info:"CharacterEncoding is an option for input and output functions which specifies what raw character enc"},{label:"CharacterEncodingsPath",type:"keyword",info:"CharacterEncodingsPath is a global option that specifies which directories are searched for characte"},{label:"CharacteristicFunction",type:"keyword",info:"CharacteristicFunction[dist, t] gives the characteristic function for the distribution dist as a fun"},{label:"CharacteristicPolynomial",type:"keyword",info:"CharacteristicPolynomial[m, x] gives the characteristic polynomial for the matrix m. CharacteristicP"},{label:"CharacterName",type:"keyword",info:'CharacterName["c"] gives the name of the character c.CharacterName[n] gives the name of the characte'},{label:"CharacterNormalize",type:"keyword",info:'CharacterNormalize["text", form] converts the characters in text to the specified normalization form'},{label:"CharacterRange",type:"keyword",info:'CharacterRange[c , c ] yields a list of the characters in the range from "c " to "c ". CharacterRang'},{label:"Characters",type:"keyword",info:'Characters["string"] gives a list of the characters in a string. '},{label:"ChartBaseStyle",type:"keyword",info:"ChartBaseStyle is an option for charting functions that specifies the base style for all chart eleme"},{label:"ChartElementData",type:"keyword",info:"System`ChartElementData"},{label:"ChartElementDataFunction",type:"keyword",info:"System`ChartElementDataFunction"},{label:"ChartElementFunction",type:"keyword",info:"ChartElementFunction is an option for charting functions such as BarChart that gives a function to u"},{label:"ChartElements",type:"keyword",info:"ChartElements is an option to charting functions such as BarChart that specifies the graphics to use"},{label:"ChartLabels",type:"keyword",info:"ChartLabels is an option for charting functions that specifies what labels should be used for chart "},{label:"ChartLayout",type:"keyword",info:"ChartLayout is an option to charting functions that specifies the overall layout to use."},{label:"ChartLegends",type:"keyword",info:"ChartLegends is an option for charting functions that specifies what legends should be used for char"},{label:"ChartStyle",type:"keyword",info:"ChartStyle is an option for charting functions that specifies styles in which chart elements should "},{label:"Chebyshev1FilterModel",type:"keyword",info:"Chebyshev1FilterModel[n] creates a lowpass Chebyshev type 1 filter of order n.Chebyshev1FilterModel["},{label:"Chebyshev2FilterModel",type:"keyword",info:"Chebyshev2FilterModel[n] creates a lowpass Chebyshev type 2 filter of order n.Chebyshev2FilterModel["},{label:"ChebyshevDistance",type:"keyword",info:"ChebyshevDistance[u, v] gives the Chebyshev or sup norm distance between vectors u and v."},{label:"ChebyshevT",type:"keyword",info:"ChebyshevT[n, x] gives the Chebyshev polynomial of the first kind T (x). \n                          "},{label:"ChebyshevU",type:"keyword",info:"ChebyshevU[n, x] gives the Chebyshev polynomial of the second kind U (x). \n                         "},{label:"Check",type:"keyword",info:"Check[expr, failexpr] evaluates expr, and returns the result, unless messages were generated, in whi"},{label:"CheckAbort",type:"keyword",info:"CheckAbort[expr, failexpr] evaluates expr, returning failexpr if an abort occurs. "},{label:"CheckAll",type:"keyword",info:"CheckAll[expr, f] evaluates expr and returns f[expr, HoldComplete[control , \xe2\x80\xa6]] where the control  e"},{label:"CheckArguments",type:"keyword",info:"CheckArguments[f[args], n] gives True if args consists of exactly n positional arguments followed by"},{label:"Checkbox",type:"keyword",info:"Checkbox[x] represents a checkbox with setting x, displayed as CheckboxBox[True] when x is True and "},{label:"CheckboxBar",type:"keyword",info:"CheckboxBar[x, {val , val , \xe2\x80\xa6}] represents a checkbox bar with setting x and with checkboxes for val"},{label:"CheckboxBox",type:"keyword",info:"System`CheckboxBox"},{label:"CheckboxBoxOptions",type:"keyword",info:"CheckboxBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Checkbox"},{label:"ChemicalData",type:"keyword",info:'ChemicalData["name", "property"] gives the value of the specified property for the chemical "name".C'},{label:"ChemicalFormula",type:"keyword",info:"ChemicalFormula[\xef\x84\x93 elem  \xef\x94\xa2 n , elem  \xef\x94\xa2 n , \xe2\x80\xa6|>] represents a chemical species with n  atoms of the el"},{label:"ChemicalReaction",type:"keyword",info:"ChemicalReaction[reactants \xef\x94\xa2 products] represents a chemical reaction between the given reactants an"},{label:"ChessboardDistance",type:"keyword",info:"ChessboardDistance[u, v] gives the chessboard, Chebyshev, or sup norm distance between vectors u and"},{label:"ChiDistribution",type:"keyword",info:"ChiDistribution[\xce\xbd] represents a \xcf\x87 distribution with \xce\xbd degrees of freedom."},{label:"ChineseRemainder",type:"keyword",info:"ChineseRemainder[{r , r , \xe2\x80\xa6}, {m , m , \xe2\x80\xa6}] gives the smallest x with x \xe2\x89\xa5 0 that satisfies all the in"},{label:"ChiSquareDistribution",type:"keyword",info:"                                       2\nChiSquareDistribution[\xce\xbd] represents a \xcf\x87  distribution with "},{label:"ChoiceButtons",type:"keyword",info:"ChoiceButtons[] represents a pair of OK and Cancel buttons that close a dialog.ChoiceButtons[{act  ,"},{label:"ChoiceDialog",type:"keyword",info:"ChoiceDialog[expr] puts up a standard choice dialog that displays expr together with OK and Cancel b"},{label:"CholeskyDecomposition",type:"keyword",info:"CholeskyDecomposition[m] gives the Cholesky decomposition of a matrix m. "},{label:"Chop",type:"keyword",info:"Chop[expr] replaces approximate real numbers in expr that are close to zero by the exact integer 0. "},{label:"ChromaticityPlot",type:"keyword",info:"ChromaticityPlot[colspace] plots a 2D slice of the color space colspace. ChromaticityPlot[color] plo"},{label:"ChromaticityPlot3D",type:"keyword",info:"ChromaticityPlot3D[colspace] returns a 3D gamut of the color space colspace.ChromaticityPlot3D[color"},{label:"ChromaticPolynomial",type:"keyword",info:"ChromaticPolynomial[g, k] gives the chromatic polynomial of the graph g.ChromaticPolynomial[{v \xef\x94\xa2 w, "},{label:"Circle",type:"keyword",info:"Circle[{x, y}, r] represents a circle of radius r centered at {x, y}.Circle[{x, y}] gives a circle o"},{label:"CircleBox",type:"keyword",info:"System`CircleBox"},{label:"CircleDot",type:"keyword",info:"CircleDot[x, y, \xe2\x80\xa6] displays as x \xe2\x8a\x99 y \xe2\x8a\x99 \xe2\x80\xa6."},{label:"CircleMinus",type:"keyword",info:"CircleMinus[x, y] displays as x \xe2\x8a\x96 y. "},{label:"CirclePlus",type:"keyword",info:"CirclePlus[x, y, \xe2\x80\xa6] displays as x \xe2\x8a\x95 y \xe2\x8a\x95 \xe2\x80\xa6."},{label:"CirclePoints",type:"keyword",info:"CirclePoints[n] gives the positions of n points equally spaced around the unit circle.CirclePoints[r"},{label:"CircleThrough",type:"keyword",info:"CircleThrough[{p , p , \xe2\x80\xa6}] represents a circle passing through the points p .CircleThrough[{p , p , "},{label:"CircleTimes",type:"keyword",info:"CircleTimes[x] displays as \xe2\x8a\x97 x.CircleTimes[x, y, \xe2\x80\xa6] displays as x \xe2\x8a\x97 y \xe2\x8a\x97 \xe2\x80\xa6.\n"},{label:"CirculantGraph",type:"keyword",info:"CirculantGraph[n, j] gives the circulant graph C (j) with n vertices and jump j.CirculantGraph[n, {j"},{label:"CircularOrthogonalMatrixDistribution",type:"keyword",info:"CircularOrthogonalMatrixDistribution[n] represents a circular orthogonal matrix distribution with ma"},{label:"CircularQuaternionMatrixDistribution",type:"keyword",info:"CircularQuaternionMatrixDistribution[n] represents a circular quaternion matrix distribution with ma"},{label:"CircularRealMatrixDistribution",type:"keyword",info:"CircularRealMatrixDistribution[n] represents a circular real matrix distribution with matrix dimensi"},{label:"CircularSymplecticMatrixDistribution",type:"keyword",info:"CircularSymplecticMatrixDistribution[n] represents a circular symplectic matrix distribution with ma"},{label:"CircularUnitaryMatrixDistribution",type:"keyword",info:"CircularUnitaryMatrixDistribution[n] represents a circular unitary matrix distribution with matrix d"},{label:"Circumsphere",type:"keyword",info:"                                                                                    n\nCircumsphere[{"},{label:"CityData",type:"keyword",info:'CityData[name, "property"] gives the value of the specified property for the city with the specified'},{label:"ClassifierFunction",type:"keyword",info:"ClassifierFunction[\xe2\x80\xa6] represents a function generated by Classify that classifies data into classes."},{label:"ClassifierInformation",type:"keyword",info:"ClassifierInformation[classifier] generates a report giving information on the classifier function c"},{label:"ClassifierMeasurements",type:"keyword",info:"ClassifierMeasurements[classifier, testset, prop] gives measurements associated with property prop w"},{label:"ClassifierMeasurementsObject",type:"keyword",info:"ClassifierMeasurementsObject[\xe2\x80\xa6] represents an object generated by ClassifierMeasurements that can be"},{label:"Classify",type:"keyword",info:"Classify[{example  \xef\x94\xa2 class , example  \xef\x94\xa2 class , \xe2\x80\xa6}] generates a ClassifierFunction[\xe2\x80\xa6] based on the e"},{label:"ClassPriors",type:"keyword",info:"ClassPriors is an option for Classify and related functions that specifies explicit prior probabilit"},{label:"Clear",type:"keyword",info:'Clear[symbol , symbol , \xe2\x80\xa6] clears values and definitions for the symbol . Clear["form ", "form ", \xe2\x80\xa6]'},{label:"ClearAll",type:"keyword",info:"ClearAll[symb , symb , \xe2\x80\xa6] clears all values, definitions, attributes, messages, and defaults associa"},{label:"ClearAttributes",type:"keyword",info:"ClearAttributes[symbol, attr] removes attr from the list of attributes of the symbol symbol. ClearAt"},{label:"ClearCookies",type:"keyword",info:"ClearCookies[domain] clears all persistent and session cookies associated with the specified domain."},{label:"ClearPermissions",type:"keyword",info:"ClearPermissions[obj, class] clears permissions for the specified class of users for the cloud objec"},{label:"ClearSystemCache",type:"keyword",info:"ClearSystemCache[] clears internal system caches of stored results.ClearSystemCache[type] clears onl"},{label:"ClebschGordan",type:"keyword",info:"ClebschGordan[{j , m }, {j , m }, {j, m}] gives the Clebsch\xe2\x80\x93Gordan coefficient for the decomposition"},{label:"ClickPane",type:"keyword",info:"ClickPane[image, func] represents a clickable pane that displays as image and applies func to the x,"},{label:"ClickToCopy",type:"keyword",info:"ClickToCopy[expr] represents a button that copies expr whenever it is clicked.ClickToCopy[label, exp"},{label:"ClickToCopyEnabled",type:"keyword",info:"ClickToCopyEnabled is an option for Cell that specifies whether to show a click-to-copy overlay when"},{label:"Clip",type:"keyword",info:"Clip[x] gives x clipped to be between -1 and +1. Clip[x, {min, max}] gives x for min \xe2\x89\xa4 x \xe2\x89\xa4 max, min "},{label:"ClipboardNotebook",type:"keyword",info:"System`ClipboardNotebook"},{label:"ClipFill",type:"keyword",info:"ClipFill is an option for plotting functions that specifies what should be shown where curves or sur"},{label:"ClippingStyle",type:"keyword",info:"ClippingStyle is an option for plotting functions that specifies the style of what should be drawn w"},{label:"ClipPlanes",type:"keyword",info:"ClipPlanes is an option to Graphics3D that specifies a list of clipping planes that can cut away por"},{label:"ClipPlanesStyle",type:"keyword",info:"ClipPlanesStyle is an option to Graphics3D that specifies how clipping planes defined with the ClipP"},{label:"ClipRange",type:"keyword",info:"ClipRange is an option to Raster3D that specifies a rectangular region that is cut away from the res"},{label:"Clock",type:"keyword",info:"Clock[] represents a clock variable whose value cycles continuously from 0 to 1 once per second when"},{label:"ClockGauge",type:"keyword",info:"ClockGauge[] draws an analog clock face showing the local time with hours, minutes, and seconds.Cloc"},{label:"ClockwiseContourIntegral",type:"keyword",info:"System`ClockwiseContourIntegral"},{label:"Close",type:"keyword",info:"Close[obj] closes a stream or socket. "},{label:"Closed",type:"keyword",info:"System`Closed"},{label:"CloseKernels",type:"keyword",info:"CloseKernels[] terminates all parallel kernels from the list Kernels[].CloseKernels[k] terminates th"},{label:"ClosenessCentrality",type:"keyword",info:"ClosenessCentrality[g] gives a list of closeness centralities for the vertices in the graph g.Closen"},{label:"Closing",type:"keyword",info:"Closing[image, ker] gives the morphological closing of image with respect to the structuring element"},{label:"ClosingAutoSave",type:"keyword",info:"ClosingAutoSave is an option for notebooks that specifies whether a notebook is automatically saved "},{label:"ClosingEvent",type:"keyword",info:"System`ClosingEvent"},{label:"CloudAccountData",type:"keyword",info:"CloudAccountData[] gives data associated with the cloud account currently being used.CloudAccountDat"},{label:"CloudBase",type:"keyword",info:"CloudBase is an option specifying the base URI of the server to use for cloud operations."},{label:"CloudConnect",type:"keyword",info:"CloudConnect[userid, password] authenticates to the Wolfram Cloud using the specified cloud user ID "},{label:"CloudConnections",type:"keyword",info:"CloudConnections[] gives a list of cloud accounts that are authenticated."},{label:"CloudDeploy",type:"keyword",info:"CloudDeploy[expr] deploys expr to a new anonymous cloud object.CloudDeploy[expr, location] deploys e"},{label:"CloudDirectory",type:"keyword",info:"CloudDirectory[] gives a CloudObject representing the current working directory used for cloud objec"},{label:"CloudDisconnect",type:"keyword",info:"CloudDisconnect[] disconnects a non-cloud instance of the Wolfram Language from the Wolfram Cloud."},{label:"CloudEvaluate",type:"keyword",info:"CloudEvaluate[expr] evaluates expr in the cloud and returns the result.CloudEvaluate[expr, h] wraps "},{label:"CloudExport",type:"keyword",info:'CloudExport[expr, "format"] exports expr to a new anonymous cloud object in the specified format.Clo'},{label:"CloudExpression",type:"keyword",info:'CloudExpression["name"] represents an expression whose value is persistently stored in the cloud.htt'},{label:"CloudExpressions",type:"keyword",info:"CloudExpressions[] gives a list of named cloud expressions owned by you. CloudExpressions[None] give"},{label:"CloudFunction",type:"keyword",info:"CloudFunction[fun] represents a pure function that evaluates fun[args] in the cloud.CloudFunction[Cl"},{label:"CloudGet",type:"keyword",info:'CloudGet["uri"] reads in a cloud object at a given URI, evaluating each expression in it and returni'},{label:"CloudImport",type:"keyword",info:'CloudImport["uri"] imports from a cloud object at a given URI.CloudImport["uri", elements] imports t'},{label:"CloudLoggingData",type:"keyword",info:"CloudLoggingData[] gives summary logging data for all your cloud objects.CloudLoggingData[category] "},{label:"CloudObject",type:"keyword",info:'CloudObject[] represents a new anonymous cloud object.http://\xe2\x80\xa6"], CloudObject["https://\xe2\x80\xa6"] represent'},{label:"CloudObjectInformation",type:"keyword",info:"CloudObjectInformation[obj] gives information about a cloud object.\nCloudObjectInformation[{obj, ..."},{label:"CloudObjectInformationData",type:"keyword",info:"System`CloudObjectInformationData"},{label:"CloudObjectNameFormat",type:"keyword",info:"CloudObjectNameFormat is an option for CloudObject and related objects that determines how the name "},{label:"CloudObjects",type:"keyword",info:"CloudObjects[] gives a list of cloud objects in your current cloud directory.CloudObjects[dir] gives"},{label:"CloudObjectURLType",type:"keyword",info:"CloudObjectURLType is an option for CloudObject and related objects that specifies the base type of "},{label:"CloudPublish",type:"keyword",info:"CloudPublish[] makes a public copy in the cloud of the current document.CloudPublish[obj] makes a pu"},{label:"CloudPut",type:"keyword",info:'CloudPut[expr] writes expr to a new anonymous cloud object.CloudPut[expr, "uri"] writes expr to a cl'},{label:"CloudRenderingMethod",type:"keyword",info:"CloudRenderingMethod is an option for Cell and Notebook that specifies how to render cells in the cl"},{label:"CloudSave",type:"keyword",info:"CloudSave[symbol] saves definitions associated with the specified symbol to a new anonymous cloud ob"},{label:"CloudShare",type:"keyword",info:"CloudShare[user] shares the current cloud document with the specified user.CloudShare[{user , user ,"},{label:"CloudSubmit",type:"keyword",info:"CloudSubmit[expr] submits expr for immediate asynchronous cloud evaluation. CloudSubmit[ScheduledTas"},{label:"CloudSymbol",type:"keyword",info:'CloudSymbol["name"] represents a symbol whose value is persistently stored in the cloud.CloudSymbol['},{label:"CloudUnshare",type:"keyword",info:"CloudUnshare[obj] cancels sharing of the cloud object obj with everyone.CloudUnshare[obj, users] can"},{label:"CloudUsageData",type:"keyword",info:'CloudUsageData[] gives usage data for all of your cloud objects.\nCloudUsageData["Periods"] lists all'},{label:"CloudUserID",type:"keyword",info:"System`CloudUserID"},{label:"ClusterClassify",type:"keyword",info:"ClusterClassify[data] generates a ClassifierFunction[\xe2\x80\xa6] by partitioning data into clusters of simila"},{label:"ClusterDissimilarityFunction",type:"keyword",info:"ClusterDissimilarityFunction is an option for ClusteringTree and Dendrogram that specifies the inter"},{label:"ClusteringComponents",type:"keyword",info:"ClusteringComponents[array] gives an array in which each element at the lowest level of array is rep"},{label:"ClusteringTree",type:"keyword",info:"ClusteringTree[{e , e , \xe2\x80\xa6}] constructs a weighted tree from the hierarchical clustering of the eleme"},{label:"CMYKColor",type:"keyword",info:"CMYKColor[c, m, y, k] represents a color in the CMYK color space with cyan, magenta, yellow and blac"},{label:"Coarse",type:"keyword",info:"System`Coarse"},{label:"CodeAssistOptions",type:"keyword",info:"CodeAssistOptions is an option for cells that specifies settings for controlling code input assistan"},{label:"Coefficient",type:"keyword",info:"Coefficient[expr, form] gives the coefficient of form in the polynomial expr. Coefficient[expr, form"},{label:"CoefficientArrays",type:"keyword",info:"CoefficientArrays[polys, vars] gives the arrays of coefficients of the variables vars in the polynom"},{label:"CoefficientDomain",type:"keyword",info:"System`CoefficientDomain"},{label:"CoefficientList",type:"keyword",info:"CoefficientList[poly, var] gives a list of coefficients of powers of var in poly, starting with powe"},{label:"CoefficientRules",type:"keyword",info:"CoefficientRules[poly, {x , x , \xe2\x80\xa6}] gives the list {{e  , e  , \xe2\x80\xa6} \xef\x94\xa2 c , {e  , \xe2\x80\xa6} \xef\x94\xa2 c , \xe2\x80\xa6} of exponen"},{label:"CoifletWavelet",type:"keyword",info:"CoifletWavelet[] represents a Coiflet wavelet of order 2.CoifletWavelet[n] represents a Coiflet wave"},{label:"Collect",type:"keyword",info:"Collect[expr, x] collects together terms involving the same powers of objects matching x. Collect[ex"},{label:"CollinearPoints",type:"keyword",info:"CollinearPoints[{p , p , p , \xe2\x80\xa6, p }] tests whether the points p , p , p , \xe2\x80\xa6, p  are collinear.\n     "},{label:"Colon",type:"keyword",info:"Colon[x, y, \xe2\x80\xa6] displays as x \xe2\x88\\[Paragraph] y \xe2\x88\\[Paragraph] \xe2\x80\xa6."},{label:"ColonForm",type:"keyword",info:"ColonForm[a, b] prints as a : b."},{label:"ColorBalance",type:"keyword",info:"ColorBalance[image] adjusts the colors in image to achieve a balance that simulates the effect of ne"},{label:"ColorCombine",type:"keyword",info:"ColorCombine[{image , image , \xe2\x80\xa6}] creates a multichannel image by combining the sequence of channels"},{label:"ColorConvert",type:"keyword",info:"ColorConvert[color, colspace] converts the color space of a color to the specified color space colsp"},{label:"ColorCoverage",type:"keyword",info:"ColorCoverage is an option for DominantColors that specifies the minimum image coverage that each co"},{label:"ColorData",type:"keyword",info:'ColorData["scheme"] gives a function that generates colors in the named color scheme when applied to'},{label:"ColorDataFunction",type:"keyword",info:"ColorDataFunction[range, \xe2\x80\xa6] is a function that represents a color scheme. "},{label:"ColorDetect",type:"keyword",info:"ColorDetect[image, cspec] returns a mask image representing regions in image with colors within the "},{label:"ColorDistance",type:"keyword",info:"ColorDistance[c , c ] gives the approximate perceptual distance between color directives c  and c .C"},{label:"ColorFunction",type:"keyword",info:"ColorFunction is an option for graphics functions that specifies a function to apply to determine co"},{label:"ColorFunctionBinning",type:"keyword",info:"ColorFunctionBinning is an option for plotting functions that divides values into a limited set of b"},{label:"ColorFunctionScaling",type:"keyword",info:"ColorFunctionScaling is an option for graphics functions that specifies whether arguments supplied t"},{label:"Colorize",type:"keyword",info:"Colorize[m] generates an image from an integer matrix m, using colors for positive integers and blac"},{label:"ColorNegate",type:"keyword",info:"ColorNegate[color] gives the negative of a color.ColorNegate[image] gives the negative of image, in "},{label:"ColorOutput",type:"keyword",info:"ColorOutput is an option for graphics functions that specifies the type of color output to produce. "},{label:"ColorProfileData",type:"keyword",info:'ColorProfileData[<>, "Description" \xef\x94\xa2 "desc", "DeviceColorSpace" \xef\x94\xa2 "device", "IndependentColorSpace" '},{label:"ColorQ",type:"keyword",info:"ColorQ[color] yields True if color is a valid color directive and False otherwise."},{label:"ColorQuantize",type:"keyword",info:"ColorQuantize[image] gives an approximation to image by quantizing to distinct colors.ColorQuantize["},{label:"ColorReplace",type:"keyword",info:"ColorReplace[image, color] finds regions in image whose pixel values are similar to color and replac"},{label:"ColorRules",type:"keyword",info:"ColorRules is an option that specifies how colors of cells should be determined from values. "},{label:"ColorSelectorSettings",type:"keyword",info:"ColorSelectorSettings is a global option that specifies settings for the Color dialog box."},{label:"ColorSeparate",type:"keyword",info:"ColorSeparate[image] gives a list of single-channel images corresponding to each of the color channe"},{label:"ColorSetter",type:"keyword",info:"ColorSetter[color] represents a color setter which displays as a swatch of the specified color and w"},{label:"ColorSetterBox",type:"keyword",info:"System`ColorSetterBox"},{label:"ColorSetterBoxOptions",type:"keyword",info:"ColorSetterBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Color"},{label:"ColorSlider",type:"keyword",info:"ColorSlider[color] represents a color slider currently set to the color corresponding to color.Color"},{label:"ColorsNear",type:"keyword",info:"ColorsNear[color] represents a region around color.ColorsNear[color, d] represents a region with max"},{label:"ColorSpace",type:"keyword",info:"ColorSpace is an option for Image and related functions that specifies the color space to which colo"},{label:"ColorToneMapping",type:"keyword",info:"ColorToneMapping[image] applies a tone mapping to color values in image so as to make variations of "},{label:"Column",type:"keyword",info:"Column[{expr , expr , \xe2\x80\xa6}] is an object that formats with the expr  arranged in a column, with expr  "},{label:"ColumnAlignments",type:"keyword",info:"ColumnAlignments is an option for the low-level function GridBox that specifies how entries in each "},{label:"ColumnBackgrounds",type:"keyword",info:"System`ColumnBackgrounds"},{label:"ColumnForm",type:"keyword",info:"ColumnForm[{e , e , \xe2\x80\xa6}] prints as a column with e  above e , etc. ColumnForm[list, horiz] specifies "},{label:"ColumnLines",type:"keyword",info:"ColumnLines is an option for the low-level function GridBox which specifies whether lines should be "},{label:"ColumnsEqual",type:"keyword",info:"ColumnsEqual is an option for the low-level function GridBox which specifies whether all columns in "},{label:"ColumnSpacings",type:"keyword",info:"ColumnSpacings is an option for the low-level function GridBox which specifies the spaces in ems tha"},{label:"ColumnWidths",type:"keyword",info:"ColumnWidths is an option for the low-level function GridBox which specifies the widths to use for c"},{label:"CombinatorB",type:"keyword",info:"CombinatorB represents the B combinator."},{label:"CombinatorC",type:"keyword",info:"CombinatorC represents the C combinator."},{label:"CombinatorI",type:"keyword",info:"CombinatorI represents the I combinator."},{label:"CombinatorK",type:"keyword",info:"CombinatorK represents the K combinator."},{label:"CombinatorS",type:"keyword",info:"CombinatorS represents the S combinator."},{label:"CombinatorW",type:"keyword",info:"CombinatorW represents the W combinator."},{label:"CombinatorY",type:"keyword",info:"CombinatorY represents the Y combinator."},{label:"CombinedEntityClass",type:"keyword",info:"CombinedEntityClass[class , class , prop] represents a class of entities obtained by combining the p"},{label:"CombinerFunction",type:"keyword",info:"CombinerFunction is an option for template functions that specifies how fragments should be assemble"},{label:"CometData",type:"keyword",info:"CometData[entity, property] gives the value of the specified property for the comet entity.CometData"},{label:"CommonDefaultFormatTypes",type:"keyword",info:"CommonDefaultFormatTypes is an option that specifies default formats for newly created cells."},{label:"Commonest",type:"keyword",info:"Commonest[list] gives a list of the elements that are the most common in list.Commonest[list, n] giv"},{label:"CommonestFilter",type:"keyword",info:"                                                                                                    "},{label:"CommonName",type:"keyword",info:"CommonName[entity] gives the common name for the entity specified by entity.CommonName[{entity , \xe2\x80\xa6, "},{label:"CommonUnits",type:"keyword",info:"CommonUnits[{quantity , quantity , \xe2\x80\xa6, quantity }] converts quantity  through quantity  to common uni"},{label:"CommunityBoundaryStyle",type:"keyword",info:"CommunityBoundaryStyle is an option to CommunityGraphPlot that specifies how to style community boun"},{label:"CommunityGraphPlot",type:"keyword",info:"CommunityGraphPlot[g] generates a plot showing the community structure of the graph g.CommunityGraph"},{label:"CommunityLabels",type:"keyword",info:"CommunityLabels is an option to CommunityGraphPlot that controls what labels and placement to use fo"},{label:"CommunityRegionStyle",type:"keyword",info:"CommunityRegionStyle is an option to CommunityGraphPlot that specifies how to style community region"},{label:"CompanyData",type:"keyword",info:"CompanyData[entity, property] gives the value of the specified property for the company entity.Compa"},{label:"CompatibleUnitQ",type:"keyword",info:"CompatibleUnitQ[quantity , quantity ] returns True if quantity  and quantity  have compatible units,"},{label:"CompilationOptions",type:"keyword",info:"CompilationOptions is an option for Compile that specifies settings for the compilation process. "},{label:"CompilationTarget",type:"keyword",info:"CompilationTarget is an option for Compile that specifies the target runtime for the compiled functi"},{label:"Compile",type:"keyword",info:"Compile[{x , x , \xe2\x80\xa6}, expr] creates a compiled function that evaluates expr assuming numerical values"},{label:"Compiled",type:"keyword",info:"Compiled is an option for various numerical and plotting functions which specifies whether the expre"},{label:"CompiledCodeFunction",type:"keyword",info:"CompiledCodeFunction[\xe2\x80\xa6] is a function created by FunctionCompile that contains compiled code that is"},{label:"CompiledFunction",type:"keyword",info:"CompiledFunction[args\xe2\x80\xa6] represents compiled code for evaluating a compiled function. "},{label:"CompiledLayer",type:"keyword",info:"CompiledLayer[func] represents a net layer whose computation is defined by the compilable function f"},{label:"CompilerEnvironment",type:"keyword",info:"CompilerEnvironment is an option for FunctionCompile and related functions that allows definitions t"},{label:"CompilerEnvironmentAppend",type:"keyword",info:"System`CompilerEnvironmentAppend"},{label:"CompilerEnvironmentAppendTo",type:"keyword",info:"CompilerEnvironmentAppendTo[{def , def , \xe2\x80\xa6}] appends declarations to ECCompilerEnvironment.CompilerEn"},{label:"CompilerEnvironmentObject",type:"keyword",info:"CompilerEnvironmentObject represents a collection of definitions that can be included in compilation"},{label:"CompilerOptions",type:"keyword",info:"CompilerOptions is an option for FunctionCompile and related functions that allows options for the c"},{label:"Complement",type:"keyword",info:"Complement[e   , e , e , \xe2\x80\xa6] gives the elements in e    that are not in any of the e . \n            a"},{label:"ComplementedEntityClass",type:"keyword",info:"ComplementedEntityClass[class   , class , \xe2\x80\xa6] represents an entity class containing all the entities "},{label:"CompleteGraph",type:"keyword",info:"CompleteGraph[n] gives the complete graph with n vertices K .CompleteGraph[{n , n , \xe2\x80\xa6, n }] gives th"},{label:"CompleteGraphQ",type:"keyword",info:"CompleteGraphQ[g] yields True if the graph g is a complete graph, and False otherwise.CompleteGraphQ"},{label:"CompleteIntegral",type:"keyword",info:"CompleteIntegral[pde, u, {x , \xe2\x80\xa6, x }] gives a complete integral u for the first-order partial differ"},{label:"CompleteKaryTree",type:"keyword",info:"CompleteKaryTree[n] gives the complete binary tree with n levels.CompleteKaryTree[n, k] gives the co"},{label:"CompletionsListPacket",type:"keyword",info:"System`CompletionsListPacket"},{label:"Complex",type:"keyword",info:"Complex is the head used for complex numbers. "},{label:"ComplexArrayPlot",type:"keyword",info:"ComplexArrayPlot[array] generates a plot in which complex values z   in an array array are shown in "},{label:"ComplexContourPlot",type:"keyword",info:"ComplexContourPlot[f, {z, z   , z   }] generates a filled contour plot of f as a function of z. Comp"},{label:"Complexes",type:"keyword",info:"Complexes represents the domain of complex numbers, as in x \xe2\x88\x88 Complexes. "},{label:"ComplexExpand",type:"keyword",info:"ComplexExpand[expr] expands expr assuming that all variables are real. ComplexExpand[expr, {x , x , "},{label:"ComplexInfinity",type:"keyword",info:"ComplexInfinity represents a quantity with infinite magnitude, but undetermined complex phase. "},{label:"ComplexityFunction",type:"keyword",info:"ComplexityFunction is an option for Simplify and other functions which gives a function to rank the "},{label:"ComplexListPlot",type:"keyword",info:"ComplexListPlot[{z , z , \xe2\x80\xa6}] plots complex numbers z , z , \xe2\x80\xa6 as points in the complex plane.ComplexL"},{label:"ComplexPlot",type:"keyword",info:"ComplexPlot[f, {z, z   , z   }] generates a plot of Arg[f] over the complex rectangle with corners z"},{label:"ComplexPlot3D",type:"keyword",info:"ComplexPlot3D[f, {z, z   , z   }] generates a 3D plot of Abs[f] colored by Arg[f] over the complex r"},{label:"ComplexRegionPlot",type:"keyword",info:"ComplexRegionPlot[pred, {z, z   , z   }] makes a plot showing the region in the complex plane for wh"},{label:"ComplexStreamPlot",type:"keyword",info:"ComplexStreamPlot[f, {z, z   , z   }] generates a streamline plot of the vector field {Re[f], Im[f]}"},{label:"ComplexVectorPlot",type:"keyword",info:"ComplexVectorPlot[f, {z, z   , z   }] generates a vector plot of the vector field {Re[f], Im[f]} ove"},{label:"ComponentMeasurements",type:"keyword",info:'ComponentMeasurements[{image, lmat}, "prop"] computes the property "prop" for components of image in'},{label:"ComponentwiseContextMenu",type:"keyword",info:"System`ComponentwiseContextMenu"},{label:"Compose",type:"keyword",info:"System`Compose"},{label:"ComposeList",type:"keyword",info:"ComposeList[{f , f , \xe2\x80\xa6}, x] generates a list of the form {x, f [x], f [f [x]], \xe2\x80\xa6}. \n              1 "},{label:"ComposeSeries",type:"keyword",info:"ComposeSeries[series , series , \xe2\x80\xa6] composes several power series. \n                    1        2"},{label:"CompositeQ",type:"keyword",info:"CompositeQ[n] yields True if n is a composite number, and yields False otherwise. "},{label:"Composition",type:"keyword",info:"Composition[f , f , f , \xe2\x80\xa6] represents a composition of the functions f , f , f , \xe2\x80\xa6. \n             1 "},{label:"CompoundElement",type:"keyword",info:"CompoundElement[{spec , spec , \xe2\x80\xa6}] represents a form or interpreter specification for a list of fiel"},{label:"CompoundExpression",type:"keyword",info:"expr  ; expr  ; \xe2\x80\xa6 evaluates the expr  in turn, giving the last one as the result. \n    1       2    "},{label:"CompoundPoissonDistribution",type:"keyword",info:"CompoundPoissonDistribution[\xce\xbb, dist] represents a compound Poisson distribution with rate parameter "},{label:"CompoundPoissonProcess",type:"keyword",info:"CompoundPoissonProcess[\xce\xbb, jdist] represents a compound Poisson process with rate parameter \xce\xbb and jum"},{label:"CompoundRenewalProcess",type:"keyword",info:"CompoundRenewalProcess[rdist, jdist] represents a compound renewal process with renewal-time distrib"},{label:"Compress",type:"keyword",info:"Compress[expr] gives a compressed representation of expr as a string. "},{label:"CompressedData",type:"keyword",info:"System`CompressedData"},{label:"CompressionLevel",type:"keyword",info:"CompressionLevel is an option for Export and CreateArchive that specifies the amount of compression "},{label:"ComputeUncertainty",type:"keyword",info:"ComputeUncertainty is an option for ClassifierMeasurements, LearnedDistribution and other functions "},{label:"ConcaveHullMesh",type:"keyword",info:"ConcaveHullMesh[{p , p , \xe2\x80\xa6}] gives the concave hull mesh from the points p , p , \xe2\x80\xa6.ConcaveHullMesh[{"},{label:"Condition",type:"keyword",info:"patt/;test is a pattern which matches only if the evaluation of test yields True. lhs :> rhs/;test r"},{label:"ConditionalExpression",type:"keyword",info:"ConditionalExpression[expr, cond] is a symbolic construct that represents the expression expr when t"},{label:"Conditioned",type:"keyword",info:"Conditioned[expr, cond] or expr \xef\x8f\x93 cond represents expr conditioned by the predicate cond."},{label:"Cone",type:"keyword",info:"Cone[{{x , y , z }, {x , y , z }}, r] represents a cone with a base of radius r centered at (x , y ,"},{label:"ConeBox",type:"keyword",info:"System`ConeBox"},{label:"ConfidenceLevel",type:"keyword",info:"ConfidenceLevel is an option for LinearModelFit and other fitting functions that specifies the level"},{label:"ConfidenceRange",type:"keyword",info:"ConfidenceRange is an option for SurvivalModelFit and other functions that specifies the range over "},{label:"ConfidenceTransform",type:"keyword",info:"ConfidenceTransform is an option for functions such as SurvivalModelFit that specifies the transform"},{label:"ConfigurationPath",type:"keyword",info:"ConfigurationPath is a global option that specifies which directories are searched for systemwide co"},{label:"Confirm",type:"keyword",info:"Confirm[expr] confirms that expr is not considered a failure, otherwise throwing an error to the nea"},{label:"ConfirmAssert",type:"keyword",info:"ConfirmAssert[test] confirms that test is True, otherwise throwing an error to the nearest surroundi"},{label:"ConfirmBy",type:"keyword",info:"ConfirmBy[expr, f] confirms that f[expr] returns True, otherwise throwing an error to the nearest su"},{label:"ConfirmMatch",type:"keyword",info:"ConfirmMatch[expr, form] confirms that expr matches the pattern form, otherwise throwing an error to"},{label:"ConfirmQuiet",type:"keyword",info:"ConfirmQuiet[expr] confirms that no messages are generated during the evaluation of expr, otherwise "},{label:"ConformationMethod",type:"keyword",info:"ConformationMethod is an option for VideoJoin and others that specifies how to conform frames of dif"},{label:"ConformAudio",type:"keyword",info:"ConformAudio[{audio , audio , \xe2\x80\xa6}] returns a list of audio objects where all audio  are made to have "},{label:"ConformImages",type:"keyword",info:"ConformImages[{image , image , \xe2\x80\xa6}] returns a list of images where all image  are made to have confor"},{label:"Congruent",type:"keyword",info:"Congruent[x, y, \xe2\x80\xa6] displays as x \xe2\x89\xa1 y \xe2\x89\xa1 \xe2\x80\xa6."},{label:"ConicGradientFilling",type:"keyword",info:"ConicGradientFilling[{col , col , \xe2\x80\xa6, col }] is a two-dimensional graphics directive specifying that "},{label:"ConicHullRegion",type:"keyword",info:"ConicHullRegion[{p , \xe2\x80\xa6, p     }] represents the m-dimensional affine hull region passing through poi"},{label:"ConicHullRegion3DBox",type:"keyword",info:"System`ConicHullRegion3DBox"},{label:"ConicHullRegionBox",type:"keyword",info:"System`ConicHullRegionBox"},{label:"ConicOptimization",type:"keyword",info:"ConicOptimization[f, cons, vars] finds values of variables vars that minimize the linear objective f"},{label:"Conjugate",type:"keyword",info:"Conjugate[z] or z \xef\x8f\x88 gives the complex conjugate of the complex number z. "},{label:"ConjugateTranspose",type:"keyword",info:"                          \xef\x8f\x89\nConjugateTranspose[m] or m  gives the conjugate transpose of m. "},{label:"Conjunction",type:"keyword",info:"Conjunction[expr, {a , a , \xe2\x80\xa6}] gives the conjunction of expr over all choices of the Boolean variabl"},{label:"Connect",type:"keyword",info:"Connect is a setting for the LinkMode option of LinkOpen.  LinkMode->Connect causes a link to be cre"},{label:"ConnectedComponents",type:"keyword",info:"ConnectedComponents[g] gives the connected components of the graph g.ConnectedComponents[g, {v , v ,"},{label:"ConnectedGraphComponents",type:"keyword",info:"ConnectedGraphComponents[g] gives the connected components of the graph g.ConnectedGraphComponents[g"},{label:"ConnectedGraphQ",type:"keyword",info:"ConnectedGraphQ[g] yields True if the graph g is connected, and False otherwise."},{label:"ConnectedMeshComponents",type:"keyword",info:"ConnectedMeshComponents[mr] gives a list {c , c , \xe2\x80\xa6} of disjoint path connected meshed regions.\n    "},{label:"ConnectedMoleculeComponents",type:"keyword",info:"ConnectedMoleculeComponents[mol] gives the connected components of the molecule mol."},{label:"ConnectedMoleculeQ",type:"keyword",info:"ConnectedMoleculeQ[mol] returns True if the atoms in mol form are connected by bonds, and False othe"},{label:"ConnectionSettings",type:"keyword",info:"ConnectionSettings is an option for URLRead and related functions to specify advanced connection set"},{label:"ConnectLibraryCallbackFunction",type:"keyword",info:"ConnectLibraryCallbackFunction[mname, cf] connects a CompiledFunction cf with the library callback m"},{label:"ConnectSystemModelComponents",type:"keyword",info:"ConnectSystemModelComponents[{c  \xe2\x88\x88 comp , \xe2\x80\xa6}, {c  . a \xef\x94\xa2 c  . b, \xe2\x80\xa6}] creates a system model by connec"},{label:"ConnectSystemModelController",type:"keyword",info:"ConnectSystemModelController[model, controller] connects the system model model with a controller ac"},{label:"ConnesWindow",type:"keyword",info:"ConnesWindow[x] represents a Connes window function of x.ConnesWindow[x, \xce\\[PlusMinus]] uses the parameter \xce\\[PlusMinus].\n"},{label:"ConoverTest",type:"keyword",info:"                                                                                                    "},{label:"ConservativeConvectionPDETerm",type:"keyword",info:"ConservativeConvectionPDETerm[vars, \xce\\[PlusMinus]] represents a conservative convection term \xe2\x88\x87            \xc2\\[CenterDot] (-\xce\\[PlusMinus] "},{label:"ConsoleMessage",type:"keyword",info:"ConsoleMessage[expr] prints expr as a message to the Messages window of the frontend."},{label:"ConsoleMessagePacket",type:"keyword",info:"System`ConsoleMessagePacket"},{label:"Constant",type:"keyword",info:"Constant is an attribute that indicates zero derivative of a symbol with respect to all parameters. "},{label:"ConstantArray",type:"keyword",info:"ConstantArray[c, n] generates a list of n copies of the element c.ConstantArray[c, {n , n , \xe2\x80\xa6}] gene"},{label:"ConstantArrayLayer",type:"keyword",info:"ConstantArrayLayer[] represents a layer that has no input and produces as output a constant array.Co"},{label:"ConstantImage",type:"keyword",info:"ConstantImage[val, size] gives an image of the specified size with constant pixel values of val.Cons"},{label:"ConstantPlusLayer",type:"keyword",info:"ConstantPlusLayer[] represents a layer that adds a learnable bias to its input.ConstantPlusLayer[opt"},{label:"ConstantRegionQ",type:"keyword",info:"ConstantRegionQ[reg] gives True if the reg is a constant region and False otherwise."},{label:"Constants",type:"keyword",info:"Constants is an option for Dt which gives a list of objects to be taken as constants. "},{label:"ConstantTimesLayer",type:"keyword",info:"ConstantTimesLayer[] represents a layer that multiplies its input by a learnable scaling array.Const"},{label:"ConstellationData",type:"keyword",info:"ConstellationData[entity, property] gives the value of the specified property for the constellation "},{label:"ConstrainedMax",type:"keyword",info:"System`ConstrainedMax"},{label:"ConstrainedMin",type:"keyword",info:"System`ConstrainedMin"},{label:"Construct",type:"keyword",info:"Construct[f, x] gives f[x].Construct[f, x , \xe2\x80\xa6, x ] gives f[x , \xe2\x80\xa6, x ].\n                             "},{label:"Containing",type:"keyword",info:'Containing["outer", "inner"] represents an object of type outer containing objects of type inner.'},{label:"ContainsAll",type:"keyword",info:"ContainsAll[e , e ] yields True if e  contains all of the elements of e .ContainsAll[e ] is an opera"},{label:"ContainsAny",type:"keyword",info:"ContainsAny[e , e ] yields True if e  contains any of the elements of e .ContainsAny[e ] is an opera"},{label:"ContainsExactly",type:"keyword",info:"ContainsExactly[e , e ] yields True if e  contains exactly the same elements as e .ContainsExactly[e"},{label:"ContainsNone",type:"keyword",info:"ContainsNone[e , e ] yields True if e  contains none of the elements in e .ContainsNone[e ] is an op"},{label:"ContainsOnly",type:"keyword",info:"ContainsOnly[e , e ] yields True if e  contains only elements that appear in e .ContainsOnly[e ] is "},{label:"ContentDetectorFunction",type:"keyword",info:"ContentDetectorFunction[\xe2\x80\xa6] represents a function generated by TrainImageContentDetector or TrainText"},{label:"ContentFieldOptions",type:"keyword",info:"ContentFieldOptions is an option for CreateSearchIndex and related functions that allows options to "},{label:"ContentLocationFunction",type:"keyword",info:"ContentLocationFunction is an option to CreateSearchIndex and related functions that specifies how t"},{label:"ContentObject",type:"keyword",info:'ContentObject["string"] gives a content object whose content is string.ContentObject[File[\xe2\x80\xa6]] gives '},{label:"ContentPadding",type:"keyword",info:"ContentPadding is an option for objects that can be displayed with frames that specifies whether the"},{label:"ContentsBoundingBox",type:"keyword",info:"System`ContentsBoundingBox"},{label:"ContentSelectable",type:"keyword",info:"ContentSelectable is an option to constructs such as Inset, Graphics, and GraphicsGroup that specifi"},{label:"ContentSize",type:"keyword",info:"ContentSize is an option for Manipulate and other functions that specifies the size of the content a"},{label:"Context",type:"keyword",info:"Context[] gives the current context. Context[symbol] gives the context in which a symbol appears. Co"},{label:"ContextMenu",type:"keyword",info:"System`ContextMenu"},{label:"Contexts",type:"keyword",info:'Contexts[] gives a list of all contexts. Contexts["string"] gives a list of the contexts that match '},{label:"ContextToFileName",type:"keyword",info:'ContextToFileName["context"] gives the string specifying the file name that is by convention associa'},{label:"Continuation",type:"keyword",info:"System`Continuation"},{label:"Continue",type:"keyword",info:"Continue[] exits to the nearest enclosing Do, For, or While in a procedural program. "},{label:"ContinuedFraction",type:"keyword",info:"ContinuedFraction[x, n] generates a list of the first n terms in the continued fraction representati"},{label:"ContinuedFractionK",type:"keyword",info:"                                                                             i                      "},{label:"ContinuousAction",type:"keyword",info:"ContinuousAction is an option for Manipulate, Slider, and related functions that specifies whether a"},{label:"ContinuousMarkovProcess",type:"keyword",info:"ContinuousMarkovProcess[i , q] represents a continuous-time finite-state Markov process with transit"},{label:"ContinuousTask",type:"keyword",info:"ContinuousTask[expr] represents a task in which expr is continuously reevaluated.ContinuousTask[expr"},{label:"ContinuousTimeModelQ",type:"keyword",info:"ContinuousTimeModelQ[lsys] gives True if lsys is a continuous-time systems model, and False otherwis"},{label:"ContinuousWaveletData",type:"keyword",info:"ContinuousWaveletData[{{oct , voc } -> coef , \xe2\x80\xa6}, wave] yields a continuous wavelet data object with"},{label:"ContinuousWaveletTransform",type:"keyword",info:"ContinuousWaveletTransform[{x , x , \xe2\x80\xa6}] gives the continuous wavelet transform of a list of values x"},{label:"ContourDetect",type:"keyword",info:"ContourDetect[image] gives a binary image in which white pixels correspond to the zeros and zero cro"},{label:"ContourGraphics",type:"keyword",info:"ContourGraphics[array] is a representation of a contour plot. "},{label:"ContourIntegral",type:"keyword",info:"System`ContourIntegral"},{label:"ContourLabels",type:"keyword",info:"ContourLabels is an option for contour plots that specifies how to label contours. "},{label:"ContourLines",type:"keyword",info:"ContourLines is an option for contour plots that specifies whether to draw explicit contour lines. "},{label:"ContourPlot",type:"keyword",info:"ContourPlot[f, {x, x   , x   }, {y, y   , y   }] generates a contour plot of f as a function of x an"},{label:"ContourPlot3D",type:"keyword",info:"ContourPlot3D[f, {x, x   , x   }, {y, y   , y   }, {z, z   , z   }] produces a three-dimensional con"},{label:"Contours",type:"keyword",info:"Contours is an option for contour plots that specifies the contours to draw. "},{label:"ContourShading",type:"keyword",info:"ContourShading is an option for contour plots that specifies how the regions between contour lines s"},{label:"ContourSmoothing",type:"keyword",info:"System`ContourSmoothing"},{label:"ContourStyle",type:"keyword",info:"ContourStyle is an option for contour plots that specifies the style in which contour lines or surfa"},{label:"ContraharmonicMean",type:"keyword",info:"ContraharmonicMean[list] gives the contraharmonic mean of the values in list.ContraharmonicMean[list"},{label:"ContrastiveLossLayer",type:"keyword",info:"ContrastiveLossLayer[] represents a loss layer that computes a loss based on a distance metric and a"},{label:"Control",type:"keyword",info:"Control[{u, dom}] represents an interactive control for the variable u in the domain dom, with the t"},{label:"ControlActive",type:"keyword",info:"ControlActive[act, norm] evaluates to act if a control that affects act is actively being used, and "},{label:"ControlAlignment",type:"keyword",info:"System`ControlAlignment"},{label:"ControlGroupContentsBox",type:"keyword",info:"System`ControlGroupContentsBox"},{label:"ControllabilityGramian",type:"keyword",info:"ControllabilityGramian[ssm] gives the controllability Gramian of the state-space model ssm."},{label:"ControllabilityMatrix",type:"keyword",info:"ControllabilityMatrix[ssm] gives the controllability matrix of the state-space model ssm."},{label:"ControllableDecomposition",type:"keyword",info:"ControllableDecomposition[sys] yields the controllable subsystem of the state-space model sys.Contro"},{label:"ControllableModelQ",type:"keyword",info:"ControllableModelQ[sys] yields True if the state-space model sys is controllable, and False otherwis"},{label:"ControllerDuration",type:"keyword",info:"System`ControllerDuration"},{label:"ControllerInformation",type:"keyword",info:"ControllerInformation[] gives dynamically updated information on currently connected controller devi"},{label:"ControllerInformationData",type:"keyword",info:"System`ControllerInformationData"},{label:"ControllerLinking",type:"keyword",info:"ControllerLinking is an option for Manipulate, Graphics3D, Plot3D, and related functions that specif"},{label:"ControllerManipulate",type:"keyword",info:"ControllerManipulate[expr, {u, u   , u   }] generates a version of expr set up to allow interactive "},{label:"ControllerMethod",type:"keyword",info:"ControllerMethod is an option for Manipulate, Graphics3D, Plot3D, and related functions that specifi"},{label:"ControllerPath",type:"keyword",info:"ControllerPath is an option that gives a list of external controllers or classes of controllers to t"},{label:"ControllerState",type:"keyword",info:'ControllerState["c"] gives the state of the control c for the first connected controller device on w'},{label:"ControlPlacement",type:"keyword",info:"ControlPlacement is an option for Manipulate, TabView, and other control objects that specifies wher"},{label:"ControlsRendering",type:"keyword",info:"ControlsRendering is a Style option that specifies how controls should be rendered."},{label:"ControlType",type:"keyword",info:"ControlType is an option for Manipulate and related functions that specifies what type of controls s"},{label:"ConvectionPDETerm",type:"keyword",info:"ConvectionPDETerm[vars, \xce.b2] represents a convection term \xce.b2 \xc2\\[CenterDot] \xe2\x88\x87            u with convection coefficie"},{label:"Convergents",type:"keyword",info:"Convergents[list] gives a list of the convergents corresponding to the continued fraction terms list"},{label:"ConversionOptions",type:"keyword",info:"ConversionOptions is an option to Import and Export used to pass special options to a particular for"},{label:"ConversionRules",type:"keyword",info:"ConversionRules is an option for Cell that can be set to a list of rules specifying how the contents"},{label:"ConvertToBitmapPacket",type:"keyword",info:"System`ConvertToBitmapPacket"},{label:"ConvertToPostScript",type:"keyword",info:"System`ConvertToPostScript"},{label:"ConvertToPostScriptPacket",type:"keyword",info:"ConvertToPostScriptPacket is an internal symbol used for formatting."},{label:"ConvexHullMesh",type:"keyword",info:"ConvexHullMesh[{p , p , \xe2\x80\xa6}] gives a BoundaryMeshRegion representing the convex hull from the points "},{label:"ConvexHullRegion",type:"keyword",info:"ConvexHullRegion[{p , p , \xe2\x80\xa6}] gives the convex hull from the points p , p , \xe2\x80\xa6.ConvexHullRegion[reg] "},{label:"ConvexOptimization",type:"keyword",info:"ConvexOptimization[f, cons, vars] finds values of variables vars that minimize the convex objective "},{label:"ConvexPolygonQ",type:"keyword",info:"ConvexPolygonQ[poly] gives True if the polygon poly is convex, and False otherwise."},{label:"ConvexPolyhedronQ",type:"keyword",info:"ConvexPolyhedronQ[poly] gives True if the polyhedron poly is convex, and False otherwise."},{label:"ConvexRegionQ",type:"keyword",info:"ConvexRegionQ[reg] gives True if reg is a convex region and False otherwise. "},{label:"ConvolutionLayer",type:"keyword",info:"ConvolutionLayer[n, s] represents a trainable convolutional net layer having n output channels and u"},{label:"Convolve",type:"keyword",info:"Convolve[f, g, x, y] gives the convolution with respect to x of the expressions f and g.Convolve[f, "},{label:"ConwayGroupCo1",type:"keyword",info:"ConwayGroupCo1[] represents the sporadic simple Conway group Co .\n                                  "},{label:"ConwayGroupCo2",type:"keyword",info:"ConwayGroupCo2[] represents the sporadic simple Conway group Co .\n                                  "},{label:"ConwayGroupCo3",type:"keyword",info:"ConwayGroupCo3[] represents the sporadic simple Conway group Co .\n                                  "},{label:"CookieFunction",type:"keyword",info:"CookieFunction is an option for URLRead, HTTPRequest, and related functions that gives a function to"},{label:"Cookies",type:"keyword",info:"System`Cookies"},{label:"CoordinateBoundingBox",type:"keyword",info:"CoordinateBoundingBox[coords] gives the corners {{x   , y   , \xe2\x80\xa6}, {x   , y   , \xe2\x80\xa6}} of the bounding b"},{label:"CoordinateBoundingBoxArray",type:"keyword",info:"CoordinateBoundingBoxArray[{{x   , y   , \xe2\x80\xa6}, {x   , y   , \xe2\x80\xa6}}] generates an array of {x, y, \xe2\x80\xa6} coord"},{label:"CoordinateBounds",type:"keyword",info:"CoordinateBounds[coords] gives a list {{x   , x   }, {y   , y   }, \xe2\x80\xa6} of the bounds in each dimensio"},{label:"CoordinateBoundsArray",type:"keyword",info:"CoordinateBoundsArray[{{x   , x   }, {y   , y   }, \xe2\x80\xa6}] generates an array of {x, y, \xe2\x80\xa6} coordinates w"},{label:"CoordinateChartData",type:"keyword",info:"CoordinateChartData[chart, property] gives the value of the specified property for chart.CoordinateC"},{label:"CoordinatesToolOptions",type:"keyword",info:"CoordinatesToolOptions is an option for Graphics that gives values of options associated with the Ge"},{label:"CoordinateTransform",type:"keyword",info:"CoordinateTransform[t, pt] performs the coordinate transformation t on the point pt.CoordinateTransf"},{label:"CoordinateTransformData",type:"keyword",info:"CoordinateTransformData[t, property] gives the value of the specified property for the coordinate tr"},{label:"CoplanarPoints",type:"keyword",info:"CoplanarPoints[{p , p , p , p , \xe2\x80\xa6, p }] tests whether the points p , p , p , p , \xe2\x80\xa6, p  are coplanar."},{label:"CoprimeQ",type:"keyword",info:"CoprimeQ[n , n ] yields True if n  and n  are relatively prime, and yields False otherwise. CoprimeQ"},{label:"Coproduct",type:"keyword",info:"Coproduct[x, y, \xe2\x80\xa6] displays as x \xe2\x88\x90 y \xe2\x88\x90 \xe2\x80\xa6."},{label:"CopulaDistribution",type:"keyword",info:"CopulaDistribution[ker, {dist , dist , \xe2\x80\xa6}] represents a copula distribution with kernel distribution"},{label:"Copyable",type:"keyword",info:"Copyable is an option for Cell that specifies whether a cell can be copied interactively using the f"},{label:"CopyDatabin",type:"keyword",info:"CopyDatabin[bin] creates a copy of a databin.CopyDatabin[bin, options] creates a copy with the speci"},{label:"CopyDirectory",type:"keyword",info:"CopyDirectory[dir , dir ] copies the directory dir  to dir . \n                 1     2              "},{label:"CopyFile",type:"keyword",info:"CopyFile[file , file ] copies from the local, remote or cloud file file  to the local, remote or clo"},{label:"CopyFunction",type:"keyword",info:"CopyFunction is an option for TemplateBox that specifies how the box is to be copied."},{label:"CopyTag",type:"keyword",info:"System`CopyTag"},{label:"CopyToClipboard",type:"keyword",info:"CopyToClipboard[expr] replaces the contents of the clipboard with expr."},{label:"CoreNilpotentDecomposition",type:"keyword",info:"CoreNilpotentDecomposition[m] yields the core-nilpotent decomposition of a square matrix m."},{label:"CornerFilter",type:"keyword",info:"CornerFilter[image] computes a measure for the presence of a corner for each pixel in image and retu"},{label:"CornerNeighbors",type:"keyword",info:"CornerNeighbors is an option for various array and image processing functions that specifies whether"},{label:"Correlation",type:"keyword",info:"                                                                                                    "},{label:"CorrelationDistance",type:"keyword",info:"CorrelationDistance[u, v] gives the correlation coefficient distance between vectors u and v."},{label:"CorrelationFunction",type:"keyword",info:"CorrelationFunction[data, hspec] estimates the correlation function at lags hspec from data.Correlat"},{label:"CorrelationTest",type:"keyword",info:"CorrelationTest[{{x , y }, {x , y }, \xe2\x80\xa6}] tests whether the correlation coefficient for a bivariate p"},{label:"Cos",type:"keyword",info:"Cos[z] gives the cosine of z. "},{label:"Cosh",type:"keyword",info:"Cosh[z] gives the hyperbolic cosine of z. "},{label:"CoshIntegral",type:"keyword",info:"CoshIntegral[z] gives the hyperbolic cosine integral Chi(z)."},{label:"CosineDistance",type:"keyword",info:"CosineDistance[u, v] gives the angular cosine distance between vectors u and v."},{label:"CosineWindow",type:"keyword",info:"CosineWindow[x] represents a cosine window function of x.CosineWindow[x, \xce\\[PlusMinus]] uses the exponent \xce\\[PlusMinus].\n"},{label:"CosIntegral",type:"keyword",info:"CosIntegral[z] gives the cosine integral function Ci(z). "},{label:"Cot",type:"keyword",info:"Cot[z] gives the cotangent of z. "},{label:"Coth",type:"keyword",info:"Coth[z] gives the hyperbolic cotangent of z. "},{label:"CoulombF",type:"keyword",info:"CoulombF[l, \xce\\[CenterDot], r] gives the regular Coulomb wavefunction F (\xce\\[CenterDot], r).\n                                 "},{label:"CoulombG",type:"keyword",info:"CoulombG[l, \xce\\[CenterDot], r] gives the irregular Coulomb wavefunction G (\xce\\[CenterDot], r).\n                               "},{label:"CoulombH1",type:"keyword",info:"                                                                      (+)\nCoulombH1[l, \xce\\[CenterDot], r] gives t"},{label:"CoulombH2",type:"keyword",info:"                                                                      (-)\nCoulombH2[l, \xce\\[CenterDot], r] gives t"},{label:"Count",type:"keyword",info:"Count[list, pattern] gives the number of elements in list that match pattern. Count[expr, pattern, l"},{label:"CountDistinct",type:"keyword",info:"CountDistinct[list] gives the number of distinct elements that appear in list."},{label:"CountDistinctBy",type:"keyword",info:"CountDistinctBy[{e , e , \xe2\x80\xa6}, f] gives the number of distinct values of f[e ] that occur.CountDistinc"},{label:"CounterAssignments",type:"keyword",info:"CounterAssignments is an option for selections that sets the value of a specified counter."},{label:"CounterBox",type:"keyword",info:"System`CounterBox"},{label:"CounterBoxOptions",type:"keyword",info:"CounterBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for CounterBo"},{label:"CounterClockwiseContourIntegral",type:"keyword",info:"System`CounterClockwiseContourIntegral"},{label:"CounterEvaluator",type:"keyword",info:"System`CounterEvaluator"},{label:"CounterFunction",type:"keyword",info:"CounterFunction is an option for counters that specifies the symbols used to display the value of th"},{label:"CounterIncrements",type:"keyword",info:"CounterIncrements is an option for selections that specifies whether the value of a specified counte"},{label:"CounterStyle",type:"keyword",info:"System`CounterStyle"},{label:"CounterStyleMenuListing",type:"keyword",info:"CounterStyleMenuListing is an option for cells that specifies what counter styles are listed in the "},{label:"CountRoots",type:"keyword",info:"CountRoots[f, x] gives the number of real roots of the univariate function f in x.CountRoots[f, {x, "},{label:"CountryData",type:"keyword",info:'CountryData["tag", property] gives the value of the specified property for the country, country-like'},{label:"Counts",type:"keyword",info:"Counts[list] gives an association whose keys are the distinct elements of list, and whose values giv"},{label:"CountsBy",type:"keyword",info:"CountsBy[{e , e , \xe2\x80\xa6}, f] gives an association whose keys are the distinct values of the f[e ], and w"},{label:"Covariance",type:"keyword",info:"                                                                                                    "},{label:"CovarianceEstimatorFunction",type:"keyword",info:"CovarianceEstimatorFunction is an option for generalized linear model fitting functions that specifi"},{label:"CovarianceFunction",type:"keyword",info:"CovarianceFunction[data, hspec] estimates the covariance function at lags hspec from data.Covariance"},{label:"CoxianDistribution",type:"keyword",info:"CoxianDistribution[{\xce\\[PlusMinus] , \xe2\x80\xa6, \xce\\[PlusMinus]     }, {\xce\xbb , \xe2\x80\xa6, \xce\xbb }] represent an m-phase Coxian distribution with phase"},{label:"CoxIngersollRossProcess",type:"keyword",info:"CoxIngersollRossProcess[\xce\xbc, \xcf\x83, \xce\xb8, x ] represents a Cox\xe2\x80\x93Ingersoll\xe2\x80\x93Ross process with long\xe2\x80\x90term mean \xce\xbc, "},{label:"CoxModel",type:"keyword",info:"CoxModel[\xe2\x80\xa6] represents the symbolic proportional hazards model obtained from CoxModelFit."},{label:"CoxModelFit",type:"keyword",info:"CoxModelFit[{e , \xe2\x80\xa6, e }] constructs a model of the baseline hazard h (t) for events times e .CoxMode"},{label:"CramerVonMisesTest",type:"keyword",info:"CramerVonMisesTest[data] tests whether data is normally distributed using the Cram\xc3\xa9r\xe2\x80\x93von Mises test."},{label:"CreateArchive",type:"keyword",info:"CreateArchive[source] creates a compressed archive in the current directory from source.CreateArchiv"},{label:"CreateCellID",type:"keyword",info:"CreateCellID is an option for Notebook that specifies whether to assign a CellID to cells created in"},{label:"CreateChannel",type:"keyword",info:"CreateChannel[] creates a new channel for channel communication, with a generated name.CreateChannel"},{label:"CreateCloudExpression",type:"keyword",info:"CreateCloudExpression[value] creates a new anonymous cloud expression that stores the specified init"},{label:"CreateCompilerEnvironment",type:"keyword",info:"CreateCompilerEnvironment[] creates a compiler environment that can be used in FunctionCompile and r"},{label:"CreateDatabin",type:"keyword",info:"CreateDatabin[] creates a databin in the Wolfram Data Drop and returns the corresponding Databin obj"},{label:"CreateDataStructure",type:"keyword",info:'CreateDataStructure["type", arg , arg , \xe2\x80\xa6] creates a data structure with the specified type.\n       '},{label:"CreateDataSystemModel",type:"keyword",info:"CreateDataSystemModel[{v , v , \xe2\x80\xa6}] creates a SystemModel generating a signal of values v . CreateDat"},{label:"CreateDialog",type:"keyword",info:"CreateDialog[expr] creates a dialog notebook containing expr and opens it in the front end.CreateDia"},{label:"CreateDirectory",type:"keyword",info:'CreateDirectory["dir"] creates a directory with name dir. CreateDirectory[] creates a directory in t'},{label:"CreateDocument",type:"keyword",info:"CreateDocument[] creates an empty document notebook and opens it in the front end.CreateDocument[exp"},{label:"CreateFile",type:"keyword",info:'CreateFile["file"] creates a file with name file. CreateFile[] creates a file in the default area fo'},{label:"CreateIntermediateDirectories",type:"keyword",info:"CreateIntermediateDirectories is an option for CreateDirectory and related functions that specifies "},{label:"CreateLicenseEntitlement",type:"keyword",info:"CreateLicenseEntitlement[settings] creates an on-demand license entitlement using settings.CreateLic"},{label:"CreateManagedLibraryExpression",type:"keyword",info:"CreateManagedLibraryExpression[mname, f] creates a managed library expression by applying f to a pos"},{label:"CreateNotebook",type:"keyword",info:'CreateNotebook[] creates a generic empty notebook and opens it in the front end.CreateNotebook["type'},{label:"CreatePacletArchive",type:"keyword",info:"CreatePacletArchive[source] creates a paclet archive file from source.CreatePacletArchive[source, de"},{label:"CreatePalette",type:"keyword",info:"CreatePalette[expr] creates a palette notebook containing expr, and opens it in the front end.Create"},{label:"CreatePalettePacket",type:"keyword",info:"System`CreatePalettePacket"},{label:"CreatePermissionsGroup",type:"keyword",info:'CreatePermissionsGroup["name"] creates a permissions group with the specified name.CreatePermissions'},{label:"CreateScheduledTask",type:"keyword",info:"CreateScheduledTask[expr] creates a local scheduled task that will repeatedly evaluate expr once per"},{label:"CreateSearchIndex",type:"keyword",info:"CreateSearchIndex[dir] creates a search index from all files in the directory dir and its subdirecto"},{label:"CreateSystemModel",type:"keyword",info:"CreateSystemModel[sys] creates a Modelica SystemModel from the systems model sys. CreateSystemModel["},{label:"CreateTemporary",type:"keyword",info:"CreateTemporary[] creates a temporary file with a unique name in the default temporary directory and"},{label:"CreateUUID",type:"keyword",info:'CreateUUID[] creates a random, universally unique UUID string.CreateUUID["base"] appends a UUID stri'},{label:"CreateWindow",type:"keyword",info:"CreateWindow[] creates an empty window in the front end.CreateWindow[expr] creates a window displayi"},{label:"CriterionFunction",type:"keyword",info:"CriterionFunction is an option in functions such as ClusterClassify that specifies the criterion to "},{label:"CriticalityFailureImportance",type:"keyword",info:"CriticalityFailureImportance[rdist, t] gives the criticality failure importances for all components "},{label:"CriticalitySuccessImportance",type:"keyword",info:"CriticalitySuccessImportance[rdist, t] gives the criticality success importances for all components "},{label:"CriticalSection",type:"keyword",info:"CriticalSection[var, expr] locks the variable var with respect to parallel computation, evaluates ex"},{label:"Cross",type:"keyword",info:"Cross[a, b] gives the vector cross product of a and b. "},{label:"CrossEntropyLossLayer",type:"keyword",info:'CrossEntropyLossLayer["Index"] represents a net layer that computes the cross-entropy loss by compar'},{label:"CrossingCount",type:"keyword",info:"CrossingCount[contour, p] gives a count of the number of times a ray starting from the point p cross"},{label:"CrossingDetect",type:"keyword",info:"CrossingDetect[image] gives a binary image in which white pixels correspond to the zero crossings in"},{label:"CrossingPolygon",type:"keyword",info:"CrossingPolygon[{p , p , \xe2\x80\xa6, p }] gives a Polygon representing all points for which a ray from the po"},{label:"CrossMatrix",type:"keyword",info:"                                                                                                    "},{label:"Csc",type:"keyword",info:"Csc[z] gives the cosecant of z. "},{label:"Csch",type:"keyword",info:"Csch[z] gives the hyperbolic cosecant of z. "},{label:"CSGRegion",type:"keyword",info:'CSGRegion["op", {reg , reg , \xe2\x80\xa6}] represents the solid region corresponding to the Boolean combinatio'},{label:"CSGRegionQ",type:"keyword",info:"CSGRegionQ[reg] yields True if the region reg is a valid CSGRegion object and False otherwise."},{label:"CSGRegionTree",type:"keyword",info:"CSGRegionTree[reg] gives the tree expression representing the CSG region reg."},{label:"CTCLossLayer",type:"keyword",info:"CTCLossLayer[] represents a net layer that computes the connectionist temporal classification loss b"},{label:"Cube",type:"keyword",info:"Cube[] represents a regular cube centered at the origin with unit edge length.Cube[l] represents a c"},{label:"CubeRoot",type:"keyword",info:"CubeRoot[x] gives the real-valued cube root of x."},{label:"Cubics",type:"keyword",info:"Cubics is an option for functions that involve solving algebraic equations, that specifies whether e"},{label:"Cuboid",type:"keyword",info:"Cuboid[p   ] represents a unit hypercube with its lower corner at p   .Cuboid[p   , p   ] represents"},{label:"CuboidBox",type:"keyword",info:"System`CuboidBox"},{label:"Cumulant",type:"keyword",info:"                              th                                                                 th "},{label:"CumulantGeneratingFunction",type:"keyword",info:"CumulantGeneratingFunction[dist, t] gives the cumulant-generating function for the distribution dist"},{label:"Cup",type:"keyword",info:"Cup[x, y, \xe2\x80\xa6] displays as x \xe2\x8c\xa3 y \xe2\x8c\xa3 \xe2\x80\xa6."},{label:"CupCap",type:"keyword",info:"CupCap[x, y, \xe2\x80\xa6] displays as x \xe2\x89\x8d y \xe2\x89\x8d \xe2\x80\xa6."},{label:"Curl",type:"keyword",info:"Curl[{f , f }, {x , x }] gives the curl \xe2\x88\x82 f /\xe2\x88\x82 x  - \xe2\x88\x82 f /\xe2\x88\x82 x .Curl[{f , f , f }, {x , x , x }] gives"},{label:"CurlyDoubleQuote",type:"keyword",info:"System`CurlyDoubleQuote"},{label:"CurlyQuote",type:"keyword",info:"System`CurlyQuote"},{label:"CurrencyConvert",type:"keyword",info:"CurrencyConvert[quantity, target] attempts to convert the specified currency quantity to the specifi"},{label:"CurrentDate",type:"keyword",info:"CurrentDate[gran] gives the current date of the specified granularity type gran.CurrentDate[date, gr"},{label:"CurrentImage",type:"keyword",info:"CurrentImage[] returns the current image captured from a connected camera.CurrentImage[n] returns n "},{label:"CurrentlySpeakingPacket",type:"keyword",info:"System`CurrentlySpeakingPacket"},{label:"CurrentNotebookImage",type:"keyword",info:"CurrentNotebookImage[nb] returns an image captured from the portion of the notebook nb that appears "},{label:"CurrentScreenImage",type:"keyword",info:"CurrentScreenImage[] returns an image captured from all current display screens on your computer. Cu"},{label:"CurrentValue",type:"keyword",info:"CurrentValue[item] gives the current value of item at a location in the Wolfram System and interface"},{label:"Curry",type:"keyword",info:"Curry[f, n] represents an operator form of the function f of n arguments so that Curry[f, n][x ] \xe2\x80\xa6[x"},{label:"CurryApplied",type:"keyword",info:"CurryApplied[f, n] represents an operator form of the function f of n arguments so that CurryApplied"},{label:"CurvatureFlowFilter",type:"keyword",info:"CurvatureFlowFilter[image] applies a mean curvature flow filter to image.CurvatureFlowFilter[image, "},{label:"CurveClosed",type:"keyword",info:"CurveClosed is an option for JoinedCurve that specifies whether individual curve components should b"},{label:"Cyan",type:"keyword",info:"Cyan represents the color cyan in graphics or style specifications. "},{label:"CycleGraph",type:"keyword",info:"CycleGraph[n] gives the cycle graph with n vertices C .\n                                            "},{label:"CycleIndexPolynomial",type:"keyword",info:"CycleIndexPolynomial[perm, {x , \xe2\x80\xa6, x }] constructs the cycle index monomial of the permutation perm "},{label:"Cycles",type:"keyword",info:"Cycles[{cyc , cyc , \xe2\x80\xa6}] represents a permutation with disjoint cycles cyc .\n           1     2      "},{label:"CyclicGroup",type:"keyword",info:"CyclicGroup[n] represents the cyclic group of degree n."},{label:"Cyclotomic",type:"keyword",info:"                             th\nCyclotomic[n, x] gives the n\xef\x8e\xa0   cyclotomic polynomial in x. "},{label:"Cylinder",type:"keyword",info:"Cylinder[{{x , y , z }, {x , y , z }}, r] represents a cylinder of radius r around the line from (x "},{label:"CylinderBox",type:"keyword",info:"System`CylinderBox"},{label:"CylindricalDecomposition",type:"keyword",info:"CylindricalDecomposition[expr, {x , x , \xe2\x80\xa6}] finds a decomposition of the region represented by the s"},{label:"CylindricalDecompositionFunction",type:"keyword",info:"CylindricalDecompositionFunction[data][x , x , \xe2\x80\xa6] represents a cylindrical algebraic formula in x , "},{label:"CEC",type:"keyword",info:"System`CEC"},{label:"D",type:"keyword",info:"                                                                                          n      n  "},{label:"DagumDistribution",type:"keyword",info:"DagumDistribution[p, a, b] represents a Dagum distribution with shape parameters p and a and scale p"},{label:"DamData",type:"keyword",info:"DamData[entity, property] gives the value of the specified property for the dam entity.DamData[{enti"},{label:"DamerauLevenshteinDistance",type:"keyword",info:"DamerauLevenshteinDistance[u, v] gives the Damerau\xe2\x80\x93Levenshtein distance between strings or vectors u"},{label:"DampingFactor",type:"keyword",info:"DampingFactor is an option for FindRoot, which can be used to control convergence behavior. DampingF"},{label:"Darker",type:"keyword",info:"Darker[color] represents a darker version of the specified color. Darker[color, f] represents a vers"},{label:"Dashed",type:"keyword",info:"Dashed is a graphics directive specifying that lines that follow should be drawn dashed."},{label:"Dashing",type:"keyword",info:"Dashing[{r , r , \xe2\x80\xa6}] is a two-dimensional graphics directive specifying that lines that follow are t"},{label:"DatabaseConnect",type:"keyword",info:"DatabaseConnect[db] activates a connection to the database db."},{label:"DatabaseDisconnect",type:"keyword",info:"DatabaseDisconnect[db] deactivates a connection to the database db. "},{label:"DatabaseReference",type:"keyword",info:'DatabaseReference[File["filename"]] represents a reference to a local file-based SQL database.Databa'},{label:"Databin",type:"keyword",info:'Databin["id"] represents a databin in the Wolfram Data Drop.Databin["id", n] represents the first n '},{label:"DatabinAdd",type:"keyword",info:"DatabinAdd[bin, data] adds the specified data to a databin."},{label:"DatabinRemove",type:"keyword",info:"                                    th\nDatabinRemove[bin, i] removes the i\xef\x8e\xa0  entry from a databin.Da"},{label:"Databins",type:"keyword",info:"Databins[] gives a list of databins associated with the currently connected user."},{label:"DatabinSubmit",type:"keyword",info:"DatabinSubmit[bin, data] submits the specified data to be added to the databin bin asynchronously."},{label:"DatabinUpload",type:"keyword",info:"DatabinUpload[bin, {entry , entry , \xe2\x80\xa6}] bulk uploads all the entries entry  to a databin.DatabinUplo"},{label:"DataCompression",type:"keyword",info:"System`DataCompression"},{label:"DataDistribution",type:"keyword",info:"DataDistribution[ddist, \xe2\x80\xa6] represents a probability distribution of type ddist, estimated from a set"},{label:"DataRange",type:"keyword",info:"DataRange is an option for functions such as ListPlot and ListDensityPlot that specifies what range "},{label:"DataReversed",type:"keyword",info:"DataReversed is an option for ArrayPlot and related functions that specifies whether data should be "},{label:"Dataset",type:"keyword",info:"Dataset[data] represents a structured dataset based on a hierarchy of lists and associations."},{label:"DatasetDisplayPanel",type:"keyword",info:"System`DatasetDisplayPanel"},{label:"DatasetTheme",type:"keyword",info:"DatasetTheme is an option for Dataset that specifies an overall theme for a dataset and its elements"},{label:"DataStructure",type:"keyword",info:'DataStructure["type", data] represents a data structure.'},{label:"DataStructureQ",type:"keyword",info:"DataStructureQ[ds] yields True if ds is a valid data structure and False otherwise.DataStructureQ[ds"},{label:"Date",type:"keyword",info:"Date[] gives the current local date and time in the form {year, month, day, hour, minute, second}. "},{label:"DateBounds",type:"keyword",info:"DateBounds[{date , date , \xe2\x80\xa6}] gives the earliest and latest of the date .DateBounds[tseries] gives t"},{label:"Dated",type:"keyword",info:"Dated[obj, year] represents the object obj associated with a particular year.Dated[obj, date] repres"},{label:"DateDelimiters",type:"keyword",info:"System`DateDelimiters"},{label:"DateDifference",type:"keyword",info:"DateDifference[date , date ] gives the number of days from date  to date .DateDifference[date , date"},{label:"DatedUnit",type:"keyword",info:"DatedUnit[unit, date] represents the specified unit at a specific date."},{label:"DateFormat",type:"keyword",info:"DateFormat is an option that determines the date formatting of dates."},{label:"DateFunction",type:"keyword",info:"DateFunction is an option for DateListPlot and TemporalData that specifies how dates given as input "},{label:"DateHistogram",type:"keyword",info:"DateHistogram[{date , date , \xe2\x80\xa6}] plots a histogram of the dates date .DateHistogram[{date , date , \xe2\x80\xa6"},{label:"DateInterval",type:"keyword",info:"DateInterval[{start, end}] represents the continuous interval of time between start and end.DateInte"},{label:"DateList",type:"keyword",info:"DateList[] gives the current local date and time in the form {year, month, day, hour, minute, second"},{label:"DateListLogPlot",type:"keyword",info:"DateListLogPlot[{{date , v }, {date , v }, \xe2\x80\xa6}] makes a log plot with values v  at a sequence of date"},{label:"DateListPlot",type:"keyword",info:"DateListPlot[{{date , v }, {date , v }, \xe2\x80\xa6, {date , v }}] plots points with values v  at a sequence o"},{label:"DateListStepPlot",type:"keyword",info:"DateListStepPlot[{{date , v }, {date , v }, \xe2\x80\xa6}] plots the values v  in steps at a sequence of dates."},{label:"DateObject",type:"keyword",info:"DateObject[] gives the current local date.DateObject[date] gives a date object corresponding to the "},{label:"DateObjectQ",type:"keyword",info:"DateObjectQ[expr] gives True if expr is a DateObject with valid arguments, and False otherwise."},{label:"DateOverlapsQ",type:"keyword",info:"DateOverlapsQ[date , date ] returns True if the calendar dates date  and date  overlap, and False ot"},{label:"DatePattern",type:"keyword",info:'DatePattern[{"e ", "e ", \xe2\x80\xa6}] represents the characters of a date with elements of type "e " in Strin'},{label:"DatePlus",type:"keyword",info:"DatePlus[date, n] gives the date n days after date.DatePlus[date, {n, step}] gives the date n calend"},{label:"DateRange",type:"keyword",info:"DateRange[date , date ] gives all dates in the range from date  to date .DateRange[date , date , inc"},{label:"DateReduction",type:"keyword",info:"DateReduction is an option for DateHistogram that specifies the length for cyclic periods of time."},{label:"DateScale",type:"keyword",info:"DateScale[] represents the canonical mapping of continuous dates and times to a quantitative scale."},{label:"DateSelect",type:"keyword",info:"DateSelect[list, crit] picks out all dates date  of a list for which crit[date ] is True.DateSelect["},{label:"DateString",type:"keyword",info:"DateString[] gives a string representing the complete current local date and time. DateString[date] "},{label:"DateTicksFormat",type:"keyword",info:"DateTicksFormat is an option for DateListPlot which specifies how date tick labels should be formatt"},{label:"DateValue",type:"keyword",info:'DateValue["elem"] gives the specified element of the current date and time.DateValue[{elem , elem , '},{label:"DateWithinQ",type:"keyword",info:"DateWithinQ[date , date ] returns True if the calendar date date  is entirely contained within date "},{label:"DaubechiesWavelet",type:"keyword",info:"DaubechiesWavelet[] represents a Daubechies wavelet of order 2. DaubechiesWavelet[n] represents a Da"},{label:"DavisDistribution",type:"keyword",info:"DavisDistribution[b, n, \xce\xbc] represents a Davis distribution with scale parameter b, shape parameter n"},{label:"DawsonF",type:"keyword",info:"DawsonF[z] gives the Dawson integral F(z)."},{label:"DayCount",type:"keyword",info:"DayCount[date , date ] gives the number of days from date  to date .DayCount[date , date , daytype] "},{label:"DayCountConvention",type:"keyword",info:"DayCountConvention is an option that specifies the day count convention used by DateDifference."},{label:"DayHemisphere",type:"keyword",info:"DayHemisphere[] is a two-dimensional GeoGraphics primitive that represents the half of the Earth tha"},{label:"DaylightQ",type:"keyword",info:"DaylightQ[] gives True if it is currently daylight from the user's location.DaylightQ[datespec] give"},{label:"DayMatchQ",type:"keyword",info:"DayMatchQ[date, daytype] returns True if the date matches the daytype specification and returns Fals"},{label:"DayName",type:"keyword",info:"DayName[] gives the current day of the week.DayName[date] gives the day of the week for the given da"},{label:"DayNightTerminator",type:"keyword",info:"DayNightTerminator[] is a one-dimensional GeoGraphics primitive that represents the separation line "},{label:"DayPlus",type:"keyword",info:"DayPlus[date, n] gives the date n days away from date.DayPlus[date, n, daytype] gives the date that "},{label:"DayRange",type:"keyword",info:"DayRange[date , date ] gives the dates in the range from date  to date .DayRange[date , date , dayty"},{label:"DayRound",type:"keyword",info:"DayRound[date, daytype] rounds date to the nearest day of daytype, using the next-day rounding conve"},{label:"DeBruijnGraph",type:"keyword",info:"DeBruijnGraph[m, n] gives the n-dimensional De Bruijn graph with m symbols.DeBruijnGraph[m, n, type]"},{label:"DeBruijnSequence",type:"keyword",info:"DeBruijnSequence[list, n] gives a de Bruijn sequence on the elements in list taken n at a time.DeBru"},{label:"Debug",type:"keyword",info:"System`Debug"},{label:"DebugTag",type:"keyword",info:"System`DebugTag"},{label:"Decapitalize",type:"keyword",info:"Decapitalize[string] yields a string in which the first character has been made lowercase."},{label:"Decimal",type:"keyword",info:"Decimal is a setting for the ColumnAlignments option of GridBox which states that numbers should ali"},{label:"DecimalForm",type:"keyword",info:"DecimalForm[expr] prints with approximate real numbers in expr always given in decimal form, without"},{label:"DeclareKnownSymbols",type:"keyword",info:"System`DeclareKnownSymbols"},{label:"DeclarePackage",type:"keyword",info:'DeclarePackage["context`", {"name ", "name ", \xe2\x80\xa6}] declares that Needs["context`"] should automatical'},{label:"Decompose",type:"keyword",info:"Decompose[poly, x] decomposes a polynomial, if possible, into a composition of simpler polynomials. "},{label:"DeconvolutionLayer",type:"keyword",info:"DeconvolutionLayer[n, sz] represents a trainable deconvolutional net layer having n output channels "},{label:"Decrement",type:"keyword",info:"x -- decreases the value of x by 1, returning the old value of x. "},{label:"Decrypt",type:"keyword",info:'Decrypt["password", enc] attempts to decrypt the encrypted object enc using the specified password.D'},{label:"DecryptFile",type:"keyword",info:'DecryptFile["password", file] generates a decrypted version of a file, using the specified password.'},{label:"DedekindEta",type:"keyword",info:"DedekindEta[\xcf\x84] gives the Dedekind eta modular elliptic function \xce\\[CenterDot](\xcf\x84)."},{label:"DeepSpaceProbeData",type:"keyword",info:"DeepSpaceProbeData[entity, property] gives the value of the specified property for the deep space pr"},{label:"Default",type:"keyword",info:"                                                                                                    "},{label:"Default2DTool",type:"keyword",info:"System`Default2DTool"},{label:"Default3DTool",type:"keyword",info:"System`Default3DTool"},{label:"DefaultAttachedCellStyle",type:"keyword",info:"System`DefaultAttachedCellStyle"},{label:"DefaultAxesStyle",type:"keyword",info:"DefaultAxesStyle is a low-level option for graphics functions that specifies the default style to us"},{label:"DefaultBaseStyle",type:"keyword",info:"DefaultBaseStyle is a low-level option for formatting and related constructs that specifies a defaul"},{label:"DefaultBoxStyle",type:"keyword",info:"DefaultBoxStyle is a low-level option for three-dimensional graphics functions that specifies the de"},{label:"DefaultButton",type:"keyword",info:"DefaultButton[] represents an OK button that closes a dialog, and is the default when StyleBox[Dynam"},{label:"DefaultColor",type:"keyword",info:"DefaultColor is an option for graphics functions that specifies the default color to use for lines, "},{label:"DefaultControlPlacement",type:"keyword",info:"System`DefaultControlPlacement"},{label:"DefaultDockedCellStyle",type:"keyword",info:"System`DefaultDockedCellStyle"},{label:"DefaultDuplicateCellStyle",type:"keyword",info:"DefaultDuplicateCellStyle is a notebook option that specifies the default style to use for cells cre"},{label:"DefaultDuration",type:"keyword",info:"DefaultDuration is an option to Animate and related functions that specifies the default total durat"},{label:"DefaultElement",type:"keyword",info:"DefaultElement is an option for Grid and related constructs which specifies what to insert when a ne"},{label:"DefaultFaceGridsStyle",type:"keyword",info:"DefaultFaceGridsStyle is a low-level option for 3D graphics functions that specifies the default sty"},{label:"DefaultFieldHintStyle",type:"keyword",info:"DefaultFieldHintStyle is a low-level option for InputField that specifies the default style to use f"},{label:"DefaultFont",type:"keyword",info:"System`DefaultFont"},{label:"DefaultFontProperties",type:"keyword",info:"DefaultFontProperties is a global option that specifies various properties of a font family, such as"},{label:"DefaultFormatType",type:"keyword",info:"DefaultFormatType is an option for cells that specifies the format used for displaying expressions i"},{label:"DefaultFormatTypeForStyle",type:"keyword",info:"System`DefaultFormatTypeForStyle"},{label:"DefaultFrameStyle",type:"keyword",info:"DefaultFrameStyle is a low-level option for graphics and related constructs that specifies the defau"},{label:"DefaultFrameTicksStyle",type:"keyword",info:"DefaultFrameTicksStyle is a low-level option for 2D graphics functions that specifies the default st"},{label:"DefaultGridLinesStyle",type:"keyword",info:"DefaultGridLinesStyle is a low-level option for 2D graphics functions that specifies the default sty"},{label:"DefaultInlineFormatType",type:"keyword",info:"DefaultInlineFormatType is an option for cells that specifies the format used for displaying express"},{label:"DefaultInputFormatType",type:"keyword",info:"System`DefaultInputFormatType"},{label:"DefaultLabelStyle",type:"keyword",info:"DefaultLabelStyle is a low-level option for formatting and related constructs that specifies the def"},{label:"DefaultMenuStyle",type:"keyword",info:"DefaultMenuStyle is a low-level option for menu-generating constructs that specifies the default sty"},{label:"DefaultNaturalLanguage",type:"keyword",info:"DefaultNaturalLanguage is an option for character selections that specifies the language used when c"},{label:"DefaultNewCellStyle",type:"keyword",info:"DefaultNewCellStyle is a notebook option which specifies the default style to use for new cells crea"},{label:"DefaultNewInlineCellStyle",type:"keyword",info:"DefaultNewInlineCellStyle is an option for cells that specifies the default style to use for new inl"},{label:"DefaultNotebook",type:"keyword",info:"DefaultNotebook is a global option that specifies which notebook is used as a template for all new n"},{label:"DefaultOptions",type:"keyword",info:"DefaultOptions is a style option that allows default options to be specified for particular formatti"},{label:"DefaultOutputFormatType",type:"keyword",info:"System`DefaultOutputFormatType"},{label:"DefaultPrintPrecision",type:"keyword",info:"DefaultPrintPrecision is an option for NumberForm, DecimalForm and related functions that specifies "},{label:"DefaultStyle",type:"keyword",info:"System`DefaultStyle"},{label:"DefaultStyleDefinitions",type:"keyword",info:"DefaultStyleDefinitions is a global option that specifies the default stylesheet for all new noteboo"},{label:"DefaultTextFormatType",type:"keyword",info:"System`DefaultTextFormatType"},{label:"DefaultTextInlineFormatType",type:"keyword",info:"System`DefaultTextInlineFormatType"},{label:"DefaultTicksStyle",type:"keyword",info:"DefaultTicksStyle is a low-level option for graphics functions that specifies the default style to u"},{label:"DefaultTooltipStyle",type:"keyword",info:"DefaultTooltipStyle is a low-level option for tooltips that specifies the default style to use in di"},{label:"DefaultValue",type:"keyword",info:"System`DefaultValue"},{label:"DefaultValues",type:"keyword",info:"DefaultValues[f] gives a list of transformation rules corresponding to all default argument values ("},{label:"Defer",type:"keyword",info:"Defer[expr] yields an object that displays as the unevaluated form of expr, but that is evaluated if"},{label:"DefineExternal",type:"keyword",info:"System`DefineExternal"},{label:"DefineInputStreamMethod",type:"keyword",info:'DefineInputStreamMethod["name", {fname  \xef\x94\xa2 function , fname  \xef\x94\xa2 function , \xe2\x80\xa6 }] defines a custom input'},{label:"DefineOutputStreamMethod",type:"keyword",info:'DefineOutputStreamMethod["name", {fname  \xef\x94\xa2 function , fname  \xef\x94\xa2 function , \xe2\x80\xa6 }] defines a custom outp'},{label:"DefineResourceFunction",type:"keyword",info:"DefineResourceFunction[f] defines a resource function that can be applied to arguments to give the s"},{label:"Definition",type:"keyword",info:'Definition[symbol] prints as the definitions given for a symbol.Definition["symbol"] prints as the d'},{label:"Degree",type:"keyword",info:"                                                                               \xcf\x80\nDegree gives the nu"},{label:"DegreeCentrality",type:"keyword",info:"DegreeCentrality[g] gives a list of vertex degrees for the vertices in the underlying simple graph o"},{label:"DegreeGraphDistribution",type:"keyword",info:"DegreeGraphDistribution[dlist] represents a degree graph distribution with vertex degree dlist."},{label:"DegreeLexicographic",type:"keyword",info:"System`DegreeLexicographic"},{label:"DegreeReverseLexicographic",type:"keyword",info:"System`DegreeReverseLexicographic"},{label:"DEigensystem",type:"keyword",info:"DEigensystem[\xe2\x84\x92[u[x, y, \xe2\x80\xa6]], u, {x, y, \xe2\x80\xa6} \xe2\x88\x88 \xce\xa9, n] gives the n smallest magnitude eigenvalues and eige"},{label:"DEigenvalues",type:"keyword",info:"DEigenvalues[\xe2\x84\x92[u[x, y, \xe2\x80\xa6], u, {x, y, \xe2\x80\xa6} \xe2\x88\x88 \xce\xa9, n] gives the n smallest magnitude eigenvalues for the l"},{label:"Deinitialization",type:"keyword",info:"Deinitialization is an option for Dynamic, DynamicModule, Manipulate, and related constructs that sp"},{label:"Del",type:"keyword",info:"Del[x] displays as \xe2\x88\x87 x."},{label:"DelaunayMesh",type:"keyword",info:"DelaunayMesh[{p , p , \xe2\x80\xa6}] gives a MeshRegion representing the Delaunay mesh from the points p , p , "},{label:"Delayed",type:"keyword",info:"Delayed[expr] represents an expression whose evaluation is delayed until its value is externally req"},{label:"Deletable",type:"keyword",info:"Deletable is an option for Cell that specifies whether the cell can be deleted interactively using t"},{label:"Delete",type:"keyword",info:"Delete[expr, n] deletes the element at position n in expr. If n is negative, the position is counted"},{label:"DeleteAnomalies",type:"keyword",info:"DeleteAnomalies[{example , example , \xe2\x80\xa6}] gives a list in which example  that are considered anomalou"},{label:"DeleteBorderComponents",type:"keyword",info:"DeleteBorderComponents[image] replaces connected components adjacent to the border in a binary image"},{label:"DeleteCases",type:"keyword",info:"DeleteCases[expr, pattern] removes all elements of expr that match pattern. DeleteCases[expr, patter"},{label:"DeleteChannel",type:"keyword",info:"DeleteChannel[channel] deletes the specified channel from the channel broker server.DeleteChannel[{c"},{label:"DeleteCloudExpression",type:"keyword",info:'DeleteCloudExpression["name"] deletes the cloud expression identified by "name".DeleteCloudExpressio'},{label:"DeleteContents",type:"keyword",info:"DeleteContents is an option for DeleteDirectory that specifies whether the contents of directories s"},{label:"DeleteDirectory",type:"keyword",info:'DeleteDirectory["dir"] deletes the specified directory. '},{label:"DeleteDuplicates",type:"keyword",info:"DeleteDuplicates[list] deletes all duplicates from list.DeleteDuplicates[list, test] applies test to"},{label:"DeleteDuplicatesBy",type:"keyword",info:"DeleteDuplicatesBy[{e , e , \xe2\x80\xa6}, f] deletes those e  that yield duplicates in the list {f[e ], f[e ],"},{label:"DeleteFile",type:"keyword",info:'DeleteFile["file"] deletes a file. DeleteFile[{"file ", "file ", \xe2\x80\xa6}] deletes a list of files. \n     '},{label:"DeleteMissing",type:"keyword",info:"DeleteMissing[list] drops elements with head Missing from a list.DeleteMissing[assoc] drops elements"},{label:"DeleteObject",type:"keyword",info:"DeleteObject[obj] deletes the object obj.DeleteObject[{obj , obj , \xe2\x80\xa6}] deletes all the obj .\n       "},{label:"DeletePermissionsKey",type:"keyword",info:"DeletePermissionsKey[key] deletes a permissions key, rendering it invalid.DeletePermissionsKey[{key "},{label:"DeleteSearchIndex",type:"keyword",info:"DeleteSearchIndex[obj] deletes the search index represented by the search index object obj.DeleteSea"},{label:"DeleteSmallComponents",type:"keyword",info:"DeleteSmallComponents[image] replaces small connected components in a binary image image with backgr"},{label:"DeleteStopwords",type:"keyword",info:'DeleteStopwords[list] deletes stopwords from a list of words.DeleteStopwords["string"] deletes stopw'},{label:"DeleteWithContents",type:"keyword",info:"System`DeleteWithContents"},{label:"DeletionWarning",type:"keyword",info:"DeletionWarning is an option for InterpretationBox or TagBox objects that specifies whether a warnin"},{label:"DelimitedArray",type:"keyword",info:"System`DelimitedArray"},{label:"DelimitedSequence",type:"keyword",info:"DelimitedSequence[form] represents a delimited sequence of elements of the specified form in Interpr"},{label:"Delimiter",type:"keyword",info:"Delimiter represents a delimiter to be displayed in objects such as PopupMenu, Manipulate, and FormO"},{label:"DelimiterAutoMatching",type:"keyword",info:"DelimiterAutoMatching is an option for cells and notebooks that specifies whether matching delimiter"},{label:"DelimiterFlashTime",type:"keyword",info:"DelimiterFlashTime is an option for cells and notebooks that specifies how long in seconds a delimit"},{label:"DelimiterMatching",type:"keyword",info:"DelimiterMatching is an option for selections that specifies whether an opening delimiter will match"},{label:"Delimiters",type:"keyword",info:"Delimiters is an option to various functions that specifies what delimiters to use or look for."},{label:"DeliveryFunction",type:"keyword",info:"DeliveryFunction is an option that specifies how material such as documents generated by DocumentGen"},{label:"Dendrogram",type:"keyword",info:"Dendrogram[{e , e , \xe2\x80\xa6}] constructs a dendrogram from the hierarchical clustering of the elements e ,"},{label:"Denominator",type:"keyword",info:"Denominator[expr] gives the denominator of expr. "},{label:"DensityGraphics",type:"keyword",info:"DensityGraphics[array] is a representation of a density plot. "},{label:"DensityHistogram",type:"keyword",info:"DensityHistogram[{{x , y }, {x , y }, \xe2\x80\xa6}] plots a density histogram of the values {x , y }.DensityHi"},{label:"DensityPlot",type:"keyword",info:"DensityPlot[f, {x, x   , x   }, {y, y   , y   }] makes a density plot of f as a function of x and y."},{label:"DensityPlot3D",type:"keyword",info:"DensityPlot3D[f, {x, x   , x   }, {y, y   , y   }, {z, z   , z   }] makes a density plot of f as a f"},{label:"DependentVariables",type:"keyword",info:"DependentVariables is an option for NDSolve and other functions that specifies the list of all objec"},{label:"Deploy",type:"keyword",info:"Deploy[expr] yields a deployed version of expr in which elements such as Slider, InputField, Locator"},{label:"Deployed",type:"keyword",info:"Deployed is an option for displayed objects, cells, and notebooks that specifies whether their conte"},{label:"Depth",type:"keyword",info:"Depth[expr] gives the maximum number of indices needed to specify any part of expr, plus 1. "},{label:"DepthFirstScan",type:"keyword",info:"DepthFirstScan[g, s, {event  \xef\x94\xa2 f , event  \xef\x94\xa2 f , \xe2\x80\xa6}] performs a depth-first scan of the graph g start"},{label:"Derivative",type:"keyword",info:"f ' represents the derivative of a function f of one argument. Derivative[n , n , \xe2\x80\xa6][f] is the gener"},{label:"DerivativeFilter",type:"keyword",info:"                                                    th\nDerivativeFilter[data, {n , n , \xe2\x80\xa6}] computes "},{label:"DerivativePDETerm",type:"keyword",info:"DerivativePDETerm[vars, \xce.b3] represents a load derivative term \xe2\x88\x87            \xc2\\[CenterDot] (\xce.b3) with load derivative"},{label:"DerivedKey",type:"keyword",info:"DerivedKey[assoc] represents a derived key generated by GenerateDerivedKey."},{label:"DescriptorStateSpace",type:"keyword",info:"DescriptorStateSpace is an option to StateSpaceModel and StateSpaceTransform that specifies whether "},{label:"DesignMatrix",type:"keyword",info:"DesignMatrix[{{x  , x  , \xe2\x80\xa6, y }, {x  , x  , \xe2\x80\xa6, y }, \xe2\x80\xa6}, {f , f , \xe2\x80\xa6}, {x , x , \xe2\x80\xa6}] constructs the des"},{label:"DestroyAfterEvaluation",type:"keyword",info:"System`DestroyAfterEvaluation"},{label:"Det",type:"keyword",info:"Det[m] gives the determinant of the square matrix m. "},{label:"DeviceClose",type:"keyword",info:"DeviceClose[device] closes the connection to a device and frees related resources."},{label:"DeviceConfigure",type:"keyword",info:"DeviceConfigure[device, config] configures the specified device according to config."},{label:"DeviceExecute",type:"keyword",info:'DeviceExecute[device, "command"] executes the specified command on a device.DeviceExecute[device, "c'},{label:"DeviceExecuteAsynchronous",type:"keyword",info:'DeviceExecuteAsynchronous[device, "command", fun] initiates asynchronous execution of the specified '},{label:"DeviceObject",type:"keyword",info:"DeviceObject[\xe2\x80\xa6] represents a device that can be accessed in a Wolfram Language session."},{label:"DeviceOpen",type:"keyword",info:'DeviceOpen["devclass"] opens a connection to the first available device in the class specified by "d'},{label:"DeviceOpenQ",type:"keyword",info:"System`DeviceOpenQ"},{label:"DeviceRead",type:"keyword",info:"DeviceRead[devobj] reads a single default item from the open device corresponding to the specified D"},{label:"DeviceReadBuffer",type:"keyword",info:"DeviceReadBuffer[device] reads the complete contents of the buffer on a device.DeviceReadBuffer[devi"},{label:"DeviceReadLatest",type:"keyword",info:"DeviceReadLatest[device] returns the most recently collected default item from a device.DeviceReadLa"},{label:"DeviceReadList",type:"keyword",info:"DeviceReadList[device, n] reads from the specified device n times, returning a list of the results.D"},{label:"DeviceReadTimeSeries",type:"keyword",info:"DeviceReadTimeSeries[device, {t, dt}] repeatedly reads default items from the specified device at in"},{label:"Devices",type:"keyword",info:"Devices[] gives a list of registered devices on a particular system.Devices[form] gives a list of de"},{label:"DeviceStreams",type:"keyword",info:"DeviceStreams[device] gives a list of all open streams associated with a device.DeviceStreams[device"},{label:"DeviceWrite",type:"keyword",info:"DeviceWrite[device, val] writes the value val to the specified device.DeviceWrite[device, {val , val"},{label:"DeviceWriteBuffer",type:"keyword",info:"DeviceWriteBuffer[device, vals] fills the buffer on a device with the values vals.DeviceWriteBuffer["},{label:"DGaussianWavelet",type:"keyword",info:"DGaussianWavelet[] represents a derivative of Gaussian wavelet of derivative order 2.DGaussianWavele"},{label:"DiacriticalPositioning",type:"keyword",info:"DiacriticalPositioning is an option for UnderscriptBox and related boxes that specifies how close di"},{label:"Diagonal",type:"keyword",info:"                                                                                                    "},{label:"DiagonalizableMatrixQ",type:"keyword",info:"DiagonalizableMatrixQ[m] gives True if m is diagonalizable, and False otherwise. "},{label:"DiagonalMatrix",type:"keyword",info:"                                                                                                    "},{label:"DiagonalMatrixQ",type:"keyword",info:"                                                                                                    "},{label:"Dialog",type:"keyword",info:"Dialog[] initiates a dialog. Dialog[expr] initiates a dialog with expr as the current value of %. \n"},{label:"DialogIndent",type:"keyword",info:"System`DialogIndent"},{label:"DialogInput",type:"keyword",info:"DialogInput[expr] interactively puts up expr as a dialog notebook, waits until a DialogReturn[e] is "},{label:"DialogLevel",type:"keyword",info:"System`DialogLevel"},{label:"DialogNotebook",type:"keyword",info:"DialogNotebook[{cell , cell , \xe2\x80\xa6}] represents a dialog notebook that can be manipulated by the Wolfra"},{label:"DialogProlog",type:"keyword",info:"DialogProlog is an option for Dialog that can give an expression to evaluate before the dialog start"},{label:"DialogReturn",type:"keyword",info:"DialogReturn[expr] closes a dialog window, returning the expression expr from the dialog.DialogRetur"},{label:"DialogSymbols",type:"keyword",info:"DialogSymbols is an option for Dialog that gives a list of symbols whose values should be localized "},{label:"Diamond",type:"keyword",info:"Diamond[x, y, \xe2\x80\xa6] displays as x \xe2\x8b\x84 y \xe2\x8b\x84 \xe2\x80\xa6."},{label:"DiamondMatrix",type:"keyword",info:"                                                                                                    "},{label:"DiceDissimilarity",type:"keyword",info:"DiceDissimilarity[x, y] gives the Dice dissimilarity between Boolean vectors x and y."},{label:"DictionaryLookup",type:"keyword",info:"DictionaryLookup[patt] finds all words in an English dictionary that match the string pattern patt.D"},{label:"DictionaryWordQ",type:"keyword",info:'DictionaryWordQ["word"] tests whether "word" is a recognized dictionary word.'},{label:"DifferenceDelta",type:"keyword",info:"                                                                                                    "},{label:"DifferenceOrder",type:"keyword",info:"System`DifferenceOrder"},{label:"DifferenceQuotient",type:"keyword",info:"DifferenceQuotient[f, {x, h}]  gives the difference quotient (f(x + h) - f(x))/h.DifferenceQuotient["},{label:"DifferenceRoot",type:"keyword",info:"DifferenceRoot[lde][k] gives the holonomic sequence h(k), specified by the linear difference equatio"},{label:"DifferenceRootReduce",type:"keyword",info:"DifferenceRootReduce[expr, n] attempts to reduce expr to a single DifferenceRoot object as a functio"},{label:"Differences",type:"keyword",info:"                                                                                                    "},{label:"DifferentialD",type:"keyword",info:"DifferentialD[x] displays as \xef\x9d\x8c x."},{label:"DifferentialRoot",type:"keyword",info:"DifferentialRoot[lde][x] gives the holonomic function h(x), specified by the linear differential equ"},{label:"DifferentialRootReduce",type:"keyword",info:"DifferentialRootReduce[expr, x] attempts to reduce expr to a single DifferentialRoot object as a fun"},{label:"DifferentiatorFilter",type:"keyword",info:"DifferentiatorFilter[data, \xcf\x89 ] applies a differentiator filter with a cutoff frequency \xcf\x89  to an arra"},{label:"DiffusionPDETerm",type:"keyword",info:"DiffusionPDETerm[vars] represents a diffusion term \xe2\x88\x87            \xc2\\[CenterDot] (-\xe2\x88\x87            u) with model varia"},{label:"DiggleGatesPointProcess",type:"keyword",info:"                                                                                                    "},{label:"DiggleGrattonPointProcess",type:"keyword",info:"                                                                                                    "},{label:"DigitalSignature",type:"keyword",info:"DigitalSignature[assoc] represents a digital signature object."},{label:"DigitBlock",type:"keyword",info:"DigitBlock is an option for NumberForm and related functions that specifies the maximum length of bl"},{label:"DigitBlockMinimum",type:"keyword",info:"System`DigitBlockMinimum"},{label:"DigitCharacter",type:"keyword",info:"DigitCharacter represents a digit character 0\xe2\x80\x939 in StringExpression. "},{label:"DigitCount",type:"keyword",info:"DigitCount[n, b, d] gives the number of d digits in the base-b representation of n. DigitCount[n, b]"},{label:"DigitQ",type:"keyword",info:"DigitQ[string] yields True if all the characters in the string are digits in the range 0 through 9, "},{label:"DihedralAngle",type:"keyword",info:"DihedralAngle[{p , p }, {v, w}] gives the angle between two half-planes bounded by the line through "},{label:"DihedralGroup",type:"keyword",info:"DihedralGroup[n] represents the dihedral group of order 2n."},{label:"Dilation",type:"keyword",info:"Dilation[image, ker] gives the morphological dilation of image with respect to the structuring eleme"},{label:"DimensionalCombinations",type:"keyword",info:"DimensionalCombinations[{pq , pq , \xe2\x80\xa6}] returns the possible combinations of the list of physical qua"},{label:"DimensionalMeshComponents",type:"keyword",info:"DimensionalMeshComponents[mr] gives a list {r , r , \xe2\x80\xa6} of regions such that r  has dimension d for a"},{label:"DimensionReduce",type:"keyword",info:"DimensionReduce[{example , example , \xe2\x80\xa6}] projects the examples example  to a lower-dimensional appro"},{label:"DimensionReducerFunction",type:"keyword",info:"DimensionReducerFunction[\xe2\x80\xa6] represents a function generated by DimensionReduction that projects data"},{label:"DimensionReduction",type:"keyword",info:"DimensionReduction[{example , example , \xe2\x80\xa6}] generates a DimensionReducerFunction[\xe2\x80\xa6] that projects fr"},{label:"Dimensions",type:"keyword",info:"Dimensions[expr] gives a list of the dimensions of expr. Dimensions[expr, n] gives a list of the dim"},{label:"DiracComb",type:"keyword",info:"DiracComb[x] represents the Dirac comb function \xef\x84\x9d(x) giving a delta function at every integer point."},{label:"DiracDelta",type:"keyword",info:"DiracDelta[x] represents the Dirac delta function \xce.b4(x). DiracDelta[x , x , \xe2\x80\xa6] represents the multidi"},{label:"DirectedEdge",type:"keyword",info:"                                                                                              t\nDire"},{label:"DirectedEdges",type:"keyword",info:"DirectedEdges is an option for Graph, GraphPlot, and related functions that specifies whether edges "},{label:"DirectedGraph",type:"keyword",info:"DirectedGraph[g] gives a directed graph from the undirected graph g.DirectedGraph[g, conv] gives a d"},{label:"DirectedGraphQ",type:"keyword",info:"DirectedGraphQ[g] yields True if the graph g is a directed graph and False otherwise."},{label:"DirectedInfinity",type:"keyword",info:"DirectedInfinity[] represents an infinite numerical quantity whose direction in the complex plane is"},{label:"Direction",type:"keyword",info:"Direction is an option for Limit and related functions that specifies the direction in which the lim"},{label:"DirectionalLight",type:"keyword",info:"DirectionalLight[col, pt] is a three\xe2\x80\x93dimensional graphics directive that specifies the directional l"},{label:"Directive",type:"keyword",info:"Directive[g , g , \xe2\x80\xa6] represents a single graphics directive composed of the directives g , g , \xe2\x80\xa6.\n  "},{label:"Directory",type:"keyword",info:"Directory[] gives the current working directory. "},{label:"DirectoryName",type:"keyword",info:'DirectoryName["name"] extracts the directory name from the specification for a file. '},{label:"DirectoryQ",type:"keyword",info:'DirectoryQ["name"] gives True if the directory with the specified name exists, and gives False other'},{label:"DirectoryStack",type:"keyword",info:"DirectoryStack[] gives the directory stack that represents the sequence of current directories used."},{label:"DirichletBeta",type:"keyword",info:"DirichletBeta[s] gives the Dirichlet beta function \xce.b2(s)."},{label:"DirichletCharacter",type:"keyword",info:"DirichletCharacter[k, j, n] gives the Dirichlet character \xcf\x87    (n) with modulus k and index j.\n     "},{label:"DirichletCondition",type:"keyword",info:"DirichletCondition[beqn, pred] represents a Dirichlet boundary condition given by equation beqn, sat"},{label:"DirichletConvolve",type:"keyword",info:"DirichletConvolve[f, g, n, m] gives the Dirichlet convolution of the expressions f and g. "},{label:"DirichletDistribution",type:"keyword",info:"DirichletDistribution[{\xce\\[PlusMinus] , \xe2\x80\xa6, \xce\\[PlusMinus]     }] represents a Dirichlet distribution of dimension k with shape"},{label:"DirichletEta",type:"keyword",info:"DirichletEta[s] gives the Dirichlet eta function \xce\\[CenterDot](s)."},{label:"DirichletL",type:"keyword",info:"DirichletL[k, j, s] gives the Dirichlet L-function L(\xcf\x87, s) for the Dirichlet character \xcf\x87(n) with mod"},{label:"DirichletLambda",type:"keyword",info:"DirichletLambda[s] gives the Dirichlet lambda function \xce\xbb(s)."},{label:"DirichletTransform",type:"keyword",info:"DirichletTransform[expr, n, s] gives the Dirichlet transform of expr with respect to n."},{label:"DirichletWindow",type:"keyword",info:"DirichletWindow[x] represents a Dirichlet window function of x."},{label:"DisableConsolePrintPacket",type:"keyword",info:"System`DisableConsolePrintPacket"},{label:"DisableFormatting",type:"keyword",info:"DisableFormatting[expr] is a form that disables the formatting of expr when it appears inside held e"},{label:"DiscreteAsymptotic",type:"keyword",info:"DiscreteAsymptotic[expr, n \xef\x94\xa2 \xe2\x88\x9e] gives an asymptotic approximation for expr as n tends to infinity ov"},{label:"DiscreteChirpZTransform",type:"keyword",info:"DiscreteChirpZTransform[list] gives the chirp Z transform of list.DiscreteChirpZTransform[list, n] r"},{label:"DiscreteConvolve",type:"keyword",info:"DiscreteConvolve[f, g, n, m] gives the convolution with respect to n of the expressions f and g. Dis"},{label:"DiscreteDelta",type:"keyword",info:"DiscreteDelta[n , n , \xe2\x80\xa6] gives the discrete delta function \xce.b4 (n , n , \xe2\x80\xa6), equal to 1 if all the n  a"},{label:"DiscreteHadamardTransform",type:"keyword",info:"DiscreteHadamardTransform[list] gives the discrete Hadamard transform of list."},{label:"DiscreteIndicator",type:"keyword",info:"DiscreteIndicator[x, x , {u , u , \xe2\x80\xa6}] yields the discrete indicator function, equal to 1 if x = x  a"},{label:"DiscreteLimit",type:"keyword",info:"                                                                                                    "},{label:"DiscreteLQEstimatorGains",type:"keyword",info:"DiscreteLQEstimatorGains[ssm, {w, v}, \xcf\x84] gives the optimal discrete-time estimator gain matrix with "},{label:"DiscreteLQRegulatorGains",type:"keyword",info:"DiscreteLQRegulatorGains[sspec, wts, \xcf\x84] gives the discrete-time state feedback gains with sampling p"},{label:"DiscreteLyapunovSolve",type:"keyword",info:"DiscreteLyapunovSolve[a, c] finds the numeric solution x of the discrete matrix equation a . x . a \xef\x8f\x89"},{label:"DiscreteMarkovProcess",type:"keyword",info:"DiscreteMarkovProcess[i , m] represents a discrete-time, finite-state Markov process with transition"},{label:"DiscreteMaxLimit",type:"keyword",info:"                                                                                                    "},{label:"DiscreteMinLimit",type:"keyword",info:"                                                                                                    "},{label:"DiscretePlot",type:"keyword",info:"DiscretePlot[expr, {n, n   }] generates a plot of the values of expr when n runs from 1 to n   .Disc"},{label:"DiscretePlot3D",type:"keyword",info:"DiscretePlot3D[expr, {i, i   , i   }, {j, j   , j   }] generates a plot of the values of expr when i"},{label:"DiscreteRatio",type:"keyword",info:"                                             f(i + 1)\nDiscreteRatio[f, i] gives the discrete ratio -"},{label:"DiscreteRiccatiSolve",type:"keyword",info:"                                                                                                    "},{label:"DiscreteShift",type:"keyword",info:"                                                                                                    "},{label:"DiscreteTimeModelQ",type:"keyword",info:"DiscreteTimeModelQ[lsys] gives True if lsys is a discrete-time systems model, and False otherwise."},{label:"DiscreteUniformDistribution",type:"keyword",info:"DiscreteUniformDistribution[{i   , i   }] represents a discrete uniform distribution over the intege"},{label:"DiscreteVariables",type:"keyword",info:"DiscreteVariables is an option for NDSolve and other functions that specifies variables that only ch"},{label:"DiscreteWaveletData",type:"keyword",info:"DiscreteWaveletData[{wind  \xef\x94\xa2 coef , \xe2\x80\xa6}, wave, wtrans] yields a discrete wavelet data object with wav"},{label:"DiscreteWaveletPacketTransform",type:"keyword",info:"DiscreteWaveletPacketTransform[data] gives the discrete wavelet packet transform (DWPT) of an array "},{label:"DiscreteWaveletTransform",type:"keyword",info:"DiscreteWaveletTransform[data] gives the discrete wavelet transform (DWT) of an array of data.Discre"},{label:"DiscretizeGraphics",type:"keyword",info:"DiscretizeGraphics[g] discretizes a 2D or 3D graphic g into a MeshRegion.DiscretizeGraphics[g, patt]"},{label:"DiscretizeRegion",type:"keyword",info:"DiscretizeRegion[reg] discretizes a region reg into a MeshRegion.DiscretizeRegion[reg, {{x   , x   }"},{label:"Discriminant",type:"keyword",info:"Discriminant[poly, var] computes the discriminant of the polynomial poly with respect to the variabl"},{label:"DisjointQ",type:"keyword",info:"DisjointQ[list , list ] yields True if list  and list  do not share any common elements, and False o"},{label:"Disjunction",type:"keyword",info:"Disjunction[expr, {a , a , \xe2\x80\xa6}] gives the disjunction of expr over all choices of the Boolean variabl"},{label:"Disk",type:"keyword",info:"Disk[{x, y}, r] represents a disk of radius r centered at {x, y}.Disk[{x, y}] gives a disk of radius"},{label:"DiskBox",type:"keyword",info:"System`DiskBox"},{label:"DiskMatrix",type:"keyword",info:"                                                                                                    "},{label:"DiskSegment",type:"keyword",info:"DiskSegment[{x, y}, r, {\xce\xb8 , \xce\xb8 }] represents the disk segment from angle \xce\xb8  to \xce\xb8  in a disk centered "},{label:"Dispatch",type:"keyword",info:"Dispatch[{lhs  \xef\x94\xa2 rhs , lhs  \xef\x94\xa2 rhs , \xe2\x80\xa6}] generates an optimized dispatch table representation of a li"},{label:"DispatchQ",type:"keyword",info:"System`DispatchQ"},{label:"DispersionEstimatorFunction",type:"keyword",info:"DispersionEstimatorFunction is an option for generalized linear model fitting functions that specifi"},{label:"Display",type:"keyword",info:"Display[channel, graphics] writes graphics or sound to the specified output channel in PostScript fo"},{label:"DisplayAllSteps",type:"keyword",info:"DisplayAllSteps is an option to Animate and related functions that specifies whether all frames shou"},{label:"DisplayEndPacket",type:"keyword",info:"DisplayEndPacket[] is a WSTP packet that indicates the end of a series of expressions relating to a "},{label:"DisplayFlushImagePacket",type:"keyword",info:"System`DisplayFlushImagePacket"},{label:"DisplayForm",type:"keyword",info:"DisplayForm[expr] prints with low-level boxes inside expr shown in explicit two-dimensional or other"},{label:"DisplayFunction",type:"keyword",info:"DisplayFunction is an option for graphics and sound functions that specifies a function to apply to "},{label:"DisplayPacket",type:"keyword",info:"DisplayPacket[] is a WSTP packet that indicates the beginning of a series of expressions related to "},{label:"DisplayRules",type:"keyword",info:"System`DisplayRules"},{label:"DisplaySetSizePacket",type:"keyword",info:"System`DisplaySetSizePacket"},{label:"DisplayString",type:"keyword",info:"DisplayString[graphics] generates a string giving graphics or sound in PostScript format. DisplayStr"},{label:"DisplayTemporary",type:"keyword",info:"System`DisplayTemporary"},{label:"DisplayWith",type:"keyword",info:"System`DisplayWith"},{label:"DisplayWithRef",type:"keyword",info:"System`DisplayWithRef"},{label:"DisplayWithVariable",type:"keyword",info:"System`DisplayWithVariable"},{label:"DistanceFunction",type:"keyword",info:"DistanceFunction is an option for functions such as Nearest that specifies the distance value to ass"},{label:"DistanceMatrix",type:"keyword",info:"DistanceMatrix[{u , u , \xe2\x80\xa6}] gives the matrix of distances between each pair of elements u , u . Dist"},{label:"DistanceTransform",type:"keyword",info:"DistanceTransform[image] gives the distance transform of image, in which the value of each pixel is "},{label:"Distribute",type:"keyword",info:"Distribute[f[x , x , \xe2\x80\xa6]] distributes f over Plus appearing in any of the x . Distribute[expr, g] dis"},{label:"Distributed",type:"keyword",info:"Distributed[x, dist] or x \xef\x8f\x92 dist asserts that the random variable x is distributed according to the "},{label:"DistributedContexts",type:"keyword",info:"DistributedContexts is an option for various parallel computing functions that specifies which defin"},{label:"DistributeDefinitions",type:"keyword",info:"DistributeDefinitions[s , s , \xe2\x80\xa6] distributes all definitions for the symbols s  to all parallel kern"},{label:"DistributionChart",type:"keyword",info:"DistributionChart[{data , data , \xe2\x80\xa6}] makes a distribution chart with a distribution symbol for each "},{label:"DistributionDomain",type:"keyword",info:"System`DistributionDomain"},{label:"DistributionFitTest",type:"keyword",info:"DistributionFitTest[data] tests whether data is normally distributed. DistributionFitTest[data, dist"},{label:"DistributionParameterAssumptions",type:"keyword",info:"DistributionParameterAssumptions[dist] gives a logical expression for assumptions on parameters in t"},{label:"DistributionParameterQ",type:"keyword",info:"DistributionParameterQ[dist] yields True if dist is a valid distribution, and yields False otherwise"},{label:"Dithering",type:"keyword",info:"Dithering is an option for ColorQuantize that specifies whether or not to apply dithering while quan"},{label:"Div",type:"keyword",info:"Div[{f , \xe2\x80\xa6, f }, {x , \xe2\x80\xa6, x }] gives the divergence \xe2\x88\x82 f /\xe2\x88\x82 x  + \xe2\x80\xa6 + \xe2\x88\x82 f /\xe2\x88\x82 x .Div[{f , \xe2\x80\xa6, f }, {x , \xe2\x80\xa6"},{label:"Divergence",type:"keyword",info:"System`Divergence"},{label:"Divide",type:"keyword",info:"x/y or Divide[x, y] is equivalent to x y^-1. "},{label:"DivideBy",type:"keyword",info:"x/=c divides x by c and returns the new value of x. "},{label:"Dividers",type:"keyword",info:"Dividers is an option for Grid and related constructs that specifies where and how to draw divider l"},{label:"DivideSides",type:"keyword",info:"DivideSides[rel, x] divides each side of the equation or inequality rel by x.DivideSides[rel , rel ]"},{label:"Divisible",type:"keyword",info:"Divisible[n, m] yields True if n is divisible by m, and yields False if it is not. "},{label:"Divisors",type:"keyword",info:"Divisors[n] gives a list of the integers that divide n. "},{label:"DivisorSigma",type:"keyword",info:"DivisorSigma[k, n] gives the divisor function \xcf\x83 (n). \n                                              "},{label:"DivisorSum",type:"keyword",info:"DivisorSum[n, form] represents the sum of form[i] for all i that divide n.DivisorSum[n, form, cond] "},{label:"DMSList",type:"keyword",info:"DMSList[\xce\xb8] converts an angle \xce\xb8 given in decimal degrees to a DMS list {degree, minute, second}.DMSLi"},{label:"DMSString",type:"keyword",info:"DMSString[\xce\xb8] converts an angle \xce\xb8 given in decimal degrees to a degrees-minutes-seconds string.DMSStr"},{label:"Do",type:"keyword",info:"Do[expr, n] evaluates expr n times. Do[expr, {i, i   }] evaluates expr with the variable i successiv"},{label:"DockedCells",type:"keyword",info:'DockedCells is an option for notebooks that gives a list of cells that are to be displayed "docked" '},{label:"DocumentGenerator",type:"keyword",info:"DocumentGenerator[template, timespec] represents a document generator with template template to be e"},{label:"DocumentGeneratorInformation",type:"keyword",info:"DocumentGeneratorInformation[CloudObject] returns information about a generator.\nDocumentGeneratorIn"},{label:"DocumentGeneratorInformationData",type:"keyword",info:"System`DocumentGeneratorInformationData"},{label:"DocumentGenerators",type:"keyword",info:"DocumentGenerators[] returns a list of the user's document generators, as cloud objects."},{label:"DocumentNotebook",type:"keyword",info:"DocumentNotebook[{cell , cell , \xe2\x80\xa6}] represents a complete document notebook in the Wolfram System fr"},{label:"DocumentWeightingRules",type:"keyword",info:"DocumentWeightingRules is an option for TextSearch and related functions that allows the specificati"},{label:"Dodecahedron",type:"keyword",info:"Dodecahedron[] represents a regular dodecahedron centered at the origin with unit edge length.Dodeca"},{label:"DomainRegistrationInformation",type:"keyword",info:"System`DomainRegistrationInformation"},{label:"DominantColors",type:"keyword",info:"DominantColors[image] returns dominant colors in image.DominantColors[image, n] returns at most n do"},{label:"DominatorTreeGraph",type:"keyword",info:"DominatorTreeGraph[g, v] gives the dominator tree of the directed graph g from the root vertex v."},{label:"DominatorVertexList",type:"keyword",info:"DominatorVertexList[g, v] gives the list of immediate dominators of the directed graph g from the ro"},{label:"DOSTextFormat",type:"keyword",info:"DOSTextFormat is an option for OpenRead, OpenWrite, and OpenAppend that specifies whether files shou"},{label:"Dot",type:"keyword",info:"a . b . c or Dot[a, b, c] gives products of vectors, matrices, and tensors. "},{label:"DotDashed",type:"keyword",info:"DotDashed is a graphics directive specifying that lines that follow should be drawn dot-dashed."},{label:"DotEqual",type:"keyword",info:"DotEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x89\x90 y \xe2\x89\x90 \xe2\x80\xa6."},{label:"DotLayer",type:"keyword",info:"DotLayer[] represents a net layer that takes the dot product of two or more arrays.DotLayer[{spec , "},{label:"DotPlusLayer",type:"keyword",info:"DotPlusLayer[n] is equivalent to LinearLayer[n] and should no longer be used. "},{label:"Dotted",type:"keyword",info:"Dotted is a graphics directive specifying that lines that follow should be drawn dotted."},{label:"DoubleBracketingBar",type:"keyword",info:"DoubleBracketingBar[x, y, \xe2\x80\xa6] displays as \xef\x98\x85 x, y, \xe2\x80\xa6 \xef\x98\x86."},{label:"DoubleContourIntegral",type:"keyword",info:"System`DoubleContourIntegral"},{label:"DoubleDownArrow",type:"keyword",info:"DoubleDownArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x87\x93 y\xe2\x80\xa6."},{label:"DoubleLeftArrow",type:"keyword",info:"DoubleLeftArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x87\x90 y \xe2\x87\x90 \xe2\x80\xa6."},{label:"DoubleLeftRightArrow",type:"keyword",info:"DoubleLeftRightArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x87\x94 y \xe2\x87\x94 \xe2\x80\xa6."},{label:"DoubleLeftTee",type:"keyword",info:"DoubleLeftTee[x, y] displays as x \xe2\xab\xa4 y."},{label:"DoubleLongLeftArrow",type:"keyword",info:"DoubleLongLeftArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x9f\xb8 y \xe2\x9f\xb8 \xe2\x80\xa6."},{label:"DoubleLongLeftRightArrow",type:"keyword",info:"DoubleLongLeftRightArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x9f\xba y \xe2\x9f\xba \xe2\x80\xa6."},{label:"DoubleLongRightArrow",type:"keyword",info:"DoubleLongRightArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x9f\xb9 y \xe2\x9f\xb9 \xe2\x80\xa6."},{label:"DoubleRightArrow",type:"keyword",info:"DoubleRightArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x87\x92 y \xe2\x87\x92 \xe2\x80\xa6."},{label:"DoubleRightTee",type:"keyword",info:"DoubleRightTee[x, y] displays as x \xe2\x8a\xa8 y."},{label:"DoubleUpArrow",type:"keyword",info:"DoubleUpArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x87\x91 y \xe2\x87\x91 \xe2\x80\xa6."},{label:"DoubleUpDownArrow",type:"keyword",info:"DoubleUpDownArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x87\x95 y \xe2\x87\x95 \xe2\x80\xa6."},{label:"DoubleVerticalBar",type:"keyword",info:"DoubleVerticalBar[x, y, \xe2\x80\xa6] displays as x \xe2\x88\xa5 y \xe2\x88\xa5 \xe2\x80\xa6."},{label:"DoublyInfinite",type:"keyword",info:"DoublyInfinite is an option for LerchPhi. With DoublyInfinite -> True, the summation is taken from -"},{label:"Down",type:"keyword",info:"System`Down"},{label:"DownArrow",type:"keyword",info:"DownArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x86\x93 y \xe2\x86\x93 \xe2\x80\xa6."},{label:"DownArrowBar",type:"keyword",info:"DownArrowBar[x, y, \xe2\x80\xa6] displays as x \xe2\xa4\x93 y \xe2\xa4\x93 \xe2\x80\xa6."},{label:"DownArrowUpArrow",type:"keyword",info:"DownArrowUpArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x87\\[Micro] y \xe2\x87\\[Micro] \xe2\x80\xa6."},{label:"DownLeftRightVector",type:"keyword",info:"DownLeftRightVector[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\x90 y \xe2\xa5\x90 \xe2\x80\xa6."},{label:"DownLeftTeeVector",type:"keyword",info:"DownLeftTeeVector[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\x9e y \xe2\xa5\x9e \xe2\x80\xa6."},{label:"DownLeftVector",type:"keyword",info:"DownLeftVector[x, y, \xe2\x80\xa6] displays as x \xe2\x86\xbd y \xe2\x86\xbd \xe2\x80\xa6."},{label:"DownLeftVectorBar",type:"keyword",info:"DownLeftVectorBar[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\x96 y \xe2\xa5\x96 \xe2\x80\xa6."},{label:"DownRightTeeVector",type:"keyword",info:"DownRightTeeVector[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\x9f y \xe2\xa5\x9f \xe2\x80\xa6."},{label:"DownRightVector",type:"keyword",info:"DownRightVector[x, y, \xe2\x80\xa6] displays as x \xe2\x87\x81 y \xe2\x87\x81 \xe2\x80\xa6."},{label:"DownRightVectorBar",type:"keyword",info:"DownRightVectorBar[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\x97 y \xe2\xa5\x97 \xe2\x80\xa6."},{label:"Downsample",type:"keyword",info:"                                                                                    th\nDownsample[ar"},{label:"DownTee",type:"keyword",info:"DownTee[x, y] displays as x \xe2\x8a\xa4 y."},{label:"DownTeeArrow",type:"keyword",info:"DownTeeArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x86\xa7 y \xe2\x86\xa7 \xe2\x80\xa6."},{label:"DownValues",type:"keyword",info:"DownValues[f] gives a list of transformation rules corresponding to all downvalues (values for f[\xe2\x80\xa6])"},{label:"DragAndDrop",type:"keyword",info:"DragAndDrop is a global front end option that specifies whether to allow drag\xe2\x80\x90and\xe2\x80\x90drop editing. "},{label:"DrawBackFaces",type:"keyword",info:"System`DrawBackFaces"},{label:"DrawEdges",type:"keyword",info:"System`DrawEdges"},{label:"DrawFrontFaces",type:"keyword",info:"System`DrawFrontFaces"},{label:"DrawHighlighted",type:"keyword",info:"System`DrawHighlighted"},{label:"DrazinInverse",type:"keyword",info:"                                                       D\nDrazinInverse[m] finds the Drazin generaliz"},{label:"Drop",type:"keyword",info:"                                                                                                    "},{label:"DropoutLayer",type:"keyword",info:"DropoutLayer[] represents a net layer that sets its input elements to zero with probability 0.5 duri"},{label:"DSolve",type:"keyword",info:"DSolve[eqn, u, x] solves a differential equation for the function u, with independent variable\xc2\xa0x. DS"},{label:"DSolveValue",type:"keyword",info:"DSolveValue[eqn, expr, x] gives the value of expr determined by a symbolic solution to the ordinary "},{label:"Dt",type:"keyword",info:"                                                                                                    "},{label:"DualLinearProgramming",type:"keyword",info:"System`DualLinearProgramming"},{label:"DualPlanarGraph",type:"keyword",info:"DualPlanarGraph[g] gives the dual of the planar graph g."},{label:"DualPolyhedron",type:"keyword",info:"DualPolyhedron[poly] gives the dual polyhedron of the polyhedron poly."},{label:"DualSystemsModel",type:"keyword",info:"DualSystemsModel[ssm] gives the dual of the state-space model ssm. "},{label:"DumpGet",type:"keyword",info:'DumpGet[ "filename"] reads in a file saved with DumpSave.'},{label:"DumpSave",type:"keyword",info:'DumpSave["file.mx", symbol] writes definitions associated with a symbol to a file in internal Wolfra'},{label:"DuplicateFreeQ",type:"keyword",info:"DuplicateFreeQ[list] gives True if list has no duplicates, and False otherwise.DuplicateFreeQ[list, "},{label:"Duration",type:"keyword",info:"Duration[expr] returns the duration of expr."},{label:"Dynamic",type:"keyword",info:"Dynamic[expr] represents an object that displays as the dynamically updated current value of expr. I"},{label:"DynamicBox",type:"keyword",info:"System`DynamicBox"},{label:"DynamicBoxOptions",type:"keyword",info:"DynamicBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for DynamicBo"},{label:"DynamicEvaluationTimeout",type:"keyword",info:"DynamicEvaluationTimeout is an option for displayed objects, cells, and notebooks that specifies the"},{label:"DynamicGeoGraphics",type:"keyword",info:"DynamicGeoGraphics[primitives, options] represents a dynamic, interactive, two-dimensional geographi"},{label:"DynamicImage",type:"keyword",info:"DynamicImage[image] displays a dynamic version of image, supporting panning, zooming, etc.DynamicIma"},{label:"DynamicLocation",type:"keyword",info:"System`DynamicLocation"},{label:"DynamicModule",type:"keyword",info:"DynamicModule[{x, y, \xe2\x80\xa6}, expr] represents an object which maintains the same local instance of the s"},{label:"DynamicModuleBox",type:"keyword",info:"System`DynamicModuleBox"},{label:"DynamicModuleBoxOptions",type:"keyword",info:"DynamicModuleBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Dyn"},{label:"DynamicModuleParent",type:"keyword",info:"System`DynamicModuleParent"},{label:"DynamicModuleValues",type:"keyword",info:"DynamicModuleValues is an option for DynamicModule that stores downvalues of local symbols."},{label:"DynamicName",type:"keyword",info:"System`DynamicName"},{label:"DynamicNamespace",type:"keyword",info:"System`DynamicNamespace"},{label:"DynamicReference",type:"keyword",info:"System`DynamicReference"},{label:"DynamicSetting",type:"keyword",info:"DynamicSetting[e] represents an object which displays as e, but is interpreted as the dynamically up"},{label:"DynamicUpdating",type:"keyword",info:"DynamicUpdating is an option for displayed objects, cells and notebooks that specifies whether dynam"},{label:"DynamicWrapper",type:"keyword",info:"DynamicWrapper[e, expr] represents an object that displays as e, but dynamically updates the express"},{label:"DynamicWrapperBox",type:"keyword",info:"System`DynamicWrapperBox"},{label:"DynamicWrapperBoxOptions",type:"keyword",info:"DynamicWrapperBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Dy"},{label:"DEC",type:"keyword",info:"System`DEC"},{label:"E",type:"keyword",info:"E is the exponential constant \xef\x9d\x8d (base of natural logarithms), with numerical value \xe2\x89\x83 2.71828."},{label:"EarthImpactData",type:"keyword",info:"EarthImpactData[entity, property] gives the value of the specified property for the earth impact cra"},{label:"EarthquakeData",type:"keyword",info:"EarthquakeData[loc] gives all earthquake properties for the location corresponding to loc.Earthquake"},{label:"EccentricityCentrality",type:"keyword",info:"EccentricityCentrality[g] gives a list of eccentricity centralities for the vertices in the graph g."},{label:"Echo",type:"keyword",info:"Echo[expr] prints expr and returns expr.Echo[expr, label] prints expr prepending label and returns e"},{label:"EchoEvaluation",type:"keyword",info:"EchoEvaluation[expr] prints expr before evaluation, then prints the result after evaluation and retu"},{label:"EchoFunction",type:"keyword",info:"EchoFunction[f][expr] prints f[expr] and returns expr.EchoFunction[label, f][expr] prints f[expr] pr"},{label:"EchoLabel",type:"keyword",info:"EchoLabel[label][expr] prints expr prepending label and returns expr."},{label:"EchoTiming",type:"keyword",info:"EchoTiming[expr] evaluates expr, prints the time in seconds used and returns the result of the evalu"},{label:"EclipseType",type:"keyword",info:"EclipseType is an option for SolarEclipse and LunarEclipse that specifies the type of eclipse being "},{label:"EdgeAdd",type:"keyword",info:"EdgeAdd[g, e] makes a graph by adding the edge e to the graph g.EdgeAdd[g, {e , e , \xe2\x80\xa6}] adds a colle"},{label:"EdgeBetweennessCentrality",type:"keyword",info:"EdgeBetweennessCentrality[g] gives a list of betweenness centralities for the edges in the graph g.E"},{label:"EdgeCapacity",type:"keyword",info:"EdgeCapacity is an option and annotation for Graph and related functions that specifies an edge capa"},{label:"EdgeCapForm",type:"keyword",info:"System`EdgeCapForm"},{label:"EdgeChromaticNumber",type:"keyword",info:"EdgeChromaticNumber[g] gives the chromatic number for the edges of the graph g."},{label:"EdgeColor",type:"keyword",info:"System`EdgeColor"},{label:"EdgeConnectivity",type:"keyword",info:"EdgeConnectivity[g] gives the edge connectivity of the graph g.EdgeConnectivity[g, s, t] gives the s"},{label:"EdgeContract",type:"keyword",info:"EdgeContract[g, e] contracts the edge e of the graph g.EdgeContract[g, {e , e , \xe2\x80\xa6}] contracts a coll"},{label:"EdgeCost",type:"keyword",info:"EdgeCost is an option and annotation for Graph and related functions that specifies an edge cost."},{label:"EdgeCount",type:"keyword",info:"EdgeCount[g] gives a count of the number of edges in the graph g.EdgeCount[g, patt] gives a count of"},{label:"EdgeCoverQ",type:"keyword",info:"EdgeCoverQ[g, elist] yields True if the edge list elist is an edge cover of the graph g and False ot"},{label:"EdgeCycleMatrix",type:"keyword",info:"EdgeCycleMatrix[g] gives the edge cycle matrix of a graph g.EdgeCycleMatrix[{v \xef\x94\xa2 w, \xe2\x80\xa6}] uses rules v"},{label:"EdgeDashing",type:"keyword",info:"System`EdgeDashing"},{label:"EdgeDelete",type:"keyword",info:"EdgeDelete[g, e] makes a graph by deleting the edge e from the graph g.EdgeDelete[g, {e , e , \xe2\x80\xa6}] de"},{label:"EdgeDetect",type:"keyword",info:"EdgeDetect[image] finds edges in image and returns the result as a binary image.EdgeDetect[image, r]"},{label:"EdgeForm",type:"keyword",info:"EdgeForm[g] is a graphics directive that specifies that edges of polygons and other filled graphics "},{label:"EdgeIndex",type:"keyword",info:"EdgeIndex[g, e] gives the integer index for the edge e in the graph g.EdgeIndex[{v \xef\x94\xa2 w, \xe2\x80\xa6}, \xe2\x80\xa6] uses "},{label:"EdgeJoinForm",type:"keyword",info:"System`EdgeJoinForm"},{label:"EdgeLabeling",type:"keyword",info:"EdgeLabeling is an option for GraphPlot and related functions that specifies whether labeling specif"},{label:"EdgeLabels",type:"keyword",info:"EdgeLabels is an option and annotation for Graph and related functions that specifies what labels an"},{label:"EdgeLabelStyle",type:"keyword",info:"EdgeLabelStyle is an option and property for Graph and related functions that specifies the style to"},{label:"EdgeList",type:"keyword",info:"EdgeList[g] gives the list of edges for the graph g.EdgeList[g, patt] gives a list of edges that mat"},{label:"EdgeOpacity",type:"keyword",info:"System`EdgeOpacity"},{label:"EdgeQ",type:"keyword",info:"EdgeQ[g, e] yields True if e is an edge in the graph g and False otherwise."},{label:"EdgeRenderingFunction",type:"keyword",info:"EdgeRenderingFunction is an option for GraphPlot and related functions that gives a function to gene"},{label:"EdgeRules",type:"keyword",info:"EdgeRules[g] gives the list of edge rules for the graph g.EdgeRules[{v \xef\x94\xa2 w, \xe2\x80\xa6}] uses rules v \xef\x94\xa2 w to "},{label:"EdgeShapeFunction",type:"keyword",info:"EdgeShapeFunction is an option and annotation for Graph and related functions that specifies a funct"},{label:"EdgeStyle",type:"keyword",info:"EdgeStyle is an option and annotation for Graph and related functions that specifies what style to u"},{label:"EdgeTaggedGraph",type:"keyword",info:"EdgeTaggedGraph[{e , e , \xe2\x80\xa6}] yields a graph with edges e  tagged with unique tags.EdgeTaggedGraph[{e"},{label:"EdgeTaggedGraphQ",type:"keyword",info:"EdgeTaggedGraphQ[g] yields True if the graph g has edges tagged and False otherwise."},{label:"EdgeTags",type:"keyword",info:"EdgeTags[g] gives the list of tags for all edges in the graph g.EdgeTags[g, {u, v}] gives the list o"},{label:"EdgeThickness",type:"keyword",info:"System`EdgeThickness"},{label:"EdgeTransitiveGraphQ",type:"keyword",info:"EdgeTransitiveGraphQ[g] yields True if the graph g is a edge-transitive graph and False otherwise."},{label:"EdgeValueRange",type:"keyword",info:"EdgeValueRange is an option for GeoGraphValuePlot that specifies the range of edge values to include"},{label:"EdgeValueSizes",type:"keyword",info:"EdgeValueSizes is an option for GeoGraphValuePlot that specifies the thicknesses used to show edge v"},{label:"EdgeWeight",type:"keyword",info:"EdgeWeight is an option and annotation for Graph and related functions that specifies an edge weight"},{label:"EdgeWeightedGraphQ",type:"keyword",info:"EdgeWeightedGraphQ[g] yields True if the graph g is an edge-weighted graph and False otherwise."},{label:"Editable",type:"keyword",info:"Editable is an option for displayed objects, cells, and notebooks that specifies whether their conte"},{label:"EditButtonSettings",type:"keyword",info:"System`EditButtonSettings"},{label:"EditCellTagsSettings",type:"keyword",info:"EditCellTagsSettings is a global option that specifies settings for the Edit Cell Tags dialog box."},{label:"EditDistance",type:"keyword",info:"EditDistance[u, v] gives the edit or Levenshtein distance between strings or vectors u and v.EditDis"},{label:"EffectiveInterest",type:"keyword",info:"EffectiveInterest[r, q] gives the effective interest rate corresponding to interest specification r,"},{label:"Eigensystem",type:"keyword",info:"Eigensystem[m] gives a list {values, vectors} of the eigenvalues and eigenvectors of the square matr"},{label:"Eigenvalues",type:"keyword",info:"Eigenvalues[m] gives a list of the eigenvalues of the square matrix m. Eigenvalues[{m, a}] gives the"},{label:"EigenvectorCentrality",type:"keyword",info:"EigenvectorCentrality[g] gives a list of eigenvector centralities for the vertices in the graph g.Ei"},{label:"Eigenvectors",type:"keyword",info:"Eigenvectors[m] gives a list of the eigenvectors of the square matrix m. Eigenvectors[{m, a}] gives "},{label:"Element",type:"keyword",info:"Element[x, dom] or x \xe2\x88\x88 dom asserts that x is an element of the domain dom. Element[x, reg] or x \xe2\x88\x88 re"},{label:"ElementData",type:"keyword",info:"                                                                                                    "},{label:"ElementwiseLayer",type:"keyword",info:"ElementwiseLayer[f] represents a net layer that applies a unary function f to every element of the i"},{label:"ElidedForms",type:"keyword",info:"ElidedForms is an option to TextString and related functions that specifies which expressions should"},{label:"Eliminate",type:"keyword",info:"Eliminate[eqns, vars] eliminates variables between a set of simultaneous equations. "},{label:"EliminationOrder",type:"keyword",info:"System`EliminationOrder"},{label:"Ellipsoid",type:"keyword",info:"Ellipsoid[p, {r , \xe2\x80\xa6}] represents an axis-aligned ellipsoid centered at the point p and with semiaxes"},{label:"EllipticE",type:"keyword",info:"EllipticE[m] gives the complete elliptic integral E(m). EllipticE[\xcf\x95, m] gives the elliptic integral "},{label:"EllipticExp",type:"keyword",info:"EllipticExp[u, {a, b}] is the inverse for EllipticLog. It produces a list {x, y} such that u == Elli"},{label:"EllipticExpPrime",type:"keyword",info:"EllipticExpPrime[u, {a, b}] gives the derivative of EllipticExp[u, {a, b}] with respect to u."},{label:"EllipticF",type:"keyword",info:"EllipticF[\xcf\x95, m] gives the elliptic integral of the first kind F(\xcf\x95 \xef\x90.b2 m). "},{label:"EllipticFilterModel",type:"keyword",info:"EllipticFilterModel[n] designs a lowpass elliptic filter of order n.EllipticFilterModel[{n, \xcf\x89 }] use"},{label:"EllipticK",type:"keyword",info:"EllipticK[m] gives the complete elliptic integral of the first kind K(m). "},{label:"EllipticLog",type:"keyword",info:"                                                                                                2   "},{label:"EllipticNomeQ",type:"keyword",info:"EllipticNomeQ[m] gives the nome q corresponding to the parameter m in an elliptic function. "},{label:"EllipticPi",type:"keyword",info:"EllipticPi[n, m] gives the complete elliptic integral of the third kind \xce\xa0 (n \xef\x90.b2 m). EllipticPi[n, \xcf\x95, "},{label:"EllipticReducedHalfPeriods",type:"keyword",info:"EllipticReducedHalfPeriods[{u, v}] gives a reduced pair of half periods {w, w '} corresponding to th"},{label:"EllipticTheta",type:"keyword",info:"EllipticTheta[a, u, q] gives the theta function \xcf\x91 (u, q) (a = 1, \xe2\x80\xa6, 4).EllipticTheta[a, q] gives the"},{label:"EllipticThetaPrime",type:"keyword",info:"                                                                                                    "},{label:"EmbedCode",type:"keyword",info:'EmbedCode[obj] generates the code necessary to embed the object obj on a webpage.EmbedCode[obj, "des'},{label:"EmbeddedHTML",type:"keyword",info:'EmbeddedHTML["string"] is an object that formats as a web frame containing the HTML content "string"'},{label:"EmbeddedService",type:"keyword",info:"EmbeddedService[service] is an object that formats as a web frame containing content from the specif"},{label:"EmbeddedSQLEntityClass",type:"keyword",info:"EmbeddedSQLEntityClass[string, props] represents a verbatim SQL query to be interpreted as an entity"},{label:"EmbeddedSQLExpression",type:"keyword",info:"EmbeddedSQLExpression[string] represents an SQL expression to be evaluated verbatim within an Entity"},{label:"EmbeddingLayer",type:"keyword",info:"EmbeddingLayer[size, n] represents a trainable net layer that embeds integers between 1 and n into a"},{label:"EmbeddingObject",type:"keyword",info:"System`EmbeddingObject"},{label:"EmitSound",type:"keyword",info:"EmitSound[snd] emits the sound snd when evaluated. EmitSound[{snd , snd , \xe2\x80\xa6}] emits each of the soun"},{label:"EmphasizeSyntaxErrors",type:"keyword",info:"System`EmphasizeSyntaxErrors"},{label:"EmpiricalDistribution",type:"keyword",info:"EmpiricalDistribution[{x , x , \xe2\x80\xa6}] represents an empirical distribution based on the data values x ."},{label:"Empty",type:"keyword",info:"System`Empty"},{label:"EmptyGraphQ",type:"keyword",info:"EmptyGraphQ[g] yields True if g is an empty graph and False otherwise."},{label:"EmptyRegion",type:"keyword",info:"                                               n\nEmptyRegion[n] represents the empty subset of \xef\x9e\\[Micro] . "},{label:"EmptySpaceF",type:"keyword",info:"EmptySpaceF[pdata, r] estimates the empty space function F(r) for point data pdata at radius r.Empty"},{label:"EnableConsolePrintPacket",type:"keyword",info:"System`EnableConsolePrintPacket"},{label:"Enabled",type:"keyword",info:"Enabled is an option for objects such as Slider that specifies whether the objects should be enabled"},{label:"Enclose",type:"keyword",info:"Enclose[expr] attempts to evaluate expr and return the result, but stops if it catches an error and "},{label:"Encode",type:"keyword",info:'Encode["source", "dest"] writes an encoded version of the file source to the file dest. << dest deco'},{label:"Encrypt",type:"keyword",info:'Encrypt["password", expr] encrypts expr using the specified password, to give an encrypted object.En'},{label:"EncryptedObject",type:"keyword",info:"EncryptedObject[assoc] represents encrypted data generated by Encrypt."},{label:"EncryptFile",type:"keyword",info:'EncryptFile["password", file] generates an encrypted version of a file, using the specified password'},{label:"End",type:"keyword",info:"End[] returns the present context, and reverts to the previous one. "},{label:"EndAdd",type:"keyword",info:"EndAdd[ ] returns the present context, and reverts to the previous one, prepending the present conte"},{label:"EndDialogPacket",type:"keyword",info:"EndDialogPacket[integer] is a WSTP packet indicating the end of the Dialog subsession referenced by "},{label:"EndOfBuffer",type:"keyword",info:"EndOfBuffer is a symbol that represents the end of currently available data in the buffer for a proc"},{label:"EndOfFile",type:"keyword",info:"EndOfFile is a symbol returned by Read when it reaches the end of a file. "},{label:"EndOfLine",type:"keyword",info:"EndOfLine represents the end of a line in a string for purposes of matching in StringExpression."},{label:"EndOfString",type:"keyword",info:"EndOfString represents the end of a string for purposes of matching in StringExpression."},{label:"EndPackage",type:"keyword",info:"EndPackage[] restores ECContext and ECContextPath to their values before the preceding BeginPackage, a"},{label:"EngineEnvironment",type:"keyword",info:"System`EngineEnvironment"},{label:"EngineeringForm",type:"keyword",info:"EngineeringForm[expr] prints with all real numbers in expr given in engineering notation. Engineerin"},{label:"Enter",type:"keyword",info:"System`Enter"},{label:"EnterExpressionPacket",type:"keyword",info:"EnterExpressionPacket[expr] is a WSTP packet that requests the evaluation of expr."},{label:"EnterTextPacket",type:"keyword",info:"EnterTextPacket[string] is a WSTP packet that requests the parsing and evaluation of string as an ex"},{label:"Entity",type:"keyword",info:'Entity["type", name] represents an entity of the specified type, identified by name.Entity[cspec, na'},{label:"EntityClass",type:"keyword",info:'EntityClass["type", name] represents a class of entities of the specified type identified by name.En'},{label:"EntityClassList",type:"keyword",info:'EntityClassList["type"] gives a list of entity classes for the specified type of entity.'},{label:"EntityCopies",type:"keyword",info:"EntityCopies[entity, n] represents n copies of entity."},{label:"EntityFunction",type:"keyword",info:"EntityFunction[x, body] is a function with a single formal parameter x, to be used in EntityValue an"},{label:"EntityGroup",type:"keyword",info:"EntityGroup[{entity , entity , \xe2\x80\xa6}] represents a group of entities.\n                   1        2"},{label:"EntityInstance",type:"keyword",info:"EntityInstance[entity, qual \xef\x94\xa2 val] represents an entity whose qualifier qual has value val.EntityIns"},{label:"EntityList",type:"keyword",info:'EntityList[class] gives a list of entities in the specified entity class. EntityList["type"] gives a'},{label:"EntityPrefetch",type:"keyword",info:'EntityPrefetch["type"] fetches cacheable values associated with all entities of the specified type.E'},{label:"EntityProperties",type:"keyword",info:"EntityProperties[type] lists properties associated with entity type type."},{label:"EntityProperty",type:"keyword",info:"EntityProperty[type, pname] represents a property identified by pname for use in EntityValue.EntityP"},{label:"EntityPropertyClass",type:"keyword",info:"EntityPropertyClass[type, pcname] represents a class of properties identified by the name pcname."},{label:"EntityRegister",type:"keyword",info:"EntityRegister[estore] registers the entities in the entity store estore so that they can be accesse"},{label:"EntityStore",type:"keyword",info:'EntityStore["type"] represents an empty entity store for entities of type "type".EntityStore["type" '},{label:"EntityStores",type:"keyword",info:"EntityStores[] gives a list of all registered entity stores that are accessed when Entity is used."},{label:"EntityTypeName",type:"keyword",info:"EntityTypeName[entity] gives the name of the entity type of entity.EntityTypeName[{entity , \xe2\x80\xa6, entit"},{label:"EntityUnregister",type:"keyword",info:'EntityUnregister["type"] unregisters all entities in the first entity store that defines entities of'},{label:"EntityValue",type:"keyword",info:"EntityValue[entity, property] gives the value of the specified property for the given entity.EntityV"},{label:"Entropy",type:"keyword",info:"Entropy[list] gives the base \xef\x9d\x8d information entropy of the values in list.Entropy[k, list] gives the "},{label:"EntropyFilter",type:"keyword",info:"                                                                                                    "},{label:"Environment",type:"keyword",info:'Environment["var"] gives the value of an operating system environment variable. '},{label:"Epilog",type:"keyword",info:"Epilog is an option for graphics functions that gives a list of graphics primitives to be rendered a"},{label:"EpilogFunction",type:"keyword",info:"EpilogFunction is an option for DocumentGenerator allowing arbitrary code to be executed after a doc"},{label:"Equal",type:"keyword",info:"lhs == rhs returns True if lhs and rhs are identical. "},{label:"EqualColumns",type:"keyword",info:"EqualColumns is an option to GridBox which specifies whether the size of the columns are all set to "},{label:"EqualRows",type:"keyword",info:"EqualRows is an option to GridBox which specifies whether the size of the rows are all set to the si"},{label:"EqualTilde",type:"keyword",info:"EqualTilde[x, y, \xe2\x80\xa6] displays as x \xe2\x89\x82 y \xe2\x89\x82 \xe2\x80\xa6."},{label:"EqualTo",type:"keyword",info:"EqualTo[y] is an operator form that yields x == y when applied to an expression x. "},{label:"EquatedTo",type:"keyword",info:"EquatedTo is an option for Roots, which specifies an expression to use in place of the variable in t"},{label:"Equilibrium",type:"keyword",info:"Equilibrium[x, y, \xe2\x80\xa6] displays as x \xe2\x87\x8c y \xe2\x87\x8c \xe2\x80\xa6."},{label:"EquirippleFilterKernel",type:"keyword",info:"EquirippleFilterKernel[{{{\xcf\x89  , \xcf\x89  }, {\xcf\x89  , \xcf\x89  }, \xe2\x80\xa6}, {a , a , \xe2\x80\xa6}}, n] creates a finite impulse respo"},{label:"Equivalent",type:"keyword",info:"Equivalent[e , e , \xe2\x80\xa6] represents the logical equivalence e  \xe2\x87\x94 e  \xe2\x87\x94 \xe2\x80\xa6, giving True when all of the e "},{label:"Erf",type:"keyword",info:"Erf[z] gives the error function erf(z). Erf[z , z ] gives the generalized error function erf(z ) - e"},{label:"Erfc",type:"keyword",info:"Erfc[z] gives the complementary error function erfc(z). "},{label:"Erfi",type:"keyword",info:"Erfi[z] gives the imaginary error function erf(i\xef\x8d\xa0z)/i. "},{label:"ErlangB",type:"keyword",info:"ErlangB[c, a] computes the Erlang B loss probability for an M/M/c/c queue."},{label:"ErlangC",type:"keyword",info:"ErlangC[c, a] computes the Erlang C probability for nonzero waiting time in an M/M/c queue."},{label:"ErlangDistribution",type:"keyword",info:"ErlangDistribution[k, \xce\xbb] represents the Erlang distribution with shape parameter k and rate \xce\xbb."},{label:"Erosion",type:"keyword",info:"Erosion[image, ker] gives the morphological erosion of image with respect to the structuring element"},{label:"ErrorBox",type:"keyword",info:"ErrorBox[boxes] is a low-level box construct that represents boxes that cannot be interpreted in inp"},{label:"ErrorBoxOptions",type:"keyword",info:"System`ErrorBoxOptions"},{label:"ErrorNorm",type:"keyword",info:"System`ErrorNorm"},{label:"ErrorPacket",type:"keyword",info:"System`ErrorPacket"},{label:"ErrorsDialogSettings",type:"keyword",info:"System`ErrorsDialogSettings"},{label:"EscapeRadius",type:"keyword",info:"EscapeRadius is an option to MandelbrotSetPlot that specifies the criterion to use to decide that a "},{label:"EstimatedBackground",type:"keyword",info:"EstimatedBackground[data] estimates the background of data.EstimatedBackground[data, \xcf\x83] tries to pre"},{label:"EstimatedDistribution",type:"keyword",info:"EstimatedDistribution[data, dist] estimates the parametric distribution dist from data.EstimatedDist"},{label:"EstimatedPointProcess",type:"keyword",info:"EstimatedPointProcess[pdata, pproc] estimates the parametric point process pproc from point data pda"},{label:"EstimatedProcess",type:"keyword",info:"EstimatedProcess[data, proc] estimates the parametric process proc from data.EstimatedProcess[data, "},{label:"EstimatedVariogramModel",type:"keyword",info:"EstimatedVariogramModel[{loc  \xef\x94\xa2 val , loc  \xef\x94\xa2 val , \xe2\x80\xa6}] estimates the best variogram function from va"},{label:"EstimatorGains",type:"keyword",info:"EstimatorGains[ssm, {p , p , \xe2\x80\xa6, p }] gives the estimator gain matrix for the StateSpaceModel ssm, su"},{label:"EstimatorRegulator",type:"keyword",info:"EstimatorRegulator[sspec, {l, \xce\xba}] gives the output feedback controller with estimator and regulator "},{label:"EuclideanDistance",type:"keyword",info:"EuclideanDistance[u, v] gives the Euclidean distance between vectors u and v."},{label:"EulerAngles",type:"keyword",info:"EulerAngles[r] gives Euler angles {\xce\\[PlusMinus], \xce.b2, \xce.b3} corresponding to the rotation matrix r.EulerAngles[r, {a"},{label:"EulerCharacteristic",type:"keyword",info:"EulerCharacteristic[poly] gives the Euler characteristic of a poly."},{label:"EulerE",type:"keyword",info:"EulerE[n] gives the Euler number E . EulerE[n, x] gives the Euler polynomial E (x). \n               "},{label:"EulerGamma",type:"keyword",info:"EulerGamma is Euler\xe2\x80\x99s constant \xce.b3, with numerical value \xe2\x89\x83 0.577216. "},{label:"EulerianGraphQ",type:"keyword",info:"EulerianGraphQ[g] yields True if the graph g is Eulerian, and False otherwise."},{label:"EulerMatrix",type:"keyword",info:"EulerMatrix[{\xce\\[PlusMinus], \xce.b2, \xce.b3}] gives the Euler 3D rotation matrix formed by rotating by \xce\\[PlusMinus] around the current"},{label:"EulerPhi",type:"keyword",info:"EulerPhi[n] gives the Euler totient function \xcf\x95(n). "},{label:"Evaluatable",type:"keyword",info:"Evaluatable is an option for Cell that specifies whether a cell should be used as input to be evalua"},{label:"Evaluate",type:"keyword",info:"Evaluate[expr] causes expr to be evaluated even if it appears as the argument of a function whose at"},{label:"Evaluated",type:"keyword",info:"System`Evaluated"},{label:"EvaluatePacket",type:"keyword",info:"EvaluatePacket[expr] is a WSTP packet requesting evaluation of expr."},{label:"EvaluateScheduledTask",type:"keyword",info:"EvaluateScheduledTask[expr] triggers immediate local execution of the specified task object."},{label:"EvaluationBox",type:"keyword",info:"EvaluationBox[] returns a BoxObject corresponding to the box structure in which this function is bei"},{label:"EvaluationCell",type:"keyword",info:"EvaluationCell[] returns a CellObject corresponding to the cell in which this function is being eval"},{label:"EvaluationCompletionAction",type:"keyword",info:"EvaluationCompletionAction is an option for notebooks that specifies the action taken when an evalua"},{label:"EvaluationData",type:"keyword",info:"EvaluationData[expr] gives an association containing the result of evaluating expr and metadata abou"},{label:"EvaluationElements",type:"keyword",info:"EvaluationElements is an option for NotebookEvaluate that determines which cells to evaluate."},{label:"EvaluationEnvironment",type:"keyword",info:"EvaluationEnvironment is an option for functions such as InitializationValue and InitializationObjec"},{label:"EvaluationMode",type:"keyword",info:"System`EvaluationMode"},{label:"EvaluationMonitor",type:"keyword",info:"EvaluationMonitor is an option for various numerical computation and plotting functions that gives a"},{label:"EvaluationNotebook",type:"keyword",info:"EvaluationNotebook[] gives the notebook in which this function is being evaluated. "},{label:"EvaluationObject",type:"keyword",info:"EvaluationObject[n, expr, \xe2\x80\xa6] represents an expression submitted for evaluation on any available para"},{label:"EvaluationOrder",type:"keyword",info:"System`EvaluationOrder"},{label:"EvaluationPrivileges",type:"keyword",info:"EvaluationPrivileges is an option for CloudObject and related cloud functions that specifies what ot"},{label:"EvaluationRateLimit",type:"keyword",info:"System`EvaluationRateLimit"},{label:"Evaluator",type:"keyword",info:"Evaluator is an option for objects such as Button, Dynamic, and Cell that gives the name of the kern"},{label:"EvaluatorNames",type:"keyword",info:"EvaluatorNames is a global option that specifies the kernels that are currently configured to perfor"},{label:"EvenQ",type:"keyword",info:"EvenQ[expr] gives True if expr is an even integer, and False otherwise. "},{label:"EventData",type:"keyword",info:"EventData[{e , e , \xe2\x80\xa6}] represents event data with explicitly specified censoring e .EventData[{e , e"},{label:"EventEvaluator",type:"keyword",info:"System`EventEvaluator"},{label:"EventHandler",type:"keyword",info:"EventHandler[expr, {event  :> action , event  :> action , \xe2\x80\xa6}] displays as expr, evaluating action  w"},{label:"EventHandlerTag",type:"keyword",info:"System`EventHandlerTag"},{label:"EventLabels",type:"keyword",info:"EventLabels is an option to CandlestickChart, KagiChart, and similar functions that specifies events"},{label:"EventSeries",type:"keyword",info:"EventSeries[{{t , v }, {t , v } \xe2\x80\xa6}] represents a series of events given as time-value pairs {t , v }"},{label:"ExactBlackmanWindow",type:"keyword",info:"ExactBlackmanWindow[x] represents an exact Blackman window function of x."},{label:"ExactNumberQ",type:"keyword",info:"ExactNumberQ[expr] returns True if expr is an exact real or complex number, and returns False otherw"},{label:"ExactRootIsolation",type:"keyword",info:"ExactRootIsolation is an option for Root, which specifies whether exact isolating intervals rather t"},{label:"ExampleData",type:"keyword",info:'ExampleData["type"] gives a list of names of examples of the specified type.ExampleData[{"type", "na'},{label:"Except",type:"keyword",info:"Except[c] is a pattern object which represents any expression except one that matches c. Except[c, p"},{label:"ExcludedContexts",type:"keyword",info:"ExcludedContexts is an option for FullDefinition, Manipulate and related symbols that gives contexts"},{label:"ExcludedForms",type:"keyword",info:"ExcludedForms is an option that gives a list of patterns for expressions that should be excluded fro"},{label:"ExcludedLines",type:"keyword",info:"ExcludedLines is an option for SemanticImport and related functions that specifies which lines shoul"},{label:"ExcludedPhysicalQuantities",type:"keyword",info:"ExcludedPhysicalQuantities is an option for FormulaLookup that specifies physical quantities that sh"},{label:"ExcludePods",type:"keyword",info:"ExcludePods is an option to WolframAlpha that specifies pod IDs to exclude from the results."},{label:"Exclusions",type:"keyword",info:"Exclusions is an option that specifies where to exclude in regions used by functions like Plot, Plot"},{label:"ExclusionsStyle",type:"keyword",info:"ExclusionsStyle is an option to plotting functions that specifies how to render subregions excluded "},{label:"Exists",type:"keyword",info:"Exists[x, expr] represents the statement that there exists a value of x for which expr is True. Exis"},{label:"Exit",type:"keyword",info:"Exit[] terminates a Wolfram Language kernel session. "},{label:"ExitDialog",type:"keyword",info:"System`ExitDialog"},{label:"ExoplanetData",type:"keyword",info:"ExoplanetData[entity, property] gives the value of the specified property for the exoplanet entity.E"},{label:"Exp",type:"keyword",info:"Exp[z] gives the exponential of z. "},{label:"Expand",type:"keyword",info:"Expand[expr] expands out products and positive integer powers in expr. Expand[expr, patt] leaves une"},{label:"ExpandAll",type:"keyword",info:"ExpandAll[expr] expands out all products and integer powers in any part of expr. ExpandAll[expr, pat"},{label:"ExpandDenominator",type:"keyword",info:"ExpandDenominator[expr] expands out products and powers that appear as denominators in expr. "},{label:"ExpandFileName",type:"keyword",info:'ExpandFileName["name"] textually expands name to have the form of an absolute file name for your ope'},{label:"ExpandNumerator",type:"keyword",info:"ExpandNumerator[expr] expands out products and powers that appear in the numerator of expr. "},{label:"Expectation",type:"keyword",info:"Expectation[expr, x \xef\x8f\x92 dist] gives the expectation of expr under the assumption that x follows the pr"},{label:"ExpectationE",type:"keyword",info:"System`ExpectationE"},{label:"ExpectedValue",type:"keyword",info:"ExpectedValue[f, list] gives the expected value of the pure function f with respect to the values in"},{label:"ExpGammaDistribution",type:"keyword",info:"ExpGammaDistribution[\xce\xba, \xce\xb8, \xce\xbc] represents an exp-gamma distribution with shape parameter \xce\xba, scale par"},{label:"ExpIntegralE",type:"keyword",info:"ExpIntegralE[n, z] gives the exponential integral function E (z).\n                                  "},{label:"ExpIntegralEi",type:"keyword",info:"ExpIntegralEi[z] gives the exponential integral function Ei(z). "},{label:"ExpirationDate",type:"keyword",info:"ExpirationDate is an option for various functions that specifies when a persistent value should be t"},{label:"Exponent",type:"keyword",info:"Exponent[expr, form] gives the maximum power with which form appears in the expanded form of expr. E"},{label:"ExponentFunction",type:"keyword",info:"ExponentFunction is an option for NumberForm and related functions that determines the exponent to u"},{label:"ExponentialDistribution",type:"keyword",info:"ExponentialDistribution[\xce\xbb] represents an exponential distribution with scale inversely proportional "},{label:"ExponentialFamily",type:"keyword",info:"ExponentialFamily is an option for GeneralizedLinearModelFit that specifies the exponential family f"},{label:"ExponentialGeneratingFunction",type:"keyword",info:"                                                                                                    "},{label:"ExponentialMovingAverage",type:"keyword",info:"ExponentialMovingAverage[list, \xce\\[PlusMinus]] gives the exponential moving average of list with smoothing consta"},{label:"ExponentialPowerDistribution",type:"keyword",info:"ExponentialPowerDistribution[\xce\xba, \xce\xbc, \xcf\x83] represents an exponential power distribution with shape parame"},{label:"ExponentPosition",type:"keyword",info:"ExponentPosition is an option for RadicalBox that specifies the placement of the index outside a rad"},{label:"ExponentStep",type:"keyword",info:"ExponentStep is an option for NumberForm and related functions that determines in what steps exponen"},{label:"Export",type:"keyword",info:'Export["dest.ext", expr] exports data to a file, converting it to the format corresponding to the fi'},{label:"ExportAutoReplacements",type:"keyword",info:"ExportAutoReplacements is an option for cells that specifies which replacement rules the Wolfram Lan"},{label:"ExportByteArray",type:"keyword",info:'ExportByteArray[expr, "format"] generates a ByteArray object corresponding to expr exported in the s'},{label:"ExportForm",type:"keyword",info:'ExportForm[expr, "fmt"] specifies that expr should be exported in the specified format in functions '},{label:"ExportPacket",type:"keyword",info:"System`ExportPacket"},{label:"ExportString",type:"keyword",info:'ExportString[expr, "format"] generates a string corresponding to expr exported in the specified form'},{label:"Expression",type:"keyword",info:"Expression is a symbol that represents an ordinary Wolfram Language expression in Read and related f"},{label:"ExpressionCell",type:"keyword",info:"ExpressionCell[expr] gives an expression cell that can appear in a Wolfram System notebook.Expressio"},{label:"ExpressionGraph",type:"keyword",info:"ExpressionGraph[expr] gives the tree graph with different levels at different depths. ExpressionGrap"},{label:"ExpressionPacket",type:"keyword",info:"System`ExpressionPacket"},{label:"ExpressionTree",type:"keyword",info:"ExpressionTree[expr] gives a Tree object from the structure of the expression expr.ExpressionTree[ex"},{label:"ExpressionUUID",type:"keyword",info:"ExpressionUUID is an option for Cell and Notebook that holds the assigned unique UUID string."},{label:"ExpToTrig",type:"keyword",info:"ExpToTrig[expr] converts exponentials in expr to trigonometric functions. "},{label:"ExtendedEntityClass",type:"keyword",info:'ExtendedEntityClass[class, "name" \xef\x94\xa2 f] represents an entity class derived from class by adding a new'},{label:"ExtendedGCD",type:"keyword",info:"ExtendedGCD[n , n , \xe2\x80\xa6] gives the extended greatest common divisor of the integers n . \n             "},{label:"Extension",type:"keyword",info:"Extension is an option for various polynomial and algebraic functions that specifies generators for "},{label:"ExtentElementFunction",type:"keyword",info:"ExtentElementFunction is an option to DiscretePlot and DiscretePlot3D that gives a function to use t"},{label:"ExtentMarkers",type:"keyword",info:"ExtentMarkers is an option to DiscretePlot and DiscretePlot3D that specifies markers to draw at exte"},{label:"ExtentSize",type:"keyword",info:"ExtentSize is an option to DiscretePlot and DiscretePlot3D that specifies how far to extend out from"},{label:"ExternalBundle",type:"keyword",info:"ExternalBundle[{name  \xef\x94\xa2 obj , name  \xef\x94\xa2 obj , \xe2\x80\xa6}] represents a bundle of resources to be externally de"},{label:"ExternalCall",type:"keyword",info:"System`ExternalCall"},{label:"ExternalDataCharacterEncoding",type:"keyword",info:"ExternalDataCharacterEncoding is a global option that specifies the character encoding used in readi"},{label:"ExternalEvaluate",type:"keyword",info:'ExternalEvaluate["sys", "cmd"] evaluates the command cmd in the external evaluator sys, returning an'},{label:"ExternalFunction",type:"keyword",info:'ExternalFunction[sys, "f"] represents an external function named "f" defined in the external evaluat'},{label:"ExternalFunctionName",type:"keyword",info:"System`ExternalFunctionName"},{label:"ExternalIdentifier",type:"keyword",info:'ExternalIdentifier["type", id] represents a resource identified by id in the external identifier sys'},{label:"ExternalObject",type:"keyword",info:"ExternalObject[\xe2\x80\xa6] represents an external object inside an ExternalSessionObject."},{label:"ExternalOptions",type:"keyword",info:"ExternalOptions is an option for EmbedCode and related functions that gives options specific to the "},{label:"ExternalSessionObject",type:"keyword",info:"ExternalSessionObject[\xe2\x80\xa6] represents an external session started by StartExternalSession for use with"},{label:"ExternalSessions",type:"keyword",info:"ExternalSessions[] gives the list of currently active external evaluator sessions.ExternalSessions[s"},{label:"ExternalStorageBase",type:"keyword",info:"ExternalStorageBase is an option for various external storage functions that specifies which externa"},{label:"ExternalStorageDownload",type:"keyword",info:"ExternalStorageDownload[location] downloads content from the specified location.ExternalStorageDownl"},{label:"ExternalStorageGet",type:"keyword",info:"ExternalStorageGet[ExternalStorageObject[\xe2\x80\xa6]] reads in an expression stored at an external storage sp"},{label:"ExternalStorageObject",type:"keyword",info:"ExternalStorageObject[location] represents a file stored in an external location.ExternalStorageObje"},{label:"ExternalStoragePut",type:"keyword",info:"ExternalStoragePut[expr] writes expr to an external storage specified by ECExternalStorageBase.Extern"},{label:"ExternalStorageUpload",type:"keyword",info:"ExternalStorageUpload[file] uploads file to an external storage specified by ECExternalStorageBase.Ex"},{label:"ExternalTypeSignature",type:"keyword",info:"ExternalTypeSignature is an option for EmbedCode that gives rules specifying the mapping to external"},{label:"ExternalValue",type:"keyword",info:'ExternalValue[sys, "sym"] gives the value of "sym" in external evaluator sys. ExternalValue[session,'},{label:"Extract",type:"keyword",info:"Extract[expr, pos] extracts the part of expr at the position specified by pos. Extract[expr, {pos , "},{label:"ExtractArchive",type:"keyword",info:"ExtractArchive[source] expands an archive file, saving its content into the current directory.Extrac"},{label:"ExtractLayer",type:"keyword",info:"ExtractLayer[] represents a net layer that takes an array and a position specification as inputs and"},{label:"ExtractPacletArchive",type:"keyword",info:"ExtractPacletArchive[file] extracts the contents of the paclet archive file into the directory in wh"},{label:"ExtremeValueDistribution",type:"keyword",info:"ExtremeValueDistribution[\xce\\[PlusMinus], \xce.b2] represents an extreme value distribution with location parameter \xce\\[PlusMinus] an"},{label:"EEC",type:"keyword",info:"System`EEC"},{label:"FaceAlign",type:"keyword",info:"FaceAlign[image] attempts to find faces in image and align them.FaceAlign[image, fref] gives aligned"},{label:"FaceForm",type:"keyword",info:"FaceForm[g] is a graphics directive which specifies that faces of polygons and other filled graphics"},{label:"FaceGrids",type:"keyword",info:"FaceGrids is an option for three-dimensional graphics functions that specifies grid lines to draw on"},{label:"FaceGridsStyle",type:"keyword",info:"FaceGridsStyle is an option for 3D graphics functions that specifies how face grids should be render"},{label:"FaceRecognize",type:"keyword",info:"FaceRecognize[{example  \xef\x94\xa2 name , example  \xef\x94\xa2 name , \xe2\x80\xa6}] generates a ClassifierFunction[\xe2\x80\xa6] based on th"},{label:"FacialFeatures",type:"keyword",info:"FacialFeatures[image] returns a minimal summary of facial features for all detected faces in image.F"},{label:"Factor",type:"keyword",info:"Factor[poly] factors a polynomial over the integers. Factor[poly, Modulus \xef\x94\xa2 p] factors a polynomial "},{label:"FactorComplete",type:"keyword",info:"System`FactorComplete"},{label:"Factorial",type:"keyword",info:"n ! gives the factorial of n. "},{label:"Factorial2",type:"keyword",info:"n !! gives the double factorial of n. "},{label:"FactorialMoment",type:"keyword",info:"                                     th                                                             "},{label:"FactorialMomentGeneratingFunction",type:"keyword",info:"FactorialMomentGeneratingFunction[dist, t] gives the factorial moment-generating function for the di"},{label:"FactorialPower",type:"keyword",info:"                                                (n)                                                 "},{label:"FactorInteger",type:"keyword",info:"FactorInteger[n] gives a list of the prime factors of the integer n, together with their exponents. "},{label:"FactorList",type:"keyword",info:"FactorList[poly] gives a list of the factors of a polynomial, together with their exponents. "},{label:"FactorSquareFree",type:"keyword",info:"FactorSquareFree[poly] pulls out any multiple factors in a polynomial. "},{label:"FactorSquareFreeList",type:"keyword",info:"FactorSquareFreeList[poly] gives a list of square\xe2\x80\x90free factors of a polynomial, together with their "},{label:"FactorTerms",type:"keyword",info:"FactorTerms[poly] pulls out any overall numerical factor in poly. FactorTerms[poly, x] pulls out any"},{label:"FactorTermsList",type:"keyword",info:"FactorTermsList[poly] gives a list in which the first element is the overall numerical factor in pol"},{label:"Fail",type:"keyword",info:"System`Fail"},{label:"Failure",type:"keyword",info:'Failure["tag", assoc] represents a failure of a type indicated by tag, with details given by the ass'},{label:"FailureAction",type:"keyword",info:"FailureAction is an option to Query and related functions that determines what should happen when a "},{label:"FailureDistribution",type:"keyword",info:"FailureDistribution[bexpr, {{x , dist }, {x , dist }, \xe2\x80\xa6}] represents the failure distribution for a "},{label:"FailureQ",type:"keyword",info:"FailureQ[expr] gives True if expr has head Failure or is equal to ECFailed or ECAborted."},{label:"False",type:"keyword",info:"False is the symbol for the Boolean value false. "},{label:"FareySequence",type:"keyword",info:"                                                                                         th\nFareySeq"},{label:"FARIMAProcess",type:"keyword",info:"                                                                                                    "},{label:"FeatureDistance",type:"keyword",info:"FeatureDistance[example , example , extractor] gives the distance between example  and example  in t"},{label:"FeatureExtract",type:"keyword",info:"FeatureExtract[{example , example , \xe2\x80\xa6}] extracts features for each of the example  using a feature e"},{label:"FeatureExtraction",type:"keyword",info:"FeatureExtraction[{example , example , \xe2\x80\xa6}] generates a FeatureExtractorFunction[\xe2\x80\xa6] trained from the "},{label:"FeatureExtractor",type:"keyword",info:"FeatureExtractor is an option for functions such as Classify that specifies how features should be e"},{label:"FeatureExtractorFunction",type:"keyword",info:"FeatureExtractorFunction[\xe2\x80\xa6] represents a feature extractor function generated by FeatureExtraction."},{label:"FeatureNames",type:"keyword",info:"FeatureNames is an option for machine learning functions such as Classify or Predict that specifies "},{label:"FeatureNearest",type:"keyword",info:"FeatureNearest[{elem , elem , \xe2\x80\xa6}, x] gives the list of elem  to which x is nearest in a computed fea"},{label:"FeatureSpacePlot",type:"keyword",info:"FeatureSpacePlot[{example , example , \xe2\x80\xa6}] plots features extracted from the example  as a scatter pl"},{label:"FeatureSpacePlot3D",type:"keyword",info:"FeatureSpacePlot3D[{example , example , \xe2\x80\xa6}] plots features extracted from the example  as a scatter "},{label:"FeatureTypes",type:"keyword",info:"FeatureTypes is an option for machine learning functions such as Classify or Predict that specifies "},{label:"FEDisableConsolePrintPacket",type:"keyword",info:"System`FEDisableConsolePrintPacket"},{label:"FeedbackLinearize",type:"keyword",info:"FeedbackLinearize[asys] input-output linearizes the AffineStateSpaceModel asys by state transformati"},{label:"FeedbackSector",type:"keyword",info:"FeedbackSector is an option to NyquistPlot that specifies the sector limits of the nonlinearity in t"},{label:"FeedbackSectorStyle",type:"keyword",info:"FeedbackSectorStyle is an option to NyquistPlot that specifies the style in which graphics of Feedba"},{label:"FeedbackType",type:"keyword",info:"FeedbackType is an option for some control system functions that specifies the feedback type."},{label:"FEEnableConsolePrintPacket",type:"keyword",info:"System`FEEnableConsolePrintPacket"},{label:"FetalGrowthData",type:"keyword",info:"FetalGrowthData[age] returns the values for all properties of fetal development for the specified ag"},{label:"Fibonacci",type:"keyword",info:"Fibonacci[n] gives the Fibonacci number F . Fibonacci[n, x] gives the Fibonacci polynomial F (x). \n "},{label:"Fibonorial",type:"keyword",info:"Fibonorial[n] gives the fibonorial n ! .\n                                      F"},{label:"FieldCompletionFunction",type:"keyword",info:"FieldCompletionFunction is an option for InputField that specifies a function to apply to the input "},{label:"FieldHint",type:"keyword",info:"FieldHint is an option for InputField that specifies contents to display when the input field is emp"},{label:"FieldHintStyle",type:"keyword",info:"FieldHintStyle is an option for InputField that specifies the style to use for displaying the field "},{label:"FieldMasked",type:"keyword",info:"FieldMasked is an option to InputField that determines whether to mask user input."},{label:"FieldSize",type:"keyword",info:"FieldSize is an option for InputField, PopupMenu, and related functions that specifies the size of t"},{label:"File",type:"keyword",info:'File["path"] is a symbolic representation of a location in the local file system. '},{label:"FileBaseName",type:"keyword",info:'FileBaseName["file"] gives the base name for a file without its extension.'},{label:"FileByteCount",type:"keyword",info:"FileByteCount[file] gives the number of bytes in a file. "},{label:"FileConvert",type:"keyword",info:'FileConvert[source \xef\x94\xa2 "dest.ext"] converts the contents of source to the format defined by the extens'},{label:"FileDate",type:"keyword",info:'FileDate["file"] gives the date and time at which a file was last modified. FileDate["file", "type"]'},{label:"FileExistsQ",type:"keyword",info:'FileExistsQ["name"] gives True if the file with the specified name exists, and gives False otherwise'},{label:"FileExtension",type:"keyword",info:'FileExtension["file"] gives the file extension for a file name.'},{label:"FileFormat",type:"keyword",info:"FileFormat[source] attempts to determine what Import format could be used to import the file corresp"},{label:"FileFormatProperties",type:"keyword",info:'FileFormatProperties["fmt"] returns an association of properties for the specified format "fmt".File'},{label:"FileFormatQ",type:"keyword",info:'FileFormatQ[source, "fmt"] gives True if the file corresponding to source might be imported as forma'},{label:"FileHandler",type:"keyword",info:"System`FileHandler"},{label:"FileHash",type:"keyword",info:'FileHash[file] gives an integer hash code for the contents of the specified file.FileHash[file, "typ'},{label:"FileInformation",type:"keyword",info:"System`FileInformation"},{label:"FileName",type:"keyword",info:"System`FileName"},{label:"FileNameDepth",type:"keyword",info:'FileNameDepth["name"] gives the number of path elements in the file name "file".'},{label:"FileNameDialogSettings",type:"keyword",info:"FileNameDialogSettings is a global option that specifies settings for the Insert File Path dialog bo"},{label:"FileNameDrop",type:"keyword",info:'FileNameDrop["name", n] drops the first n path elements in the file name "name".FileNameDrop["name",'},{label:"FileNameForms",type:"keyword",info:"FileNameForms is an option that specifies the pattern for file names to be selected by a function."},{label:"FileNameJoin",type:"keyword",info:"FileNameJoin[{name , name , \xe2\x80\xa6}] joins the name  together into a file name suitable for your current "},{label:"FileNames",type:"keyword",info:"FileNames[] lists all files in the current working directory. FileNames[form] lists all files in the"},{label:"FileNameSetter",type:"keyword",info:"FileNameSetter[name] represents a file name setter which displays as a Browse button and when clicke"},{label:"FileNameSplit",type:"keyword",info:'FileNameSplit["name"] splits a file name into a list of parts.'},{label:"FileNameTake",type:"keyword",info:'FileNameTake["name"] gives the last path element in the file name "name".FileNameTake["name", n] giv'},{label:"FileNameToFormatList",type:"keyword",info:"FileNameToFormatList[] returns lists of file formats corresponding to all registered file name patte"},{label:"FilePrint",type:"keyword",info:'FilePrint["file"] prints out the raw textual contents of file.FilePrint["file", n] prints out the fi'},{label:"FileSize",type:"keyword",info:"FileSize[file] gives the size of a file as a quantity."},{label:"FileSystemMap",type:"keyword",info:"FileSystemMap[f, root] gives an association whose keys are the names of files in root, and whose val"},{label:"FileSystemScan",type:"keyword",info:"FileSystemScan[f, root] evaluates f on all files contained in root.FileSystemScan[f, root, n] restri"},{label:"FileTemplate",type:"keyword",info:'FileTemplate["file"] yields a TemplateObject expression that represents a file template to be applie'},{label:"FileTemplateApply",type:"keyword",info:"FileTemplateApply[template] applies a template, evaluating all template elements it contains, and th"},{label:"FileType",type:"keyword",info:'FileType["file"] gives the type of a file, typically File, Directory, or None. '},{label:"FilledCurve",type:"keyword",info:"FilledCurve[{segment , segment , \xe2\x80\xa6}] represents a filled curve consisting of segment  followed by se"},{label:"FilledCurveBox",type:"keyword",info:"System`FilledCurveBox"},{label:"FilledCurveBoxOptions",type:"keyword",info:"FilledCurveBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Fille"},{label:"FilledTorus",type:"keyword",info:"FilledTorus[{x, y, z}, {r     , r     }] represents a filled torus centered at {x, y, z} with inner "},{label:"FillForm",type:"keyword",info:"System`FillForm"},{label:"Filling",type:"keyword",info:"Filling is an option for ListPlot, Plot, Plot3D, and related functions that specifies what filling t"},{label:"FillingStyle",type:"keyword",info:"FillingStyle is an option for ListPlot, Plot, Plot3D, and related functions that specifies the defau"},{label:"FillingTransform",type:"keyword",info:"FillingTransform[image] gives a version of image with all extended minima filled.FillingTransform[im"},{label:"FilteredEntityClass",type:"keyword",info:"FilteredEntityClass[class, f] represents a class of entities where only entities for which the Entit"},{label:"FilterRules",type:"keyword",info:"FilterRules[rules, patt] filters the list rules by picking out only those rules whose left-hand side"},{label:"FinancialBond",type:"keyword",info:"FinancialBond[params, ambientparams] gives the value of a financial bond instrument.FinancialBond[pa"},{label:"FinancialData",type:"keyword",info:'FinancialData["name"] gives the last known price or value for the financial entity specified by "nam'},{label:"FinancialDerivative",type:"keyword",info:"FinancialDerivative[instrument, params, ambientparams] gives the value of the specified financial in"},{label:"FinancialIndicator",type:"keyword",info:'FinancialIndicator["ind", par , par , \xe2\x80\xa6] represents a financial indicator "ind" with parameters par '},{label:"Find",type:"keyword",info:'Find[stream, "text"] finds the first line in an input stream that contains the specified string. Fin'},{label:"FindAnomalies",type:"keyword",info:"FindAnomalies[{example , example , \xe2\x80\xa6}] gives a list of the example  that are considered anomalous wi"},{label:"FindArgMax",type:"keyword",info:"FindArgMax[f, x] gives the position x    of a local maximum of f.FindArgMax[f, {x, x }] gives the po"},{label:"FindArgMin",type:"keyword",info:"FindArgMin[f, x] gives the position x    of a local minimum of f.FindArgMin[f, {x, x }] gives the po"},{label:"FindChannels",type:"keyword",info:"FindChannels[] gives a list of channels in your home area on the channel broker server.FindChannels["},{label:"FindClique",type:"keyword",info:"FindClique[g] finds a largest clique in the graph g.FindClique[g, n] finds a clique containing at mo"},{label:"FindClusters",type:"keyword",info:"FindClusters[{e , e , \xe2\x80\xa6}] partitions the e  into clusters of similar elements. FindClusters[{e  \xef\x94\xa2 v "},{label:"FindCookies",type:"keyword",info:"FindCookies[] gives a list of all currently set cookies.FindCookies[domain] gives a list of cookies "},{label:"FindCurvePath",type:"keyword",info:"FindCurvePath[{{x , y }, {x , y }, \xe2\x80\xa6}] gives an ordering of the {x , y } that corresponds to one or "},{label:"FindCycle",type:"keyword",info:"FindCycle[g] finds a cycle in the graph g.FindCycle[g, k] finds a cycle of length at most k in the g"},{label:"FindDevices",type:"keyword",info:"FindDevices[] searches for available devices on your computer system.FindDevices[form] gives a list "},{label:"FindDistribution",type:"keyword",info:"FindDistribution[data] finds a simple functional form to fit the distribution of data.FindDistributi"},{label:"FindDistributionParameters",type:"keyword",info:"FindDistributionParameters[data, dist] finds the parameter estimates for the distribution dist from "},{label:"FindDivisions",type:"keyword",info:'FindDivisions[{x   , x   }, n] finds a list of about n "nice" numbers that divide the interval aroun'},{label:"FindEdgeColoring",type:"keyword",info:"FindEdgeColoring[g] finds a coloring with minimal size for the edges in the graph g.FindEdgeColoring"},{label:"FindEdgeCover",type:"keyword",info:"FindEdgeCover[g] finds an edge cover of the graph g with a minimum number of edges.FindEdgeCover[{v "},{label:"FindEdgeCut",type:"keyword",info:"FindEdgeCut[g] finds a smallest edge cut of the graph g.FindEdgeCut[g, s, t] finds a smallest s-t ed"},{label:"FindEdgeIndependentPaths",type:"keyword",info:"FindEdgeIndependentPaths[g, s, t, k] finds at most k edge-independent paths from vertex s to vertex "},{label:"FindEquationalProof",type:"keyword",info:"FindEquationalProof[thm, axms] tries to find an equational proof of the symbolic theorem thm using t"},{label:"FindEulerianCycle",type:"keyword",info:"FindEulerianCycle[g] finds an Eulerian cycle in the graph g.FindEulerianCycle[g, k] finds at most k "},{label:"FindExternalEvaluators",type:"keyword",info:"FindExternalEvaluators[] finds installed external evaluators that can be used with ExternalEvaluate,"},{label:"FindFaces",type:"keyword",info:"FindFaces[image] attempts to find human faces in image and returns a list of bounding boxes.FindFace"},{label:"FindFile",type:"keyword",info:"FindFile[name] finds the file with the specified name that would be loaded by Get[name] and related "},{label:"FindFit",type:"keyword",info:"FindFit[data, expr, pars, vars] finds numerical values of the parameters pars that make expr give a "},{label:"FindFormula",type:"keyword",info:"FindFormula[data] finds a pure function that approximates data.FindFormula[data, x] finds a symbolic"},{label:"FindFundamentalCycles",type:"keyword",info:"FindFundamentalCycles[g] finds fundamental cycles of the graph g."},{label:"FindGeneratingFunction",type:"keyword",info:"                                                                                                  th"},{label:"FindGeoLocation",type:"keyword",info:'FindGeoLocation[] attempts to find the current geo location of your computer.FindGeoLocation["ip"] g'},{label:"FindGeometricConjectures",type:"keyword",info:"FindGeometricConjectures[scene] finds conjectures that appear to hold for the GeometricScene object "},{label:"FindGeometricTransform",type:"keyword",info:"FindGeometricTransform[pts , pts ] finds a geometric transformation that aligns positions specified "},{label:"FindGraphCommunities",type:"keyword",info:"FindGraphCommunities[g] finds communities in the graph g.FindGraphCommunities[{v \xef\x94\xa2 w, \xe2\x80\xa6}] uses rules"},{label:"FindGraphIsomorphism",type:"keyword",info:"FindGraphIsomorphism[g , g ] finds an isomorphism that maps the graph g  to g  by renaming vertices."},{label:"FindGraphPartition",type:"keyword",info:"FindGraphPartition[g] gives a partition of vertices of the graph g.FindGraphPartition[g, k] gives a "},{label:"FindHamiltonianCycle",type:"keyword",info:"FindHamiltonianCycle[g] finds a Hamiltonian cycle in the graph g.FindHamiltonianCycle[g, k] finds at"},{label:"FindHamiltonianPath",type:"keyword",info:"FindHamiltonianPath[g] finds a Hamiltonian path in the graph g with the smallest total length.FindHa"},{label:"FindHiddenMarkovStates",type:"keyword",info:"FindHiddenMarkovStates[data, hmm] finds the most likely hidden states of the HiddenMarkovProcess hmm"},{label:"FindImageText",type:"keyword",info:"FindImageText[image] detects text in image and returns a single bounding box.FindImageText[image, le"},{label:"FindIndependentEdgeSet",type:"keyword",info:"FindIndependentEdgeSet[g] finds an independent edge set of the graph g with a maximum number of edge"},{label:"FindIndependentVertexSet",type:"keyword",info:"FindIndependentVertexSet[g] finds an independent vertex set of the graph g with a maximum number of "},{label:"FindInstance",type:"keyword",info:"FindInstance[expr, vars] finds an instance of vars that makes the statement expr be True. FindInstan"},{label:"FindIntegerNullVector",type:"keyword",info:"FindIntegerNullVector[{x , x , \xe2\x80\xa6, x }] finds a list of integers a  such that a  x  + a  x  + \xe2\x8b\xaf + a  "},{label:"FindIsomers",type:"keyword",info:"FindIsomers[chem] returns a list of molecules with the same chemical formula as chem.FindIsomers[che"},{label:"FindIsomorphicSubgraph",type:"keyword",info:"FindIsomorphicSubgraph[g , g ] finds a subgraph of g  that is isomorphic to g .FindIsomorphicSubgrap"},{label:"FindKClan",type:"keyword",info:"FindKClan[g, k] finds a largest k-clan in the graph g.FindKClan[g, k, n] finds a k-clan containing a"},{label:"FindKClique",type:"keyword",info:"FindKClique[g, k] finds a largest k-clique in the graph g.FindKClique[g, k, n] finds a k-clique cont"},{label:"FindKClub",type:"keyword",info:"FindKClub[g, k] finds a largest k-club in the graph g."},{label:"FindKPlex",type:"keyword",info:"FindKPlex[g, k] finds a largest k-plex in the graph g.FindKPlex[g, k, n] finds a k-plex containing a"},{label:"FindLibrary",type:"keyword",info:"FindLibrary[lib] finds a dynamic library that can be loaded by LibraryFunctionLoad."},{label:"FindLinearRecurrence",type:"keyword",info:"FindLinearRecurrence[list] finds if possible the minimal linear recurrence that generates list.FindL"},{label:"FindList",type:"keyword",info:'FindList["file", "text"] gives a list of lines in the file that contain the specified string. FindLi'},{label:"FindMatchingColor",type:"keyword",info:"FindMatchingColor[image, color] returns a color similar to the color that is present in image.FindMa"},{label:"FindMaximum",type:"keyword",info:"FindMaximum[f, x] searches for a local maximum in f, starting from an automatically selected point.F"},{label:"FindMaximumCut",type:"keyword",info:"FindMaximumCut[g] gives the maximum cut of the graph g."},{label:"FindMaximumFlow",type:"keyword",info:"FindMaximumFlow[g, s, t] finds the maximum flow between source vertex s and target vertex t in a gra"},{label:"FindMaxValue",type:"keyword",info:"FindMaxValue[f, x] gives the value at a local maximum of f.FindMaxValue[f, {x, x }] gives the value "},{label:"FindMeshDefects",type:"keyword",info:"FindMeshDefects[mreg] finds defects in the mesh region mreg.FindMeshDefects[mreg, {def , \xe2\x80\xa6}] finds o"},{label:"FindMinimum",type:"keyword",info:"FindMinimum[f, x] searches for a local minimum in f, starting from an automatically selected point.F"},{label:"FindMinimumCostFlow",type:"keyword",info:"FindMinimumCostFlow[g, {sd , sd , \xe2\x80\xa6}] finds the minimum cost flow in the graph g with sd , sd , \xe2\x80\xa6 ve"},{label:"FindMinimumCut",type:"keyword",info:"FindMinimumCut[g] gives the minimum cut of the graph g.FindMinimumCut[{v \xef\x94\xa2 w, \xe2\x80\xa6}] uses rules v \xef\x94\xa2 w t"},{label:"FindMinValue",type:"keyword",info:"FindMinValue[f, x] gives the value at a local minimum of f.FindMinValue[f, {x, x }] gives the value "},{label:"FindMoleculeSubstructure",type:"keyword",info:"FindMoleculeSubstructure[mol, patt] finds a mapping between the atom indices in mol and an occurrenc"},{label:"FindPath",type:"keyword",info:"FindPath[g, s, t] finds a path between vertex s and vertex t in the graph g.FindPath[g, s, t, k] fin"},{label:"FindPeaks",type:"keyword",info:"FindPeaks[list] gives positions and values of the detected peaks in list.FindPeaks[list, \xcf\x83] finds pe"},{label:"FindPermutation",type:"keyword",info:"FindPermutation[expr] gives a permutation that produces expr by permuting Sort[expr].FindPermutation"},{label:"FindPlanarColoring",type:"keyword",info:"FindPlanarColoring[g] finds a coloring with minimal size for the faces of the planar graph g.FindPla"},{label:"FindPointProcessParameters",type:"keyword",info:"FindPointProcessParameters[pdata, pproc] estimates the parameters of the point process pproc from po"},{label:"FindPostmanTour",type:"keyword",info:"FindPostmanTour[g] finds a Chinese postman tour in the graph g of minimal length.FindPostmanTour[g, "},{label:"FindProcessParameters",type:"keyword",info:"FindProcessParameters[data, proc] finds the parameter estimates for the process proc from data.FindP"},{label:"FindRegionTransform",type:"keyword",info:"FindRegionTransform[reg , reg ] gives the transformation function that maps the region reg  to the r"},{label:"FindRepeat",type:"keyword",info:"FindRepeat[list] finds the minimal sublist or subarray that repeats to give list.FindRepeat[list, n]"},{label:"FindRoot",type:"keyword",info:"FindRoot[f, {x, x }] searches for a numerical root of f, starting from the point x = x .FindRoot[lhs"},{label:"FindSequenceFunction",type:"keyword",info:"FindSequenceFunction[{a , a , a , \xe2\x80\xa6}] attempts to find a simple function that yields the sequence a "},{label:"FindSettings",type:"keyword",info:"FindSettings is a global option that specifies settings for the Find dialog box."},{label:"FindShortestPath",type:"keyword",info:"FindShortestPath[g, s, t] finds the shortest path from source vertex s to target vertex t in the gra"},{label:"FindShortestTour",type:"keyword",info:"FindShortestTour[{v , v , \xe2\x80\xa6}] attempts to find an ordering of the v  that minimizes the total distan"},{label:"FindSpanningTree",type:"keyword",info:"FindSpanningTree[{v , v , \xe2\x80\xa6, v }] finds a spanning tree that minimizes the total distance between th"},{label:"FindSubgraphIsomorphism",type:"keyword",info:"FindSubgraphIsomorphism[g , g ] finds a subgraph isomorphism that maps the graph g  to a subgraph of"},{label:"FindSystemModelEquilibrium",type:"keyword",info:"FindSystemModelEquilibrium[model] searches for an equilibrium to the model model.FindSystemModelEqui"},{label:"FindTextualAnswer",type:"keyword",info:'FindTextualAnswer[text, "question"] gives the substring of text that best appears to answer question'},{label:"FindThreshold",type:"keyword",info:"FindThreshold[image] finds a global threshold value that partitions the intensity values in image in"},{label:"FindTransientRepeat",type:"keyword",info:"FindTransientRepeat[list, n] returns a pair of lists {transient, repeat} where the elements of repea"},{label:"FindVertexColoring",type:"keyword",info:"FindVertexColoring[g] finds a coloring with minimal size for the vertices in the graph g. FindVertex"},{label:"FindVertexCover",type:"keyword",info:"FindVertexCover[g] finds a vertex cover of the graph g with a minimum number of vertices.FindVertexC"},{label:"FindVertexCut",type:"keyword",info:"FindVertexCut[g] finds a smallest vertex cut of the graph g.FindVertexCut[g, s, t] finds a smallest "},{label:"FindVertexIndependentPaths",type:"keyword",info:"FindVertexIndependentPaths[g, s, t, k] finds at most k vertex-independent paths from vertex s to ver"},{label:"Fine",type:"keyword",info:"System`Fine"},{label:"FinishDynamic",type:"keyword",info:"FinishDynamic[] finishes updating and displaying all currently visible Dynamic objects. "},{label:"FiniteAbelianGroupCount",type:"keyword",info:"FiniteAbelianGroupCount[n] gives the number of finite Abelian groups of order n."},{label:"FiniteGroupCount",type:"keyword",info:"FiniteGroupCount[n] gives the number of finite groups of order n."},{label:"FiniteGroupData",type:"keyword",info:'FiniteGroupData[name, "property"] gives the value of the specified property for the finite group spe'},{label:"First",type:"keyword",info:"First[expr] gives the first element in expr. First[expr, def] gives the first element if it exists, "},{label:"FirstCase",type:"keyword",info:'FirstCase[{e , e , \xe2\x80\xa6}, pattern] gives the first e  to match pattern, or Missing["NotFound"] if none '},{label:"FirstPassageTimeDistribution",type:"keyword",info:"FirstPassageTimeDistribution[mproc, f] represents the distribution of times for the Markov process m"},{label:"FirstPosition",type:"keyword",info:"FirstPosition[expr, pattern] gives the position of the first element in expr that matches pattern, o"},{label:"FischerGroupFi22",type:"keyword",info:"FischerGroupFi22[] represents the sporadic simple Fischer group Fi  .\n                              "},{label:"FischerGroupFi23",type:"keyword",info:"FischerGroupFi23[] represents the sporadic simple Fischer group Fi  .\n                              "},{label:"FischerGroupFi24Prime",type:"keyword",info:"                                                                       \xe2\x80.b2\nFischerGroupFi24Prime[] rep"},{label:"FisherHypergeometricDistribution",type:"keyword",info:"FisherHypergeometricDistribution[n, n    , n   , w] represents a Fisher noncentral hypergeometric di"},{label:"FisherRatioTest",type:"keyword",info:"                                                                                                    "},{label:"FisherZDistribution",type:"keyword",info:"FisherZDistribution[n, m] represents a Fisher z distribution with n numerator and m denominator degr"},{label:"Fit",type:"keyword",info:"Fit[data, {f , \xe2\x80\xa6, f }, {x, y, \xe2\x80\xa6}] finds a fit a  \xe2\x81\xa2 f  + \xe2\x80\xa6 + a  \xe2\x81\xa2 f  to a list of data for functions "},{label:"FitAll",type:"keyword",info:"System`FitAll"},{label:"FitRegularization",type:"keyword",info:"FitRegularization is an option for Fit and FindFit that specifies a regularization for fitting a mod"},{label:"FittedModel",type:"keyword",info:"FittedModel[\xe2\x80\xa6] represents the symbolic fitted model obtained from functions like LinearModelFit."},{label:"FixedOrder",type:"keyword",info:"FixedOrder[p , p , \xe2\x80\xa6] is a grammar rules pattern object that represents a sequence of elements match"},{label:"FixedPoint",type:"keyword",info:"FixedPoint[f, expr] starts with expr, then applies f repeatedly until the result no longer changes. "},{label:"FixedPointList",type:"keyword",info:"FixedPointList[f, expr] generates a list giving the results of applying f repeatedly, starting with "},{label:"FlashSelection",type:"keyword",info:"System`FlashSelection"},{label:"Flat",type:"keyword",info:"Flat is an attribute that can be assigned to a symbol f to indicate that all expressions involving n"},{label:"Flatten",type:"keyword",info:"Flatten[list] flattens out nested lists. Flatten[list, n] flattens to level n. Flatten[list, n, h] f"},{label:"FlattenAt",type:"keyword",info:"                                                                th\nFlattenAt[list, n] flattens out a"},{label:"FlattenLayer",type:"keyword",info:"FlattenLayer[] represents a net layer that flattens any input array into a vector.FlattenLayer[n] re"},{label:"FlatTopWindow",type:"keyword",info:"FlatTopWindow[x] represents an exact flat top window function of x."},{label:"FlightData",type:"keyword",info:"FlightData[spec, options] returns a subset of properties for a flight or selection of flights with s"},{label:"FlipView",type:"keyword",info:"FlipView[{expr , expr }] represents an object which flips between displaying expr  and expr  each ti"},{label:"Floor",type:"keyword",info:"Floor[x] gives the greatest integer less than or equal to x. Floor[x, a] gives the greatest multiple"},{label:"FlowPolynomial",type:"keyword",info:"FlowPolynomial[g, k] gives the flow polynomial of the graph g.FlowPolynomial[{v \xef\x94\xa2 w, \xe2\x80\xa6}, \xe2\x80\xa6] uses rul"},{label:"FlushPrintOutputPacket",type:"keyword",info:"System`FlushPrintOutputPacket"},{label:"Fold",type:"keyword",info:"Fold[f, x, list] gives the last element of FoldList[f, x, list].Fold[f, list] is equivalent to Fold["},{label:"FoldList",type:"keyword",info:"FoldList[f, x, {a, b, \xe2\x80\xa6}] gives {x, f[x, a], f[f[x, a], b], \xe2\x80\xa6}. FoldList[f, {a, b, c, \xe2\x80\xa6}] gives {a, "},{label:"FoldPair",type:"keyword",info:"FoldPair[f, y , list] gives the last element of FoldPairList[f, y , list].FoldPair[f, y , list, g] g"},{label:"FoldPairList",type:"keyword",info:"FoldPairList[f, y , {a , a , \xe2\x80\xa6}] gives the list of successive x  obtained by applying f to pairs of "},{label:"FoldWhile",type:"keyword",info:"FoldWhile[f, x, {a , a , \xe2\x80\xa6}, test] returns the first expression f[\xe2\x80\xa6 f[f[x, a ], a ] \xe2\x80\xa6, a ] to which "},{label:"FoldWhileList",type:"keyword",info:"FoldWhileList[f, x, {a , a , \xe2\x80\xa6}, test] returns {x, f[x, a ], f[f[x, a ], a ], \xe2\x80\xa6}, repeatedly applyin"},{label:"FollowRedirects",type:"keyword",info:"FollowRedirects is an option for URLRead and related functions that specifies whether to follow HTTP"},{label:"Font",type:"keyword",info:"System`Font"},{label:"FontColor",type:"keyword",info:"FontColor is an option for Style, Cell, and related constructs that specifies the default color in w"},{label:"FontFamily",type:"keyword",info:"FontFamily is an option for Style and Cell that specifies the font family in which text should be re"},{label:"FontForm",type:"keyword",info:"System`FontForm"},{label:"FontName",type:"keyword",info:"System`FontName"},{label:"FontOpacity",type:"keyword",info:"System`FontOpacity"},{label:"FontPostScriptName",type:"keyword",info:"FontPostScriptName is an option to StyleBox which changes the current font. A sample specification i"},{label:"FontProperties",type:"keyword",info:"FontProperties specifies font properties."},{label:"FontReencoding",type:"keyword",info:"System`FontReencoding"},{label:"FontSize",type:"keyword",info:"FontSize is an option for Style and Cell that specifies the default size in printer's points of the "},{label:"FontSlant",type:"keyword",info:"FontSlant is an option for Style, Cell, and related constructs that specifies how slanted characters"},{label:"FontSubstitutions",type:"keyword",info:"FontSubstitutions is a global option that gives a list of substitutions to try for font family names"},{label:"FontTracking",type:"keyword",info:"FontTracking is an option for Style and Cell that specifies how condensed or expanded you want the f"},{label:"FontVariations",type:"keyword",info:"FontVariations is an option for Style, Cell, and related constructs that specifies what font variati"},{label:"FontWeight",type:"keyword",info:"FontWeight is an option for Style, Cell, and related constructs that specifies how heavy the charact"},{label:"For",type:"keyword",info:"For[start, test, incr, body] executes start, then repeatedly evaluates body and incr until test fail"},{label:"ForAll",type:"keyword",info:"ForAll[x, expr] represents the statement that expr is True for all values of x. ForAll[x, cond, expr"},{label:"ForceVersionInstall",type:"keyword",info:"ForceVersionInstall is an option to PacletInstall and PacletInstallSubmit that specifies whether an "},{label:"Format",type:"keyword",info:"Format[expr] prints as the formatted form of expr. Assigning values to Format[expr] defines print fo"},{label:"FormatRules",type:"keyword",info:"System`FormatRules"},{label:"FormatType",type:"keyword",info:"FormatType is an option for output streams, graphics, and functions such as Text that specifies the "},{label:"FormatTypeAutoConvert",type:"keyword",info:"FormatTypeAutoConvert is an option for cells that specifies whether the contents of a cell are autom"},{label:"FormatValues",type:"keyword",info:"FormatValues[f] gives a list of transformation rules corresponding to all printing formats (values f"},{label:"FormBox",type:"keyword",info:"FormBox[boxes, form] is a low-level box construct which displays as boxes but specifies that rules a"},{label:"FormBoxOptions",type:"keyword",info:"FormBoxOptions is an option for cells that specifies settings for FormBox objects within the cell."},{label:"FormControl",type:"keyword",info:"FormControl[assoc, struct] represents an editable form in a notebook, with structure specified by st"},{label:"FormFunction",type:"keyword",info:"FormFunction[formspec, func] represents an active form that, when submitted, applies func to the val"},{label:"FormLayoutFunction",type:"keyword",info:"FormLayoutFunction is an option for FormObject and FormFunction that can be used to specify how to l"},{label:"FormObject",type:"keyword",info:"FormObject[{name  \xef\x94\xa2 type , name  \xef\x94\xa2 type , \xe2\x80\xa6}] represents a form with fields having names name  that "},{label:"FormPage",type:"keyword",info:"FormPage[formspec, func] represents an active page that takes input from a form and generates result"},{label:"FormProtectionMethod",type:"keyword",info:"FormProtectionMethod is an option for form generation functions that specifies what method to use fo"},{label:"FormTheme",type:"keyword",info:"FormTheme is an option for FormObject and related functions that specifies an overall theme for a fo"},{label:"FormulaData",type:"keyword",info:"FormulaData[name] gives the equations for the formula name.FormulaData[name, {var  \xef\x94\xa2 quantity , var "},{label:"FormulaLookup",type:"keyword",info:'FormulaLookup["query"] gives a list of the full names of formulas whose names are consistent with "q'},{label:"FortranForm",type:"keyword",info:"FortranForm[expr] prints as a Fortran language version of expr. "},{label:"Forward",type:"keyword",info:"Forward is a symbol that represents the forward direction for purposes of motion and animation."},{label:"ForwardBackward",type:"keyword",info:"ForwardBackward is a symbol that represents alternate forward and backward motion or animation."},{label:"ForwardCloudCredentials",type:"keyword",info:"ForwardCloudCredentials is an option for remote evaluation and submission functions that specifies w"},{label:"Fourier",type:"keyword",info:"Fourier[list] finds the discrete Fourier transform of a list of complex numbers.Fourier[list, {p , p"},{label:"FourierCoefficient",type:"keyword",info:"                                           th\nFourierCoefficient[expr, t, n] gives the n\xef\x8e\xa0   coeffici"},{label:"FourierCosCoefficient",type:"keyword",info:"                                              th\nFourierCosCoefficient[expr, t, n] gives the n\xef\x8e\xa0   co"},{label:"FourierCosSeries",type:"keyword",info:"                                         th\nFourierCosSeries[expr, t, n] gives the n\xef\x8e\xa0  -order Fourie"},{label:"FourierCosTransform",type:"keyword",info:"FourierCosTransform[expr, t, \xcf\x89] gives the symbolic Fourier cosine transform of expr. FourierCosTrans"},{label:"FourierDCT",type:"keyword",info:"FourierDCT[list] finds the Fourier discrete cosine transform of a list of real numbers.FourierDCT[li"},{label:"FourierDCTFilter",type:"keyword",info:"FourierDCTFilter[image, t] reduces noise in image by locally thresholding the discrete cosine transf"},{label:"FourierDCTMatrix",type:"keyword",info:"FourierDCTMatrix[n] returns an n\xc3\x97n discrete cosine transform matrix of type 2.FourierDCTMatrix[n, m]"},{label:"FourierDST",type:"keyword",info:"FourierDST[list] finds the Fourier discrete sine transform of a list of real numbers.FourierDST[list"},{label:"FourierDSTMatrix",type:"keyword",info:"FourierDSTMatrix[n] returns an n\xc3\x97n discrete sine transform matrix of type 2.FourierDSTMatrix[n, m] r"},{label:"FourierMatrix",type:"keyword",info:"FourierMatrix[n] returns an n\xc3\x97n Fourier matrix."},{label:"FourierParameters",type:"keyword",info:"FourierParameters is an option to Fourier and related functions that specifies the conventions to us"},{label:"FourierSequenceTransform",type:"keyword",info:"FourierSequenceTransform[expr, n, \xcf\x89] gives the Fourier sequence transform of expr.FourierSequenceTra"},{label:"FourierSeries",type:"keyword",info:"                                      th\nFourierSeries[expr, t, n] gives the n\xef\x8e\xa0  -order Fourier seri"},{label:"FourierSinCoefficient",type:"keyword",info:"                                              th\nFourierSinCoefficient[expr, t, n] gives the n\xef\x8e\xa0   co"},{label:"FourierSinSeries",type:"keyword",info:"                                         th\nFourierSinSeries[expr, t, n] gives the n\xef\x8e\xa0  -order Fourie"},{label:"FourierSinTransform",type:"keyword",info:"FourierSinTransform[expr, t, \xcf\x89] gives the symbolic Fourier sine transform of expr. FourierSinTransfo"},{label:"FourierTransform",type:"keyword",info:"FourierTransform[expr, t, \xcf\x89] gives the symbolic Fourier transform of expr. FourierTransform[expr, {t"},{label:"FourierTrigSeries",type:"keyword",info:"                                          th\nFourierTrigSeries[expr, t, n] gives the n\xef\x8e\xa0  -order Four"},{label:"FoxH",type:"keyword",info:"                                                                                                    "},{label:"FoxHReduce",type:"keyword",info:"FoxHReduce[expr, x] attempts to reduce expr to a single FoxH object as a function of x."},{label:"FractionalBrownianMotionProcess",type:"keyword",info:"FractionalBrownianMotionProcess[\xce\xbc, \xcf\x83, h] represents fractional Brownian motion process with drift \xce\xbc,"},{label:"FractionalGaussianNoiseProcess",type:"keyword",info:"FractionalGaussianNoiseProcess[\xce\xbc, \xcf\x83, h] represents a fractional Gaussian noise process with drift \xce\xbc,"},{label:"FractionalPart",type:"keyword",info:"FractionalPart[x] gives the fractional part of x. "},{label:"FractionBox",type:"keyword",info:"                                                                      x\nFractionBox[x, y] is a low-l"},{label:"FractionBoxOptions",type:"keyword",info:"FractionBoxOptions is an option that specifies settings for FractionBox objects."},{label:"FractionLine",type:"keyword",info:"FractionLine is an option for fractions that specifies the thickness of the line separating the nume"},{label:"Frame",type:"keyword",info:"Frame is an option for Graphics, Grid, and other constructs that specifies whether to include a fram"},{label:"FrameBox",type:"keyword",info:"FrameBox[box] is a low-level box construct that represents box with a frame drawn around it. "},{label:"FrameBoxOptions",type:"keyword",info:"FrameBoxOptions is an option that specifies default settings for FrameBox objects."},{label:"Framed",type:"keyword",info:"Framed[expr] displays a framed version of expr. "},{label:"FrameInset",type:"keyword",info:"System`FrameInset"},{label:"FrameLabel",type:"keyword",info:"FrameLabel is an option for Graphics, Manipulate, and related functions that specifies labels to be "},{label:"Frameless",type:"keyword",info:"System`Frameless"},{label:"FrameListVideo",type:"keyword",info:"FrameListVideo[{image , image , \xe2\x80\xa6}] generates a video containing frames image , image , etc.\n       "},{label:"FrameMargins",type:"keyword",info:"FrameMargins is an option for objects that can be displayed with frames which specifies the absolute"},{label:"FrameRate",type:"keyword",info:"FrameRate is an option to specify the number of frames per second. "},{label:"FrameStyle",type:"keyword",info:"FrameStyle is an option for Graphics, Grid, and other constructs that specifies the style in which t"},{label:"FrameTicks",type:"keyword",info:"FrameTicks is an option for 2D graphics functions that specifies tick marks for the edges of a frame"},{label:"FrameTicksStyle",type:"keyword",info:"FrameTicksStyle is an option for 2D graphics functions that specifies how frame ticks should be rend"},{label:"FRatioDistribution",type:"keyword",info:"FRatioDistribution[n, m] represents an F-ratio distribution with n numerator and m denominator degre"},{label:"FrechetDistribution",type:"keyword",info:"FrechetDistribution[\xce\\[PlusMinus], \xce.b2] represents the Fr\xc3\xa9chet distribution with shape parameter \xce\\[PlusMinus] and scale param"},{label:"FreeQ",type:"keyword",info:"FreeQ[expr, form] yields True if no subexpression in expr matches form, and yields False otherwise. "},{label:"FrenetSerretSystem",type:"keyword",info:"FrenetSerretSystem[{x , \xe2\x80\xa6, x }, t] gives the generalized curvatures and Frenet\xe2\x80\x93Serret basis for the "},{label:"FrequencySamplingFilterKernel",type:"keyword",info:"FrequencySamplingFilterKernel[{a , \xe2\x80\xa6, a }] creates a finite impulse response (FIR) filter kernel usi"},{label:"FresnelC",type:"keyword",info:"FresnelC[z] gives the Fresnel integral C(z). "},{label:"FresnelF",type:"keyword",info:"FresnelF[z] gives the Fresnel auxiliary function F(z)."},{label:"FresnelG",type:"keyword",info:"FresnelG[z] gives the Fresnel auxiliary function G(z)."},{label:"FresnelS",type:"keyword",info:"FresnelS[z] gives the Fresnel integral S(z). "},{label:"Friday",type:"keyword",info:"Friday is a day of the week."},{label:"FrobeniusNumber",type:"keyword",info:"FrobeniusNumber[{a , \xe2\x80\xa6, a }] gives the Frobenius number of a , \xe2\x80\xa6, a .\n                  1      n    "},{label:"FrobeniusSolve",type:"keyword",info:"FrobeniusSolve[{a , \xe2\x80\xa6, a }, b] gives a list of all solutions of the Frobenius equation a  x  + \xe2\x80\xa6 + a"},{label:"FromAbsoluteTime",type:"keyword",info:"FromAbsoluteTime[time] gives a date object corresponding to an absolute time specification as given "},{label:"FromCharacterCode",type:"keyword",info:"FromCharacterCode[n] gives a string consisting of the character with integer code n. FromCharacterCo"},{label:"FromCoefficientRules",type:"keyword",info:"FromCoefficientRules[list, {x , x , \xe2\x80\xa6}] constructs a polynomial from a list of rules for exponent ve"},{label:"FromContinuedFraction",type:"keyword",info:"FromContinuedFraction[list] reconstructs a number from the list of its continued fraction terms. "},{label:"FromDate",type:"keyword",info:"FromDate[date] converts a date of the form {y, m, d, h, m, s} to an absolute number of seconds since"},{label:"FromDateString",type:"keyword",info:'FromDateString["string"] gives a date object corresponding to the date represented by "string".FromD'},{label:"FromDigits",type:"keyword",info:"FromDigits[list] constructs an integer from the list of its decimal digits. FromDigits[list, b] take"},{label:"FromDMS",type:"keyword",info:'FromDMS[{d, m, s}] converts from degrees, minutes, and seconds to decimal degrees. FromDMS["dms"] co'},{label:"FromEntity",type:"keyword",info:"FromEntity[entity] returns a Wolfram Language object corresponding to an entity."},{label:"FromJulianDate",type:"keyword",info:'FromJulianDate[jd] gives a date object corresponding to the Julian date jd.FromJulianDate["type", jd'},{label:"FromLetterNumber",type:"keyword",info:"FromLetterNumber[n] gives the lowercase letter at position n in the English alphabet.FromLetterNumbe"},{label:"FromPolarCoordinates",type:"keyword",info:"FromPolarCoordinates[{r, \xce\xb8}] gives the {x, y} Cartesian coordinates corresponding to the polar coord"},{label:"FromRomanNumeral",type:"keyword",info:'FromRomanNumeral["string"] gives the integer corresponding to the Roman numeral "string". '},{label:"FromSphericalCoordinates",type:"keyword",info:"FromSphericalCoordinates[{r, \xce\xb8, \xcf\x95}] gives the {x, y, z} Cartesian coordinates corresponding to the s"},{label:"FromUnixTime",type:"keyword",info:"FromUnixTime[time] gives a date object corresponding to a UnixTime specification."},{label:"Front",type:"keyword",info:"Front is a symbol that represents the front of a graphic for purposes of placement and alignment."},{label:"FrontFaceColor",type:"keyword",info:"System`FrontFaceColor"},{label:"FrontFaceGlowColor",type:"keyword",info:"System`FrontFaceGlowColor"},{label:"FrontFaceOpacity",type:"keyword",info:"System`FrontFaceOpacity"},{label:"FrontFaceSpecularColor",type:"keyword",info:"System`FrontFaceSpecularColor"},{label:"FrontFaceSpecularExponent",type:"keyword",info:"System`FrontFaceSpecularExponent"},{label:"FrontFaceSurfaceAppearance",type:"keyword",info:"System`FrontFaceSurfaceAppearance"},{label:"FrontFaceTexture",type:"keyword",info:"System`FrontFaceTexture"},{label:"Full",type:"keyword",info:"Full is a setting used for certain options, typically indicating that a full range of values should "},{label:"FullAxes",type:"keyword",info:"FullAxes[graphics] returns the axes options of a graphics object."},{label:"FullDefinition",type:"keyword",info:"FullDefinition[symbol] prints as the definitions given for symbol, and all symbols on which these de"},{label:"FullForm",type:"keyword",info:"FullForm[expr] prints as the full form of expr, with no special syntax. "},{label:"FullGraphics",type:"keyword",info:"FullGraphics[g] takes a graphics object, and generates a new one in which objects specified by graph"},{label:"FullInformationOutputRegulator",type:"keyword",info:"FullInformationOutputRegulator[sys, rspec] gives the full state information output regulator for sys"},{label:"FullOptions",type:"keyword",info:"System`FullOptions"},{label:"FullRegion",type:"keyword",info:"                                          n\nFullRegion[n] represents the full region \xef\x9e\\[Micro] ."},{label:"FullSimplify",type:"keyword",info:"FullSimplify[expr] tries a wide range of transformations on expr involving elementary and special fu"},{label:"Function",type:"keyword",info:'body & or Function[body] is a pure (or "anonymous") function. The formal parameters are # (or #1), #'},{label:"FunctionAnalytic",type:"keyword",info:"FunctionAnalytic[f, x] tests whether f(x) is an analytic function for x \xe2\x88\x88 Reals.FunctionAnalytic[f, "},{label:"FunctionBijective",type:"keyword",info:"FunctionBijective[f, x] tests whether f(x) \xef\x9f\x99 y has exactly one solution x \xe2\x88\x88 Reals for each y \xe2\x88\x88 Reals"},{label:"FunctionCompile",type:"keyword",info:"FunctionCompile[f] generates a compiled code function from a pure function.FunctionCompile[{f , f , "},{label:"FunctionCompileExport",type:"keyword",info:'FunctionCompileExport["file.ext", fspec] exports a compiled version of functions fspec in the format'},{label:"FunctionCompileExportByteArray",type:"keyword",info:"FunctionCompileExportByteArray[fspec] gives a byte array of binary LLVM code obtained by compiling t"},{label:"FunctionCompileExportLibrary",type:"keyword",info:"FunctionCompileExportLibrary[file, fspec] exports a compiled version of function specification fspec"},{label:"FunctionCompileExportString",type:"keyword",info:"FunctionCompileExportString[fspec] gives a string of textual LLVM code obtained by compiling the fun"},{label:"FunctionContinuous",type:"keyword",info:"FunctionContinuous[f, x] tests whether f(x) is a real-valued continuous function for x \xe2\x88\x88 Reals.Funct"},{label:"FunctionConvexity",type:"keyword",info:"FunctionConvexity[f, {x , x , \xe2\x80\xa6}] finds the convexity of the function f with variables x , x , \xe2\x80\xa6 ove"},{label:"FunctionDeclaration",type:"keyword",info:"FunctionDeclaration[name, typedfun] declares name to be a typed function suitable for use in a compi"},{label:"FunctionDiscontinuities",type:"keyword",info:"FunctionDiscontinuities[f, x] finds the discontinuities of f(x) for x \xe2\x88\x88 Reals. FunctionDiscontinuiti"},{label:"FunctionDomain",type:"keyword",info:"FunctionDomain[f, x] finds the largest domain of definition of the real function f of the variable x"},{label:"FunctionExpand",type:"keyword",info:"FunctionExpand[expr] tries to expand out special and certain other functions in expr, when possible "},{label:"FunctionInjective",type:"keyword",info:"FunctionInjective[f, x] tests whether f(x) \xef\x9f\x99 y has at most one solution x \xe2\x88\x88 Reals for each y.Functio"},{label:"FunctionInterpolation",type:"keyword",info:"FunctionInterpolation[expr, {x, x   , x   }] evaluates expr with x running from x    to x    and con"},{label:"FunctionLayer",type:"keyword",info:"FunctionLayer[f] represents a net layer that applies function f to its input."},{label:"FunctionMeromorphic",type:"keyword",info:"FunctionMeromorphic[f, x] test whether f(x) is a meromorphic function of x.FunctionMeromorphic[f, {x"},{label:"FunctionMonotonicity",type:"keyword",info:"FunctionMonotonicity[f, x] finds the monotonicity of the function f with the variable x over the rea"},{label:"FunctionPeriod",type:"keyword",info:"FunctionPeriod[f, x] gives a period p of the function f over the reals such that f(x + p) \xef\x9f\x99 f(x).Fun"},{label:"FunctionPoles",type:"keyword",info:"FunctionPoles[f, x] finds the poles of the meromorphic function f with the variable x.FunctionPoles["},{label:"FunctionRange",type:"keyword",info:"FunctionRange[f, x, y] finds the range of the real function f of the variable x returning the result"},{label:"FunctionSign",type:"keyword",info:"FunctionSign[f, {x , x , \xe2\x80\xa6}] finds the real sign of the function f with variables x , x , \xe2\x80\xa6 over the"},{label:"FunctionSingularities",type:"keyword",info:"FunctionSingularities[f, x] finds the singularities of f(x) for x \xe2\x88\x88 Reals. FunctionSingularities[f, "},{label:"FunctionSpace",type:"keyword",info:"FunctionSpace is an option for FindSequenceFunction and related functions that specifies the space o"},{label:"FunctionSurjective",type:"keyword",info:"FunctionSurjective[f, x] tests whether f(x) \xef\x9f\x99 y has at least one solution x \xe2\x88\x88 \xef\x9e\\[Micro] for each y \xe2\x88\x88 Reals.F"},{label:"FussellVeselyImportance",type:"keyword",info:"FussellVeselyImportance[rdist, t] gives the Fussell\xe2\x80\x93Vesely importances for all components in the Rel"},{label:"GaborFilter",type:"keyword",info:"GaborFilter[data, r, k] filters data by convolving with a Gabor kernel of pixel radius r and wave ve"},{label:"GaborMatrix",type:"keyword",info:"                                                                                                    "},{label:"GaborWavelet",type:"keyword",info:"GaborWavelet[] represents a Gabor wavelet of frequency 6.GaborWavelet[w] represents a Gabor wavelet "},{label:"GainMargins",type:"keyword",info:"GainMargins[lsys] gives the gain margins of the linear time-invariant system lsys."},{label:"GainPhaseMargins",type:"keyword",info:"GainPhaseMargins[lsys] gives the gain and phase margins of the linear time-invariant system lsys."},{label:"GalaxyData",type:"keyword",info:"GalaxyData[entity, property] gives the value of the specified property for the galaxy entity.GalaxyD"},{label:"GalleryView",type:"keyword",info:"GalleryView[{expr , expr , \xe2\x80\xa6}] represents an object in which the expr  are displayed in a browsable "},{label:"Gamma",type:"keyword",info:"Gamma[z] is the Euler gamma function \xce\x93(z). Gamma[a, z] is the incomplete gamma function \xce\x93(a, z). Gam"},{label:"GammaDistribution",type:"keyword",info:"GammaDistribution[\xce\\[PlusMinus], \xce.b2] represents a gamma distribution with shape parameter \xce\\[PlusMinus] and scale parameter \xce.b2"},{label:"GammaRegularized",type:"keyword",info:"GammaRegularized[a, z] is the regularized incomplete gamma function Q(a, z). "},{label:"GapPenalty",type:"keyword",info:"GapPenalty is an option for SequenceAlignment and related functions that gives the additional cost a"},{label:"GARCHProcess",type:"keyword",info:"GARCHProcess[\xce\xba, {\xce\\[PlusMinus] , \xe2\x80\xa6, \xce\\[PlusMinus] }, {\xce.b2 , \xe2\x80\xa6, \xce.b2 }] represents a generalized autoregressive conditionally hete"},{label:"GatedRecurrentLayer",type:"keyword",info:"GatedRecurrentLayer[n] represents a trainable recurrent layer that takes a sequence of vectors and p"},{label:"Gather",type:"keyword",info:"Gather[list] gathers the elements of list into sublists of identical elements.Gather[list, test] app"},{label:"GatherBy",type:"keyword",info:"GatherBy[list, f] gathers into sublists each set of elements in list that gives the same value when "},{label:"GaugeFaceElementFunction",type:"keyword",info:"GaugeFaceElementFunction is an option for gauge functions that gives a function to use to generate t"},{label:"GaugeFaceStyle",type:"keyword",info:"GaugeFaceStyle is an option for gauge functions that specifies the style in which the face is to be "},{label:"GaugeFrameElementFunction",type:"keyword",info:"GaugeFrameElementFunction is an option for gauge functions that gives a function to generate the pri"},{label:"GaugeFrameSize",type:"keyword",info:"GaugeFrameSize is an option for gauge functions that controls the size of the frame around the gauge"},{label:"GaugeFrameStyle",type:"keyword",info:"GaugeFrameStyle is an option for gauge functions that specifies the style in which the frame is to b"},{label:"GaugeLabels",type:"keyword",info:"GaugeLabels is an option for gauge functions that specifies labels to be placed on the gauge."},{label:"GaugeMarkers",type:"keyword",info:"GaugeMarkers is an option for gauge functions that specifies what markers to draw to mark the values"},{label:"GaugeStyle",type:"keyword",info:"GaugeStyle is an option for gauge functions that specifies styles in which the markers are to be dra"},{label:"GaussianFilter",type:"keyword",info:"                                                                                                    "},{label:"GaussianIntegers",type:"keyword",info:"GaussianIntegers is an option for FactorInteger, PrimeQ, Factor, and related functions that specifie"},{label:"GaussianMatrix",type:"keyword",info:"                                                                                                    "},{label:"GaussianOrthogonalMatrixDistribution",type:"keyword",info:"GaussianOrthogonalMatrixDistribution[\xcf\x83, n] represents a Gaussian orthogonal matrix distribution with"},{label:"GaussianSymplecticMatrixDistribution",type:"keyword",info:"GaussianSymplecticMatrixDistribution[\xcf\x83, n] represents a Gaussian symplectic matrix distribution with"},{label:"GaussianUnitaryMatrixDistribution",type:"keyword",info:"GaussianUnitaryMatrixDistribution[\xcf\x83, n] represents a Gaussian unitary matrix distribution with matri"},{label:"GaussianWindow",type:"keyword",info:"GaussianWindow[x] represents a Gaussian window function of x.GaussianWindow[x, \xcf\x83] uses standard devi"},{label:"GCD",type:"keyword",info:"GCD[n , n , \xe2\x80\xa6] gives the greatest common divisor of the n . \n     1   2                             "},{label:"GegenbauerC",type:"keyword",info:"                                                      (m)                                           "},{label:"General",type:"keyword",info:"General is a symbol to which general system messages are attached. "},{label:"GeneralizedLinearModelFit",type:"keyword",info:"                                                                                                    "},{label:"GenerateAsymmetricKeyPair",type:"keyword",info:"GenerateAsymmetricKeyPair[] randomly generates a PrivateKey and corresponding PublicKey object for u"},{label:"GenerateConditions",type:"keyword",info:"GenerateConditions is an option for Integrate, Sum, and similar functions that specifies whether exp"},{label:"GeneratedAssetFormat",type:"keyword",info:"GeneratedAssetFormat is an option for functions like VideoGenerator that specifies the format of the"},{label:"GeneratedAssetLocation",type:"keyword",info:"GeneratedAssetLocation is an option for functions like VideoGenerator that specifies the location of"},{label:"GeneratedCell",type:"keyword",info:"GeneratedCell is an option for Cell that indicates whether the cell was generated from the kernel. "},{label:"GeneratedCellStyles",type:"keyword",info:"System`GeneratedCellStyles"},{label:"GeneratedDocumentBinding",type:"keyword",info:"GeneratedDocumentBinding is an option for supplying parameters to a DocumentGenerator during manual "},{label:"GenerateDerivedKey",type:"keyword",info:"GenerateDerivedKey[password] generates a DerivedKey object from the password given.GenerateDerivedKe"},{label:"GenerateDigitalSignature",type:"keyword",info:"GenerateDigitalSignature[expr, key] generates a digital signature for expr using the specified priva"},{label:"GenerateDocument",type:"keyword",info:"GenerateDocument[nb] generates a document by evaluating all template elements in the notebook nb.Gen"},{label:"GeneratedParameters",type:"keyword",info:"GeneratedParameters is an option that specifies how parameters generated to represent the results of"},{label:"GeneratedQuantityMagnitudes",type:"keyword",info:"GeneratedQuantityMagnitudes is an option that specifies how quantities generated to represent the qu"},{label:"GenerateFileSignature",type:"keyword",info:'GenerateFileSignature["file", key] generates a digital signature of file using the specified private'},{label:"GenerateHTTPResponse",type:"keyword",info:"GenerateHTTPResponse[expr] gives the HTTPResponse object that is generated when a cloud object conta"},{label:"GenerateSecuredAuthenticationKey",type:"keyword",info:"GenerateSecuredAuthenticationKey[] generates a new anonymous SecuredAuthenticationKey owned by the c"},{label:"GenerateSymmetricKey",type:"keyword",info:"GenerateSymmetricKey[] randomly generates a SymmetricKey object suitable for use with cryptographic "},{label:"GeneratingFunction",type:"keyword",info:"                                                                                           th\nGenera"},{label:"GeneratorDescription",type:"keyword",info:"GeneratorDescription is an option for providing a textual description for a DocumentGenerator."},{label:"GeneratorHistoryLength",type:"keyword",info:"GeneratorHistoryLength is an option for document generators controlling the number of runs archived "},{label:"GeneratorOutputType",type:"keyword",info:"GeneratorOutputType is an option controlling the file format of documents produced by a DocumentGene"},{label:"Generic",type:"keyword",info:"Generic is a setting for the Mode option of Solve and related functions."},{label:"GenericCylindricalDecomposition",type:"keyword",info:"GenericCylindricalDecomposition[ineqs, {x , x , \xe2\x80\xa6}] finds the full-dimensional part of the decomposi"},{label:"GenomeData",type:"keyword",info:'GenomeData["gene"] gives the DNA sequence for the specified gene on the reference human genome.Genom'},{label:"GenomeLookup",type:"keyword",info:'GenomeLookup["seq"] returns the positions of exact matches for the DNA sequence seq on the reference'},{label:"GeoAntipode",type:"keyword",info:"GeoAntipode[loc] gives the antipodal position of location loc.GeoAntipode[g] gives the antipodal pri"},{label:"GeoArea",type:"keyword",info:"GeoArea[g] gives the area of the geo region g."},{label:"GeoArraySize",type:"keyword",info:"GeoArraySize is an option for geographic data functions that determines the dimensions of the array "},{label:"GeoBackground",type:"keyword",info:"GeoBackground is an option that specifies the background style of a GeoGraphics object."},{label:"GeoBoundary",type:"keyword",info:"GeoBoundary[g] returns the boundary line of the geo region g."},{label:"GeoBoundingBox",type:"keyword",info:"GeoBoundingBox[g] gives the geo positions that define the bounding rectangle enclosing the geo regio"},{label:"GeoBounds",type:"keyword",info:"GeoBounds[g] gives the ranges of latitudes and longitudes in the geo region g.GeoBounds[g, \xce.b4] pads r"},{label:"GeoBoundsRegion",type:"keyword",info:"GeoBoundsRegion[{{lat   , lat   }, {lon   , lon   }}] is a two-dimensional GeoGraphics primitive tha"},{label:"GeoBoundsRegionBoundary",type:"keyword",info:"GeoBoundsRegionBoundary[{{lat   , lat   }, {lon   , lon   }}] is a one-dimensional GeoGraphics primi"},{label:"GeoBubbleChart",type:"keyword",info:"GeoBubbleChart[{reg  \xef\x94\xa2 val , reg  \xef\x94\xa2 val , \xe2\x80\xa6}] makes a geo bubble chart with bubbles centered at the "},{label:"GeoCenter",type:"keyword",info:"GeoCenter is an option for GeoGraphics that specifies the coordinates of the point that should appea"},{label:"GeoCircle",type:"keyword",info:"GeoCircle[loc, r] is a two-dimensional GeoGraphics primitive that represents a circle of radius r ce"},{label:"GeoContourPlot",type:"keyword",info:"GeoContourPlot[{loc  \xef\x94\xa2 val , loc  \xef\x94\xa2 val , \xe2\x80\xa6}] makes a geo contour plot from values val  defined at s"},{label:"GeoDensityPlot",type:"keyword",info:"GeoDensityPlot[{loc  \xef\x94\xa2 val , loc  \xef\x94\xa2 val , \xe2\x80\xa6}] makes a geo density plot with colors at the location l"},{label:"GeodesicClosing",type:"keyword",info:"GeodesicClosing[image, ker] gives the geodesic closing of image with respect to the structuring elem"},{label:"GeodesicDilation",type:"keyword",info:"GeodesicDilation[marker, mask] gives the fixed point of the geodesic dilation of the marker constrai"},{label:"GeodesicErosion",type:"keyword",info:"GeodesicErosion[marker, mask] gives the fixed point of the geodesic erosion of the marker constraine"},{label:"GeodesicOpening",type:"keyword",info:"GeodesicOpening[image, ker] gives the geodesic opening of image with respect to the structuring elem"},{label:"GeoDestination",type:"keyword",info:"GeoDestination[loc, {d, \xce\\[PlusMinus]}] gives the end position of the geodesic of length d starting from loc wit"},{label:"GeodesyData",type:"keyword",info:'GeodesyData["name", "property"] gives the value of the specified property for a named geodetic datum'},{label:"GeoDirection",type:"keyword",info:"GeoDirection[{lat , lon }, {lat , lon }] gives the azimuthal direction from one latitude-longitude p"},{label:"GeoDisk",type:"keyword",info:"GeoDisk[loc, r]  is a two-dimensional GeoGraphics primitive that represents a filled disk of radius "},{label:"GeoDisplacement",type:"keyword",info:"GeoDisplacement[{dist, \xce\\[PlusMinus]}] represents a geodesic displacement of length dist and initial bearing \xce\\[PlusMinus] f"},{label:"GeoDistance",type:"keyword",info:"GeoDistance[{lat , lon }, {lat , lon }] gives the geodesic distance between latitude-longitude posit"},{label:"GeoDistanceList",type:"keyword",info:"GeoDistanceList[{loc , loc , \xe2\x80\xa6, loc }] returns the list of geodesic distances between consecutive pa"},{label:"GeoElevationData",type:"keyword",info:"GeoElevationData[] gives the elevation above sea level at ECGeoLocation.GeoElevationData[loc] gives t"},{label:"GeoEntities",type:"keyword",info:"GeoEntities[reg, enttype] gives a list of the geographic entities of type enttype contained in the e"},{label:"GeoGraphics",type:"keyword",info:"GeoGraphics[primitives, options] represents a two-dimensional geographical image."},{label:"GeoGraphPlot",type:"keyword",info:"GeoGraphPlot[{e , e , \xe2\x80\xa6}] generates a plot of the geographic graph with edges e .GeoGraphPlot[{v , v"},{label:"GeoGraphValuePlot",type:"keyword",info:"GeoGraphValuePlot[{{src , dest , flow }, {src , dest , flow }, \xe2\x80\xa6, {src , dest , flow }}] plots the f"},{label:"GeogravityModelData",type:"keyword",info:"GeogravityModelData[] returns the gravitational field data for the current location.GeogravityModelD"},{label:"GeoGridDirectionDifference",type:"keyword",info:"GeoGridDirectionDifference[proj, loc, \xce.b2] gives the difference between the angle from north to direct"},{label:"GeoGridLines",type:"keyword",info:"GeoGridLines is an option for GeoGraphics that specifies what parallels and meridians to show."},{label:"GeoGridLinesStyle",type:"keyword",info:"GeoGridLinesStyle is an option for GeoGraphics that specifies how parallels and meridians should be "},{label:"GeoGridPosition",type:"keyword",info:"GeoGridPosition[{x, y}, proj] represents a point {x, y} in a planimetric cartographic grid using the"},{label:"GeoGridRange",type:"keyword",info:"GeoGridRange is an option for geographic functions that specifies the range of projected coordinates"},{label:"GeoGridRangePadding",type:"keyword",info:"GeoGridRangePadding is an option for geographic functions that specifies how much to extend the proj"},{label:"GeoGridUnitArea",type:"keyword",info:"GeoGridUnitArea[proj, loc] gives the actual geo area corresponding to a unit area on the geo grid ob"},{label:"GeoGridUnitDistance",type:"keyword",info:"GeoGridUnitDistance[proj, loc, \xce\\[PlusMinus]] gives the actual geo distance corresponding to a unit distance on "},{label:"GeoGridVector",type:"keyword",info:"GeoGridVector[loc \xef\x94\xa2 {v , v }, proj] represents a horizontal two-dimensional vector of components v ,"},{label:"GeoGroup",type:"keyword",info:"GeoGroup[geoobjects] represents a list of geographic objects to be treated as a single object for ce"},{label:"GeoHemisphere",type:"keyword",info:"GeoHemisphere[] is a two-dimensional GeoGraphics primitive that represents the half of the Earth cen"},{label:"GeoHemisphereBoundary",type:"keyword",info:"GeoHemisphereBoundary[] is a one-dimensional GeoGraphics primitive that represents the boundary line"},{label:"GeoHistogram",type:"keyword",info:"GeoHistogram[locs] plots a density histogram of the geographic locations locs.GeoHistogram[locs, bsp"},{label:"GeoIdentify",type:"keyword",info:"GeoIdentify[enttype] identifies the geographic entities of the type enttype in which the current geo"},{label:"GeoImage",type:"keyword",info:"GeoImage[reg] gives a satellite image of the geo region reg.GeoImage[reg, mapstyle] gives an image o"},{label:"GeoLabels",type:"keyword",info:"GeoLabels is an option for GeoListPlot and GeoRegionValuePlot that specifies whether and how to add "},{label:"GeoLength",type:"keyword",info:"GeoLength[g] gives the length of the geo path g."},{label:"GeoListPlot",type:"keyword",info:"GeoListPlot[{loc , loc , \xe2\x80\xa6}] generates a map on which the locations loc  are indicated.GeoListPlot[{"},{label:"GeoLocation",type:"keyword",info:"GeoLocation is an option for Interpreter and related functions that specifies the location to assume"},{label:"GeologicalPeriodData",type:"keyword",info:"GeologicalPeriodData[entity, property] gives the value of the specified property for the geological "},{label:"GeomagneticModelData",type:"keyword",info:"GeomagneticModelData[] returns the current magnetic field data for the current location.GeomagneticM"},{label:"GeoMarker",type:"keyword",info:"GeoMarker[] is a GeoGraphics primitive that represents a marker at the current ECGeoLocation.GeoMarke"},{label:"GeometricAssertion",type:"keyword",info:"GeometricAssertion[obj, prop] represents the assertion that the geometric object obj satisfies prop."},{label:"GeometricBrownianMotionProcess",type:"keyword",info:"GeometricBrownianMotionProcess[\xce\xbc, \xcf\x83, x ] represents a geometric Brownian motion process with drift \xce\xbc"},{label:"GeometricDistribution",type:"keyword",info:"GeometricDistribution[p] represents a geometric distribution with probability parameter p. "},{label:"GeometricMean",type:"keyword",info:"GeometricMean[list] gives the geometric mean of the values in list."},{label:"GeometricMeanFilter",type:"keyword",info:"                                                                                                    "},{label:"GeometricOptimization",type:"keyword",info:"                                                                                                    "},{label:"GeometricScene",type:"keyword",info:"GeometricScene[{p , p , \xe2\x80\xa6}, {hyp , hyp , \xe2\x80\xa6}] represents an abstract 2D geometric scene defined by th"},{label:"GeometricStep",type:"keyword",info:"GeometricStep[{hyp , hyp , \xe2\x80\xa6}] gives a symbolic representation of a step in the definition of a geom"},{label:"GeometricTest",type:"keyword",info:"GeometricTest[obj, prop] tests whether the geometric object obj satisfies prop.GeometricTest[{obj , "},{label:"GeometricTransformation",type:"keyword",info:"GeometricTransformation[g, tfun] represents the result of applying the transformation function tfun "},{label:"GeometricTransformation3DBox",type:"keyword",info:"System`GeometricTransformation3DBox"},{label:"GeometricTransformation3DBoxOptions",type:"keyword",info:"GeometricTransformation3DBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies sett"},{label:"GeometricTransformationBox",type:"keyword",info:"System`GeometricTransformationBox"},{label:"GeometricTransformationBoxOptions",type:"keyword",info:"GeometricTransformationBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settin"},{label:"GeoModel",type:"keyword",info:"GeoModel is an option for GeoGraphics that specifies the reference body or model for it for the purp"},{label:"GeoNearest",type:"keyword",info:"GeoNearest[enttype, loc] returns the geographic entity of type enttype closest to the geo location l"},{label:"GeoOrientationData",type:"keyword",info:"GeoOrientationData[date, prop] gives the value of the property prop about the orientation of the Ear"},{label:"GeoPath",type:"keyword",info:"GeoPath[{loc , loc }, pathtype] is a GeoGraphics primitive that represents a path of type pathtype b"},{label:"GeoPolygon",type:"keyword",info:"GeoPolygon[{loc , \xe2\x80\xa6, loc }] is a GeoGraphics primitive that represents a filled polygon whose bounda"},{label:"GeoPosition",type:"keyword",info:"GeoPosition[{lat, lon}] represents a geodetic position with latitude lat and longitude lon.GeoPositi"},{label:"GeoPositionENU",type:"keyword",info:"GeoPositionENU[{east, north, up}, p]  represents a position with local Cartesian coordinates {east, "},{label:"GeoPositionXYZ",type:"keyword",info:"GeoPositionXYZ[{x, y, z}] represents a position in a Cartesian geocentric coordinate system.GeoPosit"},{label:"GeoProjection",type:"keyword",info:"GeoProjection is an option for GeoGraphics that specifies the cartographic projection to use for the"},{label:"GeoProjectionData",type:"keyword",info:'GeoProjectionData["projection", "property"] gives the value of the specified property for the specif'},{label:"GeoRange",type:"keyword",info:"GeoRange is an option for geographic functions that specifies the range of latitude and longitude to"},{label:"GeoRangePadding",type:"keyword",info:"GeoRangePadding is an option for GeoGraphics that specifies what padding to use when extending beyon"},{label:"GeoRegionValuePlot",type:"keyword",info:"GeoRegionValuePlot[{reg  \xef\x94\xa2 val , reg  \xef\x94\xa2 val , \xe2\x80\xa6}] generates a plot in which the geographic regions r"},{label:"GeoResolution",type:"keyword",info:"GeoResolution is an option for geographic functions that specifies an average distance between neigh"},{label:"GeoScaleBar",type:"keyword",info:"GeoScaleBar is an option for GeoGraphics that determines what scale to show on the map."},{label:"GeoServer",type:"keyword",info:"GeoServer is an option for GeoGraphics, GeoStyling and GeoImage that specifies the URL address of a "},{label:"GeoSmoothHistogram",type:"keyword",info:"GeoSmoothHistogram[locs] plots a smooth kernel histogram of the geo locations locs.GeoSmoothHistogra"},{label:"GeoStreamPlot",type:"keyword",info:"GeoStreamPlot[vecs] generates a stream plot from the field of geo vectors vecs.GeoStreamPlot[{vecs ,"},{label:"GeoStyling",type:"keyword",info:"GeoStyling[mapstyle] displays faces of polygons and other filled geo objects using mapstyle.GeoStyli"},{label:"GeoStylingImageFunction",type:"keyword",info:"GeoStylingImageFunction is an option for specifying an image effect to apply to a geo style."},{label:"GeoVariant",type:"keyword",info:"GeoVariant[obj, qual] represents a geographic object obj with qualifier qual."},{label:"GeoVector",type:"keyword",info:"GeoVector[loc \xef\x94\xa2 {m, \xce\\[PlusMinus]}] represents a horizontal two-dimensional vector of magnitude m and bearing \xce\\[PlusMinus] "},{label:"GeoVectorENU",type:"keyword",info:"GeoVectorENU[loc \xef\x94\xa2 {v , v }] represents a horizontal two-dimensional vector of components v  and v  "},{label:"GeoVectorPlot",type:"keyword",info:"GeoVectorPlot[vecs] generates a vector plot from the field of geo vectors vecs.GeoVectorPlot[{vecs ,"},{label:"GeoVectorXYZ",type:"keyword",info:"GeoVectorXYZ[loc \xef\x94\xa2 {v , v , v }] represents a three-dimensional vector of Cartesian components v , v"},{label:"GeoVisibleRegion",type:"keyword",info:"GeoVisibleRegion[{lat, lon, h}] is a two-dimensional GeoGraphics primitive that represents the regio"},{label:"GeoVisibleRegionBoundary",type:"keyword",info:"GeoVisibleRegionBoundary[{lat, lon, h}] is a one-dimensional GeoGraphics primitive that represents t"},{label:"GeoWithinQ",type:"keyword",info:"GeoWithinQ[reg, loc] returns True if the location loc is contained within the region reg, and False "},{label:"GeoZoomLevel",type:"keyword",info:"GeoZoomLevel is an option for specifying the resolution at which to render a map."},{label:"GestureHandler",type:"keyword",info:"GestureHandler[expr, {gesture  \xef\x94\x9f fun , gesture  \xef\x94\x9f fun , \xe2\x80\xa6}] displays as expr, evaluating fun [value,"},{label:"GestureHandlerTag",type:"keyword",info:"System`GestureHandlerTag"},{label:"Get",type:"keyword",info:"<< name reads in a file, evaluating each expression in it and returning the last one. Get[stream] re"},{label:"GetBoundingBoxSizePacket",type:"keyword",info:"System`GetBoundingBoxSizePacket"},{label:"GetContext",type:"keyword",info:'GetContext["context`"] loads the file named by ContextToFileName["context`"], which gives the conven'},{label:"GetEnvironment",type:"keyword",info:'GetEnvironment["var"] gives the setting corresponding to the variable "var" in the operating system '},{label:"GetFileName",type:"keyword",info:"System`GetFileName"},{label:"GetLinebreakInformationPacket",type:"keyword",info:"System`GetLinebreakInformationPacket"},{label:"GetMenusPacket",type:"keyword",info:"System`GetMenusPacket"},{label:"GetPageBreakInformationPacket",type:"keyword",info:"System`GetPageBreakInformationPacket"},{label:"GibbsPointProcess",type:"keyword",info:"                                                                                                    "},{label:"Glaisher",type:"keyword",info:"Glaisher is Glaisher's constant with numerical value \xe2\x89\x83 1.28243. "},{label:"GlobalClusteringCoefficient",type:"keyword",info:"GlobalClusteringCoefficient[g] gives the global clustering coefficient of the graph g.GlobalClusteri"},{label:"GlobalPreferences",type:"keyword",info:"System`GlobalPreferences"},{label:"GlobalSession",type:"keyword",info:"System`GlobalSession"},{label:"Glow",type:"keyword",info:"Glow[col] is a graphics directive which specifies that surfaces of 3D graphics objects that follow a"},{label:"GoldenAngle",type:"keyword",info:"GoldenAngle is the golden angle (3 - Sqrt[5]) \xcf\x80, with numerical value \xe2\x89\x83 137.5\xc2\\[Degree]."},{label:"GoldenRatio",type:"keyword",info:"                                    1\nGoldenRatio is the golden ratio \xcf\x95 \xef\x9f\x99 - (Sqrt[5] + 1), with nume"},{label:"GompertzMakehamDistribution",type:"keyword",info:"GompertzMakehamDistribution[\xce\xbb, \xce\xbe] represents a Gompertz distribution with scale parameter \xce\xbb and frai"},{label:"GoochShading",type:"keyword",info:"GoochShading[] is a three-dimensional graphics directive specifying that surfaces that follow are to"},{label:"GoodmanKruskalGamma",type:"keyword",info:"                                                                                                    "},{label:"GoodmanKruskalGammaTest",type:"keyword",info:"GoodmanKruskalGammaTest[v , v ] tests whether the vectors v  and v  are independent.GoodmanKruskalGa"},{label:"Goto",type:"keyword",info:"Goto[tag] scans for Label[tag], and transfers control to that point. "},{label:"Grad",type:"keyword",info:"Grad[f, {x , \xe2\x80\xa6, x }] gives the gradient (\xe2\x88\x82 f/\xe2\x88\x82 x , \xe2\x80\xa6, \xe2\x88\x82 f/\xe2\x88\x82 x ).Grad[f, {x , \xe2\x80\xa6, x }, chart] gives th"},{label:"Gradient",type:"keyword",info:"Gradient is an option for FindMinimum and related functions that specifies the gradient vector to as"},{label:"GradientFilter",type:"keyword",info:"GradientFilter[data, r] gives the magnitude of the gradient of data, computed using discrete derivat"},{label:"GradientFittedMesh",type:"keyword",info:"GradientFittedMesh[{p , p , \xe2\x80\xa6}] gives a MeshRegion whose gradient best fits the normals at points p "},{label:"GradientOrientationFilter",type:"keyword",info:"GradientOrientationFilter[data, r] gives the local orientation parallel to the gradient of data, com"},{label:"GrammarApply",type:"keyword",info:"GrammarApply[grammar, input] attempts to parse input according to the grammar defined by grammar."},{label:"GrammarRules",type:"keyword",info:"GrammarRules[rules] represents grammar rules to be deployed to a cloud object that implements the gr"},{label:"GrammarToken",type:"keyword",info:"GrammarToken[form] is a grammar rules pattern object that represents any input of the specified form"},{label:"Graph",type:"keyword",info:"Graph[{e , e , \xe2\x80\xa6}] yields a graph with edges e .Graph[{v , v , \xe2\x80\xa6}, {e , e , \xe2\x80\xa6}] yields the graph wit"},{label:"Graph3D",type:"keyword",info:"Graph3D[g] creates a graph with vertices and edges from the graph g and represented as a 3D plot.Gra"},{label:"GraphAssortativity",type:"keyword",info:"GraphAssortativity[g] gives the assortativity coefficient of a graph g using vertex degrees.GraphAss"},{label:"GraphAutomorphismGroup",type:"keyword",info:"GraphAutomorphismGroup[g] gives the automorphism group of a graph g.GraphAutomorphismGroup[{v \xef\x94\xa2 w, \xe2\x80\xa6"},{label:"GraphCenter",type:"keyword",info:"GraphCenter[g] gives the set of vertices with minimum eccentricity in the graph g.GraphCenter[{v \xef\x94\xa2 w"},{label:"GraphComplement",type:"keyword",info:"GraphComplement[g] gives the graph complement of the graph g.GraphComplement[{v \xef\x94\xa2 w, \xe2\x80\xa6}] uses rules "},{label:"GraphData",type:"keyword",info:"GraphData[name] gives a graph with the specified name.GraphData[entity] gives the graph correspondin"},{label:"GraphDensity",type:"keyword",info:"GraphDensity[g] gives the graph density of the graph g.GraphDensity[{v \xef\x94\xa2 w, \xe2\x80\xa6}] uses rules v \xef\x94\xa2 w to "},{label:"GraphDiameter",type:"keyword",info:"GraphDiameter[g] gives the greatest distance between any pair of vertices in the graph g.GraphDiamet"},{label:"GraphDifference",type:"keyword",info:"GraphDifference[g , g ] gives the graph difference of the graphs g  and g .GraphDifference[{v \xef\x94\xa2 w, \xe2\x80\xa6"},{label:"GraphDisjointUnion",type:"keyword",info:"GraphDisjointUnion[g , g ] gives the graph disjoint union of the graphs g  and g .GraphDisjointUnion"},{label:"GraphDistance",type:"keyword",info:"GraphDistance[g, s, t] gives the distance from source vertex s to target vertex t in the graph g.Gra"},{label:"GraphDistanceMatrix",type:"keyword",info:"GraphDistanceMatrix[g] gives the matrix of distances between vertices for the graph g.GraphDistanceM"},{label:"GraphElementData",type:"keyword",info:"System`GraphElementData"},{label:"GraphEmbedding",type:"keyword",info:'GraphEmbedding[g] gives coordinates of the vertices of the graph g.GraphEmbedding[g, "emb"] gives co'},{label:"GraphHighlight",type:"keyword",info:"GraphHighlight is an option to Graph and related objects that specifies graph elements to highlight."},{label:"GraphHighlightStyle",type:"keyword",info:"GraphHighlightStyle is an option to Graph and related objects that specifies styles to use for highl"},{label:"GraphHub",type:"keyword",info:"GraphHub[g] gives the set of vertices with maximum vertex degree in the underlying simple graph of g"},{label:"Graphics",type:"keyword",info:"Graphics[primitives, options] represents a two-dimensional graphical image. "},{label:"Graphics3D",type:"keyword",info:"Graphics3D[primitives, options] represents a three-dimensional graphical image. "},{label:"Graphics3DBox",type:"keyword",info:"System`Graphics3DBox"},{label:"Graphics3DBoxOptions",type:"keyword",info:"Graphics3DBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Graphi"},{label:"GraphicsArray",type:"keyword",info:"GraphicsArray[{g , g , \xe2\x80\xa6}] represents a row of graphics objects.GraphicsArray[{{g  , g  , \xe2\x80\xa6}, \xe2\x80\xa6}] re"},{label:"GraphicsBaseline",type:"keyword",info:"System`GraphicsBaseline"},{label:"GraphicsBox",type:"keyword",info:"System`GraphicsBox"},{label:"GraphicsBoxOptions",type:"keyword",info:"GraphicsBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Graphics"},{label:"GraphicsColor",type:"keyword",info:"System`GraphicsColor"},{label:"GraphicsColumn",type:"keyword",info:"GraphicsColumn[{g , g , \xe2\x80\xa6}] generates a graphic in which the g  are laid out in a column, with g  ab"},{label:"GraphicsComplex",type:"keyword",info:"GraphicsComplex[{pt , pt , \xe2\x80\xa6}, data] represents a graphics complex in which coordinates given as int"},{label:"GraphicsComplex3DBox",type:"keyword",info:"System`GraphicsComplex3DBox"},{label:"GraphicsComplex3DBoxOptions",type:"keyword",info:"GraphicsComplex3DBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for"},{label:"GraphicsComplexBox",type:"keyword",info:"System`GraphicsComplexBox"},{label:"GraphicsComplexBoxOptions",type:"keyword",info:"GraphicsComplexBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for G"},{label:"GraphicsContents",type:"keyword",info:"System`GraphicsContents"},{label:"GraphicsData",type:"keyword",info:"System`GraphicsData"},{label:"GraphicsGrid",type:"keyword",info:"GraphicsGrid[{{g  , g  , \xe2\x80\xa6}, \xe2\x80\xa6}] generates a graphic in which the g   are laid out in a two-dimensio"},{label:"GraphicsGridBox",type:"keyword",info:"System`GraphicsGridBox"},{label:"GraphicsGroup",type:"keyword",info:"GraphicsGroup[{g , g , \xe2\x80\xa6}] represents a collection of graphics objects grouped together for purposes"},{label:"GraphicsGroup3DBox",type:"keyword",info:"System`GraphicsGroup3DBox"},{label:"GraphicsGroup3DBoxOptions",type:"keyword",info:"GraphicsGroup3DBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for G"},{label:"GraphicsGroupBox",type:"keyword",info:"System`GraphicsGroupBox"},{label:"GraphicsGroupBoxOptions",type:"keyword",info:"GraphicsGroupBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Gra"},{label:"GraphicsGrouping",type:"keyword",info:"System`GraphicsGrouping"},{label:"GraphicsHighlightColor",type:"keyword",info:"System`GraphicsHighlightColor"},{label:"GraphicsRow",type:"keyword",info:"GraphicsRow[{g , g , \xe2\x80\xa6}] generates a graphic in which the g  are laid out in a row.GraphicsRow[list,"},{label:"GraphicsSpacing",type:"keyword",info:"GraphicsSpacing is an option for GraphicsArray that specifies the spacing between elements in the ar"},{label:"GraphicsStyle",type:"keyword",info:"System`GraphicsStyle"},{label:"GraphIntersection",type:"keyword",info:"GraphIntersection[g , g ] gives the graph intersection of the graphs g  and g .GraphIntersection[g ,"},{label:"GraphLayerLabels",type:"keyword",info:"System`GraphLayerLabels"},{label:"GraphLayers",type:"keyword",info:"GraphLayers is an option for LayeredGraphPlot3D and related functions that specifies layers to draw "},{label:"GraphLayerStyle",type:"keyword",info:"GraphLayerStyle is an option for LayeredGraphPlot3D and related functions that specifies the style i"},{label:"GraphLayout",type:"keyword",info:"GraphLayout is an option to Graph and related functions that specifies what layout to use."},{label:"GraphLinkEfficiency",type:"keyword",info:"GraphLinkEfficiency[g] gives the link efficiency of the graph g.GraphLinkEfficiency[{v \xef\x94\xa2 w, \xe2\x80\xa6}] uses"},{label:"GraphPeriphery",type:"keyword",info:"GraphPeriphery[g] gives vertices that are maximally distant to at least one vertex in the graph g.Gr"},{label:"GraphPlot",type:"keyword",info:"GraphPlot[g] generates a plot of the graph g.GraphPlot[{e , e , \xe2\x80\xa6}] generates a plot of the graph wi"},{label:"GraphPlot3D",type:"keyword",info:"GraphPlot3D[g] generates a 3D plot of the graph g.GraphPlot3D[{e , e , \xe2\x80\xa6}] generates a 3D plot of th"},{label:"GraphPower",type:"keyword",info:"                                   th\nGraphPower[g, n] gives the graph-n\xef\x8e\xa0   power of the graph g.Gra"},{label:"GraphPropertyDistribution",type:"keyword",info:"GraphPropertyDistribution[expr, x \xef\x8f\x92 gdist] represents the distribution of the property expr where th"},{label:"GraphQ",type:"keyword",info:"GraphQ[g] yields True if g is a valid Graph object and False otherwise."},{label:"GraphRadius",type:"keyword",info:"GraphRadius[g] gives the minimum eccentricity of the vertices in the graph g.GraphRadius[{v \xef\x94\xa2 w, \xe2\x80\xa6}]"},{label:"GraphReciprocity",type:"keyword",info:"GraphReciprocity[g] gives the reciprocity of a graph g.GraphReciprocity[{v \xef\x94\xa2 w, \xe2\x80\xa6}] uses rules v \xef\x94\xa2 w"},{label:"GraphRoot",type:"keyword",info:"System`GraphRoot"},{label:"GraphStyle",type:"keyword",info:"GraphStyle is an option to Graph and related objects that specifies styles to use for the different "},{label:"GraphTree",type:"keyword",info:"GraphTree[g] constructs a tree from the tree graph g.GraphTree[g, root] specifies what vertex to use"},{label:"GraphUnion",type:"keyword",info:"GraphUnion[g , g ] gives the graph union of the graphs g  and g .GraphUnion[g , g , \xe2\x80\xa6] gives the gra"},{label:"Gray",type:"keyword",info:"Gray represents the color gray in graphics or style specifications. "},{label:"GrayLevel",type:"keyword",info:"GrayLevel[g] represents a color in the grayscale color space with gray level g.GrayLevel[g, a] speci"},{label:"Greater",type:"keyword",info:"x > y yields True if x is determined to be greater than y. x  > x  > x  yields True if the x  form a"},{label:"GreaterEqual",type:"keyword",info:"x >= y or x \xe2\x89\xa5 y yields True if x is determined to be greater than or equal to y. x  \xe2\x89\xa5 x  \xe2\x89\xa5 x  yields"},{label:"GreaterEqualLess",type:"keyword",info:"GreaterEqualLess[x, y, \xe2\x80\xa6] displays as x \xe2\x8b\x9b y \xe2\x8b\x9b \xe2\x80\xa6."},{label:"GreaterEqualThan",type:"keyword",info:"GreaterEqualThan[y] is an operator form that yields x \xe2\x89\xa5 y when applied to an expression x."},{label:"GreaterFullEqual",type:"keyword",info:"GreaterFullEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x89\xa7 y \xe2\x89\xa7 \xe2\x80\xa6."},{label:"GreaterGreater",type:"keyword",info:"GreaterGreater[x, y, \xe2\x80\xa6] displays as x \xe2\x89\xab y \xe2\x89\xab \xe2\x80\xa6."},{label:"GreaterLess",type:"keyword",info:"GreaterLess[x, y, \xe2\x80\xa6] displays as x \xe2\x89\\[CenterDot] y \xe2\x89\\[CenterDot] \xe2\x80\xa6."},{label:"GreaterSlantEqual",type:"keyword",info:"GreaterSlantEqual[x, y, \xe2\x80\xa6] displays as x \xe2\xa9\xbe y \xe2\xa9\xbe \xe2\x80\xa6."},{label:"GreaterThan",type:"keyword",info:"GreaterThan[y] is an operator form that yields x > y when applied to an expression x."},{label:"GreaterTilde",type:"keyword",info:"GreaterTilde[x, y, \xe2\x80\xa6] displays as x \xe2\x89.b3 y \xe2\x89.b3 \xe2\x80\xa6."},{label:"GreekStyle",type:"keyword",info:"System`GreekStyle"},{label:"Green",type:"keyword",info:"Green represents the color green in graphics or style specifications. "},{label:"GreenFunction",type:"keyword",info:"GreenFunction[{\xe2\x84\x92[u[x]], \xe2\x84\\[Not][u[x]]}, u, {x, x   , x   }, y] gives a Green's function for the linear dif"},{label:"Grid",type:"keyword",info:"Grid[{{expr  , expr  , \xe2\x80\xa6}, {expr  , expr  , \xe2\x80\xa6}, \xe2\x80\xa6}] is an object that formats with the expr   arrang"},{label:"GridBaseline",type:"keyword",info:"GridBaseline is an option for GridBox that specifies what place in the grid should be considered its"},{label:"GridBox",type:"keyword",info:"GridBox[{{box  , box  , \xe2\x80\xa6}, {box  , box  , \xe2\x80\xa6}, \xe2\x80\xa6}] is a low-level box construct that represents a tw"},{label:"GridBoxAlignment",type:"keyword",info:"System`GridBoxAlignment"},{label:"GridBoxBackground",type:"keyword",info:"System`GridBoxBackground"},{label:"GridBoxDividers",type:"keyword",info:"System`GridBoxDividers"},{label:"GridBoxFrame",type:"keyword",info:"System`GridBoxFrame"},{label:"GridBoxItemSize",type:"keyword",info:"System`GridBoxItemSize"},{label:"GridBoxItemStyle",type:"keyword",info:"System`GridBoxItemStyle"},{label:"GridBoxOptions",type:"keyword",info:"GridBoxOptions -> {opt  -> val , opt  -> val , \xe2\x80\xa6} is an option which specifies default settings for "},{label:"GridBoxSpacings",type:"keyword",info:"System`GridBoxSpacings"},{label:"GridCreationSettings",type:"keyword",info:"GridCreationSettings is a global option that specifies settings for the Create Table/Matrix dialog."},{label:"GridDefaultElement",type:"keyword",info:"GridDefaultElement is an option for the low-level function GridBox that specifies what to insert whe"},{label:"GridElementStyleOptions",type:"keyword",info:"System`GridElementStyleOptions"},{label:"GridFrame",type:"keyword",info:"GridFrame is an option for grids that specifies whether a surrounding frame is drawn."},{label:"GridFrameMargins",type:"keyword",info:"GridFrameMargins is an option for grids that specifies the spacing between the content of the grid a"},{label:"GridGraph",type:"keyword",info:"GridGraph[{m, n}] gives the grid graph with m \xc3\x97 n vertices G    .GridGraph[{n , n , \xe2\x80\xa6, n }] gives th"},{label:"GridLines",type:"keyword",info:"GridLines is an option for two-dimensional graphics functions that specifies grid lines. "},{label:"GridLinesStyle",type:"keyword",info:"GridLinesStyle is an option for 2D graphics functions that specifies how grid lines should be render"},{label:"GridVideo",type:"keyword",info:"GridVideo[{v , v , \xe2\x80\xa6}] creates a video in which each frame is a grid of frames of all v  at the corr"},{label:"GroebnerBasis",type:"keyword",info:"GroebnerBasis[{poly , poly , \xe2\x80\xa6}, {x , x , \xe2\x80\xa6}] gives a list of polynomials that form a Gr\xc3\\[Paragraph]bner basis "},{label:"GroupActionBase",type:"keyword",info:"GroupActionBase is an option to specify a base for a group."},{label:"GroupBy",type:"keyword",info:"GroupBy[{elem , elem , \xe2\x80\xa6}, f] gives an association that groups the elem  into lists associated with "},{label:"GroupCentralizer",type:"keyword",info:"GroupCentralizer[group, g] returns the centralizer of the element g in group."},{label:"GroupElementFromWord",type:"keyword",info:"GroupElementFromWord[group, w] returns the element of group determined by the word w in the generato"},{label:"GroupElementPosition",type:"keyword",info:"GroupElementPosition[group, g] returns the position of the element g in the list of elements of grou"},{label:"GroupElementQ",type:"keyword",info:"GroupElementQ[group, g] returns True if the object g is an element of group and False otherwise."},{label:"GroupElements",type:"keyword",info:"GroupElements[group] returns the list of all elements of group.GroupElements[group, {r , \xe2\x80\xa6, r }] ret"},{label:"GroupElementToWord",type:"keyword",info:"GroupElementToWord[group, g] decomposes the group element g as a product of generators of group."},{label:"GroupGenerators",type:"keyword",info:"GroupGenerators[group] returns a list of generators of group. "},{label:"Groupings",type:"keyword",info:"Groupings[n, k] gives a list of all possible groupings of 1, \xe2\x80\xa6, n taken k at a time. Groupings[{a , "},{label:"GroupMultiplicationTable",type:"keyword",info:"GroupMultiplicationTable[group] gives the multiplication table of group as an array."},{label:"GroupOpenerColor",type:"keyword",info:"System`GroupOpenerColor"},{label:"GroupOpenerInsideFrame",type:"keyword",info:"System`GroupOpenerInsideFrame"},{label:"GroupOrbits",type:"keyword",info:"GroupOrbits[group, {p , \xe2\x80\xa6}] returns the orbits of the points p  under the action of the elements of "},{label:"GroupOrder",type:"keyword",info:"GroupOrder[group] returns the number of elements of group."},{label:"GroupPageBreakWithin",type:"keyword",info:"GroupPageBreakWithin is an option for Cell that specifies whether a page break should be allowed wit"},{label:"GroupSetwiseStabilizer",type:"keyword",info:"GroupSetwiseStabilizer[group, {p , \xe2\x80\xa6, p }] returns the subgroup of group for which the images of the"},{label:"GroupStabilizer",type:"keyword",info:"GroupStabilizer[group, {p , \xe2\x80\xa6, p }] returns the subgroup of elements of group that move none of the "},{label:"GroupStabilizerChain",type:"keyword",info:"GroupStabilizerChain[group] returns a list of successive stabilizers in group of the points in a bas"},{label:"GroupTogetherGrouping",type:"keyword",info:"System`GroupTogetherGrouping"},{label:"GroupTogetherNestedGrouping",type:"keyword",info:"System`GroupTogetherNestedGrouping"},{label:"GrowCutComponents",type:"keyword",info:"GrowCutComponents[image, {marker , marker , \xe2\x80\xa6}] creates a segmentation from image by growing each ma"},{label:"Gudermannian",type:"keyword",info:"Gudermannian[z] gives the Gudermannian function gd(z)."},{label:"GuidedFilter",type:"keyword",info:"GuidedFilter[image, guide, r, \xcf\\[Micro]] filters image using the guide image guide over range-r neighborhood"},{label:"GumbelDistribution",type:"keyword",info:"GumbelDistribution[\xce\\[PlusMinus], \xce.b2] represents a Gumbel distribution with location parameter \xce\\[PlusMinus] and scale parame"},{label:"HaarWavelet",type:"keyword",info:"HaarWavelet[] represents a Haar wavelet. "},{label:"HadamardMatrix",type:"keyword",info:"HadamardMatrix[n] returns an n\xc3\x97n Hadamard matrix."},{label:"HalfLine",type:"keyword",info:"HalfLine[{p , p }] represents the half-line from the point p  through p . HalfLine[p, v] represents "},{label:"HalfNormalDistribution",type:"keyword",info:"HalfNormalDistribution[\xce\xb8] represents a half-normal distribution with scale inversely proportional to"},{label:"HalfPlane",type:"keyword",info:"HalfPlane[{p , p }, w] represents the half-plane bounded by the line through p  and p  and extended "},{label:"HalfSpace",type:"keyword",info:"HalfSpace[n, p] represents the half-space of points x such that n . (x - p) \xe2\x89\xa4 0.HalfSpace[n, c] repr"},{label:"HalftoneShading",type:"keyword",info:"HalftoneShading[] is a three-dimensional graphics directive specifying that surfaces that follow are"},{label:"HamiltonianGraphQ",type:"keyword",info:"HamiltonianGraphQ[g] yields True if the graph g is Hamiltonian, and False otherwise."},{label:"HammingDistance",type:"keyword",info:"HammingDistance[u, v] gives the Hamming distance between strings or vectors u and v.HammingDistance["},{label:"HammingWindow",type:"keyword",info:"HammingWindow[x] represents a Hamming window function of x."},{label:"HandlerFunctions",type:"keyword",info:"HandlerFunctions is an option for asynchronous operations that specifies functions to apply when eve"},{label:"HandlerFunctionsKeys",type:"keyword",info:"HandlerFunctionsKeys is an option for asynchronous operations that specifies the content of associat"},{label:"HankelH1",type:"keyword",info:"                                                            (1)\nHankelH1[n, z] gives the Hankel func"},{label:"HankelH2",type:"keyword",info:"                                                             (2)\nHankelH2[n, z] gives the Hankel fun"},{label:"HankelMatrix",type:"keyword",info:"HankelMatrix[n] gives the n\xc3\x97n Hankel matrix with first row and first column being successive integer"},{label:"HankelTransform",type:"keyword",info:"HankelTransform[expr, r, s] gives the Hankel transform of order 0 for expr.HankelTransform[expr, r, "},{label:"HannPoissonWindow",type:"keyword",info:"HannPoissonWindow[x] represents a Hann\xe2\x80\x93Poisson window function of x.HannPoissonWindow[x, \xce\\[PlusMinus]] uses the"},{label:"HannWindow",type:"keyword",info:"HannWindow[x] represents a Hann window function of x.HannWindow[x, \xce\\[PlusMinus]] uses the parameter \xce\\[PlusMinus].\n"},{label:"HaradaNortonGroupHN",type:"keyword",info:"HaradaNortonGroupHN[] represents the sporadic simple Harada\xe2\x80\x93Norton group HN."},{label:"HararyGraph",type:"keyword",info:"HararyGraph[k, n] generates the minimal k-connected graph on n vertices H    .\n                     "},{label:"HardcorePointProcess",type:"keyword",info:"                                                                                                    "},{label:"HarmonicMean",type:"keyword",info:"HarmonicMean[list] gives the harmonic mean of the values in list."},{label:"HarmonicMeanFilter",type:"keyword",info:"                                                                                                    "},{label:"HarmonicNumber",type:"keyword",info:"                              th                                                                    "},{label:"Hash",type:"keyword",info:'Hash[expr] gives an integer hash code for the expression expr.Hash[expr, "type"] gives an integer ha'},{label:"HatchFilling",type:"keyword",info:"HatchFilling[] is a two-dimensional graphics directive that specifies that faces of polygons and oth"},{label:"HatchShading",type:"keyword",info:"HatchShading[] is a three-dimensional graphics directive specifying that objects that follow are to "},{label:"Haversine",type:"keyword",info:"Haversine[z] gives the haversine function hav(z)."},{label:"HazardFunction",type:"keyword",info:"HazardFunction[dist, x] gives the hazard function for the distribution dist evaluated at x.HazardFun"},{label:"Head",type:"keyword",info:"Head[expr] gives the head of expr. Head[expr, h] wraps the result with h.\n"},{label:"HeadCompose",type:"keyword",info:"HeadCompose[a, b, c, d] gives a[b][c][d]."},{label:"HeaderAlignment",type:"keyword",info:"HeaderAlignment is an option for Dataset that specifies how the contents of a header should be align"},{label:"HeaderBackground",type:"keyword",info:"HeaderBackground is an option for Dataset that specifies what background color to use for row and co"},{label:"HeaderDisplayFunction",type:"keyword",info:"HeaderDisplayFunction is an option for Dataset that specifies a function to apply to headers before "},{label:"HeaderLines",type:"keyword",info:"HeaderLines is an option for SemanticImport and related functions that specifies how many of the ini"},{label:"Headers",type:"keyword",info:"System`Headers"},{label:"HeaderSize",type:"keyword",info:"HeaderSize is an option for Dataset that specifies the widths and heights of headers."},{label:"HeaderStyle",type:"keyword",info:"HeaderStyle is an option for Dataset that specifies the style to use for headers."},{label:"Heads",type:"keyword",info:"Heads is an option for functions which use level specifications that specifies whether heads of expr"},{label:"HeatFluxValue",type:"keyword",info:"HeatFluxValue[pred, vars, pars] represents a thermal heat flux boundary condition for PDEs with pred"},{label:"HeatInsulationValue",type:"keyword",info:"HeatInsulationValue[pred, vars, pars] represents a thermal insulation boundary condition for PDEs wi"},{label:"HeatOutflowValue",type:"keyword",info:"HeatOutflowValue[pred, vars, pars] represents a thermal outflow boundary condition for PDEs with pre"},{label:"HeatRadiationValue",type:"keyword",info:"HeatRadiationValue[pred, vars, pars] represents a thermal radiation boundary condition for PDEs with"},{label:"HeatSymmetryValue",type:"keyword",info:"HeatSymmetryValue[pred, vars, pars] represents a thermal symmetry boundary condition for PDEs with p"},{label:"HeatTemperatureCondition",type:"keyword",info:"HeatTemperatureCondition[pred, vars, pars] represents a thermal surface boundary condition for PDEs "},{label:"HeatTransferPDEComponent",type:"keyword",info:"HeatTransferPDEComponent[vars, pars] yields a heat transfer PDE term with variables vars and paramet"},{label:"HeatTransferValue",type:"keyword",info:"HeatTransferValue[pred, vars, pars] represents a thermal transfer boundary condition for PDEs with p"},{label:"HeavisideLambda",type:"keyword",info:"HeavisideLambda[x] represents the triangle distribution \xce\x9b(x) which is nonzero for \xef\x98\x83 x \xef\x98\x84 < 1.Heavisid"},{label:"HeavisidePi",type:"keyword",info:"                                                                            1                   1   "},{label:"HeavisideTheta",type:"keyword",info:"HeavisideTheta[x] represents the Heaviside theta function \xce\xb8(x), equal to 0 for x < 0 and 1 for x > 0"},{label:"HeldGroupHe",type:"keyword",info:"HeldGroupHe[] represents the sporadic simple Held group He."},{label:"HeldPart",type:"keyword",info:"System`HeldPart"},{label:"HelmholtzPDEComponent",type:"keyword",info:"                                                               2                 2\nHelmholtzPDECompo"},{label:"HelpBrowserLookup",type:"keyword",info:"System`HelpBrowserLookup"},{label:"HelpBrowserNotebook",type:"keyword",info:"System`HelpBrowserNotebook"},{label:"HelpBrowserSettings",type:"keyword",info:"HelpBrowserSettings is a global option that specifies settings for the legacy Help Browser."},{label:"Here",type:"keyword",info:"Here represents the current deduced geo location."},{label:"HermiteDecomposition",type:"keyword",info:"HermiteDecomposition[m] gives the Hermite normal form decomposition of an integer matrix m."},{label:"HermiteH",type:"keyword",info:"HermiteH[n, x] gives the Hermite polynomial H (x). \n                                             n"},{label:"Hermitian",type:"keyword",info:"Hermitian[{1, 2}] represents the symmetry of a Hermitian matrix."},{label:"HermitianMatrixQ",type:"keyword",info:"HermitianMatrixQ[m] gives True if m is explicitly Hermitian, and False otherwise. "},{label:"HessenbergDecomposition",type:"keyword",info:"HessenbergDecomposition[m] gives the Hessenberg decomposition of a numerical matrix m. "},{label:"Hessian",type:"keyword",info:"System`Hessian"},{label:"HeunB",type:"keyword",info:"HeunB[q, \xce\\[PlusMinus], \xce.b3, \xce.b4, \xcf\\[Micro], z] gives the bi-confluent Heun function. "},{label:"HeunBPrime",type:"keyword",info:"HeunBPrime[q, \xce\\[PlusMinus], \xce.b3, \xce.b4, \xcf\\[Micro], z] gives the z-derivative of the HeunB function. "},{label:"HeunC",type:"keyword",info:"HeunC[q, \xce\\[PlusMinus], \xce.b3, \xce.b4, \xcf\\[Micro], z] gives the confluent Heun function."},{label:"HeunCPrime",type:"keyword",info:"HeunCPrime[q, \xce\\[PlusMinus], \xce.b3, \xce.b4, \xcf\\[Micro], z] gives the z-derivative of the HeunC function. "},{label:"HeunD",type:"keyword",info:"HeunD[q, \xce\\[PlusMinus], \xce.b3, \xce.b4, \xcf\\[Micro], z] gives the double-confluent Heun function. "},{label:"HeunDPrime",type:"keyword",info:"HeunDPrime[q, \xce\\[PlusMinus], \xce.b3, \xce.b4, \xcf\\[Micro], z] gives the z-derivative of the HeunD function. "},{label:"HeunG",type:"keyword",info:"HeunG[a, q, \xce\\[PlusMinus], \xce.b2, \xce.b3, \xce.b4, z] gives the general Heun function. "},{label:"HeunGPrime",type:"keyword",info:"HeunGPrime[a, q, \xce\\[PlusMinus], \xce.b2, \xce.b3, \xce.b4, z] gives the z-derivative of the HeunG function. "},{label:"HeunT",type:"keyword",info:"HeunT[q, \xce\\[PlusMinus], \xce.b3, \xce.b4, \xcf\\[Micro], z] gives the tri-confluent Heun function. "},{label:"HeunTPrime",type:"keyword",info:"HeunTPrime[q, \xce\\[PlusMinus], \xce.b3, \xce.b4, \xcf\\[Micro], z] gives the z-derivative of the HeunT function. "},{label:"HexadecimalCharacter",type:"keyword",info:"HexadecimalCharacter represents a hexadecimal digit character 0\xe2\x80\x939, a\xe2\x80\x93f, A\xe2\x80\x93F in StringExpression."},{label:"Hexahedron",type:"keyword",info:"Hexahedron[{p , p , \xe2\x80\xa6, p }] represents a filled hexahedron with corners p , p , \xe2\x80\xa6, p .Hexahedron[{{p"},{label:"HexahedronBox",type:"keyword",info:"System`HexahedronBox"},{label:"HexahedronBoxOptions",type:"keyword",info:"System`HexahedronBoxOptions"},{label:"HiddenItems",type:"keyword",info:"HiddenItems is an option for Dataset that specifies which items to hide."},{label:"HiddenMarkovProcess",type:"keyword",info:"HiddenMarkovProcess[i , m, em] represents a discrete-time, finite-state hidden Markov process with t"},{label:"HiddenSurface",type:"keyword",info:"HiddenSurface is an option for SurfaceGraphics which specifies whether hidden surfaces are to be eli"},{label:"Highlighted",type:"keyword",info:"Highlighted[expr] displays a highlighted version of expr."},{label:"HighlightGraph",type:"keyword",info:"HighlightGraph[g, {a , a , \xe2\x80\xa6}] highlights the a  that can be vertices, edges, or subgraphs of g.High"},{label:"HighlightImage",type:"keyword",info:"HighlightImage[image, roi] highlights the specified region of interest roi in image.HighlightImage[i"},{label:"HighlightMesh",type:"keyword",info:"HighlightMesh[mr, {cellspec , cellspec , \xe2\x80\xa6}] highlights the cells specified by cellspec  in the mesh"},{label:"HighpassFilter",type:"keyword",info:"HighpassFilter[data, \xcf\x89 ] applies a highpass filter with a cutoff frequency \xcf\x89  to an array of data.Hi"},{label:"HigmanSimsGroupHS",type:"keyword",info:"HigmanSimsGroupHS[] represents the sporadic simple Higman\xe2\x80\x93Sims group HS."},{label:"HilbertCurve",type:"keyword",info:"                                                           th                                       "},{label:"HilbertFilter",type:"keyword",info:"HilbertFilter[data, \xcf\x89 ] applies a Hilbert filter with a cutoff frequency \xcf\x89  to an array of data.Hilb"},{label:"HilbertMatrix",type:"keyword",info:"HilbertMatrix[n] gives the n\xc3\x97n Hilbert matrix with elements of the form 1/(i + j - 1).HilbertMatrix["},{label:"Histogram",type:"keyword",info:"Histogram[{x , x , \xe2\x80\xa6}] plots a histogram of the values x .Histogram[{x , x , \xe2\x80\xa6}, bspec] plots a hist"},{label:"Histogram3D",type:"keyword",info:"Histogram3D[{{x , y }, {x , y }, \xe2\x80\xa6}] plots a 3D histogram of the values {x , y }.Histogram3D[{{x , y"},{label:"HistogramDistribution",type:"keyword",info:"HistogramDistribution[{x , x , \xe2\x80\xa6}] represents the probability distribution corresponding to a histog"},{label:"HistogramList",type:"keyword",info:"HistogramList[{x , x , \xe2\x80\xa6}] gives a list of bins and histogram heights of the values x .HistogramList"},{label:"HistogramPointDensity",type:"keyword",info:"HistogramPointDensity[pdata] estimates the histogram point density function \xce\xbc(x) for point data pdat"},{label:"HistogramTransform",type:"keyword",info:"HistogramTransform[image] transforms pixel values of image so that its histogram is nearly flat.Hist"},{label:"HistogramTransformInterpolation",type:"keyword",info:"HistogramTransformInterpolation[{x , x , \xe2\x80\xa6}] finds a function f so that the transformed values f(x )"},{label:"HistoricalPeriodData",type:"keyword",info:"HistoricalPeriodData[entity, property] gives the value of the specified property for the historical "},{label:"HitMissTransform",type:"keyword",info:"HitMissTransform[image, ker] gives the hit-or-miss transform of image with respect to the composite "},{label:"HITSCentrality",type:"keyword",info:"HITSCentrality[g] gives a list of authority and hub centralities for the vertices in the graph g.HIT"},{label:"HjorthDistribution",type:"keyword",info:"HjorthDistribution[m, s, f] represents the Hjorth distribution with location parameter m, scale para"},{label:"HodgeDual",type:"keyword",info:"HodgeDual[tensor] gives the Hodge dual of the tensorHodgeDual[tensor, dim] dualizes tensor in the sl"},{label:"HoeffdingD",type:"keyword",info:"                                                                                                    "},{label:"HoeffdingDTest",type:"keyword",info:'HoeffdingDTest[v , v ] tests whether the vectors v  and v  are independent.HoeffdingDTest[\xe2\x80\xa6, "proper'},{label:"Hold",type:"keyword",info:"Hold[expr] maintains expr in an unevaluated form. "},{label:"HoldAll",type:"keyword",info:"HoldAll is an attribute that specifies that all arguments to a function are to be maintained in an u"},{label:"HoldAllComplete",type:"keyword",info:"HoldAllComplete is an attribute which specifies that all arguments to a function are not to be modif"},{label:"HoldComplete",type:"keyword",info:"HoldComplete[expr] shields expr completely from the standard Wolfram Language evaluation process, pr"},{label:"HoldFirst",type:"keyword",info:"HoldFirst is an attribute that specifies that the first argument to a function is to be maintained i"},{label:"HoldForm",type:"keyword",info:"HoldForm[expr] prints as the expression expr, with expr maintained in an unevaluated form. "},{label:"HoldPattern",type:"keyword",info:"HoldPattern[expr] is equivalent to expr for pattern matching, but maintains expr in an unevaluated f"},{label:"HoldRest",type:"keyword",info:"HoldRest is an attribute which specifies that all but the first argument to a function are to be mai"},{label:"HolidayCalendar",type:"keyword",info:"HolidayCalendar is an option that specifies the holiday calendar schedule in business day functions."},{label:"HomeDirectory",type:"keyword",info:"System`HomeDirectory"},{label:"HomePage",type:"keyword",info:"System`HomePage"},{label:"Horizontal",type:"keyword",info:"System`Horizontal"},{label:"HorizontalForm",type:"keyword",info:"HorizontalForm is an internal symbol used for formatting and printing."},{label:"HorizontalGauge",type:"keyword",info:"HorizontalGauge[value] draws a linear gauge showing value in a range of 0 to 1.HorizontalGauge[value"},{label:"HorizontalScrollPosition",type:"keyword",info:"System`HorizontalScrollPosition"},{label:"HornerForm",type:"keyword",info:"HornerForm[poly] puts the polynomial poly in Horner form.HornerForm[poly, vars] puts poly in Horner "},{label:"HostLookup",type:"keyword",info:"HostLookup[name] gives the IP address for the host with the specified name.HostLookup[address] gives"},{label:"HotellingTSquareDistribution",type:"keyword",info:"                                                           2\nHotellingTSquareDistribution[p, m] repr"},{label:"HoytDistribution",type:"keyword",info:"HoytDistribution[q, \xcf\x89] represents a Hoyt distribution with shape parameter q and spread parameter \xcf\x89."},{label:"HTMLSave",type:"keyword",info:'HTMLSave["file.html"] saves an HTML version of the current input notebook in the front end. HTMLSave'},{label:"HTTPErrorResponse",type:"keyword",info:"HTTPErrorResponse[code] is an object that represents an error response to an HTTP request, with spec"},{label:"HTTPRedirect",type:"keyword",info:"HTTPRedirect[uri] represents an HTTP redirect to the specified uri.HTTPRedirect[uri, metadata] repre"},{label:"HTTPRequest",type:"keyword",info:"HTTPRequest[url] represents an HTTP request for the specified URL.HTTPRequest[assoc] represents an H"},{label:"HTTPRequestData",type:"keyword",info:'HTTPRequestData["prop"] gives the value of the specified property of the current HTTP request.HTTPRe'},{label:"HTTPResponse",type:"keyword",info:"HTTPResponse[body] is an object that represents a successful response to an HTTP request, with the s"},{label:"Hue",type:"keyword",info:"Hue[h] represents a color in the HSB color space with hue h. Hue[h, s, b] specifies colors in terms "},{label:"HumanGrowthData",type:"keyword",info:"HumanGrowthData[spec] returns the range of values within one standard deviation of the mean for all "},{label:"HumpDownHump",type:"keyword",info:"HumpDownHump[x, y, \xe2\x80\xa6] displays as x \xe2\x89\x8e y \xe2\x89\x8e \xe2\x80\xa6."},{label:"HumpEqual",type:"keyword",info:"HumpEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x89\x8f y \xe2\x89\x8f \xe2\x80\xa6."},{label:"HurwitzLerchPhi",type:"keyword",info:"HurwitzLerchPhi[z, s, a] gives the Hurwitz\xe2\x80\x93Lerch transcendent \xce\xa6(z, s, a)."},{label:"HurwitzZeta",type:"keyword",info:"HurwitzZeta[s, a] gives the Hurwitz zeta function \xce\\[Paragraph](s, a)."},{label:"HyperbolicDistribution",type:"keyword",info:"HyperbolicDistribution[\xce\\[PlusMinus], \xce.b2, \xce.b4, \xce\xbc] represents a hyperbolic distribution with location parameter \xce\xbc, s"},{label:"HypercubeGraph",type:"keyword",info:"HypercubeGraph[n] gives the n-dimensional hypercube graph Q .\n                                      "},{label:"HyperexponentialDistribution",type:"keyword",info:"HyperexponentialDistribution[{\xce\\[PlusMinus] , \xe2\x80\xa6, \xce\\[PlusMinus] }, {\xce\xbb , \xe2\x80\xa6, \xce\xbb }] represents an m-phase hyperexponential distri"},{label:"Hyperfactorial",type:"keyword",info:"Hyperfactorial[n] gives the hyperfactorial function H(n)."},{label:"Hypergeometric0F1",type:"keyword",info:"Hypergeometric0F1[a, z] is the confluent hypergeometric function \xef\x8e\xa0  \xef\x8d\xa0 F  (; a ; z). \n               "},{label:"Hypergeometric0F1Regularized",type:"keyword",info:"Hypergeometric0F1Regularized[a, z] is the regularized confluent hypergeometric function \xef\x8e\xa0  \xef\x8d\xa0 F  (a ;"},{label:"Hypergeometric1F1",type:"keyword",info:"Hypergeometric1F1[a, b, z] is the Kummer confluent hypergeometric function \xef\x8e\xa0  \xef\x8d\xa0 F  (a ; b ; z). \n   "},{label:"Hypergeometric1F1Regularized",type:"keyword",info:"Hypergeometric1F1Regularized[a, b, z] is the regularized confluent hypergeometric function \xef\x8e\xa0  \xef\x8d\xa0 F  ("},{label:"Hypergeometric2F1",type:"keyword",info:"Hypergeometric2F1[a, b, c, z] is the hypergeometric function \xef\x8e.b3  F (a, b ; c ; z). \n                 "},{label:"Hypergeometric2F1Regularized",type:"keyword",info:"Hypergeometric2F1Regularized[a, b, c, z] is the regularized hypergeometric function \xef\x8e\xa0  \xef\x8d\xa0 F  (a, b ; "},{label:"HypergeometricDistribution",type:"keyword",info:"HypergeometricDistribution[n, n    , n   ] represents a hypergeometric distribution.\n               "},{label:"HypergeometricPFQ",type:"keyword",info:"HypergeometricPFQ[{a , \xe2\x80\xa6, a }, {b , \xe2\x80\xa6, b }, z] is the generalized hypergeometric function \xef\x8e\xa0  \xef\x8d\xa0 F  (a"},{label:"HypergeometricPFQRegularized",type:"keyword",info:"HypergeometricPFQRegularized[{a , \xe2\x80\xa6, a }, {b , \xe2\x80\xa6, b }, z] is the regularized generalized hypergeomet"},{label:"HypergeometricU",type:"keyword",info:"HypergeometricU[a, b, z] is the confluent hypergeometric function U(a, b, z). "},{label:"Hyperlink",type:"keyword",info:"Hyperlink[uri] represents a hyperlink that jumps to the specified URI when clicked. Hyperlink[label,"},{label:"HyperlinkAction",type:"keyword",info:"HyperlinkAction is an option for Hyperlink that controls the behavior of following links in cloud no"},{label:"HyperlinkCreationSettings",type:"keyword",info:"System`HyperlinkCreationSettings"},{label:"Hyperplane",type:"keyword",info:"Hyperplane[n, p] represents the hyperplane with normal n passing through the point p.Hyperplane[n, c"},{label:"Hyphenation",type:"keyword",info:"Hyphenation is an option for Cell that specifies whether to allow hyphenation for words of text. "},{label:"HyphenationOptions",type:"keyword",info:"System`HyphenationOptions"},{label:"HypoexponentialDistribution",type:"keyword",info:"HypoexponentialDistribution[{\xce\xbb , \xe2\x80\xa6, \xce\xbb }] represents an m-phase hypoexponential distribution with rat"},{label:"HypothesisTestData",type:"keyword",info:"HypothesisTestData[\xe2\x80\xa6] represents hypothesis test data such as generated by DistributionFitTest, Ande"},{label:"I",type:"keyword",info:"I represents the imaginary unit Sqrt[-1]. "},{label:"IconData",type:"keyword",info:"IconData[type, value] generates an icon of the specified type assuming the value given. "},{label:"Iconize",type:"keyword",info:"Iconize[expr] gives an iconized form that can be used to stand in for expr in notebook input.Iconize"},{label:"IconizedObject",type:"keyword",info:"System`IconizedObject"},{label:"IconRules",type:"keyword",info:"IconRules is an option for CloudObject and related objects that specifies icons to use in different "},{label:"Icosahedron",type:"keyword",info:"Icosahedron[] represents a regular icosahedron centered at the origin with unit edge length.Icosahed"},{label:"Identity",type:"keyword",info:"Identity[expr] gives expr (the identity operation). "},{label:"IdentityMatrix",type:"keyword",info:"IdentityMatrix[n] gives the n\xef\x92\xa0n identity matrix. "},{label:"If",type:"keyword",info:"If[condition, t, f] gives t if condition evaluates to True, and f if it evaluates to False. If[condi"},{label:"IgnoreCase",type:"keyword",info:"IgnoreCase is an option for string manipulation and searching functions that specifies whether lower"},{label:"IgnoreDiacritics",type:"keyword",info:"IgnoreDiacritics is an option for string, grammar, and related functions that specifies whether diac"},{label:"IgnoreIsotopes",type:"keyword",info:"IgnoreIsotopes is an option for MoleculeMatchQ that determines whether isotopes should be ignored fo"},{label:"IgnorePunctuation",type:"keyword",info:"IgnorePunctuation is an option for AlphabeticSort and related functions that specifies whether to co"},{label:"IgnoreSpellCheck",type:"keyword",info:"System`IgnoreSpellCheck"},{label:"IgnoreStereochemistry",type:"keyword",info:"IgnoreStereochemistry is an option for MoleculeMatchQ that determines whether stereochemistry should"},{label:"IgnoringInactive",type:"keyword",info:"IgnoringInactive[patt] is a pattern object that, for purposes of pattern matching, ignores occurrenc"},{label:"Im",type:"keyword",info:"Im[z] gives the imaginary part of the complex number z. "},{label:"Image",type:"keyword",info:"Image[data] represents a raster image with pixel values given by the array data.Image[graphics] crea"},{label:"Image3D",type:"keyword",info:"Image3D[data] represents a 3D image with pixel values given by the array data.Image3D[{image , image"},{label:"Image3DProjection",type:"keyword",info:"Image3DProjection[image] takes a 3D image and returns a 2D image of maximum projection onto the x-y "},{label:"Image3DSlices",type:"keyword",info:"                                                                                                    "},{label:"ImageAccumulate",type:"keyword",info:"ImageAccumulate[image] gives an image in which each pixel represents a sum of all pixels below and t"},{label:"ImageAdd",type:"keyword",info:"ImageAdd[image, x] adds an amount x to each channel value in image.ImageAdd[image , image ] gives an"},{label:"ImageAdjust",type:"keyword",info:"ImageAdjust[image] adjusts the levels in image, rescaling them to cover the range 0 to 1.ImageAdjust"},{label:"ImageAlign",type:"keyword",info:"ImageAlign[ref, image] returns a version of image that is aligned with the reference image ref.Image"},{label:"ImageApply",type:"keyword",info:"ImageApply[f, image] applies the function f to the list of channel values for each pixel in image.Im"},{label:"ImageApplyIndexed",type:"keyword",info:"ImageApplyIndexed[f, image] applies the function f to the list of channel values for each pixel in i"},{label:"ImageAspectRatio",type:"keyword",info:"ImageAspectRatio[image] gives the ratio of height to width for image.ImageAspectRatio[video] gives t"},{label:"ImageAssemble",type:"keyword",info:"ImageAssemble[{{im  , \xe2\x80\xa6, im  }, \xe2\x80\xa6, {im  , \xe2\x80\xa6, im  }}] assembles a single image from an array of image"},{label:"ImageAugmentationLayer",type:"keyword",info:"ImageAugmentationLayer[{h, w}] represents a net layer that applies random image transformations to p"},{label:"ImageBoundingBoxes",type:"keyword",info:"ImageBoundingBoxes[image] gives an association of lists of bounding boxes for each identified catego"},{label:"ImageCache",type:"keyword",info:"System`ImageCache"},{label:"ImageCacheValid",type:"keyword",info:"System`ImageCacheValid"},{label:"ImageCapture",type:"keyword",info:"ImageCapture[] opens a graphical user interface for capturing images from connected cameras."},{label:"ImageCaptureFunction",type:"keyword",info:"ImageCaptureFunction is an option for ImageCapture that specifies the function to apply to images ac"},{label:"ImageCases",type:"keyword",info:"ImageCases[image] gives an association of lists of subimages for each identified category of objects"},{label:"ImageChannels",type:"keyword",info:"ImageChannels[image] gives the number of channels present in the data for the Image or Image3D objec"},{label:"ImageClip",type:"keyword",info:"ImageClip[image] clips all channel values in image to lie in the default range.ImageClip[image, {min"},{label:"ImageCollage",type:"keyword",info:"ImageCollage[{image , image , \xe2\x80\xa6}] creates a collage of images image .ImageCollage[{w  \xef\x94\xa2 image , w  \xef\x94\xa2"},{label:"ImageColorSpace",type:"keyword",info:"ImageColorSpace[image] gives the name of the color space of image."},{label:"ImageCompose",type:"keyword",info:"ImageCompose[image, overlay] gives the result of overlaying overlay onto image. ImageCompose[image, "},{label:"ImageContainsQ",type:"keyword",info:"ImageContainsQ[image, category] returns True if an instance of the specified category is detected in"},{label:"ImageContents",type:"keyword",info:"ImageContents[image] gives a dataset of identified entities in image.ImageContents[image, category] "},{label:"ImageConvolve",type:"keyword",info:"ImageConvolve[image, ker] gives the convolution of image with kernel ker."},{label:"ImageCooccurrence",type:"keyword",info:"ImageCooccurrence[image, n] gives the n\xc3\x97n co-occurrence matrix for image.ImageCooccurrence[image, n,"},{label:"ImageCorners",type:"keyword",info:"ImageCorners[image] finds corners in image and returns their coordinates.ImageCorners[image, r] find"},{label:"ImageCorrelate",type:"keyword",info:"ImageCorrelate[image, ker] gives the correlation of image with kernel ker.ImageCorrelate[image, ker,"},{label:"ImageCorrespondingPoints",type:"keyword",info:"ImageCorrespondingPoints[image , image ] finds a set of matching interest points in image  and image"},{label:"ImageCrop",type:"keyword",info:"ImageCrop[image] crops image by removing borders of uniform color. ImageCrop[image, size] crops imag"},{label:"ImageData",type:"keyword",info:"ImageData[image] gives the array of pixel values in an Image or Image3D object image.ImageData[image"},{label:"ImageDeconvolve",type:"keyword",info:"ImageDeconvolve[image, ker] gives a deconvolution of image using kernel ker."},{label:"ImageDemosaic",type:"keyword",info:"ImageDemosaic[image, cfa] reconstructs a color image using the specified color filter array cfa.Imag"},{label:"ImageDifference",type:"keyword",info:"ImageDifference[image , image ] gives an image in which each pixel is the absolute difference of the"},{label:"ImageDimensions",type:"keyword",info:"ImageDimensions[image] gives the pixel dimensions of an Image or Image3D object image.ImageDimension"},{label:"ImageDisplacements",type:"keyword",info:"ImageDisplacements[{image , image , \xe2\x80\xa6, image }] gives estimated horizontal and vertical displacement"},{label:"ImageDistance",type:"keyword",info:"ImageDistance[image , image ] returns a distance measure between image  and image . ImageDistance[im"},{label:"ImageEditMode",type:"keyword",info:"System`ImageEditMode"},{label:"ImageEffect",type:"keyword",info:'ImageEffect[image, "effect"] applies the specified image effect to image.ImageEffect[image, {"effect'},{label:"ImageExposureCombine",type:"keyword",info:"ImageExposureCombine[{image , image , \xe2\x80\xa6}] combines differently exposed images image  of the same sce"},{label:"ImageFeatureTrack",type:"keyword",info:"ImageFeatureTrack[{image , image , \xe2\x80\xa6, image }] tracks features from image  through image .ImageFeatu"},{label:"ImageFileApply",type:"keyword",info:"ImageFileApply[f, inputfile, outputfile] applies the function f to the list of channel values for ea"},{label:"ImageFileFilter",type:"keyword",info:"ImageFileFilter[f, inputfile, r, outputfile] applies the function f to the range r neighborhood of e"},{label:"ImageFileScan",type:"keyword",info:"ImageFileScan[f, inputfile] applies the function f to the list of channel values for each pixel of t"},{label:"ImageFilter",type:"keyword",info:"ImageFilter[f, image, r] applies the function f to the range-r neighborhood of each pixel in each ch"},{label:"ImageFocusCombine",type:"keyword",info:"ImageFocusCombine[{image , image , \xe2\x80\xa6}] combines differently focused images image  of the same scene "},{label:"ImageForestingComponents",type:"keyword",info:"ImageForestingComponents[image] finds a segmentation of image, returning an integer matrix in which "},{label:"ImageFormattingWidth",type:"keyword",info:"ImageFormattingWidth is an option that specifies the target width at which to wrap when formatting a"},{label:"ImageForwardTransformation",type:"keyword",info:"ImageForwardTransformation[image, f] gives an image in which each pixel at position f[{x, y}] corres"},{label:"ImageGraphics",type:"keyword",info:"ImageGraphics[image] returns the content of image in the form of scalable vector graphics.ImageGraph"},{label:"ImageHistogram",type:"keyword",info:"ImageHistogram[image] plots a histogram of the pixel levels for each channel in image.ImageHistogram"},{label:"ImageIdentify",type:"keyword",info:"ImageIdentify[image] yields the result of attempting to identify what image is a picture of. ImageId"},{label:"ImageInstanceQ",type:"keyword",info:"ImageInstanceQ[image, obj] gives True if image appears to be an instance of the object obj, and give"},{label:"ImageKeypoints",type:"keyword",info:"ImageKeypoints[image] finds key features in image and returns their coordinates.ImageKeypoints[image"},{label:"ImageLabels",type:"keyword",info:"ImageLabels is an option for image highlighting that specifies what labels to use for each highlight"},{label:"ImageLegends",type:"keyword",info:"ImageLegends is an option for image highlighting that specifies what legends to use."},{label:"ImageLevels",type:"keyword",info:"ImageLevels[image] gives a list of pixel values and counts for each channel in image. ImageLevels[im"},{label:"ImageLines",type:"keyword",info:"ImageLines[image] finds line segments in image and returns the coordinates of their endpoints.ImageL"},{label:"ImageMargins",type:"keyword",info:"ImageMargins is an option that specifies the absolute margins to leave around the image displayed fo"},{label:"ImageMarker",type:"keyword",info:"ImageMarker[pos] is a HighlightImage specification that represents a marker at position pos.ImageMar"},{label:"ImageMarkers",type:"keyword",info:"System`ImageMarkers"},{label:"ImageMeasurements",type:"keyword",info:'ImageMeasurements[image, "prop"] returns the value of property "prop" for the entire image.ImageMeas'},{label:"ImageMesh",type:"keyword",info:"ImageMesh[image] returns the foreground region in image as a BoundaryMeshRegion object."},{label:"ImageMultiply",type:"keyword",info:"ImageMultiply[image, x] multiplies each channel value in image by a factor x.ImageMultiply[image , i"},{label:"ImageOffset",type:"keyword",info:"System`ImageOffset"},{label:"ImagePad",type:"keyword",info:"ImagePad[image, m] pads image on all sides with m background pixels.ImagePad[image, m, padding] pads"},{label:"ImagePadding",type:"keyword",info:"ImagePadding is an option for graphics functions that specifies what absolute extra padding should b"},{label:"ImagePartition",type:"keyword",info:"ImagePartition[image, s] partitions an image into an array of s\xef\x92\xa0s-pixel subimages.ImagePartition[ima"},{label:"ImagePeriodogram",type:"keyword",info:"ImagePeriodogram[image] shows the squared magnitude of the discrete Fourier transform (power spectru"},{label:"ImagePerspectiveTransformation",type:"keyword",info:"ImagePerspectiveTransformation[image, m] applies a linear fractional transform specified by a matrix"},{label:"ImagePosition",type:"keyword",info:"ImagePosition[image] gives an association of image positions for each identified category of objects"},{label:"ImagePreviewFunction",type:"keyword",info:"ImagePreviewFunction is an option for CurrentImage and similar functions that specifies the function"},{label:"ImagePyramid",type:"keyword",info:"ImagePyramid[image] creates a Gaussian image pyramid formed from image.ImagePyramid[image, pyrtype] "},{label:"ImagePyramidApply",type:"keyword",info:"ImagePyramidApply[f, pyr] applies f to all images in the ImagePyramid object pyr.ImagePyramidApply[f"},{label:"ImageQ",type:"keyword",info:"ImageQ[image] yields True if image has the form of a valid Image or Image3D object, and False otherw"},{label:"ImageRangeCache",type:"keyword",info:"System`ImageRangeCache"},{label:"ImageRecolor",type:"keyword",info:"ImageRecolor[image, region \xef\x94\xa2 color] recolors pixels in image specified by region using the specified"},{label:"ImageReflect",type:"keyword",info:"ImageReflect[image] reverses image by top-bottom mirror reflection. ImageReflect[image, side] revers"},{label:"ImageRegion",type:"keyword",info:"ImageRegion is an option for cells that specifies the size and position of the bounding box within w"},{label:"ImageResize",type:"keyword",info:"ImageResize[image, width] gives a resized version of image that is width pixels wide.ImageResize[ima"},{label:"ImageResolution",type:"keyword",info:"ImageResolution is an option for Export, Rasterize, and related functions that specifies at what res"},{label:"ImageRestyle",type:"keyword",info:"ImageRestyle[image, sample] attempts to restyle image so as to follow the graphical style of sample."},{label:"ImageRotate",type:"keyword",info:"ImageRotate[image] rotates image by 90\xc2\\[Degree] about its center in the x-y plane. ImageRotate[image, \xce\xb8] rot"},{label:"ImageRotated",type:"keyword",info:"ImageRotated is an option for Export that specifies whether images should be rotated into landscape "},{label:"ImageSaliencyFilter",type:"keyword",info:"ImageSaliencyFilter[image] returns a saliency map for image."},{label:"ImageScaled",type:"keyword",info:"ImageScaled[{x, y}] gives the position of a graphical object in terms of coordinates scaled to run f"},{label:"ImageScan",type:"keyword",info:"ImageScan[f, image] evaluates f applied to each pixel of image in turn."},{label:"ImageSize",type:"keyword",info:"ImageSize is an option that specifies the overall size of an image to display for an object. "},{label:"ImageSizeAction",type:"keyword",info:"ImageSizeAction is an option for Pane and related constructs that specifies what to do if the specif"},{label:"ImageSizeCache",type:"keyword",info:"System`ImageSizeCache"},{label:"ImageSizeMultipliers",type:"keyword",info:"ImageSizeMultipliers is an option that specifies how much smaller to render graphics that appear wit"},{label:"ImageSizeRaw",type:"keyword",info:"System`ImageSizeRaw"},{label:"ImageStitch",type:"keyword",info:"ImageStitch[{image , image , \xe2\x80\xa6}] gives a composed image from an unordered list of image .ImageStitch"},{label:"ImageSubtract",type:"keyword",info:"ImageSubtract[image, x] subtracts a constant amount x from each channel value in image.ImageSubtract"},{label:"ImageTake",type:"keyword",info:"ImageTake[image, n] gives an image consisting of the first n rows of image.ImageTake[image, -n] give"},{label:"ImageTransformation",type:"keyword",info:"ImageTransformation[image, f] gives an image in which each pixel at position p corresponds to the po"},{label:"ImageTrim",type:"keyword",info:"ImageTrim[image, roi] gives the smallest subimage of image that includes the specified region of int"},{label:"ImageType",type:"keyword",info:"ImageType[image] gives the underlying type of values used for each pixel element in the Image or Ima"},{label:"ImageValue",type:"keyword",info:"ImageValue[image, pos] gives the interpolated value of image at position pos.ImageValue[image, pos, "},{label:"ImageValuePositions",type:"keyword",info:"ImageValuePositions[image, val] returns a list of pixel positions in image that exactly match the va"},{label:"ImageVectorscopePlot",type:"keyword",info:"ImageVectorscopePlot[image] plots the chrominance of image."},{label:"ImageWaveformPlot",type:"keyword",info:"ImageWaveformPlot[image] plots the waveform of image.ImageWaveformPlot[image, colorspace] plots the "},{label:"ImagingDevice",type:"keyword",info:"ImagingDevice is an option to specify what device to use for capturing images."},{label:"ImplicitRegion",type:"keyword",info:"                                                          n                                         "},{label:"Implies",type:"keyword",info:"Implies[p, q] represents the logical implication p \xe2\x87\x92 q. "},{label:"Import",type:"keyword",info:"Import[source] imports data from source, returning a Wolfram Language representation of it.Import[so"},{label:"ImportAutoReplacements",type:"keyword",info:"ImportAutoReplacements is an option for cells that specifies which replacement rules the Wolfram Lan"},{label:"ImportByteArray",type:"keyword",info:'ImportByteArray[ba, "format"] imports data in the specified format from a ByteArray object.ImportByt'},{label:"ImportedObject",type:"keyword",info:"ImportedObject[\xe2\x80\xa6] represents a piece of imported data that has no special representation in the Wolf"},{label:"ImportOptions",type:"keyword",info:"ImportOptions is an option for Interpreter and related functions that specifies what options should "},{label:"ImportString",type:"keyword",info:'ImportString["data", "format"] imports data in the specified format from a string. ImportString["dat'},{label:"ImprovementImportance",type:"keyword",info:"ImprovementImportance[rdist, t] gives the improvement importances for all components in the Reliabil"},{label:"In",type:"keyword",info:"                                                                           th\nIn[n] is a global obje"},{label:"Inactivate",type:"keyword",info:"Inactivate[expr] replaces all instances of f with Inactive[f] for symbols f used as heads in expr.In"},{label:"Inactive",type:"keyword",info:"Inactive[f] is an inactive form of f."},{label:"IncidenceGraph",type:"keyword",info:"IncidenceGraph[m] gives the graph with incidence matrix m.IncidenceGraph[{v , v , \xe2\x80\xa6}, m] gives the g"},{label:"IncidenceList",type:"keyword",info:"IncidenceList[g, v] gives a list of edges incident to vertex v.IncidenceList[g, patt] gives a list o"},{label:"IncidenceMatrix",type:"keyword",info:"IncidenceMatrix[g] gives the vertex-edge incidence matrix of the graph g.IncidenceMatrix[{v \xef\x94\xa2 w, \xe2\x80\xa6}]"},{label:"IncludeAromaticBonds",type:"keyword",info:"IncludeAromaticBonds is an option for Molecule that specifies whether aromatic bonds should be detec"},{label:"IncludeConstantBasis",type:"keyword",info:"IncludeConstantBasis is an option for LinearModelFit and other fitting functions that specifies whet"},{label:"IncludedContexts",type:"keyword",info:"IncludedContexts is an option for FullDefinition, Manipulate and related symbols that gives contexts"},{label:"IncludeDefinitions",type:"keyword",info:"IncludeDefinitions is an option for cloud and other functions that specifies whether current definit"},{label:"IncludeDirectories",type:"keyword",info:"IncludeDirectories is an option that specifies whether directories are included in evaluations."},{label:"IncludeFileExtension",type:"keyword",info:'IncludeFileExtension is an option for notebooks that specifies whether the suffix ".nb" is automatic'},{label:"IncludeGeneratorTasks",type:"keyword",info:"IncludeGeneratorTasks is an option controlling the scope of scheduled task listings."},{label:"IncludeHydrogens",type:"keyword",info:"IncludeHydrogens is an option that specifies whether hydrogen atoms should be explicitly included in"},{label:"IncludeInflections",type:"keyword",info:"IncludeInflections is an option for linguistic functions that specifies whether inflected forms of w"},{label:"IncludeMetaInformation",type:"keyword",info:"IncludeMetaInformation is an option for Import, Thumbnail, and other functions to specify what types"},{label:"IncludePods",type:"keyword",info:"IncludePods is an option for WolframAlpha that determines specific pod IDs to include in the results"},{label:"IncludeQuantities",type:"keyword",info:"IncludeQuantities is an option for DimensionalCombinations for additional quantities to include in t"},{label:"IncludeRelatedTables",type:"keyword",info:"IncludeRelatedTables is an option for RelationalDatabase that specifies whether to include tables sp"},{label:"IncludeSingularTerm",type:"keyword",info:"                                                                                                    "},{label:"IncludeWindowTimes",type:"keyword",info:"IncludeWindowTimes is an option to TimeSeriesWindow that specifies whether the endpoints in the time"},{label:"Increment",type:"keyword",info:"x ++ increases the value of x by 1, returning the old value of x. "},{label:"IndefiniteMatrixQ",type:"keyword",info:"IndefiniteMatrixQ[m] gives True if m is explicitly indefinite, and False otherwise. "},{label:"Indent",type:"keyword",info:"System`Indent"},{label:"IndentingNewlineSpacings",type:"keyword",info:"System`IndentingNewlineSpacings"},{label:"IndentMaxFraction",type:"keyword",info:"System`IndentMaxFraction"},{label:"IndependenceTest",type:"keyword",info:"IndependenceTest[v , v ] tests whether the vectors v  and v  are independent.IndependenceTest[m , m "},{label:"IndependentEdgeSetQ",type:"keyword",info:"IndependentEdgeSetQ[g, elist] yields True if the edge list elist is an independent edge set of the g"},{label:"IndependentPhysicalQuantity",type:"keyword",info:"IndependentPhysicalQuantity[string] represents a physical quantity string with no relationship to ot"},{label:"IndependentUnit",type:"keyword",info:"IndependentUnit[string] represents a unit string with no relationship to other units within a Quanti"},{label:"IndependentUnitDimension",type:"keyword",info:"IndependentUnitDimension[dim] represents the base dimension dim associated with an independent physi"},{label:"IndependentVertexSetQ",type:"keyword",info:"IndependentVertexSetQ[g, vlist] yields True if the vertex list vlist is an independent vertex set in"},{label:"Indeterminate",type:"keyword",info:"Indeterminate is a symbol that represents a numerical quantity whose magnitude cannot be determined."},{label:"IndeterminateThreshold",type:"keyword",info:"IndeterminateThreshold is an option for Classify, Predict, and related functions that specifies belo"},{label:"IndexCreationOptions",type:"keyword",info:"System`IndexCreationOptions"},{label:"Indexed",type:"keyword",info:"Indexed[expr, i] represents the component of expr with index i and formats as expr .Indexed[expr, {i"},{label:"IndexEdgeTaggedGraph",type:"keyword",info:"IndexEdgeTaggedGraph[g] sets tags of edges in the graph g to their edge indices.IndexEdgeTaggedGraph"},{label:"IndexGraph",type:"keyword",info:"IndexGraph[g] replaces the vertices of the graph g by its vertex indices.IndexGraph[g, r] replaces t"},{label:"IndexTag",type:"keyword",info:"System`IndexTag"},{label:"Inequality",type:"keyword",info:"Inequality represents a sequence of relational statements."},{label:"InexactNumberQ",type:"keyword",info:"InexactNumberQ[expr] returns True if expr is an inexact real or complex number, and returns False ot"},{label:"InexactNumbers",type:"keyword",info:"System`InexactNumbers"},{label:"InfiniteFuture",type:"keyword",info:"InfiniteFuture returns a DateObject expression representing infinite future in time."},{label:"InfiniteLine",type:"keyword",info:"InfiniteLine[{p , p }] represents the infinite straight line passing through the points p  and p . I"},{label:"InfinitePast",type:"keyword",info:"InfinitePast returns a DateObject expression representing infinite past in time."},{label:"InfinitePlane",type:"keyword",info:"InfinitePlane[{p , p , p }] represents the plane passing through the points p , p , and p .InfiniteP"},{label:"Infinity",type:"keyword",info:"Infinity or \xe2\x88\x9e is a symbol that represents a positive infinite quantity. "},{label:"Infix",type:"keyword",info:"Infix[f[e , e , \xe2\x80\xa6]] prints with f[e , e , \xe2\x80\xa6] given in default infix form: e  ~ f ~ e  ~ f ~ e  \xe2\x80\xa6. In"},{label:"InflationAdjust",type:"keyword",info:"InflationAdjust[quantity, targetdate] attempts to adjust the specified quantity purchasing power to "},{label:"InflationMethod",type:"keyword",info:"InflationMethod is an option for InflationAdjust that specifies what time series data is to be used "},{label:"Information",type:"keyword",info:"Information[expr] gives information about the expression expr. Information[expr, prop] gives the val"},{label:"InformationData",type:"keyword",info:"InformationData[assoc] is generated by Information[expr] and handle typesetting and element extracti"},{label:"InformationDataGrid",type:"keyword",info:"System`InformationDataGrid"},{label:"Inherited",type:"keyword",info:"Inherited is an option to Methods and Fields (in J/Link) and NETTypeInfo (in .NET/Link). The default"},{label:"InheritScope",type:"keyword",info:"InheritScope is an option for DynamicModule that specifies whether to attempt to bind variables refe"},{label:"InhomogeneousPoissonPointProcess",type:"keyword",info:"                                                                                                    "},{label:"InhomogeneousPoissonProcess",type:"keyword",info:"InhomogeneousPoissonProcess[\xce\xbb[t], t] represents an inhomogeneous Poisson process with intensity \xce\xbb[t]"},{label:"InitialEvaluationHistory",type:"keyword",info:"InitialEvaluationHistory is an option for functions such as BayesianMinimization that gives an initi"},{label:"Initialization",type:"keyword",info:"Initialization is an option for notebooks, cells, Dynamic, DynamicModule, Manipulate and related con"},{label:"InitializationCell",type:"keyword",info:"InitializationCell is an option for Cell that specifies whether the cell should be tagged to be eval"},{label:"InitializationCellEvaluation",type:"keyword",info:"InitializationCellEvaluation is an option for notebooks that specifies whether initialization cells "},{label:"InitializationCellWarning",type:"keyword",info:"InitializationCellWarning is an option for notebooks that specifies whether a warning should be give"},{label:"InitializationObject",type:"keyword",info:"InitializationObject[sym, loc] gives the persistent object where InitializationValue[sym, loc] is st"},{label:"InitializationObjects",type:"keyword",info:"InitializationObjects[] gives the list of all persistent initialization objects in all locations in "},{label:"InitializationValue",type:"keyword",info:"InitializationValue[sym] represents the settable persistent value with which the symbol sym will be "},{label:"Initialize",type:"keyword",info:"Initialize[sym] initializes the symbol sym from persistent values on the default persistence path.In"},{label:"InitialSeeding",type:"keyword",info:"InitialSeeding is an option for NDSolve and other functions that specifies equations that specify in"},{label:"InlineCounterAssignments",type:"keyword",info:"System`InlineCounterAssignments"},{label:"InlineCounterIncrements",type:"keyword",info:"System`InlineCounterIncrements"},{label:"InlineRules",type:"keyword",info:"System`InlineRules"},{label:"Inner",type:"keyword",info:"Inner[f, list , list , g] is a generalization of Dot in which f plays the role of multiplication and"},{label:"InnerPolygon",type:"keyword",info:"InnerPolygon[poly] gives the inner polygon of the polygon poly."},{label:"InnerPolyhedron",type:"keyword",info:"InnerPolyhedron[poly] gives the inner polyhedron of the polyhedron poly."},{label:"Inpaint",type:"keyword",info:"Inpaint[image, region] retouches parts of image that correspond to nonzero elements in region."},{label:"Input",type:"keyword",info:"Input[] interactively reads in one Wolfram Language expression. Input[prompt] requests input, displa"},{label:"InputAliases",type:"keyword",info:"InputAliases is an option for cells and notebooks which specifies additional Esc\xe2\x80\x89name\xe2\x80\x89Esc aliases to"},{label:"InputAssumptions",type:"keyword",info:"InputAssumptions is an option for WolframAlpha that specifies assumptions for current query input."},{label:"InputAutoReplacements",type:"keyword",info:"InputAutoReplacements is an option for cells and notebooks which specifies strings of characters tha"},{label:"InputField",type:"keyword",info:"InputField[] represents a blank editable input field. InputField[x] represents an editable input fie"},{label:"InputFieldBox",type:"keyword",info:"System`InputFieldBox"},{label:"InputFieldBoxOptions",type:"keyword",info:"InputFieldBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for InputF"},{label:"InputForm",type:"keyword",info:"InputForm[expr] prints as a version of expr suitable for input to the Wolfram Language. "},{label:"InputGrouping",type:"keyword",info:"System`InputGrouping"},{label:"InputNamePacket",type:"keyword",info:"InputNamePacket[string] is a WSTP packet that contains in string the name to be assigned to the next"},{label:"InputNotebook",type:"keyword",info:"InputNotebook[] gives the current notebook into which keyboard input in the front end will be direct"},{label:"InputPacket",type:"keyword",info:"InputPacket[] is a WSTP packet that indicates a prompt for input as generated by Input."},{label:"InputPorts",type:"keyword",info:"InputPorts is an option to specify the number, names or shapes of input ports for some neural net la"},{label:"InputSettings",type:"keyword",info:"System`InputSettings"},{label:"InputStream",type:"keyword",info:'InputStream["name", n] is an object that represents an input stream for functions such as Read and F'},{label:"InputString",type:"keyword",info:"InputString[] interactively reads in a character string. InputString[prompt] requests input, display"},{label:"InputStringPacket",type:"keyword",info:"InputStringPacket[] is a WSTP packet that requests input in string form."},{label:"InputToBoxFormPacket",type:"keyword",info:"InputToBoxFormPacket is an internal symbol used for formatting."},{label:"Insert",type:"keyword",info:"Insert[list, elem, n] inserts elem at position n in list. If n is negative, the position is counted "},{label:"InsertionFunction",type:"keyword",info:"InsertionFunction is an option for template functions that specifies how expressions are to be proce"},{label:"InsertionPointObject",type:"keyword",info:"System`InsertionPointObject"},{label:"InsertLinebreaks",type:"keyword",info:'InsertLinebreaks["string"] inserts newline characters into string to make a string in which no line '},{label:"InsertResults",type:"keyword",info:"InsertResults is an option for NotebookEvaluate that determines whether to place the results of eval"},{label:"Inset",type:"keyword",info:"Inset[obj] represents an object obj inset in a graphic. Inset[obj, pos] specifies that the inset sho"},{label:"Inset3DBox",type:"keyword",info:"System`Inset3DBox"},{label:"Inset3DBoxOptions",type:"keyword",info:"Inset3DBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Inset3DBo"},{label:"InsetBox",type:"keyword",info:"System`InsetBox"},{label:"InsetBoxOptions",type:"keyword",info:"InsetBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for InsetBox ob"},{label:"Insphere",type:"keyword",info:"                                                                                                    "},{label:"Install",type:"keyword",info:'Install["name"] starts a WSTP-compatible external program and installs Wolfram Language definitions '},{label:"InstallService",type:"keyword",info:'InstallService["url"] installs the web service operations in the WSDL description at the URL given.I'},{label:"InstanceNormalizationLayer",type:"keyword",info:"InstanceNormalizationLayer[] is equivalent to NormalizationLayer[]."},{label:"InString",type:"keyword",info:"                                                                        th\nInString[n] is a global o"},{label:"Integer",type:"keyword",info:"Integer is the head used for integers. "},{label:"IntegerDigits",type:"keyword",info:"IntegerDigits[n] gives a list of the decimal digits in the integer n. IntegerDigits[n, b] gives a li"},{label:"IntegerExponent",type:"keyword",info:"IntegerExponent[n, b] gives the highest power of b that divides n. "},{label:"IntegerLength",type:"keyword",info:"IntegerLength[n] gives the number of digits in the base 10 representation of the integer n.IntegerLe"},{label:"IntegerName",type:"keyword",info:"IntegerName[n] gives a string containing the full English name of the integer n.IntegerName[n, quali"},{label:"IntegerPart",type:"keyword",info:"IntegerPart[x] gives the integer part of x. "},{label:"IntegerPartitions",type:"keyword",info:"IntegerPartitions[n] gives a list of all possible ways to partition the integer n into smaller integ"},{label:"IntegerQ",type:"keyword",info:"IntegerQ[expr] gives True if expr is an integer, and False otherwise. "},{label:"IntegerReverse",type:"keyword",info:"IntegerReverse[n] gives the integer whose digits are reversed with respect to those of the integer n"},{label:"Integers",type:"keyword",info:"Integers represents the domain of integers, as in x \xe2\x88\x88 Integers. "},{label:"IntegerString",type:"keyword",info:"IntegerString[n] gives a string consisting of the decimal digits in the integer n. IntegerString[n, "},{label:"Integral",type:"keyword",info:"System`Integral"},{label:"Integrate",type:"keyword",info:"                                                                                                    "},{label:"Interactive",type:"keyword",info:"Interactive is an option that specifies whether a function should create a user prompt when mimickin"},{label:"InteractiveTradingChart",type:"keyword",info:"InteractiveTradingChart[{{date , {open , high , low , close , volume }}, \xe2\x80\xa6}] makes a chart showing p"},{label:"InterfaceSwitched",type:"keyword",info:"InterfaceSwitched[\xef\x84\x93 size  \xef\x94\xa2 expr , size  \xef\x94\xa2 expr , \xe2\x80\xa6|>] is a construct that behaves as if it were exp"},{label:"Interlaced",type:"keyword",info:"System`Interlaced"},{label:"Interleaving",type:"keyword",info:"Interleaving is an option for Image and related functions that specifies whether data corresponding "},{label:"InternallyBalancedDecomposition",type:"keyword",info:"InternallyBalancedDecomposition[ssm] yields the internally balanced decomposition of the state-space"},{label:"InterpolatingFunction",type:"keyword",info:"InterpolatingFunction[domain, table] represents an approximate function whose values are found by in"},{label:"InterpolatingPolynomial",type:"keyword",info:"InterpolatingPolynomial[{f , f , \xe2\x80\xa6}, x] constructs an interpolating polynomial in x which reproduces"},{label:"Interpolation",type:"keyword",info:"Interpolation[{f , f , \xe2\x80\xa6}] constructs an interpolation of the function values f , assumed to corresp"},{label:"InterpolationOrder",type:"keyword",info:"InterpolationOrder is an option for Interpolation, as well as ListLinePlot, ListPlot3D, ListContourP"},{label:"InterpolationPoints",type:"keyword",info:"InterpolationPoints is an option to SmoothKernelDistribution and FunctionInterpolation that specifie"},{label:"InterpolationPrecision",type:"keyword",info:"System`InterpolationPrecision"},{label:"Interpretation",type:"keyword",info:"Interpretation[e, expr] represents an object that displays as e, but is interpreted as the unevaluat"},{label:"InterpretationBox",type:"keyword",info:"InterpretationBox[boxes, expr] is a low-level box construct that displays as boxes but is interprete"},{label:"InterpretationBoxOptions",type:"keyword",info:"InterpretationBoxOptions is an option for selections that specifies settings for InterpretationBox c"},{label:"InterpretationFunction",type:"keyword",info:"InterpretationFunction is an option for TemplateBox that specifies how the box is to be evaluated."},{label:"Interpreter",type:"keyword",info:"Interpreter[form] represents an interpreter object that can be applied to an input to try to interpr"},{label:"InterpretTemplate",type:"keyword",info:"InterpretTemplate is an experimental function used for interpreting Mathematica input."},{label:"InterquartileRange",type:"keyword",info:"InterquartileRange[list] gives the difference between the upper and lower quartiles for the elements"},{label:"Interrupt",type:"keyword",info:"Interrupt[] generates an interrupt. "},{label:"InterruptSettings",type:"keyword",info:"System`InterruptSettings"},{label:"IntersectedEntityClass",type:"keyword",info:"IntersectedEntityClass[class , class , \xe2\x80\xa6] represents an entity class containing all the entities com"},{label:"IntersectingQ",type:"keyword",info:"IntersectingQ[list , list ] yields True if list  and list  have at least one element in common, and "},{label:"Intersection",type:"keyword",info:"Intersection[list , list , \xe2\x80\xa6] gives a sorted list of the elements common to all the list . \n        "},{label:"Interval",type:"keyword",info:"Interval[{min, max}] represents the range of values between min and max. Interval[{min , max }, {min"},{label:"IntervalIntersection",type:"keyword",info:"IntervalIntersection[interval , interval , \xe2\x80\xa6] gives the interval representing all points common to e"},{label:"IntervalMarkers",type:"keyword",info:"IntervalMarkers is an option for plotting functions such as ListPlot and BarChart that specifies how"},{label:"IntervalMarkersStyle",type:"keyword",info:"IntervalMarkersStyle  is an option for plotting functions that specifies styles in which uncertainty"},{label:"IntervalMemberQ",type:"keyword",info:"IntervalMemberQ[interval, x] gives True if the number x lies within the specified interval, and Fals"},{label:"IntervalSlider",type:"keyword",info:"IntervalSlider[{xmin, xmax}] represents a slider with setting {xmin, xmax} in the range 0 to 1.Inter"},{label:"IntervalUnion",type:"keyword",info:"IntervalUnion[interval , interval , \xe2\x80\xa6] gives an interval containing the set of all points in any of "},{label:"Into",type:"keyword",info:"System`Into"},{label:"Inverse",type:"keyword",info:"Inverse[m] gives the inverse of a square matrix m. "},{label:"InverseBetaRegularized",type:"keyword",info:"InverseBetaRegularized[s, a, b] gives the inverse of the regularized incomplete beta function. "},{label:"InverseBilateralLaplaceTransform",type:"keyword",info:"InverseBilateralLaplaceTransform[expr, s, t] gives the inverse bilateral Laplace transform of expr. "},{label:"InverseBilateralZTransform",type:"keyword",info:"InverseBilateralZTransform[expr, z, n] gives the inverse bilateral Z transform of expr.InverseBilate"},{label:"InverseCDF",type:"keyword",info:"InverseCDF[dist, q] gives the inverse of the cumulative distribution function for the distribution d"},{label:"InverseChiSquareDistribution",type:"keyword",info:"                                                       2                                            "},{label:"InverseContinuousWaveletTransform",type:"keyword",info:"InverseContinuousWaveletTransform[cwd] gives the inverse continuous wavelet transform of a Continuou"},{label:"InverseDistanceTransform",type:"keyword",info:"InverseDistanceTransform[image] gives the inverse distance transform of image, returning the result "},{label:"InverseEllipticNomeQ",type:"keyword",info:"InverseEllipticNomeQ[q] gives the parameter m corresponding to the nome q in an elliptic function. "},{label:"InverseErf",type:"keyword",info:"InverseErf[s] gives the inverse error function obtained as the solution for z in s = erf(z). "},{label:"InverseErfc",type:"keyword",info:"InverseErfc[s] gives the inverse complementary error function obtained as the solution for z in s = "},{label:"InverseFourier",type:"keyword",info:"InverseFourier[list] finds the discrete inverse Fourier transform of a list of complex numbers.Inver"},{label:"InverseFourierCosTransform",type:"keyword",info:"InverseFourierCosTransform[expr, \xcf\x89, t] gives the symbolic inverse Fourier cosine transform of expr. "},{label:"InverseFourierSequenceTransform",type:"keyword",info:"InverseFourierSequenceTransform[expr, \xcf\x89, n] gives the inverse discrete-time Fourier transform of exp"},{label:"InverseFourierSinTransform",type:"keyword",info:"InverseFourierSinTransform[expr, \xcf\x89, t] gives the symbolic inverse Fourier sine transform of expr. In"},{label:"InverseFourierTransform",type:"keyword",info:"InverseFourierTransform[expr, \xcf\x89, t] gives the symbolic inverse Fourier transform of expr. InverseFou"},{label:"InverseFunction",type:"keyword",info:"                                                                                                    "},{label:"InverseFunctions",type:"keyword",info:"InverseFunctions is an option for Solve and related functions that specifies whether inverse functio"},{label:"InverseGammaDistribution",type:"keyword",info:"InverseGammaDistribution[\xce\\[PlusMinus], \xce.b2] represents an inverse gamma distribution with shape parameter \xce\\[PlusMinus] and s"},{label:"InverseGammaRegularized",type:"keyword",info:"InverseGammaRegularized[a, s] gives the inverse of the regularized incomplete gamma function. "},{label:"InverseGaussianDistribution",type:"keyword",info:"InverseGaussianDistribution[\xce\xbc, \xce\xbb] represents an inverse Gaussian distribution with mean \xce\xbc and scale "},{label:"InverseGudermannian",type:"keyword",info:"                                                                 -1\nInverseGudermannian[z] gives the"},{label:"InverseHankelTransform",type:"keyword",info:"InverseHankelTransform[expr, s, r] gives the inverse Hankel transform of order 0 for expr.InverseHan"},{label:"InverseHaversine",type:"keyword",info:"                                                            -1\nInverseHaversine[z] gives the inverse"},{label:"InverseImagePyramid",type:"keyword",info:"InverseImagePyramid[pyr] reconstructs an image from an ImagePyramid object pyr.InverseImagePyramid[p"},{label:"InverseJacobiCD",type:"keyword",info:"                                                                   -1\nInverseJacobiCD[v, m] gives th"},{label:"InverseJacobiCN",type:"keyword",info:"                                                                   -1\nInverseJacobiCN[v, m] gives th"},{label:"InverseJacobiCS",type:"keyword",info:"                                                                   -1\nInverseJacobiCS[v, m] gives th"},{label:"InverseJacobiDC",type:"keyword",info:"                                                                   -1\nInverseJacobiDC[v, m] gives th"},{label:"InverseJacobiDN",type:"keyword",info:"                                                                   -1\nInverseJacobiDN[v, m] gives th"},{label:"InverseJacobiDS",type:"keyword",info:"                                                                   -1\nInverseJacobiDS[v, m] gives th"},{label:"InverseJacobiNC",type:"keyword",info:"                                                                   -1\nInverseJacobiNC[v, m] gives th"},{label:"InverseJacobiND",type:"keyword",info:"                                                                   -1\nInverseJacobiND[v, m] gives th"},{label:"InverseJacobiNS",type:"keyword",info:"                                                                   -1\nInverseJacobiNS[v, m] gives th"},{label:"InverseJacobiSC",type:"keyword",info:"                                                                   -1\nInverseJacobiSC[v, m] gives th"},{label:"InverseJacobiSD",type:"keyword",info:"                                                                   -1\nInverseJacobiSD[v, m] gives th"},{label:"InverseJacobiSN",type:"keyword",info:"                                                                   -1\nInverseJacobiSN[v, m] gives th"},{label:"InverseLaplaceTransform",type:"keyword",info:"                                                                                                    "},{label:"InverseMellinTransform",type:"keyword",info:"InverseMellinTransform[expr, s, x] gives the inverse Mellin transform of expr. "},{label:"InversePermutation",type:"keyword",info:"InversePermutation[perm] returns the inverse of permutation perm."},{label:"InverseRadon",type:"keyword",info:"InverseRadon[image] gives the inverse discrete Radon transform of image.InverseRadon[image, {w, h}] "},{label:"InverseRadonTransform",type:"keyword",info:"InverseRadonTransform[expr, {p, \xcf\x95}, {x, y}] gives the inverse Radon transform of expr."},{label:"InverseSeries",type:"keyword",info:"InverseSeries[s] takes the series s, and gives a series for the inverse of the function represented "},{label:"InverseShortTimeFourier",type:"keyword",info:"InverseShortTimeFourier[input] reconstructs the signal from short-time Fourier data.InverseShortTime"},{label:"InverseSpectrogram",type:"keyword",info:"InverseSpectrogram[data] reconstructs the signal from the magnitude spectrogram data.InverseSpectrog"},{label:"InverseSurvivalFunction",type:"keyword",info:"InverseSurvivalFunction[dist, q] gives the inverse of the survival function for the distribution dis"},{label:"InverseTransformedRegion",type:"keyword",info:"                                                                                    n\nInverseTransfo"},{label:"InverseWaveletTransform",type:"keyword",info:"InverseWaveletTransform[dwd] gives the inverse wavelet transform of a DiscreteWaveletData object dwd"},{label:"InverseWeierstrassP",type:"keyword",info:"InverseWeierstrassP[p, {g , g }] gives a value of u for which the Weierstrass function \xe2\x84\x98 (u ; g , g "},{label:"InverseWishartMatrixDistribution",type:"keyword",info:"InverseWishartMatrixDistribution[\xce\xbd, \xce\xa3] represents an inverse Wishart matrix distribution with \xce\xbd degr"},{label:"InverseZTransform",type:"keyword",info:"InverseZTransform[expr, z, n] gives the inverse Z transform of expr. InverseZTransform[expr, {z , z "},{label:"Invisible",type:"keyword",info:"Invisible[expr] displays as space that is the same size as the formatted version of expr."},{label:"InvisibleApplication",type:"keyword",info:"System`InvisibleApplication"},{label:"InvisibleTimes",type:"keyword",info:"System`InvisibleTimes"},{label:"IPAddress",type:"keyword",info:'IPAddress["address"] is a symbolic representation of an IPv4 or IPv6 IP address.'},{label:"IrreduciblePolynomialQ",type:"keyword",info:"IrreduciblePolynomialQ[poly] tests whether poly is an irreducible polynomial over the rationals.Irre"},{label:"IslandData",type:"keyword",info:"IslandData[entity, property] gives the value of the specified property for the island entity.IslandD"},{label:"IsolatingInterval",type:"keyword",info:"IsolatingInterval[a] gives a rational isolating interval for the algebraic number a.IsolatingInterva"},{label:"IsomorphicGraphQ",type:"keyword",info:"IsomorphicGraphQ[g , g ] yields True if the graphs g  and g  are isomorphic, and False otherwise.\n  "},{label:"IsomorphicSubgraphQ",type:"keyword",info:"IsomorphicSubgraphQ[g , g ] yields True if the graph g  is isomorphic to a subgraph of the graph g ."},{label:"IsotopeData",type:"keyword",info:'IsotopeData[{Z, A}, "property"] gives the value of the specified property for the isotope with atomi'},{label:"Italic",type:"keyword",info:"Italic represents an italic font slant."},{label:"Item",type:"keyword",info:"Item[expr, options] represents an item within constructs such as Grid, Overlay, and Manipulate that "},{label:"ItemAspectRatio",type:"keyword",info:"ItemAspectRatio is an option for GraphicsGrid which specifies the ratio of height to width for the r"},{label:"ItemBox",type:"keyword",info:"System`ItemBox"},{label:"ItemBoxOptions",type:"keyword",info:"ItemBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for ItemBox obje"},{label:"ItemDisplayFunction",type:"keyword",info:"ItemDisplayFunction is an option for Dataset that specifies a function to apply to items before disp"},{label:"ItemSize",type:"keyword",info:"ItemSize is an option for Grid, Column, and related constructs that specifies the sizes to allow for"},{label:"ItemStyle",type:"keyword",info:"ItemStyle is an option for Dataset, Grid and related constructs that specifies styles to use for ite"},{label:"ItoProcess",type:"keyword",info:"ItoProcess[{a, b}, x, t] represents an Ito process x(t), where \xef\x9d\x8c x(t) \xef\x9f\x99 a(t, x(t)) \xef\x9d\x8c t + b(t, x(t)) "},{label:"JaccardDissimilarity",type:"keyword",info:"JaccardDissimilarity[u, v] gives the Jaccard dissimilarity between Boolean vectors u and v."},{label:"JacobiAmplitude",type:"keyword",info:"JacobiAmplitude[u, m] gives the amplitude am(u \xef\x90.b2 m) for Jacobi elliptic functions. "},{label:"Jacobian",type:"keyword",info:"Jacobian is an option for FindRoot. Jacobian -> Automatic attempts symbolic computation of the Jacob"},{label:"JacobiCD",type:"keyword",info:"JacobiCD[u, m] gives the Jacobi elliptic function cd(u | m)."},{label:"JacobiCN",type:"keyword",info:"JacobiCN[u, m] gives the Jacobi elliptic function cn(u | m)."},{label:"JacobiCS",type:"keyword",info:"JacobiCS[u, m] gives the Jacobi elliptic function cs(u | m)."},{label:"JacobiDC",type:"keyword",info:"JacobiDC[u, m] gives the Jacobi elliptic function dc(u | m)."},{label:"JacobiDN",type:"keyword",info:"JacobiDN[u, m] gives the Jacobi elliptic function dn(u | m)."},{label:"JacobiDS",type:"keyword",info:"JacobiDS[u, m] gives the Jacobi elliptic function ds(u | m)."},{label:"JacobiEpsilon",type:"keyword",info:"JacobiEpsilon[u, m] gives the Jacobi epsilon function \xe2\x84\\[Degree](u | m)."},{label:"JacobiNC",type:"keyword",info:"JacobiNC[u, m] gives the Jacobi elliptic function nc(u | m)."},{label:"JacobiND",type:"keyword",info:"JacobiND[u, m] gives the Jacobi elliptic function nd(u | m)."},{label:"JacobiNS",type:"keyword",info:"JacobiNS[u, m] gives the Jacobi elliptic function ns(u | m)."},{label:"JacobiP",type:"keyword",info:"                                                 (a, b)\nJacobiP[n, a, b, x] gives the Jacobi polynom"},{label:"JacobiSC",type:"keyword",info:"JacobiSC[u, m] gives the Jacobi elliptic function sc(u | m)."},{label:"JacobiSD",type:"keyword",info:"JacobiSD[u, m] gives the Jacobi elliptic function sd(u | m)."},{label:"JacobiSN",type:"keyword",info:"JacobiSN[u, m] gives the Jacobi elliptic function sn(u | m)."},{label:"JacobiSymbol",type:"keyword",info:"                                            n\nJacobiSymbol[n, m] gives the Jacobi symbol (-). \n     "},{label:"JacobiZeta",type:"keyword",info:"JacobiZeta[\xcf\x95, m] gives the Jacobi zeta function Z(\xcf\x95 \xef\x90.b2 m). "},{label:"JacobiZN",type:"keyword",info:"JacobiZN[u, m] gives the Jacobi zeta function zn(u | m)."},{label:"JankoGroupJ1",type:"keyword",info:"JankoGroupJ1[] represents the sporadic simple Janko group J .\n                                      "},{label:"JankoGroupJ2",type:"keyword",info:"JankoGroupJ2[] represents the sporadic simple Janko group J .\n                                      "},{label:"JankoGroupJ3",type:"keyword",info:"JankoGroupJ3[] represents the sporadic simple Janko group J .\n                                      "},{label:"JankoGroupJ4",type:"keyword",info:"JankoGroupJ4[] represents the sporadic simple Janko group J .\n                                      "},{label:"JarqueBeraALMTest",type:"keyword",info:"JarqueBeraALMTest[data] tests whether data is normally distributed using the Jarque\xe2\x80\x93Bera ALM test.Ja"},{label:"JohnsonDistribution",type:"keyword",info:'JohnsonDistribution["SB", \xce.b3, \xce.b4, \xce\xbc, \xcf\x83] represents a bounded Johnson distribution with shape parameter'},{label:"Join",type:"keyword",info:"Join[list , list , \xe2\x80\xa6] concatenates lists or other expressions that share the same head.Join[list , l"},{label:"JoinAcross",type:"keyword",info:"JoinAcross[{a , a , \xe2\x80\xa6}, {b , b , \xe2\x80\xa6}, key] gives a list of associations obtained by joining those pai"},{label:"Joined",type:"keyword",info:"Joined is an option for ListPlot and related functions that specifies whether points in each dataset"},{label:"JoinedCurve",type:"keyword",info:"JoinedCurve[{segment , segment , \xe2\x80\xa6}] represents a curve consisting of segment  followed by segment  "},{label:"JoinedCurveBox",type:"keyword",info:"System`JoinedCurveBox"},{label:"JoinedCurveBoxOptions",type:"keyword",info:"JoinedCurveBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Joine"},{label:"JoinForm",type:"keyword",info:"JoinForm[type] is a graphics directive that specifies what type of joins should be used to connect s"},{label:"JordanDecomposition",type:"keyword",info:"JordanDecomposition[m] yields the Jordan decomposition of a square matrix m. The result is a list {s"},{label:"JordanModelDecomposition",type:"keyword",info:"JordanModelDecomposition[ssm] yields the Jordan decomposition of the state-space model ssm. "},{label:"JulianDate",type:"keyword",info:"JulianDate[] gives the current number of days since noon on November 24, 4714 BCE in the GMT time zo"},{label:"JuliaSetBoettcher",type:"keyword",info:"JuliaSetBoettcher[c, z] gives the B\xc3\\[Paragraph]ttcher coordinate of z with respect to the quadratic Julia set J"},{label:"JuliaSetIterationCount",type:"keyword",info:"                                                                                                    "},{label:"JuliaSetPlot",type:"keyword",info:"                                                                                                    "},{label:"JuliaSetPoints",type:"keyword",info:"                                                                                                    "},{label:"K",type:"keyword",info:"K is a default generic name for a summation index in a symbolic sum."},{label:"KagiChart",type:"keyword",info:"KagiChart[{{date , p }, {date , p }, \xe2\x80\xa6}] makes a Kagi chart with prices p  at date date .KagiChart[{"},{label:"KaiserBesselWindow",type:"keyword",info:"KaiserBesselWindow[x] represents a Kaiser\xe2\x80\x93Bessel window function of x."},{label:"KaiserWindow",type:"keyword",info:"KaiserWindow[x] represents a Kaiser window function of x.KaiserWindow[x, \xce\\[PlusMinus]] uses the parameter \xce\\[PlusMinus].\n"},{label:"KalmanEstimator",type:"keyword",info:"KalmanEstimator[ssm, {w, v}] constructs the Kalman estimator for the StateSpaceModel ssm with proces"},{label:"KalmanFilter",type:"keyword",info:"KalmanFilter[tproc, data] filters data using the time series model given by tproc."},{label:"KarhunenLoeveDecomposition",type:"keyword",info:"KarhunenLoeveDecomposition[{a , a , \xe2\x80\xa6}] gives the Karhunen\xe2\x80\x93Loeve transform {{b , b , \xe2\x80\xa6}, m} of the n"},{label:"KaryTree",type:"keyword",info:"KaryTree[n] gives a binary tree with n vertices.KaryTree[n, k] gives a k-ary tree with n vertices.\n"},{label:"KatzCentrality",type:"keyword",info:"KatzCentrality[g, \xce\\[PlusMinus]] gives a list of Katz centralities for the vertices in the graph g and weight \xce\\[PlusMinus]."},{label:"KCoreComponents",type:"keyword",info:"KCoreComponents[g, k] gives the k-core components of the underlying simple graph of g.KCoreComponent"},{label:"KDistribution",type:"keyword",info:"KDistribution[\xce\xbd, w] represents a K distribution with shape parameters \xce\xbd and w."},{label:"KEdgeConnectedComponents",type:"keyword",info:"KEdgeConnectedComponents[g, k] gives the k-edge-connected components of the graph g.KEdgeConnectedCo"},{label:"KEdgeConnectedGraphQ",type:"keyword",info:"KEdgeConnectedGraphQ[g, k] yields True if the graph g is k-edge-connected and False otherwise."},{label:"KeepExistingVersion",type:"keyword",info:"KeepExistingVersion is an option for PacletInstall and PacletInstallSubmit that specifies whether an"},{label:"KelvinBei",type:"keyword",info:"KelvinBei[z] gives the Kelvin function bei(z).KelvinBei[n, z] gives the Kelvin function bei (z). \n  "},{label:"KelvinBer",type:"keyword",info:"KelvinBer[z] gives the Kelvin function ber(z).KelvinBer[n, z] gives the Kelvin function ber (z). \n  "},{label:"KelvinKei",type:"keyword",info:"KelvinKei[z] gives the Kelvin function kei(z).KelvinKei[n, z] gives the Kelvin function kei (z). \n  "},{label:"KelvinKer",type:"keyword",info:"KelvinKer[z] gives the Kelvin function ker(z).KelvinKer[n, z] gives the Kelvin function ker (z). \n  "},{label:"KendallTau",type:"keyword",info:"                                                                                                    "},{label:"KendallTauTest",type:"keyword",info:"KendallTauTest[v , v ] tests whether the vectors v  and v  are independent.KendallTauTest[m , m ] te"},{label:"KernelExecute",type:"keyword",info:"System`KernelExecute"},{label:"KernelFunction",type:"keyword",info:"KernelFunction[f] represents a function to be evaluated in the Wolfram Engine kernel, even when it i"},{label:"KernelMixtureDistribution",type:"keyword",info:"KernelMixtureDistribution[{x , x , \xe2\x80\xa6}] represents a kernel mixture distribution based on the data va"},{label:"KernelObject",type:"keyword",info:"KernelObject[n, name, \xe2\x80\xa6] represents a kernel available for parallel computing."},{label:"Kernels",type:"keyword",info:"Kernels[] gives the list of running kernels available for parallel computing."},{label:"Ket",type:"keyword",info:"System`Ket"},{label:"Key",type:"keyword",info:"Key[key] represents a key used to access a value in an association.Key[key][assoc] extracts the valu"},{label:"KeyCollisionFunction",type:"keyword",info:"KeyCollisionFunction is an option for JoinAcross that specifies how to handle pairs of elements that"},{label:"KeyComplement",type:"keyword",info:"KeyComplement[{assoc   , assoc , assoc , \xe2\x80\xa6}] generates an association in which only elements whose k"},{label:"KeyDrop",type:"keyword",info:"KeyDrop[assoc, {key , key , \xe2\x80\xa6}] yields an association from which elements with keys key  have been d"},{label:"KeyDropFrom",type:"keyword",info:"KeyDropFrom[a, key] changes the association a by dropping the element with the specified key.KeyDrop"},{label:"KeyExistsQ",type:"keyword",info:"KeyExistsQ[assoc, key] returns True if the specified key exists in the association assoc, and False "},{label:"KeyFreeQ",type:"keyword",info:"KeyFreeQ[assoc, form] yields True if no key in the association assoc matches form, and yields False "},{label:"KeyIntersection",type:"keyword",info:"KeyIntersection[{assoc , assoc , \xe2\x80\xa6}] generates a list of associations in which only elements whose k"},{label:"KeyMap",type:"keyword",info:"KeyMap[f, \xef\x84\x93 key  \xef\x94\xa2 val , key  \xef\x94\xa2 val , \xe2\x80\xa6 \xef\x84\x94] maps f over the keys in an association, giving \xef\x84\x93 f[key ] "},{label:"KeyMemberQ",type:"keyword",info:"KeyMemberQ[assoc, form] yields True if a key in the association assoc matches form, and False otherw"},{label:"KeypointStrength",type:"keyword",info:"KeypointStrength is an option for ImageKeypoints and related functions to specify a minimum strength"},{label:"Keys",type:"keyword",info:"Keys[\xef\x84\x93 key  \xef\x94\xa2 val , key  \xef\x94\xa2 val , \xe2\x80\xa6 \xef\x84\x94] gives a list of the keys key  in an association.Keys[{key  \xef\x94\xa2 v"},{label:"KeySelect",type:"keyword",info:"KeySelect[assoc, crit] selects elements in the association assoc for which crit applied to their key"},{label:"KeySort",type:"keyword",info:"KeySort[assoc] orders the elements of an association by sorting its keys.KeySort[assoc, p] orders th"},{label:"KeySortBy",type:"keyword",info:"KeySortBy[assoc, f] sorts the elements of an association in the order defined by applying f to each "},{label:"KeyTake",type:"keyword",info:"KeyTake[assoc, {key , key , \xe2\x80\xa6}] yields an association containing only the elements with keys key .Ke"},{label:"KeyUnion",type:"keyword",info:"KeyUnion[{assoc , assoc , \xe2\x80\xa6}] generates a list of associations in which each association has the uni"},{label:"KeyValueMap",type:"keyword",info:"KeyValueMap[f, \xef\x84\x93 key  \xef\x94\xa2 val , key  \xef\x94\xa2 val , \xe2\x80\xa6 \xef\x84\x94] gives the list {f[key , val ], f[key , val ], \xe2\x80\xa6}.Key"},{label:"KeyValuePattern",type:"keyword",info:"KeyValuePattern[{patt , \xe2\x80\xa6}] is a pattern object that represents an association or list of rules that"},{label:"Khinchin",type:"keyword",info:"Khinchin is Khinchin's constant, with numerical value \xe2\x89\x83 2.68545. "},{label:"KillProcess",type:"keyword",info:"KillProcess[proc] kills the external process represented by the ProcessObject proc."},{label:"KirchhoffGraph",type:"keyword",info:"KirchhoffGraph[kmat] gives the graph with Kirchhoff matrix kmat.KirchhoffGraph[{v , v , \xe2\x80\xa6}, kmat] gi"},{label:"KirchhoffMatrix",type:"keyword",info:"KirchhoffMatrix[g] gives the Kirchhoff matrix of the graph g.KirchhoffMatrix[{v \xef\x94\xa2 w, \xe2\x80\xa6}] uses rules "},{label:"KleinInvariantJ",type:"keyword",info:"KleinInvariantJ[\xcf\x84] gives the Klein invariant modular elliptic function J(\xcf\x84). "},{label:"KnapsackSolve",type:"keyword",info:"KnapsackSolve[{cost , cost , \xe2\x80\xa6}, maxtotalcost] solves the knapsack problem of finding the maximum nu"},{label:"KnightTourGraph",type:"keyword",info:"KnightTourGraph[m, n] gives a Knight's tour graph on an m\xef\x92\xa0n chessboard."},{label:"KnotData",type:"keyword",info:'KnotData[knot, "property"] gives the specified property for a knot.KnotData[knot] gives an image of '},{label:"KnownUnitQ",type:"keyword",info:"KnownUnitQ[expr] returns True if expr is a canonical unit, and False otherwise."},{label:"KochCurve",type:"keyword",info:"                                                        th\nKochCurve[n] gives the line segments repr"},{label:"KolmogorovSmirnovTest",type:"keyword",info:"KolmogorovSmirnovTest[data] tests whether data is normally distributed using the Kolmogorov\xe2\x80\x93Smirnov "},{label:"KroneckerDelta",type:"keyword",info:"KroneckerDelta[n , n , \xe2\x80\xa6] gives the Kronecker delta \xce.b4       , equal to 1 if all the n  are equal, an"},{label:"KroneckerModelDecomposition",type:"keyword",info:"KroneckerModelDecomposition[ssm] yields the Kronecker decomposition of a descriptor state-space mode"},{label:"KroneckerProduct",type:"keyword",info:"KroneckerProduct[m , m , \xe2\x80\xa6] constructs the Kronecker product of the arrays m .\n                  1  "},{label:"KroneckerSymbol",type:"keyword",info:"                                                  n\nKroneckerSymbol[n, m] gives the Kronecker symbol"},{label:"KuiperTest",type:"keyword",info:"KuiperTest[data] tests whether data is normally distributed using the Kuiper test.KuiperTest[data, d"},{label:"KumaraswamyDistribution",type:"keyword",info:"KumaraswamyDistribution[\xce\\[PlusMinus], \xce.b2] represents a Kumaraswamy distribution with shape parameters \xce\\[PlusMinus] and \xce.b2."},{label:"Kurtosis",type:"keyword",info:"Kurtosis[list] gives the coefficient of kurtosis for the elements in list.Kurtosis[dist] gives the c"},{label:"KuwaharaFilter",type:"keyword",info:"KuwaharaFilter[data, r] computes for each element p in data the variance of the values in the four ("},{label:"KVertexConnectedComponents",type:"keyword",info:"KVertexConnectedComponents[g, k] gives the k-vertex-connected components of the graph g.KVertexConne"},{label:"KVertexConnectedGraphQ",type:"keyword",info:"KVertexConnectedGraphQ[g, k] yields True if the graph g is k-vertex-connected and False otherwise."},{label:"LABColor",type:"keyword",info:"LABColor[l, a, b] represents a color in the Lab color space with lightness l and color components a "},{label:"Label",type:"keyword",info:"Label[tag] represents a point in a compound expression to which control can be transferred using Got"},{label:"Labeled",type:"keyword",info:"Labeled[expr, lbl] displays expr labeled with lbl. Labeled[expr, lbl, pos] places lbl at a position "},{label:"LabeledSlider",type:"keyword",info:"System`LabeledSlider"},{label:"LabelingFunction",type:"keyword",info:"LabelingFunction is an option for data visualization functions to automatically label elements of a "},{label:"LabelingSize",type:"keyword",info:"LabelingSize is an option to visualization functions that specifies the size to be used for labels a"},{label:"LabelStyle",type:"keyword",info:"LabelStyle is an option for formatting and related constructs that specifies the style to use in dis"},{label:"LabelVisibility",type:"keyword",info:"LabelVisibility is an option for Callout and Labeled in plotting functions that determines which lab"},{label:"LaguerreL",type:"keyword",info:"                                                                                                    "},{label:"LakeData",type:"keyword",info:"LakeData[entity, property] gives the value of the specified property for the lake entity.LakeData[{e"},{label:"LambdaComponents",type:"keyword",info:"LambdaComponents[g] gives the lambda components of the graph g.LambdaComponents[g, {v , v , \xe2\x80\xa6}] give"},{label:"LambertW",type:"keyword",info:"System`LambertW"},{label:"LameC",type:"keyword",info:"                              th                 j\nLameC[\xce\xbd, j, z, m] gives the j\xef\x8e\xa0   Lam\xc3\xa9 function Ec"},{label:"LameCPrime",type:"keyword",info:"                                                       th                 j\nLameCPrime[\xce\xbd, j, z, m] g"},{label:"LameEigenvalueA",type:"keyword",info:"                                     th                  j\nLameEigenvalueA[\xce\xbd, j, m] gives the j\xef\x8e\xa0   L"},{label:"LameEigenvalueB",type:"keyword",info:"                                     th                  j\nLameEigenvalueB[\xce\xbd, j, m] gives the j\xef\x8e\xa0   L"},{label:"LameS",type:"keyword",info:"                              th                 j\nLameS[\xce\xbd, j, z, m] gives the j\xef\x8e\xa0   Lam\xc3\xa9 function Es"},{label:"LameSPrime",type:"keyword",info:"                                                       th                 j\nLameSPrime[\xce\xbd, j, z, m] g"},{label:"LaminaData",type:"keyword",info:"LaminaData[entity, property] gives the value of the specified property for the lamina entity.LaminaD"},{label:"LanczosWindow",type:"keyword",info:"LanczosWindow[x] represents a Lanczos window function of x."},{label:"LandauDistribution",type:"keyword",info:"LandauDistribution[\xce\xbc, \xcf\x83] represents a Landau distribution with location parameter \xce\xbc and scale parame"},{label:"Language",type:"keyword",info:"Language is an option that specifies the language to use."},{label:"LanguageCategory",type:"keyword",info:"LanguageCategory is an option for Cell that determines in what category of language the contents of "},{label:"LanguageData",type:"keyword",info:"LanguageData[entity, property] gives the value of the specified property for the language entity.Lan"},{label:"LanguageIdentify",type:"keyword",info:'LanguageIdentify["string"] attempts to determine what human language text in string is in, predomina'},{label:"LanguageOptions",type:"keyword",info:"System`LanguageOptions"},{label:"LaplaceDistribution",type:"keyword",info:"LaplaceDistribution[\xce\xbc, \xce.b2] represents a Laplace double-exponential distribution with mean \xce\xbc and scale"},{label:"LaplaceTransform",type:"keyword",info:"                                                                                                    "},{label:"Laplacian",type:"keyword",info:"                                               2       2        2       2\nLaplacian[f, {x , \xe2\x80\xa6, x }] "},{label:"LaplacianFilter",type:"keyword",info:"LaplacianFilter[data, r] convolves data with a radius-r Laplacian kernel.LaplacianFilter[data, {r , "},{label:"LaplacianGaussianFilter",type:"keyword",info:"LaplacianGaussianFilter[data, r] convolves data with a Laplacian of Gaussian kernel of pixel radius "},{label:"LaplacianPDETerm",type:"keyword",info:"                                                    2\nLaplacianPDETerm[vars] represents a Laplacian "},{label:"Large",type:"keyword",info:"Large is a style or option setting that specifies that objects should be large."},{label:"Larger",type:"keyword",info:"Larger is a style or option setting that specifies that objects should be larger."},{label:"Last",type:"keyword",info:"Last[expr] gives the last element in expr. Last[expr, def] gives the last element if there are any e"},{label:"Latitude",type:"keyword",info:"Latitude[pos] gives the latitude in degrees of a geographic position specified by pos.Latitude[pos, "},{label:"LatitudeLongitude",type:"keyword",info:"LatitudeLongitude[pos] gives a list of the latitude and longitude in degrees of a geographic positio"},{label:"LatticeData",type:"keyword",info:'LatticeData[lattice, "property"] gives the specified property for a lattice.LatticeData[n] gives a l'},{label:"LatticeReduce",type:"keyword",info:"LatticeReduce[{v , v , \xe2\x80\xa6}] gives a reduced basis for the set of vectors v . \n                1   2  "},{label:"Launch",type:"keyword",info:"Launch is a setting for the LinkMode option of LinkOpen.  LinkMode->Launch causes a link to be creat"},{label:"LaunchKernels",type:"keyword",info:"LaunchKernels[] launches all currently configured parallel subkernels.LaunchKernels[n] launches n lo"},{label:"LayeredGraphPlot",type:"keyword",info:"LayeredGraphPlot[g] generates a layered plot of the graph g.LayeredGraphPlot[{e , e , \xe2\x80\xa6}] generates "},{label:"LayeredGraphPlot3D",type:"keyword",info:"LayeredGraphPlot3D[g] generates a 3D layered plot of the graph g.LayeredGraphPlot3D[{e , e , \xe2\x80\xa6}] gen"},{label:"LayerSizeFunction",type:"keyword",info:"LayerSizeFunction is an option for TreePlot that gives a function to specify the relative height to "},{label:"LayoutInformation",type:"keyword",info:"System`LayoutInformation"},{label:"LCHColor",type:"keyword",info:"LCHColor[l, c, h] represents a color in the LCH color space with lightness l, chroma c and hue h.LCH"},{label:"LCM",type:"keyword",info:"LCM[n , n , \xe2\x80\xa6] gives the least common multiple of the n . \n     1   2                               "},{label:"LeaderSize",type:"keyword",info:"LeaderSize is an option for Callout that specifies what sizes to use for leader lines."},{label:"LeafCount",type:"keyword",info:"LeafCount[expr] gives the total number of indivisible subexpressions in expr. "},{label:"LeapVariant",type:"keyword",info:"LeapVariant[n] represents a repeated calendar element caused by a leap period."},{label:"LeapYearQ",type:"keyword",info:"LeapYearQ[date] returns True if the year corresponding to date is a leap year."},{label:"LearnDistribution",type:"keyword",info:"LearnDistribution[{example , example , \xe2\x80\xa6}] generates a LearnedDistribution[\xe2\x80\xa6] that attempts to repre"},{label:"LearnedDistribution",type:"keyword",info:"LearnedDistribution[\xe2\x80\xa6] represents a distribution generated by LearnDistribution."},{label:"LearningRate",type:"keyword",info:"LearningRate is an option for NetTrain that specifies the rate at which to adjust neural net weights"},{label:"LearningRateMultipliers",type:"keyword",info:"LearningRateMultipliers is an option for net layers and for NetTrain, NetChain, NetGraph that specif"},{label:"LeastSquares",type:"keyword",info:"LeastSquares[m, b] finds an x that solves the linear least-squares problem for the matrix equation m"},{label:"LeastSquaresFilterKernel",type:"keyword",info:"LeastSquaresFilterKernel[{{\xcf\x89 , \xe2\x80\xa6, \xcf\x89     }, {a , \xe2\x80\xa6, a }}, n] creates a k-band finite impulse response"},{label:"Left",type:"keyword",info:"Left is a symbol that represents the left-hand side for purposes of alignment and positioning. "},{label:"LeftArrow",type:"keyword",info:"LeftArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x86\x90 y \xe2\x86\x90 \xe2\x80\xa6."},{label:"LeftArrowBar",type:"keyword",info:"LeftArrowBar[x, y, \xe2\x80\xa6] displays as x \xe2\x87\xa4 y \xe2\x87\xa4 \xe2\x80\xa6."},{label:"LeftArrowRightArrow",type:"keyword",info:"LeftArrowRightArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x87\x86 y \xe2\x87\x86 \xe2\x80\xa6."},{label:"LeftDownTeeVector",type:"keyword",info:"LeftDownTeeVector[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\xa1 y \xe2\xa5\xa1 \xe2\x80\xa6."},{label:"LeftDownVector",type:"keyword",info:"LeftDownVector[x, y, \xe2\x80\xa6] displays as x \xe2\x87\x83 y \xe2\x87\x83 \xe2\x80\xa6."},{label:"LeftDownVectorBar",type:"keyword",info:"LeftDownVectorBar[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\x99 y \xe2\xa5\x99 \xe2\x80\xa6."},{label:"LeftRightArrow",type:"keyword",info:"LeftRightArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x86\x94 y \xe2\x86\x94 \xe2\x80\xa6."},{label:"LeftRightVector",type:"keyword",info:"LeftRightVector[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\x8e y \xe2\xa5\x8e \xe2\x80\xa6."},{label:"LeftTee",type:"keyword",info:"LeftTee[x, y] displays as x \xe2\x8a\xa3 y."},{label:"LeftTeeArrow",type:"keyword",info:"LeftTeeArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x86\xa4 y \xe2\x86\xa4 \xe2\x80\xa6."},{label:"LeftTeeVector",type:"keyword",info:"LeftTeeVector[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\x9a y \xe2\xa5\x9a \xe2\x80\xa6."},{label:"LeftTriangle",type:"keyword",info:"LeftTriangle[x, y, \xe2\x80\xa6] displays as x \xe2\x8a.b2 y \xe2\x8a.b2 \xe2\x80\xa6."},{label:"LeftTriangleBar",type:"keyword",info:"LeftTriangleBar[x, y, \xe2\x80\xa6] displays as x \xe2\xa7\x8f y \xe2\xa7\x8f \xe2\x80\xa6."},{label:"LeftTriangleEqual",type:"keyword",info:"LeftTriangleEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x8a.b4 y \xe2\x8a.b4 \xe2\x80\xa6."},{label:"LeftUpDownVector",type:"keyword",info:"LeftUpDownVector[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\x91 y \xe2\xa5\x91 \xe2\x80\xa6."},{label:"LeftUpTeeVector",type:"keyword",info:"LeftUpTeeVector[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\xa0 y \xe2\xa5\xa0 \xe2\x80\xa6."},{label:"LeftUpVector",type:"keyword",info:"LeftUpVector[x, y, \xe2\x80\xa6] displays as x \xe2\x86\xbf y \xe2\x86\xbf \xe2\x80\xa6."},{label:"LeftUpVectorBar",type:"keyword",info:"LeftUpVectorBar[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\x98 y \xe2\xa5\x98 \xe2\x80\xa6."},{label:"LeftVector",type:"keyword",info:"LeftVector[x, y, \xe2\x80\xa6] displays as x \xe2\x86\xbc y \xe2\x86\xbc \xe2\x80\xa6."},{label:"LeftVectorBar",type:"keyword",info:"LeftVectorBar[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\x92 y \xe2\xa5\x92 \xe2\x80\xa6."},{label:"LegendAppearance",type:"keyword",info:"LegendAppearance is an option for charting functions that specifies the appearance of any legends th"},{label:"Legended",type:"keyword",info:"Legended[expr, leg] displays expr with legend leg. Legended[expr, lbl] indicates in plotting and cha"},{label:"LegendFunction",type:"keyword",info:"LegendFunction is an option for legends that specifies an overall function to apply to the generated"},{label:"LegendLabel",type:"keyword",info:"LegendLabel is an option for legends that specifies an overall label for a legend."},{label:"LegendLayout",type:"keyword",info:"LegendLayout is an option for legends that specifies how to format the legend content."},{label:"LegendMargins",type:"keyword",info:"LegendMargins is an option for legends that specifies the margins to leave around the legend."},{label:"LegendMarkers",type:"keyword",info:"LegendMarkers is an option for legends such as PointLegend that specifies markers for each element."},{label:"LegendMarkerSize",type:"keyword",info:"LegendMarkerSize is an option for legends such as PointLegend that specifies the size of marker regi"},{label:"LegendreP",type:"keyword",info:"                                                                                                    "},{label:"LegendreQ",type:"keyword",info:"                                                                                                    "},{label:"LegendreType",type:"keyword",info:"System`LegendreType"},{label:"Length",type:"keyword",info:"Length[expr] gives the number of elements in expr. "},{label:"LengthWhile",type:"keyword",info:"LengthWhile[list, crit] gives the number of contiguous elements e  starting at the beginning of list"},{label:"LerchPhi",type:"keyword",info:"LerchPhi[z, s, a] gives the Lerch transcendent \xce\xa6 (z, s, a). "},{label:"Less",type:"keyword",info:"x < y yields True if x is determined to be less than y. x  < x  < x  yields True if the x  form a st"},{label:"LessEqual",type:"keyword",info:"x <= y or x \xe2\x89\xa4 y yields True if x is determined to be less than or equal to y.x  \xe2\x89\xa4 x  \xe2\x89\xa4 x  yields Tru"},{label:"LessEqualGreater",type:"keyword",info:"LessEqualGreater[x, y, \xe2\x80\xa6] displays as x \xe2\x8b\x9a y \xe2\x8b\x9a \xe2\x80\xa6."},{label:"LessEqualThan",type:"keyword",info:"LessEqualThan[y] is an operator form that yields x \xe2\x89\xa4 y when applied to an expression x."},{label:"LessFullEqual",type:"keyword",info:"LessFullEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x89\xa6 y \xe2\x89\xa6 \xe2\x80\xa6."},{label:"LessGreater",type:"keyword",info:"LessGreater[x, y, \xe2\x80\xa6] displays as x \xe2\x89\\[Paragraph] y \xe2\x89\\[Paragraph] \xe2\x80\xa6."},{label:"LessLess",type:"keyword",info:"LessLess[x, y, \xe2\x80\xa6] displays as x \xe2\x89\xaa y \xe2\x89\xaa \xe2\x80\xa6."},{label:"LessSlantEqual",type:"keyword",info:"LessSlantEqual[x, y, \xe2\x80\xa6] displays as x \xe2\xa9\xbd y \xe2\xa9\xbd \xe2\x80\xa6."},{label:"LessThan",type:"keyword",info:"LessThan[y] is an operator form that yields x < y when applied to an expression x."},{label:"LessTilde",type:"keyword",info:"LessTilde[x, y, \xe2\x80\xa6] displays as x \xe2\x89.b2 y \xe2\x89.b2 \xe2\x80\xa6."},{label:"LetterCharacter",type:"keyword",info:"LetterCharacter represents a letter character in StringExpression."},{label:"LetterCounts",type:"keyword",info:'LetterCounts["string"] gives an association whose keys are the distinct letters in string, and whose'},{label:"LetterNumber",type:"keyword",info:'LetterNumber["c"] gives the position of the character c in the English alphabet.LetterNumber["c", al'},{label:"LetterQ",type:"keyword",info:"LetterQ[string] yields True if all the characters in the string are letters, and yields False otherw"},{label:"Level",type:"keyword",info:"Level[expr, levelspec] gives a list of all subexpressions of expr on levels specified by levelspec. "},{label:"LeveneTest",type:"keyword",info:"                                                                                                    "},{label:"LeviCivitaTensor",type:"keyword",info:"LeviCivitaTensor[d] gives the d-dimensional Levi-Civita totally antisymmetric tensor."},{label:"LevyDistribution",type:"keyword",info:"LevyDistribution[\xce\xbc, \xcf\x83] represents a L\xc3\xa9vy distribution with location parameter \xce\xbc and dispersion param"},{label:"Lexicographic",type:"keyword",info:"System`Lexicographic"},{label:"LexicographicOrder",type:"keyword",info:"LexicographicOrder[{a , a , \xe2\x80\xa6}, {b , b , \xe2\x80\xa6}] gives Order[a , b ] for the first non-coinciding pair a"},{label:"LexicographicSort",type:"keyword",info:"LexicographicSort[{e , e , \xe2\x80\xa6}] sorts the list of expressions e  in lexicographic order.Lexicographic"},{label:"LibraryDataType",type:"keyword",info:"LibraryDataType[datatype] specifies the data type for a LibraryFunction argument or result to be dat"},{label:"LibraryFunction",type:"keyword",info:"LibraryFunction[ args] represents a function that has been loaded from a Wolfram Library."},{label:"LibraryFunctionError",type:"keyword",info:"LibraryFunctionError[name, code] represents an error returned from a LibraryFunction."},{label:"LibraryFunctionInformation",type:"keyword",info:"LibraryFunctionInformation[fun] returns information about a LibraryFunction."},{label:"LibraryFunctionLoad",type:"keyword",info:"LibraryFunctionLoad[lib, fun, argtype, rettype] loads Wolfram Library lib and makes the library func"},{label:"LibraryFunctionUnload",type:"keyword",info:"LibraryFunctionUnload[fun] unloads a LibraryFunction so that it cannot be used."},{label:"LibraryLoad",type:"keyword",info:"LibraryLoad[lib] loads the dynamic library lib into the Wolfram System runtime."},{label:"LibraryUnload",type:"keyword",info:"LibraryUnload[lib] unloads all functions that have been loaded from a Wolfram Library, then it unloa"},{label:"LicenseEntitlementObject",type:"keyword",info:"LicenseEntitlementObject[\xe2\x80\xa6] represents an on-demand license entitlement.LicenseEntitlementObject[id]"},{label:"LicenseEntitlements",type:"keyword",info:"LicenseEntitlements[] gives a list of on-demand license entitlements owned by you."},{label:"LicenseID",type:"keyword",info:"LicenseID is an option to Encode which specifies the required value of ECLicenseID on the computer th"},{label:"LicensingSettings",type:"keyword",info:"LicensingSettings is an option for RemoteBatchSubmit and related functions to configure licensing fo"},{label:"LiftingFilterData",type:"keyword",info:"LiftingFilterData[\xe2\x80\xa6] represents lifting-filter data used to compute forward and inverse lifting wave"},{label:"LiftingWaveletTransform",type:"keyword",info:"LiftingWaveletTransform[data] gives the lifting wavelet transform (LWT) of an array of data.LiftingW"},{label:"LightBlue",type:"keyword",info:"LightBlue represents a light blue color in graphics or style specifications."},{label:"LightBrown",type:"keyword",info:"LightBrown represents a light brown color in graphics or style specifications."},{label:"LightCyan",type:"keyword",info:"LightCyan represents a light cyan color in graphics or style specifications."},{label:"Lighter",type:"keyword",info:"Lighter[color] represents a lighter version of the specified color. Lighter[color, f] represents a v"},{label:"LightGray",type:"keyword",info:"LightGray represents a light gray color in graphics or style specifications."},{label:"LightGreen",type:"keyword",info:"LightGreen represents a light green color in graphics or style specifications."},{label:"Lighting",type:"keyword",info:"Lighting is an option for Graphics3D and related functions that specifies what simulated lighting to"},{label:"LightingAngle",type:"keyword",info:"LightingAngle is an option for ReliefPlot and related functions that specifies the angle from which "},{label:"LightMagenta",type:"keyword",info:"LightMagenta represents a light magenta color in graphics or style specifications."},{label:"LightOrange",type:"keyword",info:"LightOrange represents a light orange color in graphics or style specifications."},{label:"LightPink",type:"keyword",info:"LightPink represents a light pink color in graphics or style specifications."},{label:"LightPurple",type:"keyword",info:"LightPurple represents a light purple color in graphics or style specifications."},{label:"LightRed",type:"keyword",info:"LightRed represents a light red color in graphics or style specifications."},{label:"LightSources",type:"keyword",info:"LightSources is an option for Graphics3D and related functions that specifies the properties of poin"},{label:"LightYellow",type:"keyword",info:"LightYellow represents a light yellow color in graphics or style specifications."},{label:"Likelihood",type:"keyword",info:"Likelihood[dist, {x , x , \xe2\x80\xa6}] gives the likelihood function for observations x , x , \xe2\x80\xa6 from the dist"},{label:"Limit",type:"keyword",info:"              *                                                 *           *                       "},{label:"LimitsPositioning",type:"keyword",info:"LimitsPositioning is an option for UnderoverscriptBox and related boxes that specifies whether to ch"},{label:"LimitsPositioningTokens",type:"keyword",info:"LimitsPositioningTokens is an option for selections that specifies a set of characters for which the"},{label:"LindleyDistribution",type:"keyword",info:"LindleyDistribution[\xce.b4] represents a Lindley distribution with shape parameter \xce.b4."},{label:"Line",type:"keyword",info:"Line[{p , p , \xe2\x80\xa6}] represents the line segments joining a sequence for points p .Line[{{p  , p  , \xe2\x80\xa6},"},{label:"Line3DBox",type:"keyword",info:"System`Line3DBox"},{label:"Line3DBoxOptions",type:"keyword",info:"Line3DBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Line3DBox "},{label:"LinearFilter",type:"keyword",info:"System`LinearFilter"},{label:"LinearFractionalOptimization",type:"keyword",info:"LinearFractionalOptimization[f, cons, vars] finds values of variables vars that minimize the linear "},{label:"LinearFractionalTransform",type:"keyword",info:"LinearFractionalTransform[m] gives a TransformationFunction that represents a linear fractional tran"},{label:"LinearGradientFilling",type:"keyword",info:"LinearGradientFilling[{col , col , \xe2\x80\xa6, col }] is a two-dimensional graphics directive specifying that"},{label:"LinearGradientImage",type:"keyword",info:"LinearGradientImage[gcol] returns an image with values linearly changing from left to right based on"},{label:"LinearizingTransformationData",type:"keyword",info:"LinearizingTransformationData[\xe2\x80\xa6] represents data of an AffineStateSpaceModel linearized by functions"},{label:"LinearLayer",type:"keyword",info:"LinearLayer[n] represents a trainable, fully connected net layer that computes w . x + b with output"},{label:"LinearModelFit",type:"keyword",info:"LinearModelFit[{y , y , \xe2\x80\xa6}, {f , f , \xe2\x80\xa6}, x] constructs a linear model of the form \xce.b2  + \xce.b2  f  + \xce.b2  f "},{label:"LinearOffsetFunction",type:"keyword",info:"LinearOffsetFunction is an option for linear and generalized linear model fitting functions that spe"},{label:"LinearOptimization",type:"keyword",info:"LinearOptimization[f, cons, vars] finds values of variables vars that minimize the linear objective "},{label:"LinearProgramming",type:"keyword",info:"LinearProgramming[c, m, b] finds a vector x that minimizes the quantity c . x subject to the constra"},{label:"LinearRecurrence",type:"keyword",info:"                                                                                                    "},{label:"LinearSolve",type:"keyword",info:"LinearSolve[m, b] finds an x that solves the matrix equation m . x == b. LinearSolve[m] generates a "},{label:"LinearSolveFunction",type:"keyword",info:"LinearSolveFunction[dimensions, data] represents a function for providing solutions to a matrix equa"},{label:"LineBox",type:"keyword",info:"System`LineBox"},{label:"LineBoxOptions",type:"keyword",info:"LineBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for LineBox obje"},{label:"LineBreak",type:"keyword",info:"System`LineBreak"},{label:"LinebreakAdjustments",type:"keyword",info:"LinebreakAdjustments is an option for selections that sets parameters used for calculating where aut"},{label:"LineBreakChart",type:"keyword",info:"LineBreakChart[{{date , p }, {date , p }, \xe2\x80\xa6}] makes a line break chart with prices p  at date date ."},{label:"LinebreakSemicolonWeighting",type:"keyword",info:"System`LinebreakSemicolonWeighting"},{label:"LineBreakWithin",type:"keyword",info:"LineBreakWithin is an option for selections that specifies whether line breaks occur automatically w"},{label:"LineColor",type:"keyword",info:"System`LineColor"},{label:"LineGraph",type:"keyword",info:"LineGraph[g] gives the line graph of the graph g.LineGraph[{v \xef\x94\xa2 w, \xe2\x80\xa6}] uses rules v \xef\x94\xa2 w to specify t"},{label:"LineIndent",type:"keyword",info:"LineIndent is an option for Style and Cell that specifies how many ems of indentation to add at the "},{label:"LineIndentMaxFraction",type:"keyword",info:"LineIndentMaxFraction is an option for Cell, StyleBox, and Style that specifies the maximum fraction"},{label:"LineIntegralConvolutionPlot",type:"keyword",info:"LineIntegralConvolutionPlot[{{v , v }, image}, {x, x   , x   }, {y, y   , y   }] generates a line in"},{label:"LineIntegralConvolutionScale",type:"keyword",info:"LineIntegralConvolutionScale is an option to LineIntegralConvolutionPlot and related functions that "},{label:"LineLegend",type:"keyword",info:"LineLegend[{col , \xe2\x80\xa6}, {lbl , \xe2\x80\xa6}] generates a legend that associates color col  with label lbl .LineL"},{label:"LineOpacity",type:"keyword",info:"System`LineOpacity"},{label:"LineSpacing",type:"keyword",info:"LineSpacing is an option for Style and Cell that specifies the spacing between successive lines of t"},{label:"LineWrapParts",type:"keyword",info:"System`LineWrapParts"},{label:"LinkActivate",type:"keyword",info:"LinkActivate[lnk] activates a WSTP connection, waiting for the program at the other end to respond."},{label:"LinkClose",type:"keyword",info:"LinkClose[link] closes an open WSTP connection. "},{label:"LinkConnect",type:"keyword",info:'LinkConnect["name"] connects to a WSTP link created by another program. '},{label:"LinkConnectedQ",type:"keyword",info:"System`LinkConnectedQ"},{label:"LinkCreate",type:"keyword",info:'LinkCreate["name"] creates a WSTP link with the specified name for another program to connect to. Li'},{label:"LinkError",type:"keyword",info:"LinkError[link] returns error information for link in the form { errorNumber, errorExplanation }."},{label:"LinkFlush",type:"keyword",info:"LinkFlush[link] transmits immediately any locally buffered outgoing expressions."},{label:"LinkFunction",type:"keyword",info:"LinkFunction is an option for GeneralizedLinearModelFit that specifies the link function for the gen"},{label:"LinkHost",type:"keyword",info:"LinkHost is an option for LinkOpen that specifies on what computer a program should be launched or o"},{label:"LinkInterrupt",type:"keyword",info:"LinkInterrupt[link] sends an interrupt to the program at the other end of the specified WSTP connect"},{label:"LinkLaunch",type:"keyword",info:'LinkLaunch["prog"] starts the external program prog and opens a WSTP connection to it. '},{label:"LinkMode",type:"keyword",info:"LinkMode is an option for LinkOpen that specifies how the link is to be established and connected.  "},{label:"LinkObject",type:"keyword",info:'LinkObject["name", n , n ] is an object that represents an active WSTP connection for functions such'},{label:"LinkOpen",type:"keyword",info:'LinkOpen["prog"] starts the external program prog and opens a MathLink connection to it.'},{label:"LinkOptions",type:"keyword",info:"System`LinkOptions"},{label:"LinkPatterns",type:"keyword",info:"LinkPatterns[link] gives a list of the patterns for which definitions were set up when the external "},{label:"LinkProtocol",type:"keyword",info:"LinkProtocol is an option to LinkLaunch, Install, and related functions that specifies the underlyin"},{label:"LinkRankCentrality",type:"keyword",info:"LinkRankCentrality[g, \xce\\[PlusMinus]] gives the link-rank centralities for edges in the graph g and weight \xce\\[PlusMinus].Link"},{label:"LinkRead",type:"keyword",info:"LinkRead[link] reads one expression from the specified WSTP connection. LinkRead[link, h] wraps h ar"},{label:"LinkReadHeld",type:"keyword",info:"LinkReadHeld[link] reads an expression via WSTP from link and returns it wrapped in Hold."},{label:"LinkReadyQ",type:"keyword",info:"LinkReadyQ[link] tests whether there is an expression ready to read from the specified WSTP connecti"},{label:"Links",type:"keyword",info:"Links[] gives a list of all WSTP connections that are currently open. Links[patt] lists only links w"},{label:"LinkService",type:"keyword",info:'LinkService["service", l] is an object that represents an active connection to the WSTP service.'},{label:"LinkWrite",type:"keyword",info:"LinkWrite[link, expr] writes expr to the specified WSTP connection. "},{label:"LinkWriteHeld",type:"keyword",info:"LinkWriteHeld[link, Hold[expr], (flush : True)] writes expr (without the Hold) via WSTP to link (syn"},{label:"LiouvilleLambda",type:"keyword",info:"LiouvilleLambda[n] gives the Liouville function \xce\xbb(n)."},{label:"List",type:"keyword",info:"{e , e , \xe2\x80\xa6} is a list of elements. \n  1   2"},{label:"Listable",type:"keyword",info:"Listable is an attribute that can be assigned to a symbol f to indicate that the function f should a"},{label:"ListAnimate",type:"keyword",info:"ListAnimate[{expr , expr , \xe2\x80\xa6}] generates an animation whose frames are the successive expr . ListAni"},{label:"ListContourPlot",type:"keyword",info:"ListContourPlot[{{f  , \xe2\x80\xa6, f  }, \xe2\x80\xa6, {f  , \xe2\x80\xa6, f  }}] generates a contour plot from an array of values "},{label:"ListContourPlot3D",type:"keyword",info:"ListContourPlot3D[array] generates a contour plot from a three-dimensional array of values. ListCont"},{label:"ListConvolve",type:"keyword",info:"                                                                                                    "},{label:"ListCorrelate",type:"keyword",info:"                                                                                                    "},{label:"ListCurvePathPlot",type:"keyword",info:"ListCurvePathPlot[{{x , y }, {x , y }, \xe2\x80\xa6}] plots a curve that corresponds to a smooth path through t"},{label:"ListDeconvolve",type:"keyword",info:"ListDeconvolve[ker, list] gives a deconvolution of list using kernel ker."},{label:"ListDensityPlot",type:"keyword",info:"ListDensityPlot[{{f  , \xe2\x80\xa6, f  }, \xe2\x80\xa6, {f  , \xe2\x80\xa6, f  }}] generates a smooth density plot from an array of "},{label:"ListDensityPlot3D",type:"keyword",info:"ListDensityPlot3D[array] generates a smooth density plot from an array of values. ListDensityPlot3D["},{label:"Listen",type:"keyword",info:"Listen is a setting for the LinkMode option of LinkOpen.  LinkMode->Listen causes a link to be creat"},{label:"ListFormat",type:"keyword",info:"ListFormat is an option to TextString and related functions that determines how lists are formatted."},{label:"ListFourierSequenceTransform",type:"keyword",info:"ListFourierSequenceTransform[list, \xcf\x89] gives the discrete-time Fourier transform (DTFT) of a list as "},{label:"ListInterpolation",type:"keyword",info:"ListInterpolation[array] constructs an InterpolatingFunction object that represents an approximate f"},{label:"ListLineIntegralConvolutionPlot",type:"keyword",info:"ListLineIntegralConvolutionPlot[{array, image}] generates a line integral convolution plot of image "},{label:"ListLinePlot",type:"keyword",info:"ListLinePlot[{y , y , \xe2\x80\xa6}] plots a line through the points {1, y }, {2, y }, \xe2\x80\xa6.ListLinePlot[{{x , y }"},{label:"ListLinePlot3D",type:"keyword",info:"ListLinePlot3D[{{x , y , z }, {x , y , z }, \xe2\x80\xa6, {x , y , z }}] plots a curve through the 3D points {x"},{label:"ListLogLinearPlot",type:"keyword",info:"ListLogLinearPlot[{y , y , \xe2\x80\xa6}] makes a log-linear plot of the y , assumed to correspond to x coordin"},{label:"ListLogLogPlot",type:"keyword",info:"ListLogLogPlot[{y , y , \xe2\x80\xa6}] makes a log-log plot of the y , assumed to correspond to x coordinates 1"},{label:"ListLogPlot",type:"keyword",info:"ListLogPlot[{y , y , \xe2\x80\xa6}] makes a log plot of the y , assumed to correspond to x coordinates 1, 2, \xe2\x80\xa6."},{label:"ListPicker",type:"keyword",info:"ListPicker[list, {val , val , \xe2\x80\xa6}] represents a list pane with setting list that can contain possible"},{label:"ListPickerBox",type:"keyword",info:"ListPickerBox[list, {val  \xef\x94\xa2 lbl , val  \xef\x94\xa2 lbl , \xe2\x80\xa6}] is a low-level box structure that represents a li"},{label:"ListPickerBoxBackground",type:"keyword",info:"System`ListPickerBoxBackground"},{label:"ListPickerBoxOptions",type:"keyword",info:"ListPickerBoxOptions is an option that specifies settings for ListPickerBox objects."},{label:"ListPlay",type:"keyword",info:"ListPlay[{a , a , \xe2\x80\xa6}] creates an object that plays as a sound whose amplitude is given by the sequen"},{label:"ListPlot",type:"keyword",info:"ListPlot[{y , \xe2\x80\xa6, y }] plots points {1, y }, {2, y }, \xe2\x80\xa6. ListPlot[{{x , y }, \xe2\x80\xa6, {x , y }}] generates "},{label:"ListPlot3D",type:"keyword",info:"ListPlot3D[{{f  , \xe2\x80\xa6, f  }, \xe2\x80\xa6, {f  , \xe2\x80\xa6, f  }}] generates a surface representing an array of height va"},{label:"ListPointPlot3D",type:"keyword",info:"ListPointPlot3D[{{x , y , z }, {x , y , z }, \xe2\x80\xa6}] generates a 3D scatter plot of points with coordina"},{label:"ListPolarPlot",type:"keyword",info:"ListPolarPlot[{r , r , \xe2\x80\xa6}] plots points equally spaced in angle at radii r .ListPolarPlot[{{\xce\xb8 , r },"},{label:"ListQ",type:"keyword",info:"ListQ[expr] gives True if the head of expr is List, and False otherwise."},{label:"ListSliceContourPlot3D",type:"keyword",info:"ListSliceContourPlot3D[array, surf] generates a contour plot of the three-dimensional array of value"},{label:"ListSliceDensityPlot3D",type:"keyword",info:"ListSliceDensityPlot3D[array, surf] generates a density plot of the three-dimensional array of value"},{label:"ListSliceVectorPlot3D",type:"keyword",info:"ListSliceVectorPlot3D[array, surf] generates a vector plot from a 3D array of vector field values ov"},{label:"ListStepPlot",type:"keyword",info:"ListStepPlot[{y , y , \xe2\x80\xa6}] plots the values y , y , \xe2\x80\xa6 in steps at points 1, 2, \xe2\x80\xa6.ListStepPlot[{{x , y"},{label:"ListStreamDensityPlot",type:"keyword",info:"ListStreamDensityPlot[array] generates a stream density plot from a 2D array of vector and scalar fi"},{label:"ListStreamPlot",type:"keyword",info:"ListStreamPlot[array] generates a stream plot from an array of vector field values.ListStreamPlot[{{"},{label:"ListStreamPlot3D",type:"keyword",info:"ListStreamPlot3D[array] plots streamlines for the vector field given as an array of vectors."},{label:"ListSurfacePlot3D",type:"keyword",info:"ListSurfacePlot3D[{{x , y , z }, {x , y , z }, \xe2\x80\xa6}] plots a three-dimensional surface constructed to "},{label:"ListVectorDensityPlot",type:"keyword",info:"ListVectorDensityPlot[array] generates a vector plot from a 2D array of vector and scalar field valu"},{label:"ListVectorDisplacementPlot",type:"keyword",info:"ListVectorDisplacementPlot[{{{vx  , vy  }, \xe2\x80\xa6, {vx  , vy  }}, \xe2\x80\xa6, {{vx  , vy  }, \xe2\x80\xa6, {vx  , vy  }}}] ge"},{label:"ListVectorDisplacementPlot3D",type:"keyword",info:"ListVectorDisplacementPlot3D[{{{vx  , vy  , vz  }, \xe2\x80\xa6, {vx  , vy  , vz  }}, \xe2\x80\xa6, {{vx  , vy  , vz  }, \xe2\x80\xa6"},{label:"ListVectorPlot",type:"keyword",info:"ListVectorPlot[array] generates a vector plot from an array of vector field values.ListVectorPlot[{{"},{label:"ListVectorPlot3D",type:"keyword",info:"ListVectorPlot3D[array] generates a 3D vector plot from a 3D array of vector field values.ListVector"},{label:"ListZTransform",type:"keyword",info:"ListZTransform[list, z] gives the Z transform of list as a function of z.ListZTransform[list, z, k] "},{label:"Literal",type:"keyword",info:"System`Literal"},{label:"LiteralSearch",type:"keyword",info:"System`LiteralSearch"},{label:"LocalAdaptiveBinarize",type:"keyword",info:"LocalAdaptiveBinarize[image, r] creates a binary image from image by replacing values above the mean"},{label:"LocalCache",type:"keyword",info:"LocalCache[CloudObject[uri]] caches a cloud object in a local object.LocalCache[URL[url]] caches the"},{label:"LocalClusteringCoefficient",type:"keyword",info:"LocalClusteringCoefficient[g] gives the list of local clustering coefficients of all vertices in the"},{label:"LocalizeDefinitions",type:"keyword",info:"System`LocalizeDefinitions"},{label:"LocalizeVariables",type:"keyword",info:"LocalizeVariables is an option to Manipulate that determines whether the values of variables associa"},{label:"LocalObject",type:"keyword",info:'LocalObject[] represents a new anonymous local object.LocalObject["file :///\xe2\x80\xa6"] represents a local o'},{label:"LocalObjects",type:"keyword",info:"LocalObjects[] gives a list of local objects in your current local base directory.LocalObjects[dir] "},{label:"LocalResponseNormalizationLayer",type:"keyword",info:"LocalResponseNormalizationLayer[] represents a net layer that normalizes its input by averaging acro"},{label:"LocalSubmit",type:"keyword",info:"LocalSubmit[expr] submits a task to evaluate expr in a separate kernel.LocalSubmit[ScheduledTask[exp"},{label:"LocalSymbol",type:"keyword",info:'LocalSymbol["name"] represents a symbol whose value is persistently stored in the local file system.'},{label:"LocalTime",type:"keyword",info:"LocalTime[] gives a DateObject corresponding to the current local time at the current geo location.L"},{label:"LocalTimeZone",type:"keyword",info:"LocalTimeZone[] gives the current time zone for the current geo location.LocalTimeZone[loc] gives th"},{label:"LocationEquivalenceTest",type:"keyword",info:"LocationEquivalenceTest[{data , data , \xe2\x80\xa6}] tests whether the means or medians of the data  are equal"},{label:"LocationTest",type:"keyword",info:"LocationTest[data] tests whether the mean or median of the data is zero. LocationTest[{data , data }"},{label:"Locator",type:"keyword",info:"Locator[{x, y}] represents a locator object at position {x, y} in a graphic. Locator[Dynamic[pos]] t"},{label:"LocatorAutoCreate",type:"keyword",info:"LocatorAutoCreate is an option for LocatorPane, Manipulate, and related functions that specifies whe"},{label:"LocatorBox",type:"keyword",info:"System`LocatorBox"},{label:"LocatorBoxOptions",type:"keyword",info:"LocatorBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for LocatorBo"},{label:"LocatorCentering",type:"keyword",info:"System`LocatorCentering"},{label:"LocatorPane",type:"keyword",info:"LocatorPane[{x, y}, back] represents a pane with a locator at position {x, y} and background back.Lo"},{label:"LocatorPaneBox",type:"keyword",info:"System`LocatorPaneBox"},{label:"LocatorPaneBoxOptions",type:"keyword",info:"LocatorPaneBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Locat"},{label:"LocatorRegion",type:"keyword",info:"LocatorRegion is an option for Locator that specifies where the locator object should by default be "},{label:"Locked",type:"keyword",info:"Locked is an attribute that, once assigned, prevents modification of any attributes of a symbol. "},{label:"Log",type:"keyword",info:"Log[z] gives the natural logarithm of z (logarithm to base e). Log[b, z] gives the logarithm to base"},{label:"Log10",type:"keyword",info:"Log10[x] gives the base-10 logarithm of x."},{label:"Log2",type:"keyword",info:"Log2[x] gives the base-2 logarithm of x."},{label:"LogBarnesG",type:"keyword",info:"LogBarnesG[z] gives the logarithm of the Barnes G-function logG(z)."},{label:"LogGamma",type:"keyword",info:"LogGamma[z] gives the logarithm of the gamma function log \xce\x93(z). "},{label:"LogGammaDistribution",type:"keyword",info:"LogGammaDistribution[\xce\\[PlusMinus], \xce.b2, \xce\xbc] represents a log-gamma distribution with shape parameters \xce\\[PlusMinus] and \xce.b2 and "},{label:"LogicalExpand",type:"keyword",info:"LogicalExpand[expr] expands out logical combinations of equations, inequalities, and other functions"},{label:"LogIntegral",type:"keyword",info:"LogIntegral[z] is the logarithmic integral function li(z). "},{label:"LogisticDistribution",type:"keyword",info:"LogisticDistribution[\xce\xbc, \xce.b2] represents a logistic distribution with mean \xce\xbc and scale parameter \xce.b2.Logi"},{label:"LogisticSigmoid",type:"keyword",info:"LogisticSigmoid[z] gives the logistic sigmoid function."},{label:"LogitModelFit",type:"keyword",info:"                                                                                                    "},{label:"LogLikelihood",type:"keyword",info:"LogLikelihood[dist, {x , x , \xe2\x80\xa6}] gives the log\xe2\x80\x90likelihood function for observations x , x , \xe2\x80\xa6 from t"},{label:"LogLinearPlot",type:"keyword",info:"LogLinearPlot[f, {x, x   , x   }] generates a log-linear plot of f as a function of x from x    to x"},{label:"LogLogisticDistribution",type:"keyword",info:"LogLogisticDistribution[\xce.b3, \xcf\x83] represents a log-logistic distribution with shape parameter \xce.b3 and scal"},{label:"LogLogPlot",type:"keyword",info:"LogLogPlot[f, {x, x   , x   }] generates a log-log plot of f as a function of x from x    to x   . L"},{label:"LogMultinormalDistribution",type:"keyword",info:"LogMultinormalDistribution[\xce\xbc, \xce\xa3] represents a log-multinormal distribution with parameters \xce\xbc and \xce\xa3."},{label:"LogNormalDistribution",type:"keyword",info:"LogNormalDistribution[\xce\xbc, \xcf\x83] represents a lognormal distribution derived from a normal distribution w"},{label:"LogPlot",type:"keyword",info:"LogPlot[f, {x, x   , x   }] generates a log plot of f as a function of x from x    to x   . LogPlot["},{label:"LogRankTest",type:"keyword",info:"LogRankTest[{data , data , \xe2\x80\xa6}] tests for equal hazard rates among the data  using a log-rank type te"},{label:"LogSeriesDistribution",type:"keyword",info:"LogSeriesDistribution[\xce\xb8] represents a logarithmic series distribution with parameter \xce\xb8."},{label:"LongEqual",type:"keyword",info:"System`LongEqual"},{label:"Longest",type:"keyword",info:"Longest[p] is a pattern object that matches the longest sequence consistent with the pattern p. "},{label:"LongestCommonSequence",type:"keyword",info:"LongestCommonSequence[s , s ] finds the longest sequence of contiguous or disjoint elements common t"},{label:"LongestCommonSequencePositions",type:"keyword",info:"LongestCommonSequencePositions[s , s ] finds the longest sequence of contiguous or disjoint elements"},{label:"LongestCommonSubsequence",type:"keyword",info:"LongestCommonSubsequence[s , s ] finds the longest contiguous subsequence of elements common to the "},{label:"LongestCommonSubsequencePositions",type:"keyword",info:"LongestCommonSubsequencePositions[s , s ] finds the longest contiguous subsequence of elements commo"},{label:"LongestMatch",type:"keyword",info:"LongestMatch[p] is a string pattern object matching the longest sequence of characters consistent wi"},{label:"LongestOrderedSequence",type:"keyword",info:"LongestOrderedSequence[list] finds the longest ordered sequence of contiguous or disjoint elements i"},{label:"LongForm",type:"keyword",info:"LongForm is an option for Information. With LongForm -> True, the full information of a symbol is pr"},{label:"Longitude",type:"keyword",info:"Longitude[pos] gives the longitude in degrees of a geographic position specified by pos.Longitude[po"},{label:"LongLeftArrow",type:"keyword",info:"LongLeftArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x9f\\[Micro] y \xe2\x9f\\[Micro] \xe2\x80\xa6."},{label:"LongLeftRightArrow",type:"keyword",info:"LongLeftRightArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x9f\\[CenterDot] y \xe2\x9f\\[CenterDot] \xe2\x80\xa6."},{label:"LongRightArrow",type:"keyword",info:"LongRightArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x9f\\[Paragraph] y \xe2\x9f\\[Paragraph] \xe2\x80\xa6."},{label:"LongShortTermMemoryLayer",type:"keyword",info:"LongShortTermMemoryLayer[n] represents a trainable recurrent layer that takes a sequence of vectors "},{label:"Lookup",type:"keyword",info:"Lookup[assoc, key] looks up the value associated with key in the association assoc; if the key is no"},{label:"Loopback",type:"keyword",info:"Loopback is a setting for the LinkMode option of LinkOpen.  LinkMode->Loopback causes a link to be c"},{label:"LoopFreeGraphQ",type:"keyword",info:"LoopFreeGraphQ[g] yields True if the graph g has no self-loops, and False otherwise."},{label:"Looping",type:"keyword",info:"Looping is an option for VideoStream, AudioStream and related functions to specify the playback loop"},{label:"LossFunction",type:"keyword",info:"LossFunction is an option for NetTrain that specifies how to compare actual and requested outputs fr"},{label:"LowerCaseQ",type:"keyword",info:"LowerCaseQ[string] yields True if all the characters in the string are lowercase letters, and yields"},{label:"LowerLeftArrow",type:"keyword",info:"LowerLeftArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x86\x99 y \xe2\x86\x99 \xe2\x80\xa6."},{label:"LowerRightArrow",type:"keyword",info:"LowerRightArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x86\x98 y \xe2\x86\x98 \xe2\x80\xa6."},{label:"LowerTriangularize",type:"keyword",info:"                                                                                                    "},{label:"LowerTriangularMatrixQ",type:"keyword",info:"                                                                                                    "},{label:"LowpassFilter",type:"keyword",info:"LowpassFilter[data, \xcf\x89 ] applies a lowpass filter with a cutoff frequency \xcf\x89  to an array of data.Lowp"},{label:"LQEstimatorGains",type:"keyword",info:"LQEstimatorGains[ssm, {w, v}] gives the optimal estimator gain matrix for the StateSpaceModel ssm, w"},{label:"LQGRegulator",type:"keyword",info:"LQGRegulator[sspec, cvs, wts] gives the optimal output feedback controller for the stochastic system"},{label:"LQOutputRegulatorGains",type:"keyword",info:"LQOutputRegulatorGains[sspec, wts] gives the state feedback gains for the system specification sspec"},{label:"LQRegulatorGains",type:"keyword",info:"LQRegulatorGains[spsec, wts] gives the state feedback gains for the system specification sspec that "},{label:"LUBackSubstitution",type:"keyword",info:"System`LUBackSubstitution"},{label:"LucasL",type:"keyword",info:"LucasL[n] gives the Lucas number L .LucasL[n, x] gives the Lucas polynomial L (x).\n                 "},{label:"LuccioSamiComponents",type:"keyword",info:"LuccioSamiComponents[g] gives the Luccio\xe2\x80\x93Sami components of the graph g.LuccioSamiComponents[g, {v ,"},{label:"LUDecomposition",type:"keyword",info:"LUDecomposition[m] generates a representation of the LU decomposition of a square matrix\xc2\xa0m. "},{label:"LunarEclipse",type:"keyword",info:"LunarEclipse[] gives the time of the next lunar eclipse.LunarEclipse[datespec] gives the time for th"},{label:"LUVColor",type:"keyword",info:"LUVColor[l, u, v] represents a color in the LUV color space with lightness l and color components u "},{label:"LyapunovSolve",type:"keyword",info:"LyapunovSolve[a, c] finds a solution x of the matrix Lyapunov equation a . x + x . a \xef\x8f\x89 \xef\x9f\x99 c.LyapunovS"},{label:"LyonsGroupLy",type:"keyword",info:"LyonsGroupLy[] represents the sporadic simple Lyons group Ly."},{label:"MachineID",type:"keyword",info:"MachineID is an option to Encode which specifies the required value of ECMachineID on the computer th"},{label:"MachineName",type:"keyword",info:"MachineName is an option to Encode which specifies the required value of ECMachineName on the compute"},{label:"MachineNumberQ",type:"keyword",info:"MachineNumberQ[expr] returns True if expr is a machine\xe2\x80\x90precision real or complex number, and returns"},{label:"MachinePrecision",type:"keyword",info:"MachinePrecision is a symbol used to indicate machine\xe2\x80\x90number precision. "},{label:"MacintoshSystemPageSetup",type:"keyword",info:"System`MacintoshSystemPageSetup"},{label:"Magenta",type:"keyword",info:"Magenta represents the color magenta in graphics or style specifications. "},{label:"Magnification",type:"keyword",info:"Magnification is an option for Style and Cell that specifies what magnification to use for display. "},{label:"Magnify",type:"keyword",info:"Magnify[expr, r] represents an object to be displayed with magnification r. Magnify[expr] displays w"},{label:"MailAddressValidation",type:"keyword",info:"MailAddressValidation is an option for SendMail that specifies whether and how to validate email add"},{label:"MailExecute",type:"keyword",info:"MailExecute[cmd, target] executes the mail command cmd on the target mail server connection, folder,"},{label:"MailFolder",type:"keyword",info:"MailFolder[\xe2\x80\xa6] represents a mail folder associated with an active mail server connection."},{label:"MailItem",type:"keyword",info:"MailItem[\xe2\x80\xa6] represents an item of mail associated with an active mail server connection."},{label:"MailReceiverFunction",type:"keyword",info:"MailReceiverFunction[fun] represents a mail receiver function that applies fun to any mail message i"},{label:"MailResponseFunction",type:"keyword",info:"MailResponseFunction is an option for MailReceiverFunction that specifies what function to apply to "},{label:"MailSearch",type:"keyword",info:"MailSearch[folder, assoc] searches the specified mail folder for messages with properties matching e"},{label:"MailServerConnect",type:"keyword",info:'MailServerConnect[] connects to your default incoming mail server.MailServerConnect["server"] connec'},{label:"MailServerConnection",type:"keyword",info:"MailServerConnection[\xe2\x80\xa6] is a symbolic representation of a connection to an incoming mail server."},{label:"MailSettings",type:"keyword",info:"MailSettings is an option for SendMail and MailServerConnect to specify mail settings."},{label:"MainSolve",type:"keyword",info:"MainSolve[eqns] is the underlying function for transforming systems of equations. Solve and Eliminat"},{label:"MaintainDynamicCaches",type:"keyword",info:"System`MaintainDynamicCaches"},{label:"Majority",type:"keyword",info:"Majority[e , e , \xe2\x80\xa6] gives True if the majority of the e  are True, and False if the majority are Fal"},{label:"MakeBoxes",type:"keyword",info:"MakeBoxes[expr, form] is the low\xe2\x80\x90level function used in Wolfram System sessions to convert expressio"},{label:"MakeExpression",type:"keyword",info:"MakeExpression[boxes, form] is the low\xe2\x80\x90level function used in Wolfram System sessions to construct e"},{label:"MakeRules",type:"keyword",info:"MakeRules is an option to Solve and related functions. With MakeRules -> True, the result is present"},{label:"ManagedLibraryExpressionID",type:"keyword",info:"ManagedLibraryExpressionID[expr] returns the positive integer ID associated with expr if it is a man"},{label:"ManagedLibraryExpressionQ",type:"keyword",info:"ManagedLibraryExpressionQ[expr] returns True if expr is a managed library expression and False other"},{label:"MandelbrotSetBoettcher",type:"keyword",info:"MandelbrotSetBoettcher[z] gives the B\xc3\\[Paragraph]ttcher coordinate of z with respect to the Mandelbrot set."},{label:"MandelbrotSetDistance",type:"keyword",info:"MandelbrotSetDistance[c] estimates the distance from c to the nearest point in the Mandelbrot set.Ma"},{label:"MandelbrotSetIterationCount",type:"keyword",info:"                                                                                        2\nMandelbrot"},{label:"MandelbrotSetMemberQ",type:"keyword",info:"MandelbrotSetMemberQ[z] returns True if z is in the Mandelbrot set, and False otherwise."},{label:"MandelbrotSetPlot",type:"keyword",info:"MandelbrotSetPlot[{z   , z   }] plots the portion of the Mandelbrot set inside the rectangle with co"},{label:"MangoldtLambda",type:"keyword",info:"MangoldtLambda[n] gives the von Mangoldt function \xce\x9b(n)."},{label:"ManhattanDistance",type:"keyword",info:'ManhattanDistance[u, v] gives the Manhattan or "city block" distance between vectors u and v.'},{label:"Manipulate",type:"keyword",info:"Manipulate[expr, {u, u   , u   }] generates a version of expr with controls added to allow interacti"},{label:"Manipulator",type:"keyword",info:"Manipulator[x] represents a manipulator with setting x in the range 0 to 1. Manipulator[Dynamic[x]] "},{label:"MannedSpaceMissionData",type:"keyword",info:"MannedSpaceMissionData[entity, property] gives the value of the specified property for the manned sp"},{label:"MannWhitneyTest",type:"keyword",info:"MannWhitneyTest[{data , data }] tests whether the medians of data  and data  are equal.MannWhitneyTe"},{label:"MantissaExponent",type:"keyword",info:"MantissaExponent[x] gives a list containing the mantissa and exponent of a number x. MantissaExponen"},{label:"Manual",type:"keyword",info:"Manual represents an option or other value that is to be selected manually, usually by some form of "},{label:"Map",type:"keyword",info:"Map[f, expr] or f/@expr applies f to each element on the first level in expr. Map[f, expr, levelspec"},{label:"MapAll",type:"keyword",info:"MapAll[f, expr] or f//@expr applies f to every subexpression in expr. "},{label:"MapAt",type:"keyword",info:"MapAt[f, expr, n] applies f to the element at position n in expr. If n is negative, the position is "},{label:"MapIndexed",type:"keyword",info:"MapIndexed[f, expr] applies f to the elements of expr, giving the part specification of each element"},{label:"MAProcess",type:"keyword",info:"MAProcess[{b , \xe2\x80\xa6, b }, v] represents a moving-average process of order q with normal white noise var"},{label:"MapThread",type:"keyword",info:"MapThread[f, {{a , a , \xe2\x80\xa6}, {b , b , \xe2\x80\xa6}, \xe2\x80\xa6}] gives {f[a , b , \xe2\x80\xa6], f[a , b , \xe2\x80\xa6], \xe2\x80\xa6}. MapThread[f, {exp"},{label:"MarchenkoPasturDistribution",type:"keyword",info:"MarchenkoPasturDistribution[\xce\xbb, \xcf\x83] represents a Marchenko\xe2\x80\x93Pastur distribution with asymptotic ratio \xce\xbb"},{label:"MarcumQ",type:"keyword",info:"MarcumQ[m, a, b] gives Marcum's Q function Q (a, b).MarcumQ[m, a, b , b ] gives Marcum's Q function "},{label:"MardiaCombinedTest",type:"keyword",info:"MardiaCombinedTest[data] tests whether data follows a MultinormalDistribution using the Mardia combi"},{label:"MardiaKurtosisTest",type:"keyword",info:"MardiaKurtosisTest[data] tests whether data follows a MultinormalDistribution using the Mardia kurto"},{label:"MardiaSkewnessTest",type:"keyword",info:"MardiaSkewnessTest[data] tests whether data follows a MultinormalDistribution using the Mardia skewn"},{label:"MarginalDistribution",type:"keyword",info:"                                                                                     th\nMarginalDist"},{label:"MarkovProcessProperties",type:"keyword",info:"MarkovProcessProperties[mproc] gives a summary of properties for the finite state Markov process mpr"},{label:"Masking",type:"keyword",info:"Masking is an option for various image and signal processing functions that specifies on which regio"},{label:"MassConcentrationCondition",type:"keyword",info:"MassConcentrationCondition[pred, vars, pars] represents a mass concentration boundary condition for "},{label:"MassFluxValue",type:"keyword",info:"MassFluxValue[pred, vars, pars] represents a mass flux boundary condition for PDEs with predicate pr"},{label:"MassImpermeableBoundaryValue",type:"keyword",info:"MassImpermeableBoundaryValue[pred, vars, pars] represents a mass impermeable boundary condition for "},{label:"MassOutflowValue",type:"keyword",info:"MassOutflowValue[pred, vars, pars] represents a mass outflow boundary condition for PDEs with predic"},{label:"MassSymmetryValue",type:"keyword",info:"MassSymmetryValue[pred, vars, pars] represents a mass symmetry boundary condition for PDEs with pred"},{label:"MassTransferValue",type:"keyword",info:"MassTransferValue[pred, vars, pars] represents a mass transfer boundary condition for PDEs with pred"},{label:"MassTransportPDEComponent",type:"keyword",info:"MassTransportPDEComponent[vars, pars] yields a mass transport PDE term with variables vars and param"},{label:"MatchingDissimilarity",type:"keyword",info:"MatchingDissimilarity[u, v] gives the matching dissimilarity between Boolean vectors u and v."},{label:"MatchLocalNameQ",type:"keyword",info:"MatchLocalNameQ is an internal symbol."},{label:"MatchLocalNames",type:"keyword",info:"MatchLocalNames is an option for Trace and related functions that specifies whether symbols such as "},{label:"MatchQ",type:"keyword",info:"MatchQ[expr, form] returns True if the pattern form matches expr, and returns False otherwise.MatchQ"},{label:"Material",type:"keyword",info:"System`Material"},{label:"MaterialShading",type:"keyword",info:'MaterialShading["material"] is a three-dimensional graphics directive specifying that surfaces that '},{label:"MaternPointProcess",type:"keyword",info:"                                                                                                    "},{label:"MathematicalFunctionData",type:"keyword",info:"MathematicalFunctionData[entity, property] gives data corresponding to property for the mathematical"},{label:"MathematicaNotation",type:"keyword",info:"System`MathematicaNotation"},{label:"MathieuC",type:"keyword",info:"MathieuC[a, q, z] gives the even Mathieu function with characteristic value a and parameter\xc2\xa0q. "},{label:"MathieuCharacteristicA",type:"keyword",info:"MathieuCharacteristicA[r, q] gives the characteristic value a  for even Mathieu functions with chara"},{label:"MathieuCharacteristicB",type:"keyword",info:"MathieuCharacteristicB[r, q] gives the characteristic value b  for odd Mathieu functions with charac"},{label:"MathieuCharacteristicExponent",type:"keyword",info:"MathieuCharacteristicExponent[a, q] gives the characteristic exponent r for Mathieu functions with c"},{label:"MathieuCPrime",type:"keyword",info:"MathieuCPrime[a, q, z] gives the derivative with respect to z of the even Mathieu function with char"},{label:"MathieuGroupM11",type:"keyword",info:"MathieuGroupM11[] represents the sporadic simple Mathieu group M  .\n                                "},{label:"MathieuGroupM12",type:"keyword",info:"MathieuGroupM12[] represents the sporadic simple Mathieu group M  .\n                                "},{label:"MathieuGroupM22",type:"keyword",info:"MathieuGroupM22[] represents the sporadic simple Mathieu group M  .\n                                "},{label:"MathieuGroupM23",type:"keyword",info:"MathieuGroupM23[] represents the sporadic simple Mathieu group M  .\n                                "},{label:"MathieuGroupM24",type:"keyword",info:"MathieuGroupM24[] represents the sporadic simple Mathieu group M  .\n                                "},{label:"MathieuS",type:"keyword",info:"MathieuS[a, q, z] gives the odd Mathieu function with characteristic value a and parameter\xc2\xa0q. "},{label:"MathieuSPrime",type:"keyword",info:"MathieuSPrime[a, q, z] gives the derivative with respect to z of the odd Mathieu function with chara"},{label:"MathMLForm",type:"keyword",info:"MathMLForm[expr] prints as a MathML form of expr. "},{label:"MathMLText",type:"keyword",info:"System`MathMLText"},{label:"Matrices",type:"keyword",info:"Matrices[{d , d }] represents the domain of matrices of dimensions d \xc3\x97d .Matrices[{d , d }, dom] rep"},{label:"MatrixExp",type:"keyword",info:"MatrixExp[m] gives the matrix exponential of m. MatrixExp[m, v] gives the matrix exponential of m ap"},{label:"MatrixForm",type:"keyword",info:"MatrixForm[list] prints with the elements of list arranged in a regular array. "},{label:"MatrixFunction",type:"keyword",info:"MatrixFunction[f, m] gives the matrix generated by the scalar function f at the matrix argument m."},{label:"MatrixLog",type:"keyword",info:"MatrixLog[m] gives the matrix logarithm of a matrix m."},{label:"MatrixNormalDistribution",type:"keyword",info:"MatrixNormalDistribution[\xce\xa3   , \xce\xa3   ] represents zero mean matrix normal distribution with row covari"},{label:"MatrixPlot",type:"keyword",info:"MatrixPlot[m] generates a plot that gives a visual representation of the values of elements in a mat"},{label:"MatrixPower",type:"keyword",info:"                               th                                                                th\n"},{label:"MatrixPropertyDistribution",type:"keyword",info:"MatrixPropertyDistribution[expr, x \xef\x8f\x92 mdist] represents the distribution of the matrix property expr "},{label:"MatrixQ",type:"keyword",info:"MatrixQ[expr] gives True if expr is a list of lists or a two-dimensional SparseArray object that can"},{label:"MatrixRank",type:"keyword",info:"MatrixRank[m] gives the rank of the matrix m. "},{label:"MatrixTDistribution",type:"keyword",info:"MatrixTDistribution[\xce\xa3   , \xce\xa3   , \xce\xbd] represents zero mean matrix t distribution with row covariance ma"},{label:"Max",type:"keyword",info:"Max[x , x , \xe2\x80\xa6] yields the numerically largest of the x . Max[{x , x , \xe2\x80\xa6}, {y , \xe2\x80\xa6}, \xe2\x80\xa6] yields the lar"},{label:"MaxBend",type:"keyword",info:"System`MaxBend"},{label:"MaxCellMeasure",type:"keyword",info:"MaxCellMeasure is an option for DiscretizeRegion and related functions that specifies the maximum ce"},{label:"MaxColorDistance",type:"keyword",info:"MaxColorDistance is an option to specify the maximum distance allowed between colors."},{label:"MaxDate",type:"keyword",info:"MaxDate[{date , date , \xe2\x80\xa6}] gives the latest date of the date .MaxDate[interval] gives the endpoint o"},{label:"MaxDetect",type:"keyword",info:"MaxDetect[image] gives a binary image in which white pixels correspond to constant extended maxima i"},{label:"MaxDuration",type:"keyword",info:"MaxDuration is an option that specifies the maximum duration for audio playback or capture."},{label:"MaxExtraBandwidths",type:"keyword",info:"MaxExtraBandwidths is an option to SmoothKernelDistribution that controls the behavior outside that "},{label:"MaxExtraConditions",type:"keyword",info:"MaxExtraConditions is an option to Solve and related functions that specifies how many extra equatio"},{label:"MaxFeatureDisplacement",type:"keyword",info:"MaxFeatureDisplacement is an option that specifies the maximum displacement allowed for any feature."},{label:"MaxFeatures",type:"keyword",info:"MaxFeatures is an option that specifies the maximum number of features that will be returned from fe"},{label:"MaxFilter",type:"keyword",info:"                                                                                                    "},{label:"MaximalBy",type:"keyword",info:"MaximalBy[{e , e , \xe2\x80\xa6}, f] returns a list of the e  for which the value of f[e ] is maximal.MaximalBy"},{label:"Maximize",type:"keyword",info:"Maximize[f, x] maximizes f exactly with respect to x.Maximize[f, {x, y, \xe2\x80\xa6}] maximizes f exactly with"},{label:"MaxItems",type:"keyword",info:"MaxItems is an option that specifies the maximum number of items to be used or shown."},{label:"MaxIterations",type:"keyword",info:"MaxIterations is an option that specifies the maximum number of iterations that should be tried in v"},{label:"MaxLimit",type:"keyword",info:"                 *                                                        *           *             "},{label:"MaxMemoryUsed",type:"keyword",info:"MaxMemoryUsed[] gives the maximum number of bytes used to store all data for the current Wolfram Sys"},{label:"MaxMixtureKernels",type:"keyword",info:"MaxMixtureKernels is an option for SmoothKernelDistribution and related functions that specifies the"},{label:"MaxOverlapFraction",type:"keyword",info:"MaxOverlapFraction is an option that specifies the maximum acceptable overlap between different iden"},{label:"MaxPlotPoints",type:"keyword",info:"MaxPlotPoints is an option for plotting functions like ArrayPlot and ListPlot3D that specifies the m"},{label:"MaxPoints",type:"keyword",info:"MaxPoints is an option for NIntegrate specifying the maximum total number of times to sample the int"},{label:"MaxRecursion",type:"keyword",info:"MaxRecursion is an option for functions like NIntegrate and Plot that specifies how many recursive s"},{label:"MaxStableDistribution",type:"keyword",info:"MaxStableDistribution[\xce\xbc, \xcf\x83, \xce\xbe] represents a generalized maximum extreme value distribution with loca"},{label:"MaxStepFraction",type:"keyword",info:"MaxStepFraction is an option to functions like NDSolve that specifies the maximum fraction of the to"},{label:"MaxSteps",type:"keyword",info:"MaxSteps is an option to functions like NDSolve that specifies the maximum number of steps to take i"},{label:"MaxStepSize",type:"keyword",info:"MaxStepSize is an option to functions like NDSolve that specifies the maximum size of a single step "},{label:"MaxTrainingRounds",type:"keyword",info:"MaxTrainingRounds is an option for NetTrain and related functions that specifies the maximum number "},{label:"MaxValue",type:"keyword",info:"MaxValue[f, x] gives the maximum value of f with respect to x.MaxValue[f, {x, y, \xe2\x80\xa6}] gives the maxim"},{label:"MaxwellDistribution",type:"keyword",info:"MaxwellDistribution[\xcf\x83] represents a Maxwell distribution with scale parameter \xcf\x83."},{label:"MaxWordGap",type:"keyword",info:"MaxWordGap is an option for SearchAdjustment that specifies the number of words that can occur betwe"},{label:"McLaughlinGroupMcL",type:"keyword",info:"McLaughlinGroupMcL[] represents the sporadic simple McLaughlin group McL."},{label:"Mean",type:"keyword",info:"Mean[list] gives the statistical mean of the elements in list. Mean[dist] gives the mean of the dist"},{label:"MeanAbsoluteLossLayer",type:"keyword",info:'MeanAbsoluteLossLayer[] represents a loss layer that computes the mean absolute loss between the "In'},{label:"MeanAround",type:"keyword",info:"MeanAround[{x , x , x , \xe2\x80\xa6}] gives an Around object describing the mean of the x  and its uncertainty"},{label:"MeanClusteringCoefficient",type:"keyword",info:"MeanClusteringCoefficient[g] gives the mean clustering coefficient of the graph g.MeanClusteringCoef"},{label:"MeanDegreeConnectivity",type:"keyword",info:"MeanDegreeConnectivity[g] gives a list of k-mean degree connectivity for the graph g for successive "},{label:"MeanDeviation",type:"keyword",info:"MeanDeviation[list] gives the mean absolute deviation from the mean of the elements in list."},{label:"MeanFilter",type:"keyword",info:"                                                                                                    "},{label:"MeanGraphDistance",type:"keyword",info:"MeanGraphDistance[g] gives the mean distance between all pairs of vertices in the graph g.MeanGraphD"},{label:"MeanNeighborDegree",type:"keyword",info:"MeanNeighborDegree[g] gives a list of mean neighbor degrees of vertices for the graph g.MeanNeighbor"},{label:"MeanPointDensity",type:"keyword",info:"MeanPointDensity[pdata] estimates the mean point density \xce\xbb from point data pdata in the observation "},{label:"MeanShift",type:"keyword",info:"MeanShift[list, d] replaces each element in list by the mean of the values of all elements that diff"},{label:"MeanShiftFilter",type:"keyword",info:"                                                                                                    "},{label:"MeanSquaredLossLayer",type:"keyword",info:'MeanSquaredLossLayer[] represents a loss layer that computes the mean squared loss between its "Inpu'},{label:"Median",type:"keyword",info:"Median[list] gives the median of the elements in list. Median[dist] gives the median of the distribu"},{label:"MedianDeviation",type:"keyword",info:"MedianDeviation[list] gives the median absolute deviation from the median of the elements in list."},{label:"MedianFilter",type:"keyword",info:"                                                                                                    "},{label:"MedicalTestData",type:"keyword",info:"MedicalTestData[entity, property] gives the value of the specified property for the medical test ent"},{label:"Medium",type:"keyword",info:"Medium is a style or option setting that specifies that objects should be medium sized."},{label:"MeijerG",type:"keyword",info:"                                                                                                    "},{label:"MeijerGReduce",type:"keyword",info:"MeijerGReduce[expr, x] attempts to reduce expr to a single MeijerG object as a function of x."},{label:"MeixnerDistribution",type:"keyword",info:"MeixnerDistribution[a, b, m, d] represents a Meixner distribution with location parameter m, scale p"},{label:"MellinConvolve",type:"keyword",info:"MellinConvolve[f, g, x, y] gives the Mellin convolution with respect to x of the expressions f and g"},{label:"MellinTransform",type:"keyword",info:"MellinTransform[expr, x, s] gives the Mellin transform of expr.MellinTransform[expr, {x , x , \xe2\x80\xa6}, {s"},{label:"MemberQ",type:"keyword",info:"MemberQ[list, form] returns True if an element of list matches form, and False otherwise. MemberQ[li"},{label:"MemoryAvailable",type:"keyword",info:"MemoryAvailable[] gives the estimated number of bytes readily available for storing additional data "},{label:"MemoryConstrained",type:"keyword",info:"MemoryConstrained[expr, b] evaluates expr, stopping if more than b bytes of memory are requested. Me"},{label:"MemoryConstraint",type:"keyword",info:"MemoryConstraint is an option for TestReport and VerificationTest that specifies how much memory (in"},{label:"MemoryInUse",type:"keyword",info:"MemoryInUse[] gives the number of bytes currently being used to store all data in the current Wolfra"},{label:"MengerMesh",type:"keyword",info:"                                                     th                                             "},{label:"Menu",type:"keyword",info:"System`Menu"},{label:"MenuAppearance",type:"keyword",info:"System`MenuAppearance"},{label:"MenuCommandKey",type:"keyword",info:"MenuCommandKey is an option for cells that specifies the keyboard shortcut to be associated with a s"},{label:"MenuEvaluator",type:"keyword",info:"System`MenuEvaluator"},{label:"MenuItem",type:"keyword",info:"System`MenuItem"},{label:"MenuList",type:"keyword",info:"System`MenuList"},{label:"MenuPacket",type:"keyword",info:"MenuPacket[integer, string] is a WSTP packet indicating a menu request with title string."},{label:"MenuSortingValue",type:"keyword",info:"MenuSortingValue is an option for cells and notebooks that specifies where a cell style, stylesheet,"},{label:"MenuStyle",type:"keyword",info:"MenuStyle is an option for menu-generating constructs that specifies the style to use in displaying "},{label:"MenuView",type:"keyword",info:"                                                                                                    "},{label:"Merge",type:"keyword",info:"Merge[{assoc , assoc , \xe2\x80\xa6}, f] merges the associations assoc , using the function f to combine values"},{label:"MergeDifferences",type:"keyword",info:"System`MergeDifferences"},{label:"MergingFunction",type:"keyword",info:"MergingFunction is an option for functions such as PersistentSymbol that specifies a function to app"},{label:"MersennePrimeExponent",type:"keyword",info:"                                     th\nMersennePrimeExponent[n] gives the n\xef\x8e\xa0   Mersenne prime expon"},{label:"MersennePrimeExponentQ",type:"keyword",info:"MersennePrimeExponentQ[n] returns True if n is a Mersenne prime exponent, and False otherwise."},{label:"Mesh",type:"keyword",info:"Mesh is an option for Plot3D, DensityPlot, and other plotting functions that specifies what mesh sho"},{label:"MeshCellCentroid",type:"keyword",info:"MeshCellCentroid is an annotation of MeshRegion and BoundaryMeshRegion objects that gives the centro"},{label:"MeshCellCount",type:"keyword",info:"MeshCellCount[mreg] gives a list {c , c , \xe2\x80\xa6} of counts c  of cells of dimension d in the mesh region"},{label:"MeshCellHighlight",type:"keyword",info:"MeshCellHighlight is an option and annotation of MeshRegion, BoundaryMeshRegion, and related functio"},{label:"MeshCellIndex",type:"keyword",info:"MeshCellIndex[mreg, d] gives the cell indices for cells of dimension d in the mesh region mreg.MeshC"},{label:"MeshCellLabel",type:"keyword",info:"MeshCellLabel is an option to MeshRegion, BoundaryMeshRegion and related functions that specifies la"},{label:"MeshCellMarker",type:"keyword",info:"MeshCellMarker is an option to MeshRegion and BoundaryMeshRegion that specifies integer markers to a"},{label:"MeshCellMeasure",type:"keyword",info:"MeshCellMeasure is an annotation of MeshRegion and BoundaryMeshRegion objects that gives the measure"},{label:"MeshCellQuality",type:"keyword",info:"MeshCellQuality is an annotation of MeshRegion and BoundaryMeshRegion objects that gives a quality m"},{label:"MeshCells",type:"keyword",info:"MeshCells[mreg, d] gives the cells of dimension d in the mesh region mreg.MeshCells[mreg, cellspec] "},{label:"MeshCellShapeFunction",type:"keyword",info:"MeshCellShapeFunction is an option and annotation for MeshRegion, BoundaryMeshRegion, and related fu"},{label:"MeshCellStyle",type:"keyword",info:"MeshCellStyle is an option and annotation of MeshRegion, BoundaryMeshRegion, and related functions t"},{label:"MeshConnectivityGraph",type:"keyword",info:"MeshConnectivityGraph[mr, 0] gives a graph of points connected by lines.MeshConnectivityGraph[mr, d]"},{label:"MeshCoordinates",type:"keyword",info:"MeshCoordinates[mreg] gives a list of coordinates in the mesh region mreg."},{label:"MeshFunctions",type:"keyword",info:"MeshFunctions is an option for plotting functions that specifies functions to use to determine the p"},{label:"MeshPrimitives",type:"keyword",info:"MeshPrimitives[mreg, d] gives the graphics primitives for cells of dimension d in the mesh region mr"},{label:"MeshQualityGoal",type:"keyword",info:"MeshQualityGoal is an option for DiscretizeRegion and related functions that specifies a mesh cell q"},{label:"MeshRange",type:"keyword",info:"System`MeshRange"},{label:"MeshRefinementFunction",type:"keyword",info:"MeshRefinementFunction is an option for DiscretizeRegion and related functions that specifies a func"},{label:"MeshRegion",type:"keyword",info:"MeshRegion[{p , p , \xe2\x80\xa6}, {mcell [{i , \xe2\x80\xa6}], mcell [{j , \xe2\x80\xa6}], \xe2\x80\xa6}] yields a mesh with cells mcell , wher"},{label:"MeshRegionQ",type:"keyword",info:"MeshRegionQ[reg] yields True if the region reg is a valid MeshRegion object and False otherwise."},{label:"MeshShading",type:"keyword",info:"MeshShading is an option for plotting functions that gives lists of colors to use for regions betwee"},{label:"MeshStyle",type:"keyword",info:"MeshStyle is an option for Plot3D, DensityPlot, and other plotting functions that specifies the styl"},{label:"Message",type:"keyword",info:"Message[symbol :: tag] prints the message symbol :: tag unless it has been switched off. Message[sym"},{label:"MessageDialog",type:"keyword",info:"MessageDialog[expr] puts up a standard message dialog that displays expr together with an OK button."},{label:"MessageList",type:"keyword",info:"                                                                                                    "},{label:"MessageName",type:"keyword",info:"symbol :: tag is a name for a message. "},{label:"MessageObject",type:"keyword",info:"System`MessageObject"},{label:"MessageOptions",type:"keyword",info:"System`MessageOptions"},{label:"MessagePacket",type:"keyword",info:"MessagePacket[symbol, string] is a WSTP packet containing a Wolfram Language message identifier of t"},{label:"Messages",type:"keyword",info:"Messages[symbol] gives all the messages assigned to a particular symbol. "},{label:"MessagesNotebook",type:"keyword",info:"System`MessagesNotebook"},{label:"MetaCharacters",type:"keyword",info:"MetaCharacters is an option to StringPosition. With MetaCharacters -> None, no strings have special "},{label:"MetaInformation",type:"keyword",info:"MetaInformation is an option giving meta-information for Image, CloudObject, and other objects."},{label:"MeteorShowerData",type:"keyword",info:"MeteorShowerData[entity, property] gives the value of the specified property for the meteor shower e"},{label:"Method",type:"keyword",info:"Method is an option for various algorithm-intensive functions that specifies what internal methods t"},{label:"MethodOptions",type:"keyword",info:"System`MethodOptions"},{label:"MexicanHatWavelet",type:"keyword",info:"MexicanHatWavelet[] represents the Mexican hat wavelet of width 1.MexicanHatWavelet[\xcf\x83] represents th"},{label:"MeyerWavelet",type:"keyword",info:"MeyerWavelet[] represents the Meyer wavelet of order 3.MeyerWavelet[n] represents the Meyer wavelet "},{label:"Midpoint",type:"keyword",info:"Midpoint[{p , p }] gives the midpoint of the line segment connecting the points p  and p .Midpoint[L"},{label:"MIMETypeToFormatList",type:"keyword",info:"MIMETypeToFormatList[] returns lists of file formats corresponding to all registered MIME types.MIME"},{label:"Min",type:"keyword",info:"Min[x , x , \xe2\x80\xa6] yields the numerically smallest of the x . Min[{x , x , \xe2\x80\xa6}, {y , \xe2\x80\xa6}, \xe2\x80\xa6] yields the sm"},{label:"MinColorDistance",type:"keyword",info:"MinColorDistance is an option for DominantColors that specifies the minimum distance between returne"},{label:"MinDate",type:"keyword",info:"MinDate[{date , date , \xe2\x80\xa6}] gives the earliest date of the date .MinDate[interval] gives the beginnin"},{label:"MinDetect",type:"keyword",info:"MinDetect[image] gives a binary image in which white pixels correspond to constant extended minima i"},{label:"MineralData",type:"keyword",info:"MineralData[entity, property] gives the value of the specified property for the mineral entity.Miner"},{label:"MinFilter",type:"keyword",info:"                                                                                                    "},{label:"MinimalBy",type:"keyword",info:"MinimalBy[{e , e , \xe2\x80\xa6}, f] returns a list of the e  for which the value of f[e ] is minimal.MinimalBy"},{label:"MinimalPolynomial",type:"keyword",info:"MinimalPolynomial[s, x] gives the minimal polynomial in x for which the algebraic number s is a root"},{label:"MinimalStateSpaceModel",type:"keyword",info:"MinimalStateSpaceModel[sys] gives the minimal state-space model of the state-space model sys.Minimal"},{label:"Minimize",type:"keyword",info:"Minimize[f, x] minimizes f exactly with respect to x.Minimize[f, {x, y, \xe2\x80\xa6}] minimizes f exactly with"},{label:"MinimumTimeIncrement",type:"keyword",info:"MinimumTimeIncrement[tseries] gives the minimum time increment in the time series tseries."},{label:"MinIntervalSize",type:"keyword",info:"MinIntervalSize is an option for IntervalSlider that specifies the minimum size of the interval duri"},{label:"MinkowskiQuestionMark",type:"keyword",info:"MinkowskiQuestionMark[x] gives Minkowski's question mark function ? (x)."},{label:"MinLimit",type:"keyword",info:"                 *                                                        *           *             "},{label:"MinMax",type:"keyword",info:"MinMax[list] gives the list {Min[list], Max[list]}.MinMax[list, \xce.b4] gives {Min[list] - \xce.b4, Max[list] +"},{label:"MinorPlanetData",type:"keyword",info:"MinorPlanetData[entity, property] gives the value of the specified property for the minor planet ent"},{label:"Minors",type:"keyword",info:"                                                                    th\nMinors[m] gives the minors of"},{label:"MinPointSeparation",type:"keyword",info:"MinPointSeparation is an option for GeoGraphValuePlot that determines when to merge nearby vertices "},{label:"MinRecursion",type:"keyword",info:"MinRecursion is an option for NIntegrate and other numerical functions that use a recursive algorith"},{label:"MinSize",type:"keyword",info:"MinSize is an option of certain BoxForm primitives."},{label:"MinStableDistribution",type:"keyword",info:"MinStableDistribution[\xce\xbc, \xcf\x83, \xce\xbe] represents a generalized minimum extreme value distribution with loca"},{label:"Minus",type:"keyword",info:"-x is the arithmetic negation of x. "},{label:"MinusPlus",type:"keyword",info:"MinusPlus[x] displays as \xe2\x88\x93 x.MinusPlus[x, y, \xe2\x80\xa6] displays as x \xe2\x88\x93 y \xe2\x88\x93 \xe2\x80\xa6.\n"},{label:"MinValue",type:"keyword",info:"MinValue[f, x] gives the minimum value of f with respect to x.MinValue[f, {x, y, \xe2\x80\xa6}] gives the exact"},{label:"Missing",type:"keyword",info:'Missing[] represents data that is missing.Missing["reason"] specifies a reason for the data\'s being '},{label:"MissingBehavior",type:"keyword",info:"MissingBehavior is an option to Query and related functions that specifies how expressions with head"},{label:"MissingDataMethod",type:"keyword",info:"MissingDataMethod is an option to TemporalData and other functions that controls how to process miss"},{label:"MissingDataRules",type:"keyword",info:"MissingDataRules is an option for SemanticImport and related functions that specifies what should be"},{label:"MissingQ",type:"keyword",info:"MissingQ[expr] gives True if expr has head Missing."},{label:"MissingString",type:"keyword",info:"MissingString is an option for TextString and related functions that indicates how an expression wit"},{label:"MissingStyle",type:"keyword",info:"MissingStyle is an option for GeoRegionValuePlot that specifies how locations with missing data shou"},{label:"MissingValuePattern",type:"keyword",info:"MissingValuePattern is an option for SynthesizeMissingValues to specify which elements are considere"},{label:"MissingValueSynthesis",type:"keyword",info:"MissingValueSynthesis is an option for functions such as Classify that specifies how missing values "},{label:"MittagLefflerE",type:"keyword",info:"MittagLefflerE[\xce\\[PlusMinus], z] gives the Mittag\xe2\x80\x93Leffler function E (z).MittagLefflerE[\xce\\[PlusMinus], \xce.b2, z] gives the gener"},{label:"MixedFractionParts",type:"keyword",info:"MixedFractionParts[expr] gives the list {IntegerPart[expr], FractionalPart[expr]}."},{label:"MixedGraphQ",type:"keyword",info:"MixedGraphQ[g] yields True if the graph g is a mixed graph and False otherwise. "},{label:"MixedMagnitude",type:"keyword",info:"MixedMagnitude[{val , val , \xe2\x80\xa6, val }] represents a mixed-magnitude expression consisting of values v"},{label:"MixedRadix",type:"keyword",info:"MixedRadix[{b , \xe2\x80\xa6, b }] represents the list of bases of a numerical system in which different digits"},{label:"MixedRadixQuantity",type:"keyword",info:"MixedRadixQuantity[{value , \xe2\x80\xa6, value }, {unit , \xe2\x80\xa6, unit }] yields a single Quantity expression repre"},{label:"MixedUnit",type:"keyword",info:"MixedUnit[{unit , unit , \xe2\x80\xa6, unit }] represents a mixed-unit expression consisting of units unit  thr"},{label:"MixtureDistribution",type:"keyword",info:"MixtureDistribution[{w , \xe2\x80\xa6, w }, {dist , \xe2\x80\xa6, dist }] represents a mixture distribution whose CDF is g"},{label:"Mod",type:"keyword",info:"Mod[m, n] gives the remainder on division of m by n. Mod[m, n, d] uses an offset d. \n"},{label:"Modal",type:"keyword",info:"Modal is an option to functions such as CreateDialog that specifies whether the dialog that is creat"},{label:"Mode",type:"keyword",info:"Mode is an option to Eliminate and related functions that specifies in what sense the equations are "},{label:"Modular",type:"keyword",info:"Modular is a setting for the option Mode in Solve and related functions, which specifies that equati"},{label:"ModularInverse",type:"keyword",info:"ModularInverse[k, n] gives the modular inverse of k modulo n."},{label:"ModularLambda",type:"keyword",info:"ModularLambda[\xcf\x84] gives the modular lambda elliptic function \xce\xbb(\xcf\x84). "},{label:"Module",type:"keyword",info:"Module[{x, y, \xe2\x80\xa6}, expr] specifies that occurrences of the symbols x, y, \xe2\x80\xa6 in expr should be treated "},{label:"Modulus",type:"keyword",info:"Modulus \xef\x94\xa2 n is an option that can be given in certain algebraic functions to specify that integers s"},{label:"MoebiusMu",type:"keyword",info:"MoebiusMu[n] gives the M\xc3\\[Paragraph]bius function \xce\xbc(n). "},{label:"Molecule",type:"keyword",info:"Molecule[{atom , atom , \xe2\x80\xa6}, {bond , bond , \xe2\x80\xa6}] represents a molecule with atoms atom  and bonds bond"},{label:"MoleculeAlign",type:"keyword",info:"MoleculeAlign[ref, mol] returns a version of mol that is aligned with reference molecule ref.Molecul"},{label:"MoleculeContainsQ",type:"keyword",info:"MoleculeContainsQ[molecule, patt] returns True if patt is a substructure of molecule, and False othe"},{label:"MoleculeDraw",type:"keyword",info:"MoleculeDraw[] displays a window with interactive tools for drawing a Molecule, and returns the resu"},{label:"MoleculeEquivalentQ",type:"keyword",info:"MoleculeEquivalentQ[mol , mol ] gives True if mol  and mol  represent equivalent molecules and gives"},{label:"MoleculeFreeQ",type:"keyword",info:"MoleculeFreeQ[molecule, patt] returns True if patt is not a substructure of molecule, and False othe"},{label:"MoleculeGraph",type:"keyword",info:"MoleculeGraph[mol] returns a graph constructed from the molecule mol."},{label:"MoleculeMatchQ",type:"keyword",info:"MoleculeMatchQ[mol, patt] returns True if the Molecule matches the given pattern.MoleculeMatchQ[patt"},{label:"MoleculeMaximumCommonSubstructure",type:"keyword",info:"MoleculeMaximumCommonSubstructure[{mol , mol , \xe2\x80\xa6}] returns a molecule pattern representing the large"},{label:"MoleculeModify",type:"keyword",info:'MoleculeModify[mol, "mod"] gives a molecule or list of molecules derived from the molecule mol by ap'},{label:"MoleculeName",type:"keyword",info:"MoleculeName[mol] attempts to return the systematic chemical name for the given molecule.MoleculeNam"},{label:"MoleculePattern",type:"keyword",info:"MoleculePattern[{atom , atom , \xe2\x80\xa6 }, { bond , bond , \xe2\x80\xa6 }] represents a molecule pattern with atoms at"},{label:"MoleculePlot",type:"keyword",info:"MoleculePlot[mol] creates a two-dimensional structure diagram of the molecule mol.MoleculePlot[mol, "},{label:"MoleculePlot3D",type:"keyword",info:"MoleculePlot3D[mol] creates a three-dimensional model of the molecule mol.MoleculePlot3D[mol, patt] "},{label:"MoleculeProperty",type:"keyword",info:"MoleculeProperty[pname] represents a property identified by pname for use in MoleculeValue.MoleculeP"},{label:"MoleculeQ",type:"keyword",info:"MoleculeQ[mol] returns True if mol is a valid Molecule expression, and False otherwise."},{label:"MoleculeRecognize",type:"keyword",info:"MoleculeRecognize[image] recognizes a molecule in image and returns it as a Molecule object."},{label:"MoleculeSubstructureCount",type:"keyword",info:"MoleculeSubstructureCount[mol, patt] gives a count of the number of times patt appears as a substruc"},{label:"MoleculeValue",type:"keyword",info:"MoleculeValue[molecule, property] gives the value of the specified property for the given molecule.M"},{label:"Moment",type:"keyword",info:"                            th                                                                   th "},{label:"MomentConvert",type:"keyword",info:"MomentConvert[mexpr, form] converts the moment expression mexpr to the specified form. "},{label:"MomentEvaluate",type:"keyword",info:"MomentEvaluate[mexpr, dist] evaluates formal moments in the moment expression mexpr on the distribut"},{label:"MomentGeneratingFunction",type:"keyword",info:"MomentGeneratingFunction[dist, t] gives the moment-generating function for the distribution dist as "},{label:"MomentOfInertia",type:"keyword",info:"MomentOfInertia[reg, pt, v] computes the moment of inertia for the region reg rotating around an axi"},{label:"Monday",type:"keyword",info:"Monday is a day of the week."},{label:"Monitor",type:"keyword",info:"Monitor[expr, mon] generates a temporary monitor cell in which the continually updated current value"},{label:"MonomialList",type:"keyword",info:"MonomialList[poly] gives the list of all monomials in the polynomial poly.MonomialList[poly, {x , x "},{label:"MonomialOrder",type:"keyword",info:"System`MonomialOrder"},{label:"MonsterGroupM",type:"keyword",info:"MonsterGroupM[] represents the sporadic simple monster group M."},{label:"MoonPhase",type:"keyword",info:"MoonPhase[] gives moon phase fraction of illumination for the current date.MoonPhase[datespec] gives"},{label:"MoonPosition",type:"keyword",info:"MoonPosition[] gives the position of the Moon for the current date and location.MoonPosition[datespe"},{label:"MorletWavelet",type:"keyword",info:"MorletWavelet[] represents a Morlet wavelet. "},{label:"MorphologicalBinarize",type:"keyword",info:"MorphologicalBinarize[image, {t , t }] creates a binary image from image by replacing all values abo"},{label:"MorphologicalBranchPoints",type:"keyword",info:"MorphologicalBranchPoints[image] gives a version of a binary image image in which white pixels repre"},{label:"MorphologicalComponents",type:"keyword",info:"MorphologicalComponents[image] gives an array in which each pixel of image is replaced by an integer"},{label:"MorphologicalEulerNumber",type:"keyword",info:"MorphologicalEulerNumber[image] computes the morphological Euler number of regions in a binary image"},{label:"MorphologicalGraph",type:"keyword",info:"MorphologicalGraph[image] gives a graph object that represents the connectivity of the morphological"},{label:"MorphologicalPerimeter",type:"keyword",info:"MorphologicalPerimeter[image] picks out the morphological perimeter of regions of foreground in imag"},{label:"MorphologicalTransform",type:"keyword",info:"MorphologicalTransform[image, f] applies the function f to the 3\xc3\x973 neighborhood of each pixel in a b"},{label:"MortalityData",type:"keyword",info:"MortalityData[spec] gives the values of all properties for the specified demographic.MortalityData[s"},{label:"Most",type:"keyword",info:"Most[expr] gives expr with the last element removed. "},{label:"MountainData",type:"keyword",info:"MountainData[entity, property] gives the value of the specified property for the mountain entity.Mou"},{label:"MouseAnnotation",type:"keyword",info:"MouseAnnotation[] gives any mouse annotation associated with the expression at the current mouse pos"},{label:"MouseAppearance",type:"keyword",info:"MouseAppearance[expr, graphic] changes the mouse cursor to appear as graphic when the mouse pointer "},{label:"MouseAppearanceTag",type:"keyword",info:"System`MouseAppearanceTag"},{label:"MouseButtons",type:"keyword",info:"MouseButtons[] gives a list of the mouse buttons currently being pressed."},{label:"Mouseover",type:"keyword",info:"Mouseover[expr, over] represents an object that displays as over when the mouse pointer is over it, "},{label:"MousePointerNote",type:"keyword",info:"System`MousePointerNote"},{label:"MousePosition",type:"keyword",info:'MousePosition[] gives the current mouse position in the notebook front end. MousePosition["coords"] '},{label:"MovieData",type:"keyword",info:"MovieData[entity, property] gives the value of the specified property for the movie entity.MovieData"},{label:"MovingAverage",type:"keyword",info:"MovingAverage[list, r] gives the moving average of list, computed by averaging runs of r elements.Mo"},{label:"MovingMap",type:"keyword",info:"MovingMap[f, data, w] applies f to size w windows in the specified data.MovingMap[f, data, wspec] us"},{label:"MovingMedian",type:"keyword",info:"MovingMedian[list, r] gives the moving median of list, computed using spans of r elements."},{label:"MoyalDistribution",type:"keyword",info:"MoyalDistribution[\xce\xbc, \xcf\x83] represents a Moyal distribution with location parameter \xce\xbc and scale paramete"},{label:"MultiaxisArrangement",type:"keyword",info:"MultiaxisArrangement is an option to plotting functions that specifies how multiple axes are arrange"},{label:"Multicolumn",type:"keyword",info:"Multicolumn[list, cols] is an object that formats with the elements of list arranged in a grid with "},{label:"MultiedgeStyle",type:"keyword",info:"MultiedgeStyle is an option for GraphPlot and related functions that specifies how to draw multiple "},{label:"MultigraphQ",type:"keyword",info:"MultigraphQ[g] yields True if the graph g is a multigraph and False otherwise."},{label:"MultilaunchWarning",type:"keyword",info:"MultilaunchWarning is a global option that specifies whether a warning is given when you try to modi"},{label:"MultiLetterItalics",type:"keyword",info:"System`MultiLetterItalics"},{label:"MultiLetterStyle",type:"keyword",info:"System`MultiLetterStyle"},{label:"MultilineFunction",type:"keyword",info:"MultilineFunction is an option for UnderscriptBox and related box objects that specifies what to do "},{label:"Multinomial",type:"keyword",info:"Multinomial[n , n , \xe2\x80\xa6] gives the multinomial coefficient (n  + n  + \xe2\x80\xa6) !/(n  ! n  ! \xe2\x80\xa6). \n           "},{label:"MultinomialDistribution",type:"keyword",info:"MultinomialDistribution[n, {p , p , \xe2\x80\xa6, p }] represents a multinomial distribution with n trials and "},{label:"MultinormalDistribution",type:"keyword",info:"MultinormalDistribution[\xce\xbc, \xce\xa3] represents a multivariate normal (Gaussian) distribution with mean vec"},{label:"MultiplicativeOrder",type:"keyword",info:"                                                                                                    "},{label:"Multiplicity",type:"keyword",info:"Multiplicity is an option to Roots. Multiplicity -> n specifies that the multiplicity of each of the"},{label:"MultiplySides",type:"keyword",info:"MultiplySides[rel, x] multiplies each side of the equation or inequality rel by x.MultiplySides[rel "},{label:"Multiselection",type:"keyword",info:"Multiselection is an option to ListPicker that specifies whether multiple values may be selected."},{label:"MultivariateHypergeometricDistribution",type:"keyword",info:"MultivariateHypergeometricDistribution[n, {m , m , \xe2\x80\xa6, m }] represents a multivariate hypergeometric "},{label:"MultivariatePoissonDistribution",type:"keyword",info:"MultivariatePoissonDistribution[\xce\xbc , {\xce\xbc , \xce\xbc , \xe2\x80\xa6}] represents a multivariate Poisson distribution with"},{label:"MultivariateTDistribution",type:"keyword",info:"MultivariateTDistribution[\xce\xa3, \xce\xbd] represents the multivariate Student t distribution with scale matrix"},{label:"N",type:"keyword",info:"N[expr] gives the numerical value of expr. N[expr, n] attempts to give a result with n\xe2\x80\x90digit precisi"},{label:"NakagamiDistribution",type:"keyword",info:"NakagamiDistribution[\xce\xbc, \xcf\x89] represents a Nakagami distribution with shape parameter \xce\xbc and spread para"},{label:"NameQ",type:"keyword",info:'NameQ["string"] yields True if there are any symbols whose names match the string pattern given, and'},{label:"Names",type:"keyword",info:'Names["string"] gives a list of the names of symbols that match the string. Names[patt] gives a list'},{label:"NamespaceBox",type:"keyword",info:"System`NamespaceBox"},{label:"NamespaceBoxOptions",type:"keyword",info:"System`NamespaceBoxOptions"},{label:"Nand",type:"keyword",info:"Nand[e , e , \xe2\x80\xa6] is the logical NAND function. It evaluates its arguments in order, giving True immed"},{label:"NArgMax",type:"keyword",info:"NArgMax[f, x] gives a position x    at which f is numerically maximized.NArgMax[f, {x, y, \xe2\x80\xa6}] gives "},{label:"NArgMin",type:"keyword",info:"NArgMin[f, x] gives a position x    at which f is numerically minimized.NArgMin[f, {x, y, \xe2\x80\xa6}] gives "},{label:"NBernoulliB",type:"keyword",info:"                                                  th\nNBernoulliB[n] gives the numerical value of the"},{label:"NBodySimulation",type:"keyword",info:"NBodySimulation[law, {state , \xe2\x80\xa6, state }, t] generates a simulation of the motion of a system of n b"},{label:"NBodySimulationData",type:"keyword",info:"NBodySimulationData[data\xe2\x80\xa6] represents the result of an n-body simulation."},{label:"NCache",type:"keyword",info:"NCache[x, xn] represents a numeric cache object for a quantity with exact value x and approximate nu"},{label:"NDEigensystem",type:"keyword",info:"NDEigensystem[\xe2\x84\x92[u[x, y, \xe2\x80\xa6]], u, {x, y, \xe2\x80\xa6} \xe2\x88\x88 \xce\xa9, n] gives the n smallest magnitude eigenvalues and eig"},{label:"NDEigenvalues",type:"keyword",info:"NDEigenvalues[\xe2\x84\x92[u[x, y, \xe2\x80\xa6]], u, {x, y, \xe2\x80\xa6} \xe2\x88\x88 \xce\xa9, n] gives the n smallest magnitude eigenvalues for the"},{label:"NDSolve",type:"keyword",info:"NDSolve[eqns, u, {x, x   , x   }] finds a numerical solution to the ordinary differential equations "},{label:"NDSolveValue",type:"keyword",info:"NDSolveValue[eqns, expr, {x, x   , x   }] gives the value of expr with functions determined by a num"},{label:"Nearest",type:"keyword",info:"Nearest[{elem , elem , \xe2\x80\xa6}, x] gives the list of elem  to which x is nearest. Nearest[{elem  \xef\x94\xa2 v , el"},{label:"NearestFunction",type:"keyword",info:"NearestFunction[data] represents a function whose values give the elements closest to an element tha"},{label:"NearestMeshCells",type:"keyword",info:"NearestMeshCells[mr, pt] gives the indices for the cells to which the point pt is nearest in the mes"},{label:"NearestNeighborG",type:"keyword",info:"NearestNeighborG[pdata, r] estimates the nearest neighbor function G(r) at radius r in the point dat"},{label:"NearestNeighborGraph",type:"keyword",info:"NearestNeighborGraph[{elem , elem , \xe2\x80\xa6}] gives a graph with vertices elem , elem , \xe2\x80\xa6 and edges connec"},{label:"NearestTo",type:"keyword",info:"NearestTo[x] is an operator form that yields Nearest[elems, x] when applied to a list elems.NearestT"},{label:"NebulaData",type:"keyword",info:"NebulaData[entity, property] gives the value of the specified property for the nebula entity.NebulaD"},{label:"NeedlemanWunschSimilarity",type:"keyword",info:"NeedlemanWunschSimilarity[u, v] gives a number representing the Needleman\xe2\x80\x93Wunsch similarity between "},{label:"Needs",type:"keyword",info:'Needs["context`"] loads an appropriate file if the specified context is not already in ECPackages. Ne'},{label:"Negative",type:"keyword",info:"Negative[x] gives True if x is a negative number. "},{label:"NegativeBinomialDistribution",type:"keyword",info:"NegativeBinomialDistribution[n, p] represents a negative binomial distribution with parameters n and"},{label:"NegativeDefiniteMatrixQ",type:"keyword",info:"NegativeDefiniteMatrixQ[m] gives True if m is explicitly negative definite, and False otherwise."},{label:"NegativeIntegers",type:"keyword",info:"NegativeIntegers represents the domain of strictly negative integers, as in x \xe2\x88\x88 NegativeIntegers. "},{label:"NegativelyOrientedPoints",type:"keyword",info:"NegativelyOrientedPoints[{p , p , p , \xe2\x80\xa6, p }] tests whether the sequence of points p , p , p , \xe2\x80\xa6, p "},{label:"NegativeMultinomialDistribution",type:"keyword",info:"NegativeMultinomialDistribution[n, p] represents a negative multinomial distribution with parameter "},{label:"NegativeRationals",type:"keyword",info:"NegativeRationals represents the domain of strictly negative rational numbers, as in x \xe2\x88\x88 NegativeRat"},{label:"NegativeReals",type:"keyword",info:"NegativeReals represents the domain of strictly negative real numbers."},{label:"NegativeSemidefiniteMatrixQ",type:"keyword",info:"NegativeSemidefiniteMatrixQ[m] gives True if m is explicitly negative semidefinite, and False otherw"},{label:"NeighborhoodData",type:"keyword",info:"NeighborhoodData[entity, property] gives the value of the specified property for the neighborhood en"},{label:"NeighborhoodGraph",type:"keyword",info:"NeighborhoodGraph[g, v] gives the graph neighborhood of a vertex v in the graph g.NeighborhoodGraph["},{label:"Nest",type:"keyword",info:"Nest[f, expr, n] gives an expression with f applied n times to expr. "},{label:"NestedGreaterGreater",type:"keyword",info:"NestedGreaterGreater[x, y, \xe2\x80\xa6] displays as x \xe2\xaa\xa2 y \xe2\xaa\xa2 \xe2\x80\xa6."},{label:"NestedLessLess",type:"keyword",info:"NestedLessLess[x, y, \xe2\x80\xa6] displays as x \xe2\xaa\xa1 y \xe2\xaa\xa1 \xe2\x80\xa6."},{label:"NestedScriptRules",type:"keyword",info:"System`NestedScriptRules"},{label:"NestGraph",type:"keyword",info:"NestGraph[f, expr, n] gives the graph obtained by starting with expr and applying f successively n t"},{label:"NestList",type:"keyword",info:"NestList[f, expr, n] gives a list of the results of applying f to expr 0 through n times. "},{label:"NestTree",type:"keyword",info:"NestTree[f, tree] gives the tree obtained by applying f to the data in the leaves of tree and extend"},{label:"NestWhile",type:"keyword",info:"NestWhile[f, expr, test] starts with expr, then repeatedly applies f until applying test to the resu"},{label:"NestWhileList",type:"keyword",info:"NestWhileList[f, expr, test] generates a list of the results of applying f repeatedly, starting with"},{label:"NetAppend",type:"keyword",info:"NetAppend[net, layer] appends a layer or a net onto a NetChain, a layer or a NetGraph with one outpu"},{label:"NetArray",type:"keyword",info:'NetArray[] represents an array in a net.NetArray["name"] uses "name" as an identifier to share the a'},{label:"NetArrayLayer",type:"keyword",info:"NetArrayLayer[] represents a layer that has no input and produces as output a constant array.NetArra"},{label:"NetBidirectionalOperator",type:"keyword",info:"NetBidirectionalOperator[net] represents a net that applies net to a sequence and to its reverse, co"},{label:"NetChain",type:"keyword",info:"NetChain[{layer , layer , \xe2\x80\xa6}] specifies a neural net in which the output of layer  is connected to t"},{label:"NetDecoder",type:"keyword",info:'NetDecoder["name"] represents a decoder that takes a net representation and decodes it into an expre'},{label:"NetDelete",type:"keyword",info:"                                th\nNetDelete[net, n] deletes the n\xef\x8e\xa0   layer from a NetChain or NetGr"},{label:"NetDrop",type:"keyword",info:"NetDrop[chain, n] removes the first n layers from a NetChain.NetDrop[chain, -n] removes the last n l"},{label:"NetEncoder",type:"keyword",info:'NetEncoder["name"] represents an encoder that takes a given form of input and encodes it as an array'},{label:"NetEvaluationMode",type:"keyword",info:"NetEvaluationMode is an option that can be given when applying neural net functions to input data, s"},{label:"NetExtract",type:"keyword",info:'NetExtract[layer, "param"] extracts the value of a parameter for the specified net layer.NetExtract['},{label:"NetFlatten",type:"keyword",info:"NetFlatten[net] collapses nested NetChain and NetGraph objects within net.NetFlatten[net, n] collaps"},{label:"NetFoldOperator",type:"keyword",info:"NetFoldOperator[net] represents a net in which net is folded over a sequence of inputs, maintaining "},{label:"NetGANOperator",type:"keyword",info:"NetGANOperator[{generator, discriminator}] represents a network to perform generative adversarial ne"},{label:"NetGraph",type:"keyword",info:"NetGraph[{layer , layer , \xe2\x80\xa6}, {m  \xef\x94\xa2 n , m  \xef\x94\xa2 n , \xe2\x80\xa6}] specifies a neural net defined by a graph in wh"},{label:"NetInformation",type:"keyword",info:'NetInformation[net] gives a report about the neural network net.NetInformation[net, "prop"] gives th'},{label:"NetInitialize",type:"keyword",info:"NetInitialize[net] gives a net in which all uninitialized learnable parameters in net have been give"},{label:"NetInsert",type:"keyword",info:"NetInsert[chain, layer, i] inserts a layer into a NetChain before the layer at position i.NetInsert["},{label:"NetInsertSharedArrays",type:"keyword",info:"NetInsertSharedArrays[net] converts all ordinary arrays in net into NetSharedArray objects.NetInsert"},{label:"NetJoin",type:"keyword",info:"NetJoin[net , net , \xe2\x80\xa6] connects a series of NetChain or NetGraph objects to form a single NetChain o"},{label:"NetMapOperator",type:"keyword",info:"NetMapOperator[net] represents a net in which net is mapped over a sequence of inputs to give a sequ"},{label:"NetMapThreadOperator",type:"keyword",info:"NetMapThreadOperator[mapnet] represents a net in which mapnet is mapped over one or more inputs to g"},{label:"NetMeasurements",type:"keyword",info:"NetMeasurements[net, data, measurement] computes the requested measurement for the net evaluated on "},{label:"NetModel",type:"keyword",info:'NetModel["name"] obtains a neural net model with the specified name from the Neural Net Repository. '},{label:"NetNestOperator",type:"keyword",info:"NetNestOperator[net, n] represents a net in which net is applied n times to the input."},{label:"NetPairEmbeddingOperator",type:"keyword",info:"NetPairEmbeddingOperator[net] represents a net that takes a pair of arrays, embeds them into a vecto"},{label:"NetPort",type:"keyword",info:'NetPort["port"] represents the specified input or output port for a complete net.NetPort[{n, "port"}'},{label:"NetPortGradient",type:"keyword",info:'NetPortGradient["port"] represents the gradient of the output of a net with respect to the value of '},{label:"NetPrepend",type:"keyword",info:"NetPrepend[net, layer] prepends a layer or a net onto a NetChain, a layer or a NetGraph with one inp"},{label:"NetRename",type:"keyword",info:'NetRename[net, "old" \xef\x94\xa2 "new"] gives a net in which the name old for a layer is replaced with new.Net'},{label:"NetReplace",type:"keyword",info:"NetReplace[net, patt \xef\x94\xa2 layer] gives a net in which all layers matching patt are replaced with layer."},{label:"NetReplacePart",type:"keyword",info:'NetReplacePart[layer, "array" \xef\x94\xa2 value] replaces an array within a layer, returning a new layer.NetRe'},{label:"NetSharedArray",type:"keyword",info:'NetSharedArray["name"] represents an array in a net that is shared by more than one layer.'},{label:"NetStateObject",type:"keyword",info:"NetStateObject[net] creates an object derived from net that represents a neural net with additional "},{label:"NetTake",type:"keyword",info:"NetTake[net, end] takes only those layers up to end in a NetChain or NetGraph.NetTake[net, {start, e"},{label:"NetTrain",type:"keyword",info:"NetTrain[net, {input  \xef\x94\xa2 output , input  \xef\x94\xa2 output , \xe2\x80\xa6}] trains the specified neural net by giving the"},{label:"NetTrainResultsObject",type:"keyword",info:"NetTrainResultsObject[\xe2\x80\xa6] represents an object generated by NetTrain that contains the trained net an"},{label:"NetUnfold",type:"keyword",info:"NetUnfold[fnet] produces the elementary net of the folded net fnet, exposing the recurrent states."},{label:"NetworkPacketCapture",type:"keyword",info:"NetworkPacketCapture[] creates a temporary interactive interface for capturing information on networ"},{label:"NetworkPacketRecording",type:"keyword",info:"NetworkPacketRecording[t] records information on network packets transmitted or received through all"},{label:"NetworkPacketRecordingDuring",type:"keyword",info:"System`NetworkPacketRecordingDuring"},{label:"NetworkPacketTrace",type:"keyword",info:"NetworkPacketTrace[expr] evaluates expr and returns information on network packets transmitted or re"},{label:"NeumannValue",type:"keyword",info:"NeumannValue[val, pred] represents a Neumann boundary value val, specified on the part of the bounda"},{label:"NevilleThetaC",type:"keyword",info:"NevilleThetaC[z, m] gives the Neville theta function \xcf\x91  (z \xef\x90.b2 m). \n                                  "},{label:"NevilleThetaD",type:"keyword",info:"NevilleThetaD[z, m] gives the Neville theta function \xcf\x91  (z \xef\x90.b2 m). \n                                  "},{label:"NevilleThetaN",type:"keyword",info:"NevilleThetaN[z, m] gives the Neville theta function \xcf\x91  (z \xef\x90.b2 m). \n                                  "},{label:"NevilleThetaS",type:"keyword",info:"NevilleThetaS[z, m] gives the Neville theta function \xcf\x91  (z \xef\x90.b2 m). \n                                  "},{label:"NewPrimitiveStyle",type:"keyword",info:"System`NewPrimitiveStyle"},{label:"NExpectation",type:"keyword",info:"NExpectation[expr, x \xef\x8f\x92 dist] gives the numerical expectation of expr under the assumption that x fol"},{label:"Next",type:"keyword",info:"System`Next"},{label:"NextCell",type:"keyword",info:"NextCell[] returns the CellObject corresponding to the cell directly below the currently evaluating "},{label:"NextDate",type:"keyword",info:"NextDate[gran] gives the next occurring date of the specified granularity type gran.NextDate[daytype"},{label:"NextPrime",type:"keyword",info:"                                                                          th\nNextPrime[x] gives the "},{label:"NextScheduledTaskTime",type:"keyword",info:"NextScheduledTaskTime[obj] gives the next execution time of the scheduled task represented by obj."},{label:"NeymanScottPointProcess",type:"keyword",info:"                                                                                                    "},{label:"NHoldAll",type:"keyword",info:"NHoldAll is an attribute which specifies that none of the arguments to a function should be affected"},{label:"NHoldFirst",type:"keyword",info:"NHoldFirst is an attribute which specifies that the first argument to a function should not be affec"},{label:"NHoldRest",type:"keyword",info:"NHoldRest is an attribute which specifies that all but the first argument to a function should not b"},{label:"NicholsGridLines",type:"keyword",info:"NicholsGridLines is an option to NicholsPlot that specifies contours of constant magnitude and const"},{label:"NicholsPlot",type:"keyword",info:"NicholsPlot[lsys] generates a Nichols plot of the transfer function for the system lsys.NicholsPlot["},{label:"NightHemisphere",type:"keyword",info:"NightHemisphere[] is a two-dimensional GeoGraphics primitive that represents the half of the Earth c"},{label:"NIntegrate",type:"keyword",info:"                                                                                x                   "},{label:"NMaximize",type:"keyword",info:"NMaximize[f, x] maximizes f numerically with respect to x.NMaximize[f, {x, y, \xe2\x80\xa6}] maximizes f numeri"},{label:"NMaxValue",type:"keyword",info:"NMaxValue[f, x] gives the maximum value of f with respect to x.NMaxValue[f, {x, y, \xe2\x80\xa6}] gives the max"},{label:"NMinimize",type:"keyword",info:"NMinimize[f, x] minimizes f numerically with respect to x.NMinimize[f, {x, y, \xe2\x80\xa6}] minimizes f numeri"},{label:"NMinValue",type:"keyword",info:"NMinValue[f, x] gives the minimum value of f with respect to x.NMinValue[f, {x, y, \xe2\x80\xa6}] gives the min"},{label:"NominalVariables",type:"keyword",info:"NominalVariables is an option for statistical functions such as LinearModelFit that specifies which "},{label:"NonAssociative",type:"keyword",info:"NonAssociative is a symbol that represents a non-associative operator in formatting functions."},{label:"NoncentralBetaDistribution",type:"keyword",info:"NoncentralBetaDistribution[\xce\\[PlusMinus], \xce.b2, \xce.b4] represents a noncentral beta distribution with shape parameters "},{label:"NoncentralChiSquareDistribution",type:"keyword",info:"                                                               2\nNoncentralChiSquareDistribution[\xce\xbd, "},{label:"NoncentralFRatioDistribution",type:"keyword",info:"NoncentralFRatioDistribution[n, m, \xce\xbb] represents a noncentral F-ratio distribution with n numerator "},{label:"NoncentralStudentTDistribution",type:"keyword",info:"NoncentralStudentTDistribution[\xce\xbd, \xce.b4] represents a noncentral Student t distribution with \xce\xbd degrees o"},{label:"NonCommutativeMultiply",type:"keyword",info:"a ** b ** c is a general associative, but non\xe2\x80\x90commutative, form of multiplication. "},{label:"NonConstants",type:"keyword",info:"NonConstants is an option for D which gives a list of objects to be taken to depend implicitly on th"},{label:"NondimensionalizationTransform",type:"keyword",info:"NondimensionalizationTransform[eq, ovars, fvars] nondimensionalizes eq, replacing original variables"},{label:"None",type:"keyword",info:"None is a setting used for certain options. "},{label:"NoneTrue",type:"keyword",info:"NoneTrue[{e , e , \xe2\x80\xa6}, test] yields True if test[e ] is False for all of the e .NoneTrue[expr, test, "},{label:"NonlinearModelFit",type:"keyword",info:"NonlinearModelFit[{y , y , \xe2\x80\xa6}, form, {\xce.b2 , \xe2\x80\xa6}, x] constructs a nonlinear model with structure form th"},{label:"NonlinearStateSpaceModel",type:"keyword",info:"NonlinearStateSpaceModel[{f, g}, x, u] represents the model x ' (t) \xef\x90\\[PlusMinus] f(x(t), u(t)), y(t) \xef\x90\\[PlusMinus] g(x(t), "},{label:"NonlocalMeansFilter",type:"keyword",info:"NonlocalMeansFilter[image, r] applies a nonlocal means filter to image by comparing a range r neighb"},{label:"NonNegative",type:"keyword",info:"NonNegative[x] gives True if x is a non\xe2\x80\x90negative number. "},{label:"NonNegativeIntegers",type:"keyword",info:"NonNegativeIntegers represents the domain of non-negative integers, as in x \xe2\x88\x88 NonNegativeIntegers. "},{label:"NonNegativeRationals",type:"keyword",info:"NonNegativeRationals represents the domain of non-negative rational numbers, as in x \xe2\x88\x88 NonNegativeRa"},{label:"NonNegativeReals",type:"keyword",info:"NonNegativeReals represents the domain of non-negative real numbers."},{label:"NonPositive",type:"keyword",info:"NonPositive[x] gives True if x is a non\xe2\x80\x90positive number. "},{label:"NonPositiveIntegers",type:"keyword",info:"NonPositiveIntegers represents the domain of non-positive integers, as in x \xe2\x88\x88 NonPositiveIntegers. "},{label:"NonPositiveRationals",type:"keyword",info:"NonPositiveRationals represents the domain of non-positive rational numbers, as in x \xe2\x88\x88 NonPositiveRa"},{label:"NonPositiveReals",type:"keyword",info:"NonPositiveReals represents the domain of non-positive real numbers."},{label:"Nor",type:"keyword",info:"Nor[e , e , \xe2\x80\xa6] is the logical NOR function. It evaluates its arguments in order, giving False immedi"},{label:"NorlundB",type:"keyword",info:"                                          (a)                                                       "},{label:"Norm",type:"keyword",info:"Norm[expr] gives the norm of a number, vector, or matrix. Norm[expr, p] gives the p\xe2\x80\x90norm. \n"},{label:"Normal",type:"keyword",info:"Normal[expr] converts expr to a normal expression from a variety of special forms. Normal[expr, h] c"},{label:"NormalDistribution",type:"keyword",info:"NormalDistribution[\xce\xbc, \xcf\x83] represents a normal (Gaussian) distribution with mean \xce\xbc and standard deviat"},{label:"NormalGrouping",type:"keyword",info:"System`NormalGrouping"},{label:"NormalizationLayer",type:"keyword",info:"NormalizationLayer[] represents a trainable net layer that normalizes its input data across the seco"},{label:"Normalize",type:"keyword",info:"Normalize[v] gives the normalized form of a vector v. Normalize[z] gives the normalized form of a co"},{label:"Normalized",type:"keyword",info:"Normalized is an option that determines whether to test if matrix rows are normalized."},{label:"NormalizedSquaredEuclideanDistance",type:"keyword",info:"NormalizedSquaredEuclideanDistance[u, v] gives the normalized squared Euclidean distance between vec"},{label:"NormalMatrixQ",type:"keyword",info:"NormalMatrixQ[m] gives True if m is an explicitly normal matrix, and False otherwise."},{label:"NormalsFunction",type:"keyword",info:"NormalsFunction is an option for Plot3D and related functions that specifies a function to apply to "},{label:"NormFunction",type:"keyword",info:"NormFunction is an option for functions such as FindFit and NDSolve which gives a function to be min"},{label:"Not",type:"keyword",info:"! expr is the logical NOT function. It gives False if expr is True, and True if it is False. "},{label:"NotCongruent",type:"keyword",info:"NotCongruent[x, y, \xe2\x80\xa6] displays as x \xe2\x89\xa2 y \xe2\x89\xa2 \xe2\x80\xa6."},{label:"NotCupCap",type:"keyword",info:"NotCupCap[x, y, \xe2\x80\xa6] displays as x \xe2\x89\xad y \xe2\x89\xad \xe2\x80\xa6."},{label:"NotDoubleVerticalBar",type:"keyword",info:"NotDoubleVerticalBar[x, y, \xe2\x80\xa6] displays as x \xe2\x88\xa6 y \xe2\x88\xa6 \xe2\x80\xa6."},{label:"Notebook",type:"keyword",info:"Notebook[{cell , cell , \xe2\x80\xa6}] is the low\xe2\x80\x90level construct that represents a notebook manipulated by the"},{label:"NotebookApply",type:"keyword",info:"NotebookApply[notebook, data] writes data into a notebook at the current selection, replacing the fi"},{label:"NotebookAutoSave",type:"keyword",info:"NotebookAutoSave is a notebook option that specifies whether the notebook should automatically be sa"},{label:"NotebookBrowseDirectory",type:"keyword",info:"NotebookBrowseDirectory is a global option that determines the current working directory."},{label:"NotebookClose",type:"keyword",info:"NotebookClose[notebook] closes the notebook corresponding to the specified notebook object. Notebook"},{label:"NotebookConvertSettings",type:"keyword",info:"NotebookConvertSettings is a global option that specifies settings for converting imported legacy no"},{label:"NotebookCreate",type:"keyword",info:"NotebookCreate[] creates a new open notebook in the front end. NotebookCreate[options] sets up the s"},{label:"NotebookCreateReturnObject",type:"keyword",info:"System`NotebookCreateReturnObject"},{label:"NotebookDefault",type:"keyword",info:"System`NotebookDefault"},{label:"NotebookDelete",type:"keyword",info:"NotebookDelete[notebook] deletes the current selection in the notebook corresponding to the specifie"},{label:"NotebookDirectory",type:"keyword",info:"NotebookDirectory[] gives the directory of the current evaluation notebook. NotebookDirectory[nb] gi"},{label:"NotebookDynamicExpression",type:"keyword",info:"NotebookDynamicExpression is an option for notebooks that specifies an expression to be dynamically "},{label:"NotebookEvaluate",type:"keyword",info:"NotebookEvaluate[notebook] evaluates all the evaluatable cells in notebook."},{label:"NotebookEventActions",type:"keyword",info:"NotebookEventActions is a notebook option that gives a list of actions to perform when specified eve"},{label:"NotebookFileName",type:"keyword",info:"NotebookFileName[] gives the file name of the current evaluation notebook. NotebookFileName[nb] give"},{label:"NotebookFind",type:"keyword",info:"NotebookFind[obj, data] sets the current selection in the specified notebook object to be the next o"},{label:"NotebookFindReturnObject",type:"keyword",info:"System`NotebookFindReturnObject"},{label:"NotebookGet",type:"keyword",info:"NotebookGet[obj] gets the raw expression corresponding to the notebook represented by the notebook o"},{label:"NotebookGetLayoutInformationPacket",type:"keyword",info:"System`NotebookGetLayoutInformationPacket"},{label:"NotebookGetMisspellingsPacket",type:"keyword",info:"System`NotebookGetMisspellingsPacket"},{label:"NotebookImport",type:"keyword",info:"NotebookImport[notebook, style] imports cells with the given cell style from the specified notebook."},{label:"NotebookInformation",type:"keyword",info:"NotebookInformation[] gives a list of properties of the current evaluation notebook.NotebookInformat"},{label:"NotebookInterfaceObject",type:"keyword",info:"System`NotebookInterfaceObject"},{label:"NotebookLocate",type:"keyword",info:'NotebookLocate["tag"] locates all cells with the specified tag in your current input notebook, selec'},{label:"NotebookObject",type:"keyword",info:"NotebookObject[id] is an object that represents an open notebook in the front end. "},{label:"NotebookOpen",type:"keyword",info:'NotebookOpen["name"] opens an existing notebook with the specified name, returning the corresponding'},{label:"NotebookOpenReturnObject",type:"keyword",info:"System`NotebookOpenReturnObject"},{label:"NotebookPath",type:"keyword",info:"NotebookPath is a global option that determines which directories are searched when a specified note"},{label:"NotebookPrint",type:"keyword",info:"NotebookPrint[expr] sends a notebook containing expr to your default printer.NotebookPrint[notebook]"},{label:"NotebookPut",type:"keyword",info:"NotebookPut[expr] creates a notebook corresponding to expr and makes it the currently selected noteb"},{label:"NotebookPutReturnObject",type:"keyword",info:"System`NotebookPutReturnObject"},{label:"NotebookRead",type:"keyword",info:"NotebookRead[notebook] gives the expression corresponding to the current selection in the specified "},{label:"NotebookResetGeneratedCells",type:"keyword",info:"System`NotebookResetGeneratedCells"},{label:"Notebooks",type:"keyword",info:"Notebooks[] gives a list of notebooks currently open in the front end."},{label:"NotebookSave",type:"keyword",info:'NotebookSave[notebook] saves the current version of the specified notebook. NotebookSave[notebook, "'},{label:"NotebookSaveAs",type:"keyword",info:"System`NotebookSaveAs"},{label:"NotebookSelection",type:"keyword",info:"NotebookSelection[] represents the current selection in the current evaluation notebook in the front"},{label:"NotebookSetupLayoutInformationPacket",type:"keyword",info:"System`NotebookSetupLayoutInformationPacket"},{label:"NotebooksMenu",type:"keyword",info:"NotebooksMenu is a global option that specifies which recently opened notebooks are listed under the"},{label:"NotebookTemplate",type:"keyword",info:"NotebookTemplate[nb] yields a TemplateObject that represents a notebook template to be applied using"},{label:"NotebookWrite",type:"keyword",info:"NotebookWrite[notebook, data] writes data into a notebook at the current selection, setting the curr"},{label:"NotElement",type:"keyword",info:"NotElement[x, dom] or x \xe2\x88\x89 dom asserts that x is not an element of the domain dom.NotElement[x  | \xe2\x80\xa6 |"},{label:"NotEqualTilde",type:"keyword",info:"NotEqualTilde[x, y, \xe2\x80\xa6] displays as x \xef\x90\x80 y \xef\x90\x80 \xe2\x80\xa6."},{label:"NotExists",type:"keyword",info:"NotExists[x, y] displays as \xe2\x88\x84  y.\n                             x"},{label:"NotGreater",type:"keyword",info:"NotGreater[x, y, \xe2\x80\xa6] displays as x \xe2\x89\xaf y \xe2\x89\xaf \xe2\x80\xa6."},{label:"NotGreaterEqual",type:"keyword",info:"NotGreaterEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x89\\[PlusMinus] y \xe2\x89\\[PlusMinus] \xe2\x80\xa6."},{label:"NotGreaterFullEqual",type:"keyword",info:"NotGreaterFullEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x89\xa9 y \xe2\x89\xa9 \xe2\x80\xa6."},{label:"NotGreaterGreater",type:"keyword",info:"NotGreaterGreater[x, y, \xe2\x80\xa6] displays as x \xef\x90\xa7 y \xef\x90\xa7 \xe2\x80\xa6."},{label:"NotGreaterLess",type:"keyword",info:"NotGreaterLess[x, y, \xe2\x80\xa6] displays as x \xe2\x89\xb9 y \xe2\x89\xb9 \xe2\x80\xa6."},{label:"NotGreaterSlantEqual",type:"keyword",info:"NotGreaterSlantEqual[x, y, \xe2\x80\xa6] displays as x \xef\x90\xa9 y \xef\x90\xa9 \xe2\x80\xa6."},{label:"NotGreaterTilde",type:"keyword",info:"NotGreaterTilde[x, y, \xe2\x80\xa6] displays as x \xe2\x89\\[Micro] y \xe2\x89\\[Micro] \xe2\x80\xa6."},{label:"Nothing",type:"keyword",info:"Nothing represents an element of a list that will automatically be removed. Nothing[\xe2\x80\xa6] gives Nothing"},{label:"NotHumpDownHump",type:"keyword",info:"NotHumpDownHump[x, y, \xe2\x80\xa6] displays as x \xef\x90\x82 y \xef\x90\x82 \xe2\x80\xa6."},{label:"NotHumpEqual",type:"keyword",info:"NotHumpEqual[x, y, \xe2\x80\xa6] displays as x \xef\x90\x81 y \xef\x90\x81 \xe2\x80\xa6."},{label:"NotificationFunction",type:"keyword",info:"NotificationFunction is an option that specifies how notifications should be sent from background ta"},{label:"NotLeftTriangle",type:"keyword",info:"NotLeftTriangle[x, y, \xe2\x80\xa6] displays as x \xe2\x8b\xaa y \xe2\x8b\xaa \xe2\x80\xa6."},{label:"NotLeftTriangleBar",type:"keyword",info:"NotLeftTriangleBar[x, y, \xe2\x80\xa6] displays as x \xef\x90\x92 y \xef\x90\x92 \xe2\x80\xa6."},{label:"NotLeftTriangleEqual",type:"keyword",info:"NotLeftTriangleEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x8b\\[Not] y \xe2\x8b\\[Not] \xe2\x80\xa6."},{label:"NotLess",type:"keyword",info:"NotLess[x, y, \xe2\x80\xa6] displays as x \xe2\x89\xae y \xe2\x89\xae \xe2\x80\xa6."},{label:"NotLessEqual",type:"keyword",info:"NotLessEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x89\\[Degree] y \xe2\x89\\[Degree] \xe2\x80\xa6."},{label:"NotLessFullEqual",type:"keyword",info:"NotLessFullEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x89\xa8 y \xe2\x89\xa8 \xe2\x80\xa6."},{label:"NotLessGreater",type:"keyword",info:"NotLessGreater[x, y, \xe2\x80\xa6] displays as x \xe2\x89\xb8 y \xe2\x89\xb8 \xe2\x80\xa6."},{label:"NotLessLess",type:"keyword",info:"NotLessLess[x, y, \xe2\x80\xa6] displays as x \xef\x90\xa2 y \xef\x90\xa2 \xe2\x80\xa6."},{label:"NotLessSlantEqual",type:"keyword",info:"NotLessSlantEqual[x, y, \xe2\x80\xa6] displays as x \xef\x90\xa4 y \xef\x90\xa4 \xe2\x80\xa6."},{label:"NotLessTilde",type:"keyword",info:"NotLessTilde[x, y, \xe2\x80\xa6] displays as x \xe2\x89.b4 y \xe2\x89.b4 \xe2\x80\xa6."},{label:"NotNestedGreaterGreater",type:"keyword",info:"NotNestedGreaterGreater[x, y, \xe2\x80\xa6] displays as x \xef\x90\xa8 y \xef\x90\xa8 \xe2\x80\xa6."},{label:"NotNestedLessLess",type:"keyword",info:"NotNestedLessLess[x, y, \xe2\x80\xa6] displays as x \xef\x90\xa3 y \xef\x90\xa3 \xe2\x80\xa6."},{label:"NotPrecedes",type:"keyword",info:"NotPrecedes[x, y, \xe2\x80\xa6] displays as x \xe2\x8a\x80 y \xe2\x8a\x80 \xe2\x80\xa6."},{label:"NotPrecedesEqual",type:"keyword",info:"NotPrecedesEqual[x, y, \xe2\x80\xa6] displays as x \xef\x90\xab y \xef\x90\xab \xe2\x80\xa6."},{label:"NotPrecedesSlantEqual",type:"keyword",info:"NotPrecedesSlantEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x8b\xa0 y \xe2\x8b\xa0 \xe2\x80\xa6."},{label:"NotPrecedesTilde",type:"keyword",info:"NotPrecedesTilde[x, y, \xe2\x80\xa6] displays as x \xe2\x8b\xa8 y \xe2\x8b\xa8 \xe2\x80\xa6."},{label:"NotReverseElement",type:"keyword",info:"NotReverseElement[x, y, \xe2\x80\xa6] displays as x \xe2\x88\x8c y \xe2\x88\x8c \xe2\x80\xa6."},{label:"NotRightTriangle",type:"keyword",info:"NotRightTriangle[x, y, \xe2\x80\xa6] displays as x \xe2\x8b\xab y \xe2\x8b\xab \xe2\x80\xa6."},{label:"NotRightTriangleBar",type:"keyword",info:"NotRightTriangleBar[x, y, \xe2\x80\xa6] displays as x \xef\x90\x93 y \xef\x90\x93 \xe2\x80\xa6."},{label:"NotRightTriangleEqual",type:"keyword",info:"NotRightTriangleEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x8b\xad y \xe2\x8b\xad \xe2\x80\xa6."},{label:"NotSquareSubset",type:"keyword",info:"NotSquareSubset[x, y, \xe2\x80\xa6] displays as x \xef\x90\xae y \xef\x90\xae \xe2\x80\xa6."},{label:"NotSquareSubsetEqual",type:"keyword",info:"NotSquareSubsetEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x8b\xa2 y \xe2\x8b\xa2 \xe2\x80\xa6."},{label:"NotSquareSuperset",type:"keyword",info:"NotSquareSuperset[x, y, \xe2\x80\xa6] displays as x \xef\x90\xaf y \xef\x90\xaf \xe2\x80\xa6."},{label:"NotSquareSupersetEqual",type:"keyword",info:"NotSquareSupersetEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x8b\xa3 y \xe2\x8b\xa3 \xe2\x80\xa6."},{label:"NotSubset",type:"keyword",info:"NotSubset[x, y, \xe2\x80\xa6] displays as x \xe2\x8a\x84 y \xe2\x8a\x84 \xe2\x80\xa6."},{label:"NotSubsetEqual",type:"keyword",info:"NotSubsetEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x8a\x88 y \xe2\x8a\x88 \xe2\x80\xa6."},{label:"NotSucceeds",type:"keyword",info:"NotSucceeds[x, y, \xe2\x80\xa6] displays as x \xe2\x8a\x81 y \xe2\x8a\x81 \xe2\x80\xa6."},{label:"NotSucceedsEqual",type:"keyword",info:"NotSucceedsEqual[x, y, \xe2\x80\xa6] displays as x \xef\x90\xad y \xef\x90\xad \xe2\x80\xa6."},{label:"NotSucceedsSlantEqual",type:"keyword",info:"NotSucceedsSlantEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x8b\xa1 y \xe2\x8b\xa1 \xe2\x80\xa6."},{label:"NotSucceedsTilde",type:"keyword",info:"NotSucceedsTilde[x, y, \xe2\x80\xa6] displays as x \xe2\x8b\xa9 y \xe2\x8b\xa9 \xe2\x80\xa6."},{label:"NotSuperset",type:"keyword",info:"NotSuperset[x, y, \xe2\x80\xa6] displays as x \xe2\x8a\x85 y \xe2\x8a\x85 \xe2\x80\xa6."},{label:"NotSupersetEqual",type:"keyword",info:"NotSupersetEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x8a\x89 y \xe2\x8a\x89 \xe2\x80\xa6."},{label:"NotTilde",type:"keyword",info:"NotTilde[x, y, \xe2\x80\xa6] displays as x \xe2\x89\x81 y \xe2\x89\x81 \xe2\x80\xa6."},{label:"NotTildeEqual",type:"keyword",info:"NotTildeEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x89\x84 y \xe2\x89\x84 \xe2\x80\xa6."},{label:"NotTildeFullEqual",type:"keyword",info:"NotTildeFullEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x89\x87 y \xe2\x89\x87 \xe2\x80\xa6."},{label:"NotTildeTilde",type:"keyword",info:"NotTildeTilde[x, y, \xe2\x80\xa6] displays as x \xe2\x89\x89 y \xe2\x89\x89 \xe2\x80\xa6."},{label:"NotVerticalBar",type:"keyword",info:"NotVerticalBar[x, y, \xe2\x80\xa6] displays as x \xef\x8f\x91 y \xef\x8f\x91 \xe2\x80\xa6."},{label:"Now",type:"keyword",info:"Now gives a DateObject representing the current moment in time."},{label:"NoWhitespace",type:"keyword",info:"NoWhitespace represents the absence of whitespace between elements in a grammar rules pattern."},{label:"NProbability",type:"keyword",info:"NProbability[pred, x \xef\x8f\x92 dist] gives the numerical probability for an event that satisfies the predica"},{label:"NProduct",type:"keyword",info:"                                                                              i\n                    "},{label:"NProductFactors",type:"keyword",info:"NProductFactors is an option for NProduct. NProductFactors -> n explicitly includes n factors in the"},{label:"NRoots",type:"keyword",info:"NRoots[lhs == rhs, var] yields a disjunction of equations which represent numerical approximations t"},{label:"NSolve",type:"keyword",info:"NSolve[expr, vars] attempts to find numerical approximations to the solutions of the system expr of "},{label:"NSolveValues",type:"keyword",info:"NSolveValues[expr, vars] attempts to find numerical approximations to the values of vars determined "},{label:"NSum",type:"keyword",info:"                                                                      i\n                            "},{label:"NSumTerms",type:"keyword",info:"NSumTerms is an option for NSum. NSumTerms -> n explicitly includes n terms in the sum before extrap"},{label:"NuclearExplosionData",type:"keyword",info:"NuclearExplosionData[entity, property] gives the value of the specified property for the nuclear exp"},{label:"NuclearReactorData",type:"keyword",info:"NuclearReactorData[entity, property] gives the value of the specified property for the nuclear react"},{label:"Null",type:"keyword",info:"Null is a symbol used to indicate the absence of an expression or a result. It is not displayed in o"},{label:"NullRecords",type:"keyword",info:"NullRecords is an option for Read and related functions which specifies whether null records should "},{label:"NullSpace",type:"keyword",info:"NullSpace[m] gives a list of vectors that forms a basis for the null space of the matrix m. "},{label:"NullWords",type:"keyword",info:"NullWords is an option for Read and related functions which specifies whether null words should be t"},{label:"Number",type:"keyword",info:"Number represents an exact integer or an approximate real number in Read. "},{label:"NumberCompose",type:"keyword",info:"NumberCompose[{c , \xe2\x80\xa6, c }, {u , \xe2\x80\xa6, u }] returns the quantity c  u  + \xe2\x80\xa6 + c  u .\n                1   "},{label:"NumberDecompose",type:"keyword",info:"NumberDecompose[x, {u , \xe2\x80\xa6, u }] returns a list of coefficients {c , \xe2\x80\xa6, c } of a decomposition of the"},{label:"NumberDigit",type:"keyword",info:"                                                       n                                            "},{label:"NumberExpand",type:"keyword",info:"NumberExpand[x] gives a list of the decimal digits of x multiplied by their corresponding powers of "},{label:"NumberFieldClassNumber",type:"keyword",info:"NumberFieldClassNumber[\xce\xb8] gives the class number for the algebraic number field \xef\x9e.b4[\xce\xb8] generated by \xce\xb8."},{label:"NumberFieldDiscriminant",type:"keyword",info:"NumberFieldDiscriminant[a] gives the discriminant of the field \xef\x9e.b4[a] generated by the algebraic numbe"},{label:"NumberFieldFundamentalUnits",type:"keyword",info:"NumberFieldFundamentalUnits[a] gives a list of fundamental units for the field \xef\x9e.b4[a] generated by the"},{label:"NumberFieldIntegralBasis",type:"keyword",info:"NumberFieldIntegralBasis[a] gives an integral basis for the field \xef\x9e.b4[a] generated by the algebraic nu"},{label:"NumberFieldNormRepresentatives",type:"keyword",info:"NumberFieldNormRepresentatives[a, m] gives a list of representatives of classes of algebraic integer"},{label:"NumberFieldRegulator",type:"keyword",info:"NumberFieldRegulator[a] gives the regulator of the field \xef\x9e.b4[a] generated by the algebraic number a."},{label:"NumberFieldRootsOfUnity",type:"keyword",info:"NumberFieldRootsOfUnity[a] gives the roots of unity for the field \xef\x9e.b4[a] generated by the algebraic nu"},{label:"NumberFieldSignature",type:"keyword",info:"NumberFieldSignature[a] gives the signature of the field \xef\x9e.b4[a] generated by the algebraic number a."},{label:"NumberForm",type:"keyword",info:"NumberForm[expr, n] prints with approximate real numbers in expr given to n\xe2\x80\x90digit precision. NumberF"},{label:"NumberFormat",type:"keyword",info:"NumberFormat is an option for NumberForm and related functions that specifies how the mantissa, base"},{label:"NumberLinePlot",type:"keyword",info:"NumberLinePlot[{v , v , \xe2\x80\xa6}] plots the values v  on a number line.NumberLinePlot[pred, x] plots a num"},{label:"NumberMarks",type:"keyword",info:"NumberMarks is an option for InputForm and related functions that specifies whether ` marks should b"},{label:"NumberMultiplier",type:"keyword",info:"NumberMultiplier is an option for NumberForm and related functions which gives the string to use as "},{label:"NumberPadding",type:"keyword",info:"NumberPadding is an option for NumberForm and related functions which gives strings to use as paddin"},{label:"NumberPoint",type:"keyword",info:"NumberPoint is an option for NumberForm and related functions that gives the string to use as a deci"},{label:"NumberQ",type:"keyword",info:"NumberQ[expr] gives True if expr is a number, and False otherwise. "},{label:"NumberSeparator",type:"keyword",info:"NumberSeparator is an option for NumberForm and related functions that gives the string to insert at"},{label:"NumberSigns",type:"keyword",info:"NumberSigns is an option for NumberForm and related functions which gives strings to use as signs fo"},{label:"NumberString",type:"keyword",info:"NumberString represents the characters of a number in StringExpression."},{label:"Numerator",type:"keyword",info:"Numerator[expr] gives the numerator of expr. "},{label:"NumeratorDenominator",type:"keyword",info:"NumeratorDenominator[expr] gives the list {Numerator[expr], Denominator[expr]} of expr."},{label:"NumericalOrder",type:"keyword",info:"NumericalOrder[e , e ] gives 1 if e  < e , -1 if e  > e , 0 if e  and e  are identical or numericall"},{label:"NumericalSort",type:"keyword",info:"NumericalSort[list] sorts the elements of list into numerical order."},{label:"NumericArray",type:"keyword",info:"NumericArray[array, type] creates a numeric array of the specified type.NumericArray[array, type, me"},{label:"NumericArrayQ",type:"keyword",info:"NumericArrayQ[expr] gives True if expr is a valid NumericArray object, and False otherwise.NumericAr"},{label:"NumericArrayType",type:"keyword",info:"NumericArrayType[array] gives the underlying type of values used for each element in the NumericArra"},{label:"NumericFunction",type:"keyword",info:"NumericFunction is an attribute that can be assigned to a symbol f to indicate that f[arg , arg , \xe2\x80\xa6]"},{label:"NumericQ",type:"keyword",info:"NumericQ[expr] gives True if expr is a numeric quantity, and False otherwise. "},{label:"NuttallWindow",type:"keyword",info:"NuttallWindow[x] represents a Nuttall window function of x."},{label:"NValues",type:"keyword",info:"NValues[f] gives a list of transformation rules corresponding to all numerical values (values for N["},{label:"NyquistGridLines",type:"keyword",info:"NyquistGridLines is an option to NyquistPlot that specifies contours of constant magnitude and phase"},{label:"NyquistPlot",type:"keyword",info:"NyquistPlot[lsys] generates a Nyquist plot of the transfer function for the system lsys.NyquistPlot["},{label:"O",type:"keyword",info:"                                   n                                                                "},{label:"ObjectExistsQ",type:"keyword",info:"ObjectExistsQ gives True if the object exists and False otherwise."},{label:"ObservabilityGramian",type:"keyword",info:"ObservabilityGramian[ssm] gives the observability Gramian of the state-space model ssm."},{label:"ObservabilityMatrix",type:"keyword",info:"ObservabilityMatrix[ssm] gives the observability matrix of the state-space model ssm."},{label:"ObservableDecomposition",type:"keyword",info:"ObservableDecomposition[sys] yields the observable subsystem of the system sys.ObservableDecompositi"},{label:"ObservableModelQ",type:"keyword",info:"ObservableModelQ[sys] gives True if the system sys is observable, and False otherwise.ObservableMode"},{label:"OceanData",type:"keyword",info:"OceanData[entity, property] gives the value of the specified property for the ocean entity.OceanData"},{label:"Octahedron",type:"keyword",info:"Octahedron[] represents a regular octahedron centered at the origin with unit edge length.Octahedron"},{label:"OddQ",type:"keyword",info:"OddQ[expr] gives True if expr is an odd integer, and False otherwise. "},{label:"Off",type:"keyword",info:'Off[symbol :: tag] switches off a message, so that it is no longer printed. Off["name"] switches off'},{label:"Offset",type:"keyword",info:"Offset[{dx, dy}, position] gives the position of a graphical object obtained by starting at the spec"},{label:"OLEData",type:"keyword",info:"System`OLEData"},{label:"On",type:"keyword",info:'On[symbol :: tag] switches on a message, so that it can be printed. On["name"] switches on a named g'},{label:"ONanGroupON",type:"keyword",info:"ONanGroupON[] represents the sporadic simple O'Nan group O ' N."},{label:"Once",type:"keyword",info:"Once[expr] evaluates expr once in each Wolfram Language session, always returning the result from th"},{label:"OneIdentity",type:"keyword",info:"OneIdentity is an attribute that can be assigned to a symbol f to indicate that f[x], f[f[x]], etc. "},{label:"Opacity",type:"keyword",info:"Opacity[a] is a graphics directive that specifies that graphical objects that follow are to be displ"},{label:"OpacityFunction",type:"keyword",info:"OpacityFunction is an option for graphics functions that specifies a function to apply to determine "},{label:"OpacityFunctionScaling",type:"keyword",info:"OpacityFunctionScaling is an option to visualization functions such as DensityPlot3D that specifies "},{label:"Open",type:"keyword",info:"System`Open"},{label:"OpenAppend",type:"keyword",info:'OpenAppend["file"] opens a file to append output to it, and returns an OutputStream object. '},{label:"Opener",type:"keyword",info:"Opener[x] represents an opener with setting x, displayed as OpenerBox[True] when x is True and Opene"},{label:"OpenerBox",type:"keyword",info:"System`OpenerBox"},{label:"OpenerBoxOptions",type:"keyword",info:"OpenerBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for OpenerBox "},{label:"OpenerView",type:"keyword",info:"OpenerView[{expr , expr }] represents an object which displays as an opener, together with expr  if "},{label:"OpenFunctionInspectorPacket",type:"keyword",info:"System`OpenFunctionInspectorPacket"},{label:"Opening",type:"keyword",info:"Opening[image, ker] gives the morphological opening of image with respect to the structuring element"},{label:"OpenRead",type:"keyword",info:'OpenRead["file"] opens a file to read data from, and returns an InputStream object.'},{label:"OpenSpecialOptions",type:"keyword",info:"System`OpenSpecialOptions"},{label:"OpenTemporary",type:"keyword",info:"OpenTemporary[] opens a temporary file to which output can be written, and returns an OutputStream o"},{label:"OpenWrite",type:"keyword",info:'OpenWrite["file"] opens a file to write output to it, and returns an OutputStream object. OpenWrite['},{label:"Operate",type:"keyword",info:"Operate[p, f[x, y]] gives p[f][x, y]. Operate[p, expr, n] applies p at level n in the head of expr. "},{label:"OperatingSystem",type:"keyword",info:"OperatingSystem is an option for file and related operations that specifies the type of operating sy"},{label:"OperatorApplied",type:"keyword",info:"OperatorApplied[f, n] represents an operator form of the function f of n arguments so that OperatorA"},{label:"OptimumFlowData",type:"keyword",info:"OptimumFlowData[\xe2\x80\xa6] represents flow data such as generated by FindMaximumFlow, FindMinimumCostFlow, e"},{label:"Optional",type:"keyword",info:"patt : def or Optional[patt, def] is a pattern object that represents an expression of the form patt"},{label:"OptionalElement",type:"keyword",info:"OptionalElement[patt] is a grammar rules pattern object that represents 0 or 1 instances of patt.Opt"},{label:"OptionInspectorSettings",type:"keyword",info:"OptionInspectorSettings is a global option that specifies the display of options in the Option Inspe"},{label:"OptionQ",type:"keyword",info:"OptionQ[e] returns True if e can be considered an option or list of options, and False otherwise."},{label:"Options",type:"keyword",info:"Options[symbol] gives the list of default options assigned to a symbol. Options[expr] gives the opti"},{label:"OptionsPacket",type:"keyword",info:"System`OptionsPacket"},{label:"OptionsPattern",type:"keyword",info:"OptionsPattern[] is a pattern object that represents a collection of options given as rules, where t"},{label:"OptionValue",type:"keyword",info:"OptionValue[name] gives the value of name in options matched by OptionsPattern. OptionValue[f, name]"},{label:"OptionValueBox",type:"keyword",info:"System`OptionValueBox"},{label:"OptionValueBoxOptions",type:"keyword",info:"OptionValueBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Optio"},{label:"Or",type:"keyword",info:"e  || e  || \xe2\x80\xa6 is the logical OR function. It evaluates its arguments in order, giving True immediate"},{label:"Orange",type:"keyword",info:"Orange represents the color orange in graphics or style specifications. "},{label:"Order",type:"keyword",info:"Order[expr , expr ] gives 1 if expr  is before expr  in canonical order, and -1 if expr  is after ex"},{label:"OrderDistribution",type:"keyword",info:"                                                 th                                                 "},{label:"OrderedQ",type:"keyword",info:"OrderedQ[h[e , e , \xe2\x80\xa6]] gives True if the e  are in canonical order, and False otherwise.OrderedQ[h[e"},{label:"Ordering",type:"keyword",info:"Ordering[list] gives the positions in list at which each successive element of Sort[list] appears. O"},{label:"OrderingBy",type:"keyword",info:"OrderingBy[list, f] gives the positions in list at which each successive element of SortBy[list, f] "},{label:"OrderingLayer",type:"keyword",info:"OrderingLayer[] represents a net layer that effectively applies Ordering to its input. OrderingLayer"},{label:"Orderless",type:"keyword",info:"Orderless is an attribute that can be assigned to a symbol f to indicate that the elements e  in exp"},{label:"OrderlessPatternSequence",type:"keyword",info:"OrderlessPatternSequence[p , p , \xe2\x80\xa6] is a pattern object that represents a sequence of arguments matc"},{label:"OrnsteinUhlenbeckProcess",type:"keyword",info:"OrnsteinUhlenbeckProcess[\xce\xbc, \xcf\x83, \xce\xb8] represents a stationary Ornstein\xe2\x80\x93Uhlenbeck process with long-term "},{label:"Orthogonalize",type:"keyword",info:"Orthogonalize[{v , v , \xe2\x80\xa6}] gives an orthonormal basis found by orthogonalizing the vectors v .Orthog"},{label:"OrthogonalMatrixQ",type:"keyword",info:"OrthogonalMatrixQ[m] gives True if m is an explicitly orthogonal matrix, and False otherwise."},{label:"Out",type:"keyword",info:"                                                                                   th               "},{label:"Outer",type:"keyword",info:"Outer[f, list , list , \xe2\x80\xa6] gives the generalized outer product of the list , forming all possible com"},{label:"OuterPolygon",type:"keyword",info:"OuterPolygon[poly] gives the outer polygon of the polygon poly."},{label:"OuterPolyhedron",type:"keyword",info:"OuterPolyhedron[poly] gives the outer polyhedron of the polyhedron poly."},{label:"OutputAutoOverwrite",type:"keyword",info:"OutputAutoOverwrite is an option for notebooks that specifies whether the output of a command should"},{label:"OutputControllabilityMatrix",type:"keyword",info:"OutputControllabilityMatrix[ssm] gives the output controllability matrix of the state-space model ss"},{label:"OutputControllableModelQ",type:"keyword",info:"OutputControllableModelQ[ssm] gives True if the state-space model ssm is output controllable, and Fa"},{label:"OutputForm",type:"keyword",info:"OutputForm[expr] prints as a two-dimensional representation of expr using only keyboard characters. "},{label:"OutputFormData",type:"keyword",info:"System`OutputFormData"},{label:"OutputGrouping",type:"keyword",info:"System`OutputGrouping"},{label:"OutputMathEditExpression",type:"keyword",info:"OutputMathEditExpression is an internal symbol used for formatting."},{label:"OutputNamePacket",type:"keyword",info:"OutputNamePacket[string] is a WSTP packet that contains in string the name assigned to the next outp"},{label:"OutputPorts",type:"keyword",info:"OutputPorts is an option to specify the number, names or shapes of output ports for some neural net "},{label:"OutputResponse",type:"keyword",info:"OutputResponse[sys, u, {t, t   , t   }] gives the numeric output response of systems model sys to th"},{label:"OutputSizeLimit",type:"keyword",info:"OutputSizeLimit is an option for notebooks that specifies the maximum size in bytes of expressions t"},{label:"OutputStream",type:"keyword",info:'OutputStream["name", n] is an object that represents an output stream for functions such as Write. '},{label:"Over",type:"keyword",info:"System`Over"},{label:"OverBar",type:"keyword",info:"OverBar[expr] displays with a bar over expr."},{label:"OverDot",type:"keyword",info:"OverDot[expr] displays with a dot over expr."},{label:"Overflow",type:"keyword",info:"Overflow[] represents a number too large to represent explicitly on your computer system."},{label:"OverHat",type:"keyword",info:"OverHat[expr] displays with a hat over expr."},{label:"Overlaps",type:"keyword",info:"Overlaps is an option to string and sequence functions that specifies how to treat overlapping subst"},{label:"Overlay",type:"keyword",info:"Overlay[{expr , expr , \xe2\x80\xa6}] displays as an overlay of all the expr .Overlay[{expr , expr , \xe2\x80\xa6}, {i, j,"},{label:"OverlayBox",type:"keyword",info:"System`OverlayBox"},{label:"OverlayBoxOptions",type:"keyword",info:"OverlayBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for OverlayBo"},{label:"OverlayVideo",type:"keyword",info:"OverlayVideo[background, o] gives the result of overlaying o onto a background video or image backgr"},{label:"Overscript",type:"keyword",info:"                                              y\nOverscript[x, y] is an object that formats as x. "},{label:"OverscriptBox",type:"keyword",info:"                                                            y\nOverscriptBox[x, y] is the low\xe2\x80\x90level b"},{label:"OverscriptBoxOptions",type:"keyword",info:"OverscriptBoxOptions is an option that specifies the style and display of OverscriptBox constructs."},{label:"OverTilde",type:"keyword",info:"OverTilde[expr] displays with a tilde over expr."},{label:"OverVector",type:"keyword",info:"OverVector[expr] displays with a right vector over expr."},{label:"OverwriteTarget",type:"keyword",info:"OverwriteTarget is an option for functions like CopyFile that specifies whether to overwrite if targ"},{label:"OwenT",type:"keyword",info:"OwenT[x, a] gives Owen's T function T(x, a)."},{label:"OwnValues",type:"keyword",info:"OwnValues[x] gives a list of transformation rules corresponding to all ownvalues defined for the sym"},{label:"Package",type:"keyword",info:"System`Package"},{label:"PackingMethod",type:"keyword",info:"PackingMethod is an option for GraphPlot and related functions that specifies how disconnected compo"},{label:"PackPaclet",type:"keyword",info:"The experimental function PackPaclet is now obsolete and is superseded by CreatePacletArchive."},{label:"PacletDataRebuild",type:"keyword",info:"PacletDataRebuild[] rescans all the installed paclets to rebuild the internal cache of paclet data."},{label:"PacletDirectoryAdd",type:"keyword",info:"The experimental function PacletDirectoryAdd is now obsolete and is superseded by PacletDirectoryLoa"},{label:"PacletDirectoryLoad",type:"keyword",info:"PacletDirectoryLoad[dir] makes paclets in dir visible in the current session.PacletDirectoryLoad[{di"},{label:"PacletDirectoryRemove",type:"keyword",info:"StringTemplate[The experimental function `1` is now obsolete and is superseded by `2`., PacletDirect"},{label:"PacletDirectoryUnload",type:"keyword",info:"PacletDirectoryUnload[dir] makes paclets in dir no longer visible in the current session.PacletDirec"},{label:"PacletDisable",type:"keyword",info:"PacletDisable[paclet] disables an installed paclet."},{label:"PacletEnable",type:"keyword",info:"PacletEnable[paclet] enables a previously disabled paclet."},{label:"PacletFind",type:"keyword",info:'PacletFind["name"] gives a list of installed paclets that match "name".PacletFind["name" \xef\x94\xa2 "version"'},{label:"PacletFindRemote",type:"keyword",info:'PacletFindRemote["name"] gives a list of paclets that match "name" available on known paclet sites.P'},{label:"PacletInformation",type:"keyword",info:'The experimental function PacletInformation is now obsolete. Use Information[PacletObject["pacletnam'},{label:"PacletInstall",type:"keyword",info:"PacletInstall[paclet] installs or updates paclet.PacletInstall[task] waits for completion of the tas"},{label:"PacletInstallSubmit",type:"keyword",info:"PacletInstallSubmit[paclet] asynchronously installs or updates paclet."},{label:"PacletNewerQ",type:"keyword",info:"PacletNewerQ[paclet , paclet ] returns True if paclet  has a higher version number than paclet , and"},{label:"PacletObject",type:"keyword",info:"PacletObject[...] is the representation of a paclet in the Wolfram Language."},{label:"PacletObjectQ",type:"keyword",info:"PacletObjectQ[expr] returns True or False depending on whether its argument is a PacletObject expres"},{label:"PacletSite",type:"keyword",info:"PacletSite is an option for PacletInstall and PacletInstallSubmit that specifies the URL of a paclet"},{label:"PacletSiteObject",type:"keyword",info:"PacletSiteObject[assoc] represents a site from which paclets can be automatically downloaded."},{label:"PacletSiteRegister",type:"keyword",info:"PacletSiteRegister[url] registers url as a known paclet site.PacletSiteRegister[url, name] registers"},{label:"PacletSites",type:"keyword",info:"PacletSites[] gives the list of all paclet sites known to your system."},{label:"PacletSiteUnregister",type:"keyword",info:"PacletSiteUnregister[url] removes url from the list of registered paclet sites.PacletSiteUnregister["},{label:"PacletSiteUpdate",type:"keyword",info:"PacletSiteUpdate[site] acquires and caches current information about the available paclets on the gi"},{label:"PacletSymbol",type:"keyword",info:'PacletSymbol[paclet, "sym"] gives the symbol named "sym" in the primary context of paclet.PacletSymb'},{label:"PacletUninstall",type:"keyword",info:"PacletUninstall[paclet] uninstalls a paclet."},{label:"PacletUpdate",type:"keyword",info:"The experimental function PacletUpdate is now obsolete and is superseded by PacletInstall."},{label:"PaddedForm",type:"keyword",info:"PaddedForm[expr, n] prints with all numbers in expr padded to leave room for a total of n digits. Pa"},{label:"Padding",type:"keyword",info:"Padding is an option to various array and image operations that specifies what padding to use when e"},{label:"PaddingLayer",type:"keyword",info:"PaddingLayer[{{m , n }, {m , n }, \xe2\x80\xa6}] represents a net layer that pads an input array with m  elemen"},{label:"PaddingSize",type:"keyword",info:"PaddingSize is an option in AudioDelay and other functions that specifies the amount of padding."},{label:"PadeApproximant",type:"keyword",info:"PadeApproximant[expr, {x, x , {m, n}}] gives the Pad\xc3\xa9 approximant to expr about the point x = x , wi"},{label:"PadLeft",type:"keyword",info:"PadLeft[list, n] makes a list of length n by padding list with zeros on the left. PadLeft[list, n, x"},{label:"PadRight",type:"keyword",info:"PadRight[list, n] makes a list of length n by padding list with zeros on the right. PadRight[list, n"},{label:"PageBreakAbove",type:"keyword",info:"PageBreakAbove is an option for Cell which specifies whether a page break should be made immediately"},{label:"PageBreakBelow",type:"keyword",info:"PageBreakBelow is an option for Cell which specifies whether a page break should be made immediately"},{label:"PageBreakWithin",type:"keyword",info:"PageBreakWithin is an option for Cell which specifies whether a page break should be allowed within "},{label:"PageFooterLines",type:"keyword",info:"PageFooterLines is an option for notebooks that specifies whether a horizontal line is inserted at t"},{label:"PageFooters",type:"keyword",info:"PageFooters is an option for notebooks that specifies what should be inserted as the footer of each "},{label:"PageHeaderLines",type:"keyword",info:"PageHeaderLines is an option for notebooks that specifies whether a horizontal line is inserted at t"},{label:"PageHeaders",type:"keyword",info:"PageHeaders is an option for notebooks that specifies what should be inserted as the header of each "},{label:"PageHeight",type:"keyword",info:"System`PageHeight"},{label:"PageRankCentrality",type:"keyword",info:"PageRankCentrality[g, \xce\\[PlusMinus]] gives a list of page-rank centralities for the vertices in the graph g and "},{label:"PageTheme",type:"keyword",info:"PageTheme is an option for FormObject, GalleryView, and related functions that specifies an overall "},{label:"PageWidth",type:"keyword",info:"PageWidth is an option for output streams and for cells that specifies how wide each line of text is"},{label:"Pagination",type:"keyword",info:"Pagination is an option for GalleryView and related functions that specifies how pagination should b"},{label:"PairCorrelationG",type:"keyword",info:"PairCorrelationG[pdata, r] estimates the pair correlation function g(r) for point data pdata at radi"},{label:"PairedBarChart",type:"keyword",info:"PairedBarChart[{y , y , \xe2\x80\xa6}, {z , z , \xe2\x80\xa6}] makes a paired bar chart with bar lengths y ,  y , \xe2\x80\xa6 and z "},{label:"PairedHistogram",type:"keyword",info:"PairedHistogram[{x , x , \xe2\x80\xa6}, {y , y , \xe2\x80\xa6}] plots a paired histogram of the values x  and y .PairedHis"},{label:"PairedSmoothHistogram",type:"keyword",info:"PairedSmoothHistogram[{x , x , \xe2\x80\xa6}, {y , y , \xe2\x80\xa6}] plots a paired smooth histogram of the values x  and"},{label:"PairedTTest",type:"keyword",info:"PairedTTest[data] tests whether the mean of data is zero. PairedTTest[{data , data }] tests whether "},{label:"PairedZTest",type:"keyword",info:"PairedZTest[data] tests whether the mean of the data is zero. PairedZTest[{data , data }] tests whet"},{label:"PaletteNotebook",type:"keyword",info:"PaletteNotebook[{cell , cell , \xe2\x80\xa6}] represents a palette notebook that can be manipulated by the Wolf"},{label:"PalettePath",type:"keyword",info:"PalettePath is a global option that specifies which directories the Wolfram System searches for pale"},{label:"PalindromeQ",type:"keyword",info:"PalindromeQ[list] returns True if the given list is identical to Reverse[list], and False otherwise."},{label:"Pane",type:"keyword",info:"Pane[expr] displays as a pane containing expr. Pane[expr, w] makes the pane be w printer's points wi"},{label:"PaneBox",type:"keyword",info:"System`PaneBox"},{label:"PaneBoxOptions",type:"keyword",info:"PaneBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for PaneBox obje"},{label:"Panel",type:"keyword",info:"Panel[expr] displays as a panel containing expr. Panel[expr, title] gives the panel the specified ti"},{label:"PanelBox",type:"keyword",info:"System`PanelBox"},{label:"PanelBoxOptions",type:"keyword",info:"PanelBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for PanelBox ob"},{label:"Paneled",type:"keyword",info:"Paneled is an option for Manipulate and related functions that specifies whether to give the output "},{label:"PaneSelector",type:"keyword",info:"PaneSelector[{val  \xef\x94\xa2 expr , val  \xef\x94\xa2 expr , \xe2\x80\xa6}, x] represents an object that displays as a pane contai"},{label:"PaneSelectorBox",type:"keyword",info:"System`PaneSelectorBox"},{label:"PaneSelectorBoxOptions",type:"keyword",info:"PaneSelectorBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Pane"},{label:"PaperWidth",type:"keyword",info:"System`PaperWidth"},{label:"ParabolicCylinderD",type:"keyword",info:"ParabolicCylinderD[\xce\xbd, z] gives the parabolic cylinder function D (z). \n                             "},{label:"ParagraphIndent",type:"keyword",info:"ParagraphIndent is an option for Cell which specifies how far in printer's points to indent the firs"},{label:"ParagraphSpacing",type:"keyword",info:"ParagraphSpacing is an option for Cell, StyleBox, and Style that specifies how much extra space to l"},{label:"ParallelArray",type:"keyword",info:"ParallelArray[f, n] generates in parallel a list of length n, with elements f[i], evaluated.Parallel"},{label:"ParallelAxisPlot",type:"keyword",info:"ParallelAxisPlot[{{y  , \xe2\x80\xa6, y  }, \xe2\x80\xa6, {y  , \xe2\x80\xa6, y  }}] generates a parallel axis plot for the points {y"},{label:"ParallelCombine",type:"keyword",info:"ParallelCombine[f, h[e , e , \xe2\x80\xa6], comb] evaluates f[h[e , e , \xe2\x80\xa6]] in parallel by distributing parts o"},{label:"ParallelDo",type:"keyword",info:"ParallelDo[expr, {i   }] evaluates expr in parallel i    times. ParallelDo[expr, {i, i   }] evaluate"},{label:"Parallelepiped",type:"keyword",info:"Parallelepiped[p, {v , \xe2\x80\xa6, v }] represents a parallelepiped with origin p and directions v .\n        "},{label:"ParallelEvaluate",type:"keyword",info:"ParallelEvaluate[expr] evaluates the expression expr on all available parallel kernels and returns t"},{label:"Parallelization",type:"keyword",info:"Parallelization is an option for Compile that specifies whether it should create a compiled function"},{label:"Parallelize",type:"keyword",info:"Parallelize[expr] evaluates expr using automatic parallelization."},{label:"ParallelMap",type:"keyword",info:"ParallelMap[f, expr] applies f in parallel to each element on the first level in expr.ParallelMap[f,"},{label:"ParallelNeeds",type:"keyword",info:'ParallelNeeds["context`"] evaluates Needs["context`"] on all available parallel kernels.'},{label:"Parallelogram",type:"keyword",info:"Parallelogram[p, {v , v }] represents a parallelogram with origin p and directions v  and v .\n      "},{label:"ParallelProduct",type:"keyword",info:"                                                                                                    "},{label:"ParallelSubmit",type:"keyword",info:"ParallelSubmit[expr] submits expr for evaluation on the next available parallel kernel and returns a"},{label:"ParallelSum",type:"keyword",info:"                                                                                                    "},{label:"ParallelTable",type:"keyword",info:"ParallelTable[expr, {i   }] generates in parallel a list of i    copies of expr.ParallelTable[expr, "},{label:"ParallelTry",type:"keyword",info:"ParallelTry[f, {arg , arg , \xe2\x80\xa6}] evaluates f[arg ] in parallel, returning the first result received.P"},{label:"Parameter",type:"keyword",info:"System`Parameter"},{label:"ParameterEstimator",type:"keyword",info:"ParameterEstimator is an option to EstimatedDistribution and FindDistributionParameters that specifi"},{label:"ParameterMixtureDistribution",type:"keyword",info:"ParameterMixtureDistribution[dist[\xce\xb8], \xce\xb8 \xef\x8f\x92 wdist] represents a parameter mixture distribution where t"},{label:"ParameterVariables",type:"keyword",info:"ParameterVariables is an option for GroebnerBasis and PolynomialReduce. These variables will always "},{label:"ParametricConvexOptimization",type:"keyword",info:"ParametricConvexOptimization[f, cons, vars, pars] gives a ParametricFunction object that finds value"},{label:"ParametricFunction",type:"keyword",info:"ParametricFunction[pars, \xe2\x80\xa6] represents a function that computes a solution when evaluated with numer"},{label:"ParametricNDSolve",type:"keyword",info:"ParametricNDSolve[eqns, u, {x, x   , x   }, pars] finds a numerical solution to the ordinary differe"},{label:"ParametricNDSolveValue",type:"keyword",info:"ParametricNDSolveValue[eqns, expr, {x, x   , x   }, pars] gives the value of expr with functions det"},{label:"ParametricPlot",type:"keyword",info:"ParametricPlot[{f , f }, {u, u   , u   }] generates a parametric plot of a curve with x and y coordi"},{label:"ParametricPlot3D",type:"keyword",info:"ParametricPlot3D[{f , f , f }, {u, u   , u   }] produces a three-dimensional space curve parametrize"},{label:"ParametricRampLayer",type:"keyword",info:"ParametricRampLayer[] represents a net layer that computes a leaky ReLU activation with a slope that"},{label:"ParametricRegion",type:"keyword",info:"                                                                   n\nParametricRegion[{f , \xe2\x80\xa6, f }, {"},{label:"ParentBox",type:"keyword",info:"ParentBox[obj] returns the BoxObject that contains obj."},{label:"ParentCell",type:"keyword",info:"ParentCell[obj] returns the CellObject that contains obj."},{label:"ParentConnect",type:"keyword",info:"System`ParentConnect"},{label:"ParentDirectory",type:"keyword",info:'ParentDirectory[] gives the parent of the current working directory. ParentDirectory["dir"] gives th'},{label:"ParentForm",type:"keyword",info:"ParentForm sets the parent form for a boxes format."},{label:"Parenthesize",type:"keyword",info:"Parenthesize[ expr, fmt, prec, group] or Parenthesize[ expr, fmt, {prec, group}] will represent expr"},{label:"ParentList",type:"keyword",info:"System`ParentList"},{label:"ParentNotebook",type:"keyword",info:"ParentNotebook[obj] returns the NotebookObject that contains obj."},{label:"ParetoDistribution",type:"keyword",info:"ParetoDistribution[k, \xce\\[PlusMinus]] represents a Pareto distribution with minimum value parameter k and shape p"},{label:"ParetoPickandsDistribution",type:"keyword",info:"ParetoPickandsDistribution[\xce\xbc, \xcf\x83, \xce\xbe] gives a Pareto\xe2\x80\x93Pickands distribution with location parameter \xce\xbc, "},{label:"ParkData",type:"keyword",info:"ParkData[entity, property] gives the value of the specified property for the park entity.ParkData[{e"},{label:"Part",type:"keyword",info:"                                       th\nexpr[[i]] or Part[expr, i] gives the i\xef\x8e\xa0   part of expr. ex"},{label:"PartBehavior",type:"keyword",info:"PartBehavior is an option to Query and related functions that specifies how nonexistent parts should"},{label:"PartialCorrelationFunction",type:"keyword",info:"PartialCorrelationFunction[data, hspec] estimates the partial correlation function at lags hspec fro"},{label:"PartialD",type:"keyword",info:"System`PartialD"},{label:"ParticleAcceleratorData",type:"keyword",info:"ParticleAcceleratorData[entity, property] gives the value of the specified property for the particle"},{label:"ParticleData",type:"keyword",info:'ParticleData[name, "property"] gives the specified property for a subatomic particle or family of pa'},{label:"Partition",type:"keyword",info:"Partition[list, n] partitions list into nonoverlapping sublists of length n. Partition[list, n, d] g"},{label:"PartitionGranularity",type:"keyword",info:"PartitionGranularity is an option for audio analysis functions that specifies the partitioning of th"},{label:"PartitionsP",type:"keyword",info:"PartitionsP[n] gives the number p (n) of unrestricted partitions of the integer n. "},{label:"PartitionsQ",type:"keyword",info:"PartitionsQ[n] gives the number q (n) of partitions of the integer n into distinct parts. "},{label:"PartLayer",type:"keyword",info:"                                                     th\nPartLayer[i] represents a net layer that giv"},{label:"PartOfSpeech",type:"keyword",info:'PartOfSpeech["word"] returns the possible parts of speech for the specified word.'},{label:"PartProtection",type:"keyword",info:"PartProtection is an option for cloud expressions that controls which parts of their structure can b"},{label:"ParzenWindow",type:"keyword",info:"ParzenWindow[x] represents a Parzen window function of x."},{label:"PascalDistribution",type:"keyword",info:"PascalDistribution[n, p] represents a Pascal distribution with parameters n and p."},{label:"PassEventsDown",type:"keyword",info:"PassEventsDown is an option to EventHandler which specifies whether events handled by a particular e"},{label:"PassEventsUp",type:"keyword",info:"PassEventsUp is an option to EventHandler that specifies whether events handled by a particular even"},{label:"Paste",type:"keyword",info:"Paste[expr] pastes expr at the current insertion point in the input notebook. Paste[notebook, expr] "},{label:"PasteAutoQuoteCharacters",type:"keyword",info:"System`PasteAutoQuoteCharacters"},{label:"PasteBoxFormInlineCells",type:"keyword",info:"PasteBoxFormInlineCells is an option for cells that specifies whether a new inline cell is created w"},{label:"PasteButton",type:"keyword",info:"PasteButton[expr] represents a button that pastes expr whenever it is pressed. PasteButton[label, ex"},{label:"Path",type:"keyword",info:"Path is an option for Get and related functions which gives a list of directories to search in attem"},{label:"PathGraph",type:"keyword",info:"PathGraph[{v , v , \xe2\x80\xa6}] yields a path with vertices v  and edges between v  and v       .PathGraph[{e"},{label:"PathGraphQ",type:"keyword",info:"PathGraphQ[g] yields True if the graph g is a path and False otherwise."},{label:"Pattern",type:"keyword",info:"sym : obj or Pattern[sym, obj] represents the pattern object obj, assigned the name sym. "},{label:"PatternFilling",type:"keyword",info:"PatternFilling[obj] is a two-dimensional graphics directive specifying that obj should be used to fi"},{label:"PatternSequence",type:"keyword",info:"PatternSequence[p , p , \xe2\x80\xa6] is a pattern object that represents a sequence of arguments matching p , "},{label:"PatternTest",type:"keyword",info:"p ? test is a pattern object that stands for any expression that matches p, and on which the applica"},{label:"PauliMatrix",type:"keyword",info:"                           th\nPauliMatrix[k] gives the k\xef\x8e\xa0   Pauli spin matrix \xcf\x83 .\n                  "},{label:"PaulWavelet",type:"keyword",info:"PaulWavelet[] represents a Paul wavelet of order 4.PaulWavelet[n] represents a Paul wavelet of order"},{label:"Pause",type:"keyword",info:"Pause[n] pauses for at least n seconds. "},{label:"PausedTime",type:"keyword",info:"System`PausedTime"},{label:"PDF",type:"keyword",info:"PDF[dist, x] gives the probability density function for the distribution dist evaluated at x.PDF[dis"},{label:"PeakDetect",type:"keyword",info:"PeakDetect[list] gives a binary list in which 1s correspond to peak positions in list.PeakDetect[lis"},{label:"PeanoCurve",type:"keyword",info:"                                                         th\nPeanoCurve[n] gives the line segments re"},{label:"PearsonChiSquareTest",type:"keyword",info:"                                                                                         2          "},{label:"PearsonCorrelationTest",type:"keyword",info:"PearsonCorrelationTest[v , v ] tests whether the vectors v  and v  are linearly independent.PearsonC"},{label:"PearsonDistribution",type:"keyword",info:"PearsonDistribution[a , a , b , b , b ] represents a distribution of the Pearson family with paramet"},{label:"PenttinenPointProcess",type:"keyword",info:"                                                                                                    "},{label:"PercentForm",type:"keyword",info:"PercentForm[expr] prints with numbers in expr given as percentages.PercentForm[expr, n] prints with "},{label:"PerfectNumber",type:"keyword",info:"                             th\nPerfectNumber[n] gives the n\xef\x8e\xa0   perfect number."},{label:"PerfectNumberQ",type:"keyword",info:"PerfectNumberQ[n] returns True if n is a perfect number, and False otherwise."},{label:"PerformanceGoal",type:"keyword",info:"PerformanceGoal is an option for various algorithmic and presentational functions that specifies wha"},{label:"Perimeter",type:"keyword",info:"Perimeter[reg] gives the perimeter of the two-dimensional region reg.Perimeter[{x , x }, {s, s   , s"},{label:"PeriodicBoundaryCondition",type:"keyword",info:"PeriodicBoundaryCondition[u[x , \xe2\x80\xa6], pred, f] represents a periodic boundary condition = u(x      ) ="},{label:"PeriodicInterpolation",type:"keyword",info:"System`PeriodicInterpolation"},{label:"Periodogram",type:"keyword",info:"Periodogram[list] plots the squared magnitude of the discrete Fourier transform (power spectrum) of "},{label:"PeriodogramArray",type:"keyword",info:"PeriodogramArray[list] returns the squared magnitude of the discrete Fourier transform (power spectr"},{label:"Permanent",type:"keyword",info:"Permanent[m] gives the permanent of the square matrix m. "},{label:"Permissions",type:"keyword",info:"Permissions is an option for CloudObject and related cloud functions that specifies permissions for "},{label:"PermissionsGroup",type:"keyword",info:'PermissionsGroup["name"] represents a permissions group with the specified name, owned by the curren'},{label:"PermissionsGroupMemberQ",type:"keyword",info:"PermissionsGroupMemberQ[group, user] returns True if user is a member of the permissions group group"},{label:"PermissionsGroups",type:"keyword",info:"PermissionsGroups[] gives a list of permissions groups belonging to the current user."},{label:"PermissionsKey",type:"keyword",info:'PermissionsKey["key"] represents a permissions key that can be used to authorize access to cloud res'},{label:"PermissionsKeys",type:"keyword",info:"PermissionsKeys[] gives a list of all valid permissions keys created by the currently authenticated "},{label:"PermutationCycles",type:"keyword",info:"PermutationCycles[perm] gives a disjoint cycle representation of permutation perm."},{label:"PermutationCyclesQ",type:"keyword",info:"PermutationCyclesQ[expr] returns True if expr is a permutation in disjoint cyclic form, and False ot"},{label:"PermutationGroup",type:"keyword",info:"PermutationGroup[{perm , \xe2\x80\xa6, perm }] represents the group generated by multiplication of the permutat"},{label:"PermutationLength",type:"keyword",info:"PermutationLength[perm] returns the number of integers moved by the permutation perm."},{label:"PermutationList",type:"keyword",info:"PermutationList[perm] returns a permutation list representation of permutation perm.PermutationList["},{label:"PermutationListQ",type:"keyword",info:"PermutationListQ[expr] returns True if expr is a valid permutation list and False otherwise."},{label:"PermutationMax",type:"keyword",info:"PermutationMax[perm] returns the largest integer moved by the permutation perm."},{label:"PermutationMin",type:"keyword",info:"PermutationMin[perm] returns the smallest integer moved by the permutation perm."},{label:"PermutationOrder",type:"keyword",info:"PermutationOrder[perm] gives the order of permutation perm."},{label:"PermutationPower",type:"keyword",info:"                                      th\nPermutationPower[perm, n] gives the n\xef\x8e\xa0   permutation power "},{label:"PermutationProduct",type:"keyword",info:"PermutationProduct[a, b, c] gives the product of permutations a, b, c."},{label:"PermutationReplace",type:"keyword",info:"PermutationReplace[expr, perm] replaces each part in expr by its image under the permutation perm.Pe"},{label:"Permutations",type:"keyword",info:"Permutations[list] generates a list of all possible permutations of the elements in list. Permutatio"},{label:"PermutationSupport",type:"keyword",info:"PermutationSupport[perm] returns the support of the permutation perm."},{label:"Permute",type:"keyword",info:"Permute[expr, perm] permutes the positions of the elements of expr according to the permutation perm"},{label:"PeronaMalikFilter",type:"keyword",info:"PeronaMalikFilter[image] applies a Perona\xe2\x80\x93Malik diffusion filter to image.PeronaMalikFilter[image, t"},{label:"Perpendicular",type:"keyword",info:"System`Perpendicular"},{label:"PerpendicularBisector",type:"keyword",info:"PerpendicularBisector[{p , p }] gives the perpendicular bisector of the line segment connecting p  a"},{label:"PersistenceLocation",type:"keyword",info:'PersistenceLocation["type"] represents a persistence location of the given type.PersistenceLocation['},{label:"PersistenceTime",type:"keyword",info:"PersistenceTime is an option for various functions that specifies when a persistent value should be "},{label:"PersistentObject",type:"keyword",info:'PersistentObject["name", loc] represents a persistent object stored at persistence location loc.'},{label:"PersistentObjects",type:"keyword",info:"PersistentObjects[] gives all persistent objects in all locations in ECPersistencePath.PersistentObje"},{label:"PersistentSymbol",type:"keyword",info:'PersistentSymbol["name"] represents the persistent symbol associated with the key "name".PersistentS'},{label:"PersistentValue",type:"keyword",info:'PersistentValue["name"] represents the persistent value associated with the key "name".PersistentVal'},{label:"PersonData",type:"keyword",info:"PersonData[entity, property] gives the value of the specified property for the person entity.PersonD"},{label:"PERTDistribution",type:"keyword",info:"PERTDistribution[{min, max}, c] represents a PERT distribution with range min to max and mode at c.P"},{label:"PetersenGraph",type:"keyword",info:"PetersenGraph[n, k] gives the generalized Petersen graph P    .\n                                    "},{label:"PhaseMargins",type:"keyword",info:"PhaseMargins[lsys] gives the phase margins of the linear time-invariant system lsys."},{label:"PhaseRange",type:"keyword",info:"PhaseRange is an option to BodePlot and NicholsPlot that specifies the phase range."},{label:"PhysicalSystemData",type:"keyword",info:"PhysicalSystemData[entity, property] gives the value of the specified property for the physical syst"},{label:"Pi",type:"keyword",info:"Pi is \xcf\x80, with numerical value \xe2\x89\x83 3.14159. "},{label:"Pick",type:"keyword",info:"Pick[list, sel] picks out those elements of list for which the corresponding element of sel is True."},{label:"PickedElements",type:"keyword",info:"System`PickedElements"},{label:"PickMode",type:"keyword",info:"System`PickMode"},{label:"PIDData",type:"keyword",info:"PIDData[\xe2\x80\xa6] represents PID data generated by PIDTune function."},{label:"PIDDerivativeFilter",type:"keyword",info:"PIDDerivativeFilter is an option to PIDTune that controls the filtering used for derivative terms."},{label:"PIDFeedforward",type:"keyword",info:"PIDFeedforward is an option to PIDTune that controls the reference weights used for the feedforward "},{label:"PIDTune",type:"keyword",info:'PIDTune[sys] gives a feedback PID controller for the system sys. PIDTune[sys, "carch"] gives a contr'},{label:"Piecewise",type:"keyword",info:"Piecewise[{{val , cond }, {val , cond }, \xe2\x80\xa6}] represents a piecewise function with values val  in the"},{label:"PiecewiseExpand",type:"keyword",info:"PiecewiseExpand[expr] expands nested piecewise functions in expr to give a single piecewise function"},{label:"PieChart",type:"keyword",info:"PieChart[{y , y , \xe2\x80\xa6, y }] makes a pie chart with sector angle proportional to y , y , \xe2\x80\xa6.PieChart[{\xe2\x80\xa6,"},{label:"PieChart3D",type:"keyword",info:"PieChart3D[{y , y , \xe2\x80\xa6}] makes a 3D pie chart with sector angle proportional to y , y , \xe2\x80\xa6 .PieChart3D"},{label:"PillaiTrace",type:"keyword",info:"PillaiTrace[m , m ] gives Pillai's trace for the matrices m  and m .\n             1   2             "},{label:"PillaiTraceTest",type:"keyword",info:'PillaiTraceTest[m , m ] tests whether the matrices m  and m  are independent.PillaiTraceTest[\xe2\x80\xa6, "pro'},{label:"PingTime",type:"keyword",info:"PingTime[host] gives the round-trip ping time for the specified network host.PingTime[host, n] gives"},{label:"Pink",type:"keyword",info:"Pink represents the color pink in graphics or style specifications. "},{label:"PitchRecognize",type:"keyword",info:"PitchRecognize[audio] recognizes the main pitch in audio, returning it as a TimeSeries object. Pitch"},{label:"Pivoting",type:"keyword",info:"Pivoting is an option to certain matrix decomposition functions. With Pivoting -> False, no pivoting"},{label:"PixelConstrained",type:"keyword",info:"PixelConstrained is an option for ArrayPlot that specifies how to constrain cells to align with disp"},{label:"PixelValue",type:"keyword",info:'PixelValue[image, ppos] gives the pixel value of image at position pos.PixelValue[image, ppos, "type'},{label:"PixelValuePositions",type:"keyword",info:"PixelValuePositions[image, val] returns a list of pixel positions in image that exactly match the va"},{label:"Placed",type:"keyword",info:"Placed[expr, pos] represents an expression expr placed at relative position pos in a chart or other "},{label:"Placeholder",type:"keyword",info:"Placeholder[name] represents a placeholder labeled with name that indicates a place to type.Placehol"},{label:"PlaceholderLayer",type:"keyword",info:'PlaceholderLayer[] represents a net layer whose operation is undefined.PlaceholderLayer["tag", assoc'},{label:"PlaceholderReplace",type:"keyword",info:"PlaceholderReplace is an option to Paste that determines whether to replace a selection placeholder "},{label:"Plain",type:"keyword",info:"Plain represents a font that is not bold, italic, or underlined."},{label:"PlanarAngle",type:"keyword",info:"PlanarAngle[p \xef\x94\xa2 {q , q }] gives the angle between the half\xe2\x80\x90lines from p through q  and q .PlanarAngl"},{label:"PlanarFaceList",type:"keyword",info:"PlanarFaceList[g] gives the list of faces of the planar graph g."},{label:"PlanarGraph",type:"keyword",info:"PlanarGraph[{e , e , \xe2\x80\xa6}] yields a planar graph with edges e .PlanarGraph[{v , v , \xe2\x80\xa6}, {e , e , \xe2\x80\xa6}] y"},{label:"PlanarGraphQ",type:"keyword",info:"PlanarGraphQ[g] yields True if g is a planar graph and False otherwise."},{label:"PlanckRadiationLaw",type:"keyword",info:"PlanckRadiationLaw[temperature, \xce\xbb] returns the spectral radiance for the specified temperature and w"},{label:"PlaneCurveData",type:"keyword",info:"PlaneCurveData[entity, property] gives the value of the specified property for the plane curve entit"},{label:"PlanetaryMoonData",type:"keyword",info:"PlanetaryMoonData[entity, property] gives the value of the specified property for the moon entity of"},{label:"PlanetData",type:"keyword",info:"PlanetData[entity, property] gives the value of the specified property for the planet entity.PlanetD"},{label:"PlantData",type:"keyword",info:"PlantData[entity, property] gives the value of the specified property for the plant entity.PlantData"},{label:"Play",type:"keyword",info:"Play[f, {t, t   , t   }] creates an object that plays as a sound whose amplitude is given by f as a "},{label:"PlayRange",type:"keyword",info:"PlayRange is an option for Play and related functions which specifies what range of sound amplitude "},{label:"Plot",type:"keyword",info:"Plot[f, {x, x   , x   }] generates a plot of f as a function of x from x    to x   . Plot[{f , f , \xe2\x80\xa6"},{label:"Plot3D",type:"keyword",info:"Plot3D[f, {x, x   , x   }, {y, y   , y   }] generates a three-dimensional plot of f as a function of"},{label:"Plot3Matrix",type:"keyword",info:"System`Plot3Matrix"},{label:"PlotDivision",type:"keyword",info:"PlotDivision is an option for Plot that specifies the maximum amount of subdivision to be used."},{label:"PlotJoined",type:"keyword",info:"PlotJoined is an option for ListPlot that specifies whether the points plotted should be joined by a"},{label:"PlotLabel",type:"keyword",info:"PlotLabel is an option for graphics functions that specifies an overall label for a plot. "},{label:"PlotLabels",type:"keyword",info:"PlotLabels is an option for visualization functions that specifies what labels to use for each data "},{label:"PlotLayout",type:"keyword",info:"PlotLayout is an option for plotting functions that specifies the layout of multiple components in a"},{label:"PlotLegends",type:"keyword",info:"PlotLegends is an option for plot functions that specifies what legends to use. "},{label:"PlotMarkers",type:"keyword",info:"PlotMarkers is an option for graphics functions like ListPlot and ListLinePlot that specifies what m"},{label:"PlotPoints",type:"keyword",info:"PlotPoints is an option for plotting functions that specifies how many initial sample points to use."},{label:"PlotRange",type:"keyword",info:"PlotRange is an option for graphics functions that specifies what range of coordinates to include in"},{label:"PlotRangeClipping",type:"keyword",info:"PlotRangeClipping is an option for graphics functions that specifies whether graphics objects should"},{label:"PlotRangeClipPlanesStyle",type:"keyword",info:"System`PlotRangeClipPlanesStyle"},{label:"PlotRangePadding",type:"keyword",info:"PlotRangePadding is an option for graphics functions that specifies how much further axes etc. shoul"},{label:"PlotRegion",type:"keyword",info:"PlotRegion is an option for graphics functions that specifies what region of the final display area "},{label:"PlotStyle",type:"keyword",info:"PlotStyle is an option for plotting and related functions that specifies styles in which objects are"},{label:"PlotTheme",type:"keyword",info:"PlotTheme is an option for plotting and related functions that specifies an overall theme for visual"},{label:"Pluralize",type:"keyword",info:'Pluralize["noun"] gives the plural form of the English word "noun".Pluralize["noun", n] gives the in'},{label:"Plus",type:"keyword",info:"x + y + z represents a sum of terms. "},{label:"PlusMinus",type:"keyword",info:"PlusMinus[x] displays as \xc2\\[PlusMinus] x.PlusMinus[x, y, \xe2\x80\xa6] displays as x \xc2\\[PlusMinus] y \xc2\\[PlusMinus] \xe2\x80\xa6.\n"},{label:"Pochhammer",type:"keyword",info:"Pochhammer[a, n] gives the Pochhammer symbol (a) . \n                                                "},{label:"PodStates",type:"keyword",info:"PodStates is an option for WolframAlpha that determines information about the states of the pods."},{label:"PodWidth",type:"keyword",info:"PodWidth is an option for WolframAlpha that determines the width parameters of the content returned "},{label:"Point",type:"keyword",info:"Point[p] is a graphics and geometry primitive that represents a point at p. Point[{p , p , \xe2\x80\xa6}] repre"},{label:"Point3DBox",type:"keyword",info:"System`Point3DBox"},{label:"Point3DBoxOptions",type:"keyword",info:"Point3DBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Point3DBo"},{label:"PointBox",type:"keyword",info:"System`PointBox"},{label:"PointBoxOptions",type:"keyword",info:"PointBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for PointBox ob"},{label:"PointCountDistribution",type:"keyword",info:"PointCountDistribution[pproc, reg] represents the distribution of point counts for the point process"},{label:"PointDensity",type:"keyword",info:"PointDensity[pdata] estimates the point density function \xce\xbc(x) from point data pdata.PointDensity[pda"},{label:"PointDensityFunction",type:"keyword",info:"PointDensityFunction[\xe2\x80\xa6] represents a function whose values give the density at a given location."},{label:"PointFigureChart",type:"keyword",info:"PointFigureChart[{{date , p }, {date , p }, \xe2\x80\xa6}] makes a point and figure chart with prices p  at dat"},{label:"PointLegend",type:"keyword",info:"PointLegend[{col , \xe2\x80\xa6}, {lbl , \xe2\x80\xa6}] generates a legend that associates points of colors col  with labe"},{label:"PointLight",type:"keyword",info:"PointLight[col, pt] is a three-dimensional graphics directive that specifies the point light of colo"},{label:"PointProcessEstimator",type:"keyword",info:"PointProcessEstimator[] is an option to EstimatedPointProcess and FindPointProcessParameters that sp"},{label:"PointProcessFitTest",type:"keyword",info:"PointProcessFitTest[pdata] tests whether the point collection pdata could be modeled by a Poisson po"},{label:"PointProcessParameterAssumptions",type:"keyword",info:"PointProcessParameterAssumptions[proc] gives a logical expression for assumptions on parameters in t"},{label:"PointProcessParameterQ",type:"keyword",info:"PointProcessParameterQ[proc] yields True if proc is a valid random point process, and yields False o"},{label:"PointSize",type:"keyword",info:"PointSize[d] is a graphics directive which specifies that points which follow are to be shown if pos"},{label:"PointStatisticFunction",type:"keyword",info:"PointStatisticFunction[\xe2\x80\xa6] represents a function whose values give the statistic of a points collecti"},{label:"PointValuePlot",type:"keyword",info:"PointValuePlot[{pt  \xef\x94\xa2 val , pt  \xef\x94\xa2 val , \xe2\x80\xa6}] plots the points pt  styled according to the values val "},{label:"PoissonConsulDistribution",type:"keyword",info:"PoissonConsulDistribution[\xce\xbc, \xce\xbb] represents a Poisson\xe2\x80\x93Consul distribution with parameters \xce\xbc and \xce\xbb."},{label:"PoissonDistribution",type:"keyword",info:"PoissonDistribution[\xce\xbc] represents a Poisson distribution with mean \xce\xbc."},{label:"PoissonPDEComponent",type:"keyword",info:"                                                           2\nPoissonPDEComponent[vars, pars] yields "},{label:"PoissonPointProcess",type:"keyword",info:"                                                                                                    "},{label:"PoissonProcess",type:"keyword",info:"PoissonProcess[\xce\xbc] represents a Poisson process with rate \xce\xbc."},{label:"PoissonWindow",type:"keyword",info:"PoissonWindow[x] represents a Poisson window function of x.PoissonWindow[x, \xce\\[PlusMinus]] uses the parameter \xce\\[PlusMinus]."},{label:"PolarAxes",type:"keyword",info:"PolarAxes is an option for sector charts and polar plots that specifies whether polar axes should be"},{label:"PolarAxesOrigin",type:"keyword",info:"PolarAxesOrigin is an option for sector charts and polar plots that specifies where polar axes shoul"},{label:"PolarGridLines",type:"keyword",info:"PolarGridLines is an option for sector charts and polar plots that specifies polar grid lines."},{label:"PolarPlot",type:"keyword",info:"PolarPlot[r, {\xce\xb8, \xce\xb8   , \xce\xb8   }] generates a polar plot of a curve with radius r as a function of angle"},{label:"PolarTicks",type:"keyword",info:"PolarTicks is an option for sector charts and polar plots that specifies tick marks for polar axes."},{label:"PoleZeroMarkers",type:"keyword",info:"PoleZeroMarkers is an option for RootLocusPlot that specifies the markers to be drawn on the complex"},{label:"PolyaAeppliDistribution",type:"keyword",info:"PolyaAeppliDistribution[\xce\xb8, p] represents a P\xc3.b3lya\xe2\x80\x93Aeppli distribution with shape parameters \xce\xb8 and p. "},{label:"PolyGamma",type:"keyword",info:"                                                                          th                        "},{label:"Polygon",type:"keyword",info:"Polygon[{p , \xe2\x80\xa6, p }] represents a filled polygon with points p .Polygon[{p , \xe2\x80\xa6, p } \xef\x94\xa2 {{q , \xe2\x80\xa6, q }, "},{label:"Polygon3DBox",type:"keyword",info:"System`Polygon3DBox"},{label:"Polygon3DBoxOptions",type:"keyword",info:"Polygon3DBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Polygon"},{label:"PolygonalNumber",type:"keyword",info:"                               th                                                        th         "},{label:"PolygonAngle",type:"keyword",info:"PolygonAngle[poly] gives a list of angles at the vertex points of poly.PolygonAngle[poly, p] gives t"},{label:"PolygonBox",type:"keyword",info:"System`PolygonBox"},{label:"PolygonBoxOptions",type:"keyword",info:"PolygonBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for PolygonBo"},{label:"PolygonCoordinates",type:"keyword",info:"PolygonCoordinates[poly] gives a list of coordinates in the polygon poly."},{label:"PolygonDecomposition",type:"keyword",info:"PolygonDecomposition[poly] decomposes the polygon poly into a disjoint union of simpler polygons.Pol"},{label:"PolygonHoleScale",type:"keyword",info:"System`PolygonHoleScale"},{label:"PolygonIntersections",type:"keyword",info:"PolygonIntersections is an option for Graphics3D which specifies whether intersecting polygons shoul"},{label:"PolygonScale",type:"keyword",info:"System`PolygonScale"},{label:"Polyhedron",type:"keyword",info:"Polyhedron[{f , \xe2\x80\xa6, f }] represents a filled polyhedron inside the closed surfaces with polygon faces"},{label:"PolyhedronAngle",type:"keyword",info:"PolyhedronAngle[poly, p] gives the solid angle at the point p and spanned by edges with common point"},{label:"PolyhedronBox",type:"keyword",info:"System`PolyhedronBox"},{label:"PolyhedronCoordinates",type:"keyword",info:"PolyhedronCoordinates[poly] gives a list of coordinates in the polyhedron poly."},{label:"PolyhedronData",type:"keyword",info:'PolyhedronData[poly, "property"] gives the value of the specified property for the polyhedron named '},{label:"PolyhedronDecomposition",type:"keyword",info:"PolyhedronDecomposition[poly] decomposes the polyhedron poly into a union of simpler polyhedra."},{label:"PolyhedronGenus",type:"keyword",info:"PolyhedronGenus[poly] gives the genus of the polyhedron poly."},{label:"PolyLog",type:"keyword",info:"PolyLog[n, z] gives the polylogarithm function Li (z).PolyLog[n, p, z] gives the Nielsen generalized"},{label:"PolynomialExpressionQ",type:"keyword",info:"PolynomialExpressionQ[expr, x] gives True if expr is structurally a polynomial expression in x, and "},{label:"PolynomialExtendedGCD",type:"keyword",info:"PolynomialExtendedGCD[poly , poly , x] gives the extended GCD of poly  and poly  treated as univaria"},{label:"PolynomialForm",type:"keyword",info:"System`PolynomialForm"},{label:"PolynomialGCD",type:"keyword",info:"PolynomialGCD[poly , poly , \xe2\x80\xa6] gives the greatest common divisor of the polynomials poly . Polynomia"},{label:"PolynomialLCM",type:"keyword",info:"PolynomialLCM[poly , poly , \xe2\x80\xa6] gives the least common multiple of the polynomials poly . PolynomialL"},{label:"PolynomialMod",type:"keyword",info:"PolynomialMod[poly, m] gives the polynomial poly reduced modulo m. PolynomialMod[poly, {m , m , \xe2\x80\xa6}] "},{label:"PolynomialQ",type:"keyword",info:"PolynomialQ[expr, var] yields True if expr is a polynomial in var, and yields False otherwise. Polyn"},{label:"PolynomialQuotient",type:"keyword",info:"PolynomialQuotient[p, q, x] gives the quotient of p and q, treated as polynomials in x, with any rem"},{label:"PolynomialQuotientRemainder",type:"keyword",info:"PolynomialQuotientRemainder[p, q, x] gives a list of the quotient and remainder of p and q, treated "},{label:"PolynomialReduce",type:"keyword",info:"PolynomialReduce[poly, {poly , poly , \xe2\x80\xa6}, {x , x , \xe2\x80\xa6}] yields a list representing a reduction of pol"},{label:"PolynomialRemainder",type:"keyword",info:"PolynomialRemainder[p, q, x] gives the remainder from dividing p by q, treated as polynomials in x. "},{label:"Polynomials",type:"keyword",info:"System`Polynomials"},{label:"PolynomialSumOfSquaresList",type:"keyword",info:"                                                                                                    "},{label:"PoolingLayer",type:"keyword",info:"PoolingLayer[sz] represents a pooling net layer using kernels of size sz.PoolingLayer[{w}] represent"},{label:"PopupMenu",type:"keyword",info:"PopupMenu[x, {val , val , \xe2\x80\xa6}] represents a popup menu with setting x and possible values val . Popup"},{label:"PopupMenuBox",type:"keyword",info:"System`PopupMenuBox"},{label:"PopupMenuBoxOptions",type:"keyword",info:"PopupMenuBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for PopupMe"},{label:"PopupView",type:"keyword",info:"                                                                                                    "},{label:"PopupWindow",type:"keyword",info:"PopupWindow[expr, contents] displays as expr, but pops up a window containing contents when clicked."},{label:"Position",type:"keyword",info:"Position[expr, pattern] gives a list of the positions at which objects matching pattern appear in ex"},{label:"PositionIndex",type:"keyword",info:"PositionIndex[list] gives an association between unique elements in list and the positions at which "},{label:"Positive",type:"keyword",info:"Positive[x] gives True if x is a positive number. "},{label:"PositiveDefiniteMatrixQ",type:"keyword",info:"PositiveDefiniteMatrixQ[m] gives True if m is explicitly positive definite, and False otherwise. "},{label:"PositiveIntegers",type:"keyword",info:"PositiveIntegers represents the domain of strictly positive integers, as in x \xe2\x88\x88 PositiveIntegers. "},{label:"PositivelyOrientedPoints",type:"keyword",info:"PositivelyOrientedPoints[{p , p , p , \xe2\x80\xa6, p     }] tests whether the sequence of points p , p , p , \xe2\x80\xa6"},{label:"PositiveRationals",type:"keyword",info:"PositiveRationals represents the domain of strictly positive rational numbers, as in x \xe2\x88\x88 PositiveRat"},{label:"PositiveReals",type:"keyword",info:"PositiveReals represents the domain of strictly positive real numbers."},{label:"PositiveSemidefiniteMatrixQ",type:"keyword",info:"PositiveSemidefiniteMatrixQ[m] gives True if m is explicitly positive semidefinite, and False otherw"},{label:"PossibleZeroQ",type:"keyword",info:"PossibleZeroQ[expr] gives True if basic symbolic and numerical methods suggest that expr has value z"},{label:"Postfix",type:"keyword",info:"Postfix[f[expr]] prints with f[expr] given in default postfix form: expr//f. Postfix[f[expr], h] pri"},{label:"PostScript",type:"keyword",info:"System`PostScript"},{label:"Power",type:"keyword",info:"x^y gives x to the power y."},{label:"PowerDistribution",type:"keyword",info:"PowerDistribution[k, a] represents a power distribution with domain parameter k and shape parameter "},{label:"PowerExpand",type:"keyword",info:"PowerExpand[expr] expands all powers of products and powers. PowerExpand[expr, {x , x , \xe2\x80\xa6}] expands "},{label:"PowerMod",type:"keyword",info:"                         b                                                                          "},{label:"PowerModList",type:"keyword",info:"                                                                  r    s\nPowerModList[a, s/r, m] giv"},{label:"PowerRange",type:"keyword",info:"PowerRange[b] generates the list {1, 10, 100, \xe2\x80\xa6, max}, where max is the largest power of 10 that doe"},{label:"PowerSpectralDensity",type:"keyword",info:"PowerSpectralDensity[data, \xcf\x89] estimates the power spectral density for data.PowerSpectralDensity[dat"},{label:"PowersRepresentations",type:"keyword",info:"                                                                                                    "},{label:"PowerSymmetricPolynomial",type:"keyword",info:"PowerSymmetricPolynomial[r] represents a formal power symmetric polynomial with exponent r.PowerSymm"},{label:"Precedence",type:"keyword",info:"Precedence[sym] returns the precedence of the output operator associated to the symbol sym.Precedenc"},{label:"PrecedenceForm",type:"keyword",info:"PrecedenceForm[expr, prec] prints with expr parenthesized as it would be if it contained an operator"},{label:"Precedes",type:"keyword",info:"Precedes[x, y, \xe2\x80\xa6] displays as x \xe2\x89\xba y \xe2\x89\xba \xe2\x80\xa6."},{label:"PrecedesEqual",type:"keyword",info:"PrecedesEqual[x, y, \xe2\x80\xa6] displays as x \xe2\xaa\xaf y \xe2\xaa\xaf \xe2\x80\xa6."},{label:"PrecedesSlantEqual",type:"keyword",info:"PrecedesSlantEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x89\xbc y \xe2\x89\xbc \xe2\x80\xa6."},{label:"PrecedesTilde",type:"keyword",info:"PrecedesTilde[x, y, \xe2\x80\xa6] displays as x \xe2\x89\xbe y \xe2\x89\xbe \xe2\x80\xa6."},{label:"Precision",type:"keyword",info:"Precision[x] gives the effective number of digits of precision in the number x. "},{label:"PrecisionGoal",type:"keyword",info:"PrecisionGoal is an option for various numerical operations which specifies how many effective digit"},{label:"PreDecrement",type:"keyword",info:"--x decreases the value of x by 1, returning the new value of x. "},{label:"Predict",type:"keyword",info:"Predict[{in  \xef\x94\xa2 out , in  \xef\x94\xa2 out , \xe2\x80\xa6}] generates a PredictorFunction[\xe2\x80\xa6] based on the example input-out"},{label:"PredictionRoot",type:"keyword",info:"System`PredictionRoot"},{label:"PredictorFunction",type:"keyword",info:"PredictorFunction[\xe2\x80\xa6] represents a function generated by Predict that predicts numerical values from "},{label:"PredictorInformation",type:"keyword",info:"PredictorInformation[predictor] generates a report giving information on the predictor function pred"},{label:"PredictorMeasurements",type:"keyword",info:"PredictorMeasurements[predictor, testset, prop] gives measurements associated with the property prop"},{label:"PredictorMeasurementsObject",type:"keyword",info:"PredictorMeasurementsObject[\xe2\x80\xa6] represents an object generated by PredictorMeasurements that can be a"},{label:"PreemptProtect",type:"keyword",info:"PreemptProtect[expr] evaluates expr, without any interruption from preemptive evaluations."},{label:"PreferencesPath",type:"keyword",info:"PreferencesPath is a global option that specifies which directories are searched for user-specific s"},{label:"Prefix",type:"keyword",info:"Prefix[f[expr]] prints with f[expr] given in default prefix form: f @ expr. Prefix[f[expr], h] print"},{label:"PreIncrement",type:"keyword",info:"++x increases the value of x by 1, returning the new value of x. "},{label:"Prepend",type:"keyword",info:"Prepend[expr, elem] gives expr with elem prepended. Prepend[elem] represents an operator form of Pre"},{label:"PrependLayer",type:"keyword",info:"PrependLayer[] represents a net layer that takes an input array and prepends another array to it."},{label:"PrependTo",type:"keyword",info:"PrependTo[x, elem] prepends elem to the value of x, and resets x to the result. "},{label:"PreprocessingRules",type:"keyword",info:"PreprocessingRules is an option that specifies how the input should be preprocessed."},{label:"PreserveColor",type:"keyword",info:"PreserveColor is an option for ImageRestyle and related functions that specifies whether to preserve"},{label:"PreserveImageOptions",type:"keyword",info:"PreserveImageOptions is an option to graphics and related functions that specifies whether image siz"},{label:"Previous",type:"keyword",info:"System`Previous"},{label:"PreviousCell",type:"keyword",info:"PreviousCell[] returns the CellObject corresponding to the cell directly above the currently evaluat"},{label:"PreviousDate",type:"keyword",info:"PreviousDate[gran] gives the previously occurring date of the specified granularity type gran.Previo"},{label:"PriceGraphDistribution",type:"keyword",info:"PriceGraphDistribution[n, k, a] represents a de Solla Price graph distribution for n-vertex graphs w"},{label:"PrimaryPlaceholder",type:"keyword",info:"System`PrimaryPlaceholder"},{label:"Prime",type:"keyword",info:"                     th\nPrime[n] gives the n\xef\x8e\xa0   prime number p .\n                                   "},{label:"PrimeNu",type:"keyword",info:"PrimeNu[n] gives the number of distinct primes \xce\xbd(n) in n."},{label:"PrimeOmega",type:"keyword",info:"PrimeOmega[n] gives the number of prime factors counting multiplicities \xce\xa9(n) in n."},{label:"PrimePi",type:"keyword",info:"PrimePi[x] gives the number of primes \xcf\x80(x) less than or equal to x."},{label:"PrimePowerQ",type:"keyword",info:"PrimePowerQ[expr] yields True if expr is a power of a prime number, and yields False otherwise. "},{label:"PrimeQ",type:"keyword",info:"PrimeQ[n] yields True if n is a prime number, and yields False otherwise. "},{label:"Primes",type:"keyword",info:"Primes represents the domain of prime numbers, as in x \xe2\x88\x88 Primes. "},{label:"PrimeZetaP",type:"keyword",info:"PrimeZetaP[s] gives prime zeta function P(s)."},{label:"PrimitivePolynomialQ",type:"keyword",info:"PrimitivePolynomialQ[poly, p] tests whether poly is a primitive polynomial modulo a prime p."},{label:"PrimitiveRoot",type:"keyword",info:"PrimitiveRoot[n] gives a primitive root of n.PrimitiveRoot[n, k] gives the smallest primitive root o"},{label:"PrimitiveRootList",type:"keyword",info:"PrimitiveRootList[n] gives a list of primitive roots of n."},{label:"PrincipalComponents",type:"keyword",info:"PrincipalComponents[matrix] transforms elements of matrix into unscaled principal components."},{label:"PrincipalValue",type:"keyword",info:"PrincipalValue is an option for Integrate that specifies whether the Cauchy principal value should b"},{label:"Print",type:"keyword",info:"Print[expr] prints expr as output. "},{label:"PrintableASCIIQ",type:"keyword",info:"PrintableASCIIQ[string] yields True if the string contains only printable ASCII characters, and yiel"},{label:"PrintAction",type:"keyword",info:"PrintAction is an option for notebooks that specifies the action taken when a Print[] command is eva"},{label:"PrintForm",type:"keyword",info:"System`PrintForm"},{label:"PrintingCopies",type:"keyword",info:"PrintingCopies is an option for notebooks that specifies the number of copies of a notebook printed "},{label:"PrintingOptions",type:"keyword",info:"PrintingOptions is an option that specifies settings for printing."},{label:"PrintingPageRange",type:"keyword",info:"PrintingPageRange is an option for notebooks that specifies the range of pages of a notebook to be p"},{label:"PrintingStartingPageNumber",type:"keyword",info:"PrintingStartingPageNumber is an option for notebooks that specifies what number to assign to the fi"},{label:"PrintingStyleEnvironment",type:"keyword",info:"PrintingStyleEnvironment is an option for notebooks that specifies the style environment to be used "},{label:"Printout3D",type:"keyword",info:"Printout3D[model] prints out the 3D model using a 3D print previewer.Printout3D[model, service] prin"},{label:"Printout3DPreviewer",type:"keyword",info:"Printout3DPreviewer is an option for Printout3D that specifies a previewer for generating outputs to"},{label:"PrintPrecision",type:"keyword",info:"PrintPrecision is an option for selections that specifies the maximum number of digits used for disp"},{label:"PrintTemporary",type:"keyword",info:"PrintTemporary[expr] prints expr as a temporary cell in a notebook, removing it when the evaluation "},{label:"Prism",type:"keyword",info:"Prism[{p , \xe2\x80\xa6, p }] represents a filled prism connecting the triangles {p , p , p } and {p , p , p }."},{label:"PrismBox",type:"keyword",info:"System`PrismBox"},{label:"PrismBoxOptions",type:"keyword",info:"System`PrismBoxOptions"},{label:"PrivateCellOptions",type:"keyword",info:"PrivateCellOptions is an option for cells that specifies various low-level cell settings."},{label:"PrivateEvaluationOptions",type:"keyword",info:"PrivateEvaluationOptions is an option for selections that specifies settings for evaluation-related "},{label:"PrivateFontOptions",type:"keyword",info:"PrivateFontOptions is an option for selections that specifies settings for various font suboptions."},{label:"PrivateKey",type:"keyword",info:"PrivateKey[assoc] represents the private part of a key pair for a public-key cryptographic system."},{label:"PrivateNotebookOptions",type:"keyword",info:"PrivateNotebookOptions is an option for notebooks that specifies various low-level notebook settings"},{label:"PrivatePaths",type:"keyword",info:"PrivatePaths is a global option that specifies settings for paths private to the notebook front end."},{label:"Probability",type:"keyword",info:"Probability[pred, x \xef\x8f\x92 dist] gives the probability for an event that satisfies the predicate pred und"},{label:"ProbabilityDistribution",type:"keyword",info:"ProbabilityDistribution[pdf, {x, x   , x   }] represents the continuous distribution with PDF pdf in"},{label:"ProbabilityPlot",type:"keyword",info:"ProbabilityPlot[list] generates a plot of the CDF of list against the CDF of a normal distribution.P"},{label:"ProbabilityPr",type:"keyword",info:"System`ProbabilityPr"},{label:"ProbabilityScalePlot",type:"keyword",info:"ProbabilityScalePlot[{x , x , \xe2\x80\xa6}] generates a normal probability plot of the samples x . Probability"},{label:"ProbitModelFit",type:"keyword",info:"                                                                                                    "},{label:"ProcessConnection",type:"keyword",info:'ProcessConnection[proc, "stream"] returns the stream object for a given stream.'},{label:"ProcessDirectory",type:"keyword",info:"ProcessDirectory is an option specifying the initial working directory to use when executing a proce"},{label:"ProcessEnvironment",type:"keyword",info:"ProcessEnvironment is an option specifying the initial settings of environment variables to use when"},{label:"Processes",type:"keyword",info:"Processes[] returns a list of currently running external processes, started in this Wolfram Language"},{label:"ProcessEstimator",type:"keyword",info:"ProcessEstimator is an option to EstimatedProcess and FindProcessParameters that specifies what proc"},{label:"ProcessInformation",type:"keyword",info:"ProcessInformation[proc] gives information about an external process proc.\nProcessInformation[proc, "},{label:"ProcessObject",type:"keyword",info:"ProcessObject[...] is an object that represents a runnable external process."},{label:"ProcessParameterAssumptions",type:"keyword",info:"ProcessParameterAssumptions[proc] gives a logical expression for assumptions on parameters in the ra"},{label:"ProcessParameterQ",type:"keyword",info:"ProcessParameterQ[proc] yields True if proc is a valid random process, and yields False otherwise."},{label:"ProcessStateDomain",type:"keyword",info:"System`ProcessStateDomain"},{label:"ProcessStatus",type:"keyword",info:"ProcessStatus[proc] gives the current status of the external process represented by the ProcessObjec"},{label:"ProcessTimeDomain",type:"keyword",info:"System`ProcessTimeDomain"},{label:"Product",type:"keyword",info:"                                                                                                    "},{label:"ProductDistribution",type:"keyword",info:"ProductDistribution[dist , dist , \xe2\x80\xa6] represents the joint distribution with independent component di"},{label:"ProductLog",type:"keyword",info:"                                                            w                               th\nProdu"},{label:"ProgressIndicator",type:"keyword",info:"ProgressIndicator[x] represents a progress indicator with setting x in the range 0 to 1. ProgressInd"},{label:"ProgressIndicatorBox",type:"keyword",info:"System`ProgressIndicatorBox"},{label:"ProgressIndicatorBoxOptions",type:"keyword",info:"ProgressIndicatorBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for"},{label:"ProgressReporting",type:"keyword",info:"ProgressReporting is an option for various algorithmic functions that specifies whether to report th"},{label:"Projection",type:"keyword",info:"Projection[u, v] finds the projection of the vector u onto the vector v.Projection[u, v, f] finds pr"},{label:"Prolog",type:"keyword",info:"Prolog is an option for graphics functions which gives a list of graphics primitives to be rendered "},{label:"PromptForm",type:"keyword",info:"PromptForm[prompt, expr] prints as an output prompt and expression."},{label:"ProofObject",type:"keyword",info:"ProofObject[\xe2\x80\xa6] represents a proof object generated by FindEquationalProof."},{label:"Properties",type:"keyword",info:"Properties is an option that allows specification of properties to objects and items of objects."},{label:"Property",type:"keyword",info:"Property[item, name \xef\x94\xa2 value] associates the property name \xef\x94\xa2 value with item."},{label:"PropertyList",type:"keyword",info:"PropertyList[{obj, itemspec}] lists the properties available for itemspec in obj."},{label:"PropertyValue",type:"keyword",info:"PropertyValue[{obj, item}, name] gives the property value associated with name for item in obj.Prope"},{label:"Proportion",type:"keyword",info:"Proportion[x, y, \xe2\x80\xa6] displays as x \xe2\x88\\[CenterDot] y \xe2\x88\\[CenterDot] \xe2\x80\xa6."},{label:"Proportional",type:"keyword",info:"Proportional[x, y, \xe2\x80\xa6] displays as x \xe2\x88\x9d y \xe2\x88\x9d \xe2\x80\xa6."},{label:"Protect",type:"keyword",info:'Protect[s , s , \xe2\x80\xa6] sets the attribute Protected for the symbols s . Protect["form ", "form ", \xe2\x80\xa6] pro'},{label:"Protected",type:"keyword",info:"Protected is an attribute that prevents any values associated with a symbol from being modified. "},{label:"ProteinData",type:"keyword",info:"ProteinData[entity] gives the reference amino acid sequence for the protein entity.ProteinData[entit"},{label:"Pruning",type:"keyword",info:"Pruning[image] removes the outermost branches of thin objects in image by setting their values to bl"},{label:"PseudoInverse",type:"keyword",info:"PseudoInverse[m] finds the pseudoinverse of a rectangular matrix. "},{label:"PsychrometricPropertyData",type:"keyword",info:"PsychrometricPropertyData[spec] returns the psychrometric properties of moist air for the specified "},{label:"PublicKey",type:"keyword",info:"PublicKey[assoc] represents the public part of a key pair for a public-key cryptographic system.Publ"},{label:"PublisherID",type:"keyword",info:"PublisherID is an option for ResourceSubmit that specifies the ID used to submit a resource for publ"},{label:"PulsarData",type:"keyword",info:"PulsarData[entity, property] gives the value of the specified property for the pulsar entity.PulsarD"},{label:"PunctuationCharacter",type:"keyword",info:"PunctuationCharacter represents a punctuation character in StringExpression."},{label:"Purple",type:"keyword",info:"Purple represents the color purple in graphics or style specifications. "},{label:"Put",type:"keyword",info:'expr >> filename writes expr to a file. Put[expr , expr , \xe2\x80\xa6, "filename"] writes a sequence of expres'},{label:"PutAppend",type:"keyword",info:'expr >>> filename appends expr to a file. PutAppend[expr , expr , \xe2\x80\xa6, "filename"] appends a sequence '},{label:"Pyramid",type:"keyword",info:"Pyramid[{p , \xe2\x80\xa6, p }] represents a filled pyramid with base {p , \xe2\x80\xa6, p } and top p .\n          1      "},{label:"PyramidBox",type:"keyword",info:"System`PyramidBox"},{label:"PyramidBoxOptions",type:"keyword",info:"System`PyramidBoxOptions"},{label:"QBinomial",type:"keyword",info:"QBinomial[n, m, q] gives the q-binomial coefficient (n) .\n                                          "},{label:"QFactorial",type:"keyword",info:"QFactorial[n, q] gives the q-factorial [n]  !.\n                                          q"},{label:"QGamma",type:"keyword",info:"QGamma[z, q] gives the q-gamma function \xce\x93  (z).\n                                         q"},{label:"QHypergeometricPFQ",type:"keyword",info:"QHypergeometricPFQ[{a , \xe2\x80\xa6, a }, {b , \xe2\x80\xa6, b }, q, z] gives the basic hypergeometric series \xef\x8e\xa0  \xef\x8d\xa0 \xcf\x95  (a "},{label:"QnDispersion",type:"keyword",info:"QnDispersion[list] gives the Q  statistic of the elements in list.QnDispersion[list, c] gives the Q "},{label:"QPochhammer",type:"keyword",info:"QPochhammer[a, q, n] gives the q-Pochhammer symbol (a ; q)  .QPochhammer[a, q] gives the q-Pochhamme"},{label:"QPolyGamma",type:"keyword",info:"                                                                                    th              "},{label:"QRDecomposition",type:"keyword",info:"QRDecomposition[m] yields the QR decomposition for a numerical matrix m. The result is a list {q, r}"},{label:"QuadraticIrrationalQ",type:"keyword",info:"QuadraticIrrationalQ[x] gives True if x is a quadratic irrational and False otherwise."},{label:"QuadraticOptimization",type:"keyword",info:"QuadraticOptimization[f, cons, vars] finds values of variables vars that minimize the quadratic obje"},{label:"Quantile",type:"keyword",info:"                               th\nQuantile[list, q] gives the q\xef\x8e\xa0\xef\x8e\xa0   quantile of list. Quantile[list,"},{label:"QuantilePlot",type:"keyword",info:"QuantilePlot[list] generates a plot of quantiles of list against the quantiles of a normal distribut"},{label:"Quantity",type:"keyword",info:"Quantity[magnitude, unit] represents a quantity with size magnitude and unit specified by unit.Quant"},{label:"QuantityArray",type:"keyword",info:"QuantityArray[mags, unit] represents an array of quantities with magnitudes mags and common unit.Qua"},{label:"QuantityDistribution",type:"keyword",info:"QuantityDistribution[dist, unit] represents a distribution dist of quantities with unit specified by"},{label:"QuantityForm",type:"keyword",info:"QuantityForm[expr, form] prints expr with all Quantity expressions using the specified unit display "},{label:"QuantityMagnitude",type:"keyword",info:"QuantityMagnitude[quantity] gives the amount of the specified quantity.QuantityMagnitude[quantity, u"},{label:"QuantityQ",type:"keyword",info:"QuantityQ[expr] gives True if expr is a Quantity with valid arguments, and False otherwise."},{label:"QuantityUnit",type:"keyword",info:"QuantityUnit[quantity] returns the unit associated with the specified quantity."},{label:"QuantityVariable",type:"keyword",info:'QuantityVariable[var, "pq"] represents a variable with the label var and the corresponding physical '},{label:"QuantityVariableCanonicalUnit",type:"keyword",info:"QuantityVariableCanonicalUnit[quantityvariable] returns the canonical unit associated with the speci"},{label:"QuantityVariableDimensions",type:"keyword",info:"QuantityVariableDimensions[quantityvariable] returns a list of base dimensions associated with the s"},{label:"QuantityVariableIdentifier",type:"keyword",info:"QuantityVariableIdentifier[quantityvariable] returns the identifier associated with the specified qu"},{label:"QuantityVariablePhysicalQuantity",type:"keyword",info:"QuantityVariablePhysicalQuantity[var] returns the physical quantity associated with the quantity var"},{label:"Quartics",type:"keyword",info:"Quartics is an option for functions that involve solving algebraic equations that specifies whether "},{label:"QuartileDeviation",type:"keyword",info:"QuartileDeviation[list] gives the quartile deviation or semi-interquartile range of the elements in "},{label:"Quartiles",type:"keyword",info:"Quartiles[list] gives a list of the 1/4, 1/2 and 3/4 quantiles of the elements in list.Quartiles[dis"},{label:"QuartileSkewness",type:"keyword",info:"QuartileSkewness[list] gives the coefficient of quartile skewness for the elements in list.QuartileS"},{label:"Query",type:"keyword",info:"Query[operator , operator , \xe2\x80\xa6] represents a query that can be applied to a Dataset object, in which "},{label:"QuestionInterface",type:"keyword",info:"QuestionInterface[type, \xef\x84\x93 p  \xef\x94\xa2 s , p  \xef\x94\xa2 s , \xe2\x80\xa6|>] defines an interface for a QuestionObject using the"},{label:"QuestionObject",type:"keyword",info:"QuestionObject[q, assess] represents the question q and the corresponding assessment assess.Question"},{label:"QueueingNetworkProcess",type:"keyword",info:"QueueingNetworkProcess[\xce.b3, r, \xce\xbc, c] represents an open (Jackson) queueing network process with arriva"},{label:"QueueingProcess",type:"keyword",info:"QueueingProcess[\xce\xbb, \xce\xbc] represents an M/M/1 queue with arrival rate \xce\xbb and service rate \xce\xbc.QueueingProce"},{label:"QueueProperties",type:"keyword",info:"                                                                                                    "},{label:"Quiet",type:"keyword",info:'Quiet[expr] evaluates expr "quietly", without actually outputting any messages generated.Quiet[expr,'},{label:"QuietEcho",type:"keyword",info:"QuietEcho[expr] evaluates expr without letting Echo and related functions inside expr print any resu"},{label:"Quit",type:"keyword",info:"Quit[] terminates a Wolfram Language kernel session. "},{label:"Quotient",type:"keyword",info:"Quotient[m, n] gives the integer quotient of m and n. Quotient[m, n, d] uses an offset d. \n"},{label:"QuotientRemainder",type:"keyword",info:"QuotientRemainder[m, n] gives a list of the quotient and remainder from division of m by n."},{label:"RadialAxisPlot",type:"keyword",info:"RadialAxisPlot[{y , y , \xe2\x80\xa6, y }] generates a radial axis plot where the y  are displayed on radial ax"},{label:"RadialGradientFilling",type:"keyword",info:"RadialGradientFilling[{col , col , \xe2\x80\xa6, col }] is a two-dimensional graphics directive specifying that"},{label:"RadialGradientImage",type:"keyword",info:"RadialGradientImage[gcol] returns an image with values radially changing from center to corners base"},{label:"RadialityCentrality",type:"keyword",info:"RadialityCentrality[g] gives a list of radiality centralities for the vertices in the graph g.Radial"},{label:"RadicalBox",type:"keyword",info:"                                                                                    1/n\nRadicalBox[x"},{label:"RadicalBoxOptions",type:"keyword",info:"RadicalBoxOptions is an option for selections that specifies settings for RadicalBox objects."},{label:"RadioButton",type:"keyword",info:"RadioButton[x, val] represents a radio button whose setting x is set to val when the button is click"},{label:"RadioButtonBar",type:"keyword",info:"RadioButtonBar[x, {val , val , \xe2\x80\xa6}] represents a radio button bar with setting x and with labeled rad"},{label:"RadioButtonBox",type:"keyword",info:"System`RadioButtonBox"},{label:"RadioButtonBoxOptions",type:"keyword",info:"RadioButtonBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Radio"},{label:"Radon",type:"keyword",info:"Radon[image] gives an image representing the discrete Radon transform of image.Radon[image, {w, h}] "},{label:"RadonTransform",type:"keyword",info:"RadonTransform[expr, {x, y}, {p, \xcf\x95}] gives the Radon transform of expr."},{label:"RamanujanTau",type:"keyword",info:"RamanujanTau[n] gives the Ramanujan \xcf\x84 function \xcf\x84(n)."},{label:"RamanujanTauL",type:"keyword",info:"RamanujanTauL[s] gives the Ramanujan tau Dirichlet L-function L(s)."},{label:"RamanujanTauTheta",type:"keyword",info:"RamanujanTauTheta[t] gives the Ramanujan tau theta function \xce\xb8(t)."},{label:"RamanujanTauZ",type:"keyword",info:"RamanujanTauZ[t] gives the Ramanujan tau Z-function Z(t)."},{label:"Ramp",type:"keyword",info:"Ramp[x] gives x if x \xe2\x89\xa5 0 and 0 otherwise."},{label:"Random",type:"keyword",info:"Random[] gives a uniformly distributed pseudorandom Real in the range 0 to 1. Random[type, range] gi"},{label:"RandomArrayLayer",type:"keyword",info:"RandomArrayLayer[dist] represents a net layer that has no input and produces a random array from the"},{label:"RandomChoice",type:"keyword",info:"RandomChoice[{e , e , \xe2\x80\xa6}] gives a pseudorandom choice of one of the e . RandomChoice[list, n] gives "},{label:"RandomColor",type:"keyword",info:"RandomColor[] gives a pseudorandom color directive in the RGBColor space.RandomColor[n] gives n pseu"},{label:"RandomComplex",type:"keyword",info:"RandomComplex[] gives a pseudorandom complex number with real and imaginary parts in the range 0 to "},{label:"RandomEntity",type:"keyword",info:"RandomEntity[spec] gives a pseudorandom entity with a type determined by the specification spec.Rand"},{label:"RandomFunction",type:"keyword",info:"RandomFunction[proc, {t   , t   }] generates a pseudorandom function from the process proc from t   "},{label:"RandomGeneratorState",type:"keyword",info:"RandomGeneratorState[\xe2\x80\xa6] gives a representation of the internal state of a pseudorandom generator."},{label:"RandomGeoPosition",type:"keyword",info:"RandomGeoPosition[] gives a pseudorandom geo position uniformly distributed on the surface of the Ea"},{label:"RandomGraph",type:"keyword",info:"RandomGraph[{n, m}] gives a pseudorandom graph with n vertices and m edges.RandomGraph[{n, m}, k] gi"},{label:"RandomImage",type:"keyword",info:"RandomImage[max] gives an image with pseudorandom pixel values in the range 0 to max.RandomImage[{mi"},{label:"RandomInstance",type:"keyword",info:"RandomInstance[expr] finds a random instance of an expression such as a geometric scene.RandomInstan"},{label:"RandomInteger",type:"keyword",info:"RandomInteger[{i   , i   }] gives a pseudorandom integer in the range {i   , i   }. RandomInteger[i "},{label:"RandomPermutation",type:"keyword",info:"RandomPermutation[gr] gives a pseudorandom permutation in the permutation group gr.RandomPermutation"},{label:"RandomPoint",type:"keyword",info:"RandomPoint[reg] gives a pseudorandom point uniformly distributed in the region reg.RandomPoint[reg,"},{label:"RandomPointConfiguration",type:"keyword",info:"RandomPointConfiguration[pproc, reg] generates a pseudorandom spatial point configuration from the s"},{label:"RandomPolygon",type:"keyword",info:"RandomPolygon[n] gives a pseudorandom simple polygon with n vertex points.RandomPolygon[spec] gives "},{label:"RandomPolyhedron",type:"keyword",info:"RandomPolyhedron[spec] gives a pseudorandom polyhedron with the specified specification spec.RandomP"},{label:"RandomPrime",type:"keyword",info:"RandomPrime[{i   , i   }] gives a pseudorandom prime number in the range i    to i   .RandomPrime[i "},{label:"RandomReal",type:"keyword",info:"RandomReal[] gives a pseudorandom real number in the range 0 to 1. RandomReal[{x   , x   }] gives a "},{label:"RandomSample",type:"keyword",info:"RandomSample[{e , e , \xe2\x80\xa6}, n] gives a pseudorandom sample of n of the e .RandomSample[{w , w , \xe2\x80\xa6} \xef\x94\xa2 {"},{label:"RandomSeed",type:"keyword",info:"System`RandomSeed"},{label:"RandomSeeding",type:"keyword",info:"RandomSeeding is an option that specifies what seeding of pseudorandom generators should be done ins"},{label:"RandomTree",type:"keyword",info:"RandomTree[n] gives a pseudorandom tree with n nodes.RandomTree[n, k] gives a list of k pseudorandom"},{label:"RandomVariate",type:"keyword",info:"RandomVariate[dist] gives a pseudorandom variate from the symbolic distribution dist.RandomVariate[d"},{label:"RandomWalkProcess",type:"keyword",info:"RandomWalkProcess[p] represents a random walk on a line with the probability of a positive unit step"},{label:"RandomWord",type:"keyword",info:"RandomWord[] gives a pseudorandom commonly used word.RandomWord[n] gives a list of n pseudorandom wo"},{label:"Range",type:"keyword",info:"Range[i   ] generates the list {1, 2, \xe2\x80\xa6, i   }. Range[i   , i   ] generates the list {i   , \xe2\x80\xa6, i   }"},{label:"RangeFilter",type:"keyword",info:"                                                                                                    "},{label:"RangeSpecification",type:"keyword",info:"System`RangeSpecification"},{label:"RankedMax",type:"keyword",info:"                               th                                                         th\nRankedM"},{label:"RankedMin",type:"keyword",info:"                               th                                                          th\nRanked"},{label:"RarerProbability",type:"keyword",info:"RarerProbability[dist, example] computes the probability for distribution dist to generate a sample "},{label:"Raster",type:"keyword",info:"Raster[{{a  , a  , \xe2\x80\xa6}, \xe2\x80\xa6}] is a two-dimensional graphics primitive which represents a rectangular ar"},{label:"Raster3D",type:"keyword",info:"Raster3D[{{{a  , a  , \xe2\x80\xa6}, \xe2\x80\xa6}, \xe2\x80\xa6}] is a three-dimensional graphics primitive that represents a cubica"},{label:"Raster3DBox",type:"keyword",info:"System`Raster3DBox"},{label:"Raster3DBoxOptions",type:"keyword",info:"Raster3DBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Raster3D"},{label:"RasterArray",type:"keyword",info:"RasterArray[{{g  , g  , \xe2\x80\xa6}, \xe2\x80\xa6}] is a two-dimensional graphics primitive that represents a rectangula"},{label:"RasterBox",type:"keyword",info:"System`RasterBox"},{label:"RasterBoxOptions",type:"keyword",info:"RasterBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for RasterBox "},{label:"Rasterize",type:"keyword",info:"Rasterize[expr] returns a rasterized version of the displayed form of expr.Rasterize[expr, elem] giv"},{label:"RasterSize",type:"keyword",info:"RasterSize is an option for Rasterize and related functions that determines the absolute pixel size "},{label:"Rational",type:"keyword",info:"Rational is the head used for rational numbers. "},{label:"RationalExpressionQ",type:"keyword",info:"RationalExpressionQ[expr, x] gives True if expr is structurally a rational expression in x, and Fals"},{label:"RationalFunctions",type:"keyword",info:"System`RationalFunctions"},{label:"Rationalize",type:"keyword",info:"Rationalize[x] converts an approximate number x to a nearby rational with small denominator. Rationa"},{label:"Rationals",type:"keyword",info:"Rationals represents the domain of rational numbers, as in x \xe2\x88\x88 Rationals. "},{label:"Ratios",type:"keyword",info:"                                                                                          th        "},{label:"RawArray",type:"keyword",info:"System`RawArray"},{label:"RawBoxes",type:"keyword",info:"RawBoxes[boxes] is a low-level construct which is formatted as boxes without further interpretation."},{label:"RawData",type:"keyword",info:"RawData[data] is a low-level representation of the contents of a cell in which Show Cell Expression "},{label:"RawMedium",type:"keyword",info:"RawMedium is an internal symbol."},{label:"RayleighDistribution",type:"keyword",info:"RayleighDistribution[\xcf\x83] represents the Rayleigh distribution with scale parameter \xcf\x83."},{label:"Re",type:"keyword",info:"Re[z] gives the real part of the complex number z. "},{label:"ReactionBalance",type:"keyword",info:"ReactionBalance[rxn] returns a version of the reaction rxn in which the stoichiometric coefficients "},{label:"ReactionBalancedQ",type:"keyword",info:"ReactionBalancedQ[rxn] returns True if the given chemical reaction is balanced, and False otherwise."},{label:"ReactionPDETerm",type:"keyword",info:"ReactionPDETerm[vars, a] represents a reaction term a u with reaction coefficient a and with model v"},{label:"Read",type:"keyword",info:"Read[stream] reads one expression from an input stream and returns the expression. Read[stream, type"},{label:"ReadByteArray",type:"keyword",info:"ReadByteArray[src] gives the contents of src as a ByteArray object.ReadByteArray[src, n] reads the f"},{label:"ReadLine",type:"keyword",info:"ReadLine[stream] reads a line of text from a stream and returns it as a string.\nReadLine[proc] reads"},{label:"ReadList",type:"keyword",info:'ReadList["file"] reads all the remaining expressions in a file and returns a list of them. ReadList['},{label:"ReadProtected",type:"keyword",info:"ReadProtected is an attribute that prevents values associated with a symbol from being seen. "},{label:"ReadString",type:"keyword",info:'ReadString["file"] reads the complete contents of a file and returns it as a string.\nReadString[stre'},{label:"Real",type:"keyword",info:"Real is the head used for real (floating\xe2\x80\x90point) numbers. "},{label:"RealAbs",type:"keyword",info:"RealAbs[x] gives the absolute value of the real number x. "},{label:"RealBlockDiagonalForm",type:"keyword",info:"RealBlockDiagonalForm is an option for SchurDecomposition and related functions which specifies whet"},{label:"RealDigits",type:"keyword",info:"                                                                                                    "},{label:"RealExponent",type:"keyword",info:"RealExponent[x] gives log  (\xef\x98\x83 x \xef\x98\x84).RealExponent[x, b] gives log (\xef\x98\x83 x \xef\x98\x84).\n                         10"},{label:"Reals",type:"keyword",info:"Reals represents the domain of real numbers, as in x \xe2\x88\x88 Reals. "},{label:"RealSign",type:"keyword",info:"RealSign[x] gives -1, 0 or 1 depending on whether x is negative, zero or positive. "},{label:"Reap",type:"keyword",info:"Reap[expr] gives the value of expr together with all expressions to which Sow has been applied durin"},{label:"RebuildPacletData",type:"keyword",info:"The experimental function RebuildPacletData is now obsolete and is superseded by PacletDataRebuild."},{label:"RecalibrationFunction",type:"keyword",info:"RecalibrationFunction is an option for Classify, Predict and related functions that specifies how to"},{label:"RecognitionPrior",type:"keyword",info:"RecognitionPrior is an option for recognition functions that specifies the prior probability or clas"},{label:"RecognitionThreshold",type:"keyword",info:"RecognitionThreshold is an option for ImageInstanceQ and related functions that specifies the minimu"},{label:"Record",type:"keyword",info:"Record represents a record in Read, Find, and related functions. "},{label:"RecordLists",type:"keyword",info:"RecordLists is an option for ReadList that specifies whether objects from separate records should be"},{label:"RecordSeparators",type:"keyword",info:"RecordSeparators is an option for Read, Find, and related functions that specifies the list of strin"},{label:"Rectangle",type:"keyword",info:"Rectangle[{x   , y   }, {x   , y   }] represents an axis-aligned filled rectangle from {x   , y   } "},{label:"RectangleBox",type:"keyword",info:"System`RectangleBox"},{label:"RectangleBoxOptions",type:"keyword",info:"RectangleBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Rectang"},{label:"RectangleChart",type:"keyword",info:"RectangleChart[{{x , y }, {x , y }, \xe2\x80\xa6}] makes a rectangle chart with bars of width x  and height y ."},{label:"RectangleChart3D",type:"keyword",info:"RectangleChart3D[{{x , y , z }, {x , y , z }, \xe2\x80\xa6}] makes a 3D rectangle chart with bars of width x , "},{label:"RectangularRepeatingElement",type:"keyword",info:"RectangularRepeatingElement[elem] represents a rectangular array of elements of type spec in an inte"},{label:"RecurrenceFilter",type:"keyword",info:"RecurrenceFilter[{\xce\\[PlusMinus], \xce.b2}, x] filters x using a linear recurrence equation with coefficients \xce\\[PlusMinus] and \xce.b2.R"},{label:"RecurrenceTable",type:"keyword",info:"RecurrenceTable[eqns, expr, {n, n   }] generates a list of values of expr for successive n based on "},{label:"RecurringDigitsForm",type:"keyword",info:"System`RecurringDigitsForm"},{label:"Red",type:"keyword",info:"Red represents the color red in graphics or style specifications. "},{label:"Reduce",type:"keyword",info:"Reduce[expr, vars] reduces the statement expr by solving equations or inequalities for vars and elim"},{label:"RefBox",type:"keyword",info:"System`RefBox"},{label:"ReferenceLineStyle",type:"keyword",info:"ReferenceLineStyle is an option for QuantilePlot and similar functions that specifies the style used"},{label:"ReferenceMarkers",type:"keyword",info:"System`ReferenceMarkers"},{label:"ReferenceMarkerStyle",type:"keyword",info:"System`ReferenceMarkerStyle"},{label:"Refine",type:"keyword",info:"Refine[expr, assum] gives the form of expr that would be obtained if symbols in it were replaced by "},{label:"ReflectionMatrix",type:"keyword",info:"ReflectionMatrix[v] gives the matrix that represents reflection of points in a mirror normal to the "},{label:"ReflectionTransform",type:"keyword",info:"ReflectionTransform[v] gives a TransformationFunction that represents a reflection in a mirror throu"},{label:"Refresh",type:"keyword",info:"Refresh[expr, opts] represents an object whose value in a Dynamic should be refreshed at times speci"},{label:"RefreshRate",type:"keyword",info:"RefreshRate is an option to Animate and related functions which specifies the refresh rate for frame"},{label:"Region",type:"keyword",info:"Region[reg] represents a geometric region.Region[reg, options] gives a region that uses the specifie"},{label:"RegionBinarize",type:"keyword",info:"RegionBinarize[image, marker, d] gives a binary version of image that includes the foreground pixels"},{label:"RegionBoundary",type:"keyword",info:"RegionBoundary[reg] represents the boundary of the region reg."},{label:"RegionBoundaryStyle",type:"keyword",info:"RegionBoundaryStyle is an option for plotting functions that specifies the boundary style for the re"},{label:"RegionBounds",type:"keyword",info:'RegionBounds[reg] gives the bounds for the region reg.RegionBounds[reg, "type"] gives region bounds '},{label:"RegionCentroid",type:"keyword",info:"RegionCentroid[reg] gives the centroid of the region reg."},{label:"RegionCongruent",type:"keyword",info:"RegionCongruent[reg , reg ] tests whether the regions reg  and reg  are congruent.\n                 "},{label:"RegionConvert",type:"keyword",info:"RegionConvert[reg, form] converts the region representation reg to the specified form."},{label:"RegionDifference",type:"keyword",info:"RegionDifference[reg , reg ] gives the difference of the regions reg  and reg .\n                    "},{label:"RegionDilation",type:"keyword",info:"RegionDilation[reg, r] gives the dilation of the region reg by a disk of radius r centered at the or"},{label:"RegionDimension",type:"keyword",info:"RegionDimension[reg] gives the geometric dimension of the region reg. "},{label:"RegionDisjoint",type:"keyword",info:"RegionDisjoint[reg , reg ] returns True if the regions reg  and reg  are disjoint. RegionDisjoint[re"},{label:"RegionDistance",type:"keyword",info:"RegionDistance[reg, p] gives the minimum distance from the point p to the region reg.RegionDistance["},{label:"RegionDistanceFunction",type:"keyword",info:"RegionDistanceFunction[reg, \xe2\x80\xa6]  represents a function whose values give the distance from a point to"},{label:"RegionEmbeddingDimension",type:"keyword",info:"RegionEmbeddingDimension[reg] gives the dimension of the space in which the region reg is embedded. "},{label:"RegionEqual",type:"keyword",info:"RegionEqual[reg , reg ] returns True if the regions reg  and reg  are equal.RegionEqual[reg , reg , "},{label:"RegionErosion",type:"keyword",info:"RegionErosion[reg, r] gives the erosion of the region reg by a disk of radius r centered at the orig"},{label:"RegionFillingStyle",type:"keyword",info:"RegionFillingStyle is an option for plotting functions that specifies the style for the filled regio"},{label:"RegionFit",type:"keyword",info:'RegionFit[{p , p , \xe2\x80\xa6}, "model"] finds a geometric region "model" that best fits the points p , p , \xe2\x80\xa6'},{label:"RegionFunction",type:"keyword",info:"RegionFunction is an option for plotting functions that specifies the region to include in the plot "},{label:"RegionImage",type:"keyword",info:"RegionImage[reg] returns a rasterized grayscale 2D or 3D image of reg.RegionImage[reg, {{x   , x   }"},{label:"RegionIntersection",type:"keyword",info:"RegionIntersection[reg , reg , \xe2\x80\xa6] gives the intersection of the regions reg , reg , \xe2\x80\xa6.\n             "},{label:"RegionMeasure",type:"keyword",info:"RegionMeasure[reg] gives the measure of the region reg.RegionMeasure[reg, d] gives the d-dimensional"},{label:"RegionMember",type:"keyword",info:"RegionMember[reg, {x, y, \xe2\x80\xa6}] gives True if the numeric point {x, y, \xe2\x80\xa6} is a member of the constant r"},{label:"RegionMemberFunction",type:"keyword",info:"RegionMemberFunction[reg, \xe2\x80\xa6]  represents a function whose values give whether a point is in a region"},{label:"RegionMoment",type:"keyword",info:"                                                                            i   i     i\nRegionMoment"},{label:"RegionNearest",type:"keyword",info:"RegionNearest[reg, p] gives a point in the region reg that is nearest the point p. RegionNearest[reg"},{label:"RegionNearestFunction",type:"keyword",info:"RegionNearestFunction[reg, \xe2\x80\xa6]  represents a function whose values give the nearest point in the regi"},{label:"RegionPlot",type:"keyword",info:"RegionPlot[pred, {x, x   , x   }, {y, y   , y   }] makes a plot showing the region in which pred is "},{label:"RegionPlot3D",type:"keyword",info:"RegionPlot3D[pred, {x, x   , x   }, {y, y   , y   }, {z, z   , z   }] makes a plot showing the three"},{label:"RegionProduct",type:"keyword",info:"RegionProduct[reg , reg ] represents the Cartesian product of the regions reg  and reg .RegionProduc"},{label:"RegionQ",type:"keyword",info:"RegionQ[reg] gives True if reg is a valid region and False otherwise. "},{label:"RegionResize",type:"keyword",info:"RegionResize[reg, l] resize the region reg to have the first side length l preserving side length ra"},{label:"RegionSimilar",type:"keyword",info:"RegionSimilar[reg , reg ] tests whether the regions reg  and reg  are similar.\n                 1   "},{label:"RegionSize",type:"keyword",info:"RegionSize is an option used by Printout3D to specify the overall size of an object to print for a r"},{label:"RegionSymmetricDifference",type:"keyword",info:"RegionSymmetricDifference[reg , reg , \xe2\x80\xa6] represents the symmetric difference of the regions reg , re"},{label:"RegionUnion",type:"keyword",info:"RegionUnion[reg , reg , \xe2\x80\xa6] gives the union of the regions reg , reg , \xe2\x80\xa6.\n               1     2     "},{label:"RegionWithin",type:"keyword",info:"RegionWithin[reg , reg ] returns True if reg  is contained within reg .\n                1     2     "},{label:"RegisterExternalEvaluator",type:"keyword",info:"RegisterExternalEvaluator[sys, target] registers the target for use as an external evaluator with th"},{label:"RegularExpression",type:"keyword",info:'RegularExpression["regex"] represents the generalized regular expression specified by the string "re'},{label:"Regularization",type:"keyword",info:"Regularization is an option for Sum and Product that specifies what type of regularization to use."},{label:"RegularlySampledQ",type:"keyword",info:"RegularlySampledQ[tseries] gives True if tseries is a regular time series, and False otherwise."},{label:"RegularPolygon",type:"keyword",info:"RegularPolygon[n] gives the regular polygon with n vertices equally spaced around the unit circle.Re"},{label:"ReIm",type:"keyword",info:"ReIm[z] gives the list {Re[z], Im[z]} of the number z."},{label:"ReImLabels",type:"keyword",info:"ReImLabels is an option for ReImPlot that specifies labels to use for the real and imaginary compone"},{label:"ReImPlot",type:"keyword",info:"ReImPlot[f, {x, x   , x   }] generates a plot of Re[f] and Im[f] as functions of x \xe2\x88\x88 \xef\x9e\\[Micro] from x    to "},{label:"ReImStyle",type:"keyword",info:"ReImStyle is an option for ReImPlot that specifies styles to use for the real and imaginary componen"},{label:"Reinstall",type:"keyword",info:"Reinstall[link] un-installs the specified external package and installs it again."},{label:"RelationalDatabase",type:"keyword",info:"RelationalDatabase[\xe2\x80\xa6] represents schema information about a relational database.RelationalDatabase[d"},{label:"RelationGraph",type:"keyword",info:"RelationGraph[f, {v , v , \xe2\x80\xa6}] gives the graph with vertices v  and edges from v  to v  whenever f[v "},{label:"Release",type:"keyword",info:"System`Release"},{label:"ReleaseHold",type:"keyword",info:"ReleaseHold[expr] removes Hold, HoldForm, HoldPattern, and HoldComplete in expr. "},{label:"ReliabilityDistribution",type:"keyword",info:"ReliabilityDistribution[bexpr, {{x , dist }, {x , dist }, \xe2\x80\xa6}] represents the reliability distributio"},{label:"ReliefImage",type:"keyword",info:"ReliefImage[array] generates a relief image of an array of height values. "},{label:"ReliefPlot",type:"keyword",info:"ReliefPlot[array] generates a relief plot of an array of height values. "},{label:"RemoteAuthorizationCaching",type:"keyword",info:"RemoteAuthorizationCaching is an option for RemoteConnect and related functions that determines whet"},{label:"RemoteBatchJobAbort",type:"keyword",info:"RemoteBatchJobAbort[job] aborts a remote batch job."},{label:"RemoteBatchJobObject",type:"keyword",info:"RemoteBatchJobObject[\xe2\x80\xa6] represents a remote batch job submitted by RemoteBatchSubmit or RemoteBatchM"},{label:"RemoteBatchJobs",type:"keyword",info:"RemoteBatchJobs[env] gives a list of RemoteBatchJobObject expressions representing batch jobs submit"},{label:"RemoteBatchMapSubmit",type:"keyword",info:"RemoteBatchMapSubmit[env, f, list] submits an array batch job in which f is applied to each element "},{label:"RemoteBatchSubmissionEnvironment",type:"keyword",info:'RemoteBatchSubmissionEnvironment["provider", assoc] represents a remote batch job submission environ'},{label:"RemoteBatchSubmit",type:"keyword",info:"RemoteBatchSubmit[env, expr] submits expr for evaluation using the remote batch submission environme"},{label:"RemoteConnect",type:"keyword",info:'RemoteConnect["host"] connects to the specified remote host.RemoteConnect[IPAddress["address"]] conn'},{label:"RemoteConnectionObject",type:"keyword",info:"RemoteConnectionObject[\xe2\x80\xa6] is an object that represents a remote connection."},{label:"RemoteEvaluate",type:"keyword",info:"RemoteEvaluate[expr] gives the result of evaluating expr using your current default remote Wolfram L"},{label:"RemoteFile",type:"keyword",info:'RemoteFile[URL["uri"]] is a symbolic representation of a file on a remote machine.'},{label:"RemoteInputFiles",type:"keyword",info:"RemoteInputFiles is an option for RemoteBatchSubmit and RemoteBatchMapSubmit that specifies local fi"},{label:"RemoteKernelObject",type:"keyword",info:"RemoteKernelObject[spec] specifies a remote kernel that can be used for RemoteEvaluate or LaunchKern"},{label:"RemoteProviderSettings",type:"keyword",info:"RemoteProviderSettings is an option for RemoteBatchSubmit and RemoteBatchMapSubmit that specifies pr"},{label:"RemoteRun",type:"keyword",info:'RemoteRun["host", "command"] runs the specified operating system command on the remote host, returni'},{label:"RemoteRunProcess",type:"keyword",info:'RemoteRunProcess["host", "command"] runs the specified system command on the remote host, returning '},{label:"RemovalConditions",type:"keyword",info:"RemovalConditions is an option for AttachCell that specifies conditions under which to remove the at"},{label:"Remove",type:"keyword",info:"Remove[symbol , \xe2\x80\xa6] removes symbols completely, so that their names are no longer recognized by the W"},{label:"RemoveAlphaChannel",type:"keyword",info:"RemoveAlphaChannel[color] removes opacity from color.RemoveAlphaChannel[color, bg] removes opacity b"},{label:"RemoveAsynchronousTask",type:"keyword",info:"RemoveAsynchronousTask[asyncTask] stops asynchronous evaluations and removes asyncTask from the syst"},{label:"RemoveAudioStream",type:"keyword",info:"RemoveAudioStream[] deletes all AudioStream objects.RemoveAudioStream[stream] deletes the AudioStrea"},{label:"RemoveBackground",type:"keyword",info:"RemoveBackground[image] returns an image with an alpha channel where the background is transparent. "},{label:"RemoveChannelListener",type:"keyword",info:"RemoveChannelListener[obj] removes obj from the list of currently active channel listeners.RemoveCha"},{label:"RemoveChannelSubscribers",type:"keyword",info:"RemoveChannelSubscribers[channel] removes all subscribers from the specified channel.RemoveChannelSu"},{label:"Removed",type:"keyword",info:"Removed[string] is printed to indicate a symbol that has been removed."},{label:"RemoveDiacritics",type:"keyword",info:"RemoveDiacritics[string] replaces characters in string that have diacritics by their base ASCII char"},{label:"RemoveInputStreamMethod",type:"keyword",info:'RemoveInputStreamMethod["name"] removes a custom input stream method.'},{label:"RemoveOutputStreamMethod",type:"keyword",info:'RemoveOutputStreamMethod["name"] removes a custom output stream method.'},{label:"RemoveProperty",type:"keyword",info:"RemoveProperty[{obj, itemspec}] removes all properties associated with itemspec in obj.RemovePropert"},{label:"RemoveScheduledTask",type:"keyword",info:"RemoveScheduledTask[obj] removes obj from the list of currently scheduled local or cloud tasks."},{label:"RemoveUsers",type:"keyword",info:"RemoveUsers[group, {user , \xe2\x80\xa6}] removes the users user  from the permissions group group.\n           "},{label:"RemoveVideoStream",type:"keyword",info:"RemoveVideoStream[] deletes all VideoStream objects.RemoveVideoStream[stream] deletes the VideoStrea"},{label:"RenameDirectory",type:"keyword",info:"RenameDirectory[dir , dir ] renames the directory dir  to dir . \n                   1     2         "},{label:"RenameFile",type:"keyword",info:"RenameFile[file , file ] renames file  to file . \n               1      2              1        2"},{label:"RenderAll",type:"keyword",info:"RenderAll is an option for Graphics3D that specifies whether or not PostScript should be generated f"},{label:"RenderingOptions",type:"keyword",info:"RenderingOptions is an option for Style, Cell and related constructs that specifies options related "},{label:"RenewalProcess",type:"keyword",info:"RenewalProcess[rdist] represents a renewal process with interarrival times distributed according to "},{label:"RenkoChart",type:"keyword",info:"RenkoChart[{{date , p }, {date , p }, \xe2\x80\xa6}] makes a Renko chart with prices p  at date date .RenkoChar"},{label:"RepairMesh",type:"keyword",info:"RepairMesh[mreg] repairs defects in the mesh region mreg.RepairMesh[mreg, {def , \xe2\x80\xa6}] repairs only th"},{label:"Repeated",type:"keyword",info:"p .. or Repeated[p] is a pattern object that represents a sequence of one or more expressions, each "},{label:"RepeatedNull",type:"keyword",info:"p ... or RepeatedNull[p] is a pattern object that represents a sequence of zero or more expressions,"},{label:"RepeatedString",type:"keyword",info:"RepeatedString is an internal symbol used for formatting and printing."},{label:"RepeatedTiming",type:"keyword",info:"RepeatedTiming[expr] evaluates expr repeatedly and returns a list of the average time in seconds use"},{label:"RepeatingElement",type:"keyword",info:"RepeatingElement[spec] represents an arbitrarily repeated type of element in an interpreter, API or "},{label:"Replace",type:"keyword",info:"Replace[expr, rules] applies a rule or list of rules in an attempt to transform the entire expressio"},{label:"ReplaceAll",type:"keyword",info:"expr/.rules or ReplaceAll[expr, rules] applies a rule or list of rules in an attempt to transform ea"},{label:"ReplaceHeldPart",type:"keyword",info:"System`ReplaceHeldPart"},{label:"ReplaceImageValue",type:"keyword",info:"ReplaceImageValue[image, pos \xef\x94\xa2 val] changes the pixel values at position pos in image to val.Replace"},{label:"ReplaceList",type:"keyword",info:"ReplaceList[expr, rules] attempts to transform the entire expression expr by applying a rule or list"},{label:"ReplacePart",type:"keyword",info:"                                                                th\nReplacePart[expr, i \xef\x94\xa2 new] yields"},{label:"ReplacePixelValue",type:"keyword",info:"ReplacePixelValue[image, ppos \xef\x94\xa2 val] changes the pixel values at pixel position ppos in image to val"},{label:"ReplaceRepeated",type:"keyword",info:"expr//.rules repeatedly performs replacements until expr no longer changes. ReplaceRepeated[rules] r"},{label:"ReplicateLayer",type:"keyword",info:"ReplicateLayer[n] represents a net layer that takes an input of dimensions {d , d , \xe2\x80\xa6} and replicate"},{label:"RequiredPhysicalQuantities",type:"keyword",info:"RequiredPhysicalQuantities is an option for FormulaLookup that specifies physical quantities that mu"},{label:"Resampling",type:"keyword",info:"Resampling is an option that specifies the method to be used for resampling images or arrays."},{label:"ResamplingAlgorithmData",type:"keyword",info:'ResamplingAlgorithmData[rs, "prop"] gives the specified property "prop" for the resampling rs.'},{label:"ResamplingMethod",type:"keyword",info:"ResamplingMethod is an option for functions such as TemporalData and MovingMap that specifies how va"},{label:"Rescale",type:"keyword",info:"Rescale[x, {min, max}] gives x rescaled to run from 0 to 1 over the range min to max. Rescale[x, {mi"},{label:"RescalingTransform",type:"keyword",info:"RescalingTransform[{{x   , x   }, {y   , y   }, \xe2\x80\xa6}, {{xp   , xp   }, \xe2\x80\xa6}] gives a TransformationFunct"},{label:"ResetDirectory",type:"keyword",info:"ResetDirectory[] resets the current working directory to its previous value. "},{label:"ResetMenusPacket",type:"keyword",info:"System`ResetMenusPacket"},{label:"ResetScheduledTask",type:"keyword",info:"ResetScheduledTask[obj, timespec]  resets the timing for a scheduled task to timespec.ResetScheduled"},{label:"ReshapeLayer",type:"keyword",info:"ReshapeLayer[dims] represents a net layer that reinterprets the input to be an array of dimensions d"},{label:"Residue",type:"keyword",info:"Residue[expr, {z, z }] finds the residue of expr at the point z = z . \n                   0         "},{label:"ResizeLayer",type:"keyword",info:"ResizeLayer[{d}] represents a layer performing one-dimensional resizing of a two-dimensional array.R"},{label:"Resolve",type:"keyword",info:"Resolve[expr] attempts to resolve expr into a form that eliminates ForAll and Exists quantifiers. Re"},{label:"ResolveContextAliases",type:"keyword",info:"ResolveContextAliases is an option for Names, Contexts and related functions to control whether to r"},{label:"ResourceAcquire",type:"keyword",info:"System`ResourceAcquire"},{label:"ResourceData",type:"keyword",info:"ResourceData[resource] gives the primary content of the specified resource.ResourceData[resource, el"},{label:"ResourceFunction",type:"keyword",info:"ResourceFunction[resource] represents the function associated with the specified resource.ResourceFu"},{label:"ResourceObject",type:"keyword",info:'ResourceObject["name"] represents a resource with the specified name.ResourceObject["uuid"] represen'},{label:"ResourceRegister",type:"keyword",info:"ResourceRegister[resource] creates a persistent cache of a resource object that can be referenced by"},{label:"ResourceRemove",type:"keyword",info:"ResourceRemove[resource] removes the specified resource from the system on which it is run."},{label:"ResourceSearch",type:"keyword",info:"ResourceSearch[form] gives a dataset of resources that contain text matching form.ResourceSearch[for"},{label:"ResourceSubmissionObject",type:"keyword",info:"System`ResourceSubmissionObject"},{label:"ResourceSubmit",type:"keyword",info:"ResourceSubmit[resource] submits the specified resource object to be reviewed for publication.Resour"},{label:"ResourceSystemBase",type:"keyword",info:"ResourceSystemBase is an option for ResourceObject, ResourceSearch and related functions specifying "},{label:"ResourceSystemPath",type:"keyword",info:"ResourceSystemPath is an option for ResourceObject, ResourceSearch and related functions for specify"},{label:"ResourceUpdate",type:"keyword",info:"ResourceUpdate[resource] updates to the latest version of the specified resource object.ResourceUpda"},{label:"ResourceVersion",type:"keyword",info:"ResourceVersion is an option for ResourceObject, ResourceFunction and related functions for specifyi"},{label:"ResponseForm",type:"keyword",info:'ResponseForm[expr, "fmt"] represents a response record to be given in a specified format when reques'},{label:"Rest",type:"keyword",info:"Rest[expr] gives expr with the first element removed. "},{label:"RestartInterval",type:"keyword",info:"RestartInterval is an option controlling the restart behavior of functions such as ContinuousTask."},{label:"Restricted",type:"keyword",info:"Restricted[form, cond, \xe2\x80\xa6] represents a form for Interpreter and related functions restricted accordi"},{label:"Resultant",type:"keyword",info:"Resultant[poly , poly , var] computes the resultant of the polynomials poly  and poly  with respect "},{label:"ResumePacket",type:"keyword",info:"ResumePacket[] is a WSTP packet used for synchronization with the Wolfram Language kernel."},{label:"Return",type:"keyword",info:"Return[expr] returns the value expr from a function. Return[] returns the value Null. \n"},{label:"ReturnCreatesNewCell",type:"keyword",info:"System`ReturnCreatesNewCell"},{label:"ReturnEntersInput",type:"keyword",info:"System`ReturnEntersInput"},{label:"ReturnExpressionPacket",type:"keyword",info:"ReturnExpressionPacket[expr] is a WSTP packet that contains the expression expr, the result of an En"},{label:"ReturnInputFormPacket",type:"keyword",info:"ReturnInputFormPacket is an internal symbol used for formatting."},{label:"ReturnPacket",type:"keyword",info:"ReturnPacket[expr] is a WSTP packet that contains the expression expr, the result of an EvaluatePack"},{label:"ReturnReceiptFunction",type:"keyword",info:"ReturnReceiptFunction is an option for MailReceiverFunction that specifies what function to apply if"},{label:"ReturnTextPacket",type:"keyword",info:"ReturnTextPacket[string] is a WSTP packet containing string, the result of an EnterTextPacket evalua"},{label:"Reverse",type:"keyword",info:"Reverse[expr] reverses the order of the elements in expr. Reverse[expr, n] reverses elements at leve"},{label:"ReverseApplied",type:"keyword",info:"ReverseApplied[f] represents a form of f that takes arguments in reverse order so that ReverseApplie"},{label:"ReverseBiorthogonalSplineWavelet",type:"keyword",info:"ReverseBiorthogonalSplineWavelet[] represents a reverse biorthogonal spline wavelet of order 4 and d"},{label:"ReverseElement",type:"keyword",info:"ReverseElement[x, y, \xe2\x80\xa6] displays as x \xe2\x88\x8b y \xe2\x88\x8b \xe2\x80\xa6."},{label:"ReverseEquilibrium",type:"keyword",info:"ReverseEquilibrium[x, y, \xe2\x80\xa6] displays as x \xe2\x87\x8b y \xe2\x87\x8b \xe2\x80\xa6."},{label:"ReverseGraph",type:"keyword",info:"ReverseGraph[g] gives the reverse graph of the directed graph g.ReverseGraph[{v \xef\x94\xa2 w, \xe2\x80\xa6}] uses rules "},{label:"ReverseSort",type:"keyword",info:"ReverseSort[list] sorts the elements of list into reverse canonical order. ReverseSort[list, p] sort"},{label:"ReverseSortBy",type:"keyword",info:"ReverseSortBy[list, f] sorts the elements of list using the reverse canonical order defined by apply"},{label:"ReverseUpEquilibrium",type:"keyword",info:"ReverseUpEquilibrium[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\xaf y \xe2\xa5\xaf \xe2\x80\xa6."},{label:"RevolutionAxis",type:"keyword",info:"RevolutionAxis is an option for RevolutionPlot3D which specifies the revolution axis around which th"},{label:"RevolutionPlot3D",type:"keyword",info:"RevolutionPlot3D[f , {t, t   , t   }] generates a plot of the surface of revolution with height f  a"},{label:"RGBColor",type:"keyword",info:"RGBColor[r, g, b] represents a color in the RGB color space with red, blue and green components. RGB"},{label:"RiccatiSolve",type:"keyword",info:"                                                                                                    "},{label:"RiceDistribution",type:"keyword",info:"RiceDistribution[\xce\\[PlusMinus], \xce.b2] represents a Rice distribution with shape parameters \xce\\[PlusMinus] and \xce.b2.RiceDistribution"},{label:"RidgeFilter",type:"keyword",info:"RidgeFilter[data] computes a measure for the presence of a ridge at every position of data.RidgeFilt"},{label:"RiemannR",type:"keyword",info:"RiemannR[x] gives the Riemann prime counting function R(x)."},{label:"RiemannSiegelTheta",type:"keyword",info:"RiemannSiegelTheta[t] gives the Riemann\xe2\x80\x93Siegel function \xcf\x91(t). "},{label:"RiemannSiegelZ",type:"keyword",info:"RiemannSiegelZ[t] gives the Riemann\xe2\x80\x93Siegel function Z(t). "},{label:"RiemannXi",type:"keyword",info:"RiemannXi[s] gives the Riemann xi function \xce\xbe(s)."},{label:"Riffle",type:"keyword",info:"                                                                                                    "},{label:"Right",type:"keyword",info:"Right is a symbol that represents the right-hand side for purposes of alignment and positioning. "},{label:"RightArrow",type:"keyword",info:"RightArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x86\x92 y \xe2\x86\x92 \xe2\x80\xa6."},{label:"RightArrowBar",type:"keyword",info:"RightArrowBar[x, y, \xe2\x80\xa6] displays as x \xe2\x87\xa5 y \xe2\x87\xa5 \xe2\x80\xa6."},{label:"RightArrowLeftArrow",type:"keyword",info:"RightArrowLeftArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x87\x84 y \xe2\x87\x84 \xe2\x80\xa6."},{label:"RightComposition",type:"keyword",info:"RightComposition[f , f , f , \xe2\x80\xa6] represents a composition on the right of the functions f , f , f , \xe2\x80\xa6"},{label:"RightCosetRepresentative",type:"keyword",info:"RightCosetRepresentative[group, g] returns the smallest element in the right coset of products of th"},{label:"RightDownTeeVector",type:"keyword",info:"RightDownTeeVector[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\x9d y \xe2\xa5\x9d \xe2\x80\xa6."},{label:"RightDownVector",type:"keyword",info:"RightDownVector[x, y, \xe2\x80\xa6] displays as x \xe2\x87\x82 y \xe2\x87\x82 \xe2\x80\xa6."},{label:"RightDownVectorBar",type:"keyword",info:"RightDownVectorBar[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\x95 y \xe2\xa5\x95 \xe2\x80\xa6."},{label:"RightTee",type:"keyword",info:"RightTee[x, y] displays as x \xe2\x8a\xa2 y."},{label:"RightTeeArrow",type:"keyword",info:"RightTeeArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x86\xa6 y \xe2\x86\xa6 \xe2\x80\xa6."},{label:"RightTeeVector",type:"keyword",info:"RightTeeVector[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\x9b y \xe2\xa5\x9b \xe2\x80\xa6."},{label:"RightTriangle",type:"keyword",info:"RightTriangle[x, y, \xe2\x80\xa6] displays as x \xe2\x8a.b3 y \xe2\x8a.b3 \xe2\x80\xa6."},{label:"RightTriangleBar",type:"keyword",info:"RightTriangleBar[x, y, \xe2\x80\xa6] displays as x \xe2\xa7\x90 y \xe2\xa7\x90 \xe2\x80\xa6."},{label:"RightTriangleEqual",type:"keyword",info:"RightTriangleEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x8a\\[Micro] y \xe2\x8a\\[Micro] \xe2\x80\xa6."},{label:"RightUpDownVector",type:"keyword",info:"RightUpDownVector[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\x8f y \xe2\xa5\x8f \xe2\x80\xa6."},{label:"RightUpTeeVector",type:"keyword",info:"RightUpTeeVector[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\x9c y \xe2\xa5\x9c \xe2\x80\xa6."},{label:"RightUpVector",type:"keyword",info:"RightUpVector[x, y, \xe2\x80\xa6] displays as x \xe2\x86\xbe y \xe2\x86\xbe \xe2\x80\xa6."},{label:"RightUpVectorBar",type:"keyword",info:"RightUpVectorBar[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\x94 y \xe2\xa5\x94 \xe2\x80\xa6."},{label:"RightVector",type:"keyword",info:"RightVector[x, y, \xe2\x80\xa6] displays as x \xe2\x87\x80 y \xe2\x87\x80 \xe2\x80\xa6."},{label:"RightVectorBar",type:"keyword",info:"RightVectorBar[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\x93 y \xe2\xa5\x93 \xe2\x80\xa6."},{label:"RipleyK",type:"keyword",info:"RipleyK[pdata, r] estimates Ripley's K function K(r) at radius r for point data pdata.RipleyK[pproc,"},{label:"RipleyRassonRegion",type:"keyword",info:"RipleyRassonRegion[pdata] gives an estimated observation based on the point data pdata. "},{label:"RiskAchievementImportance",type:"keyword",info:"RiskAchievementImportance[rdist, t] gives the risk achievement importances for all components in the"},{label:"RiskReductionImportance",type:"keyword",info:"RiskReductionImportance[rdist, t] gives the risk reduction importances for all components in the Rel"},{label:"RobustConvexOptimization",type:"keyword",info:"RobustConvexOptimization[f, ForAll[pars, pcons, vcons], vars] finds values of vars that give the min"},{label:"RogersTanimotoDissimilarity",type:"keyword",info:"RogersTanimotoDissimilarity[u, v] gives the Rogers\xe2\x80\x93Tanimoto dissimilarity between Boolean vectors u "},{label:"RollPitchYawAngles",type:"keyword",info:"RollPitchYawAngles[r] gives the roll-pitch-yaw angles {\xce\\[PlusMinus], \xce.b2, \xce.b3} corresponding to the rotation matrix"},{label:"RollPitchYawMatrix",type:"keyword",info:"RollPitchYawMatrix[{\xce\\[PlusMinus], \xce.b2, \xce.b3}] gives the 3D rotation matrix formed by rotating by \xce\\[PlusMinus] around the initia"},{label:"RomanNumeral",type:"keyword",info:"RomanNumeral[n] gives a string corresponding to the Roman numeral form of the integer n."},{label:"Root",type:"keyword",info:"                                                                                                    "},{label:"RootApproximant",type:"keyword",info:'RootApproximant[x] converts the number x to one of the "simplest" algebraic numbers that approximate'},{label:"RootIntervals",type:"keyword",info:"RootIntervals[{poly , poly , \xe2\x80\xa6}] gives a list of isolating intervals for the real roots of any of th"},{label:"RootLocusPlot",type:"keyword",info:"RootLocusPlot[lsys, {k, k   , k   }] generates a root locus plot of a linear time-invariant system l"},{label:"RootMeanSquare",type:"keyword",info:"RootMeanSquare[list] gives the root mean square of values in list.RootMeanSquare[dist] gives the roo"},{label:"RootOfUnityQ",type:"keyword",info:"RootOfUnityQ[a] yields True if a is a root of unity, and yields False otherwise."},{label:"RootReduce",type:"keyword",info:"RootReduce[expr] attempts to reduce expr to a single Root object. "},{label:"Roots",type:"keyword",info:"Roots[lhs == rhs, var] yields a disjunction of equations which represent the roots of a polynomial e"},{label:"RootSum",type:"keyword",info:"RootSum[f, form] represents the sum of form[x] for all x that satisfy the polynomial equation f[x] ="},{label:"Rotate",type:"keyword",info:"Rotate[g, \xce\xb8] represents 2D graphics primitives or any other objects g rotated counterclockwise by \xce\xb8 "},{label:"RotateLabel",type:"keyword",info:"RotateLabel is an option for graphics and related functions that specifies whether labels on vertica"},{label:"RotateLeft",type:"keyword",info:"RotateLeft[expr, n] cycles the elements in expr n positions to the left. RotateLeft[expr] cycles one"},{label:"RotateRight",type:"keyword",info:"RotateRight[expr, n] cycles the elements in expr n positions to the right. RotateRight[expr] cycles "},{label:"RotationAction",type:"keyword",info:"RotationAction is an option for three-dimensional graphics functions that specifies how to render 3D"},{label:"RotationBox",type:"keyword",info:"System`RotationBox"},{label:"RotationBoxOptions",type:"keyword",info:"RotationBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Rotation"},{label:"RotationMatrix",type:"keyword",info:"RotationMatrix[\xce\xb8] gives the 2D rotation matrix that rotates 2D vectors counterclockwise by \xce\xb8 radians"},{label:"RotationTransform",type:"keyword",info:"RotationTransform[\xce\xb8] gives a TransformationFunction that represents a rotation in 2D by \xce\xb8 radians ab"},{label:"Round",type:"keyword",info:"Round[x] gives the integer closest to x. Round[x, a] rounds to the nearest multiple of a. \n"},{label:"RoundImplies",type:"keyword",info:"System`RoundImplies"},{label:"RoundingRadius",type:"keyword",info:"RoundingRadius is an option for Rectangle, Framed, and related functions that specifies the radius o"},{label:"Row",type:"keyword",info:"Row[{expr , expr , \xe2\x80\xa6}] is an object that formats with the expr  arranged in a row, potentially exten"},{label:"RowAlignments",type:"keyword",info:"RowAlignments is an option for the low-level function GridBox that specifies how entries in each row"},{label:"RowBackgrounds",type:"keyword",info:"System`RowBackgrounds"},{label:"RowBox",type:"keyword",info:"RowBox[{box , box , \xe2\x80\xa6}] is a low-level box construct that represents a row of boxes or strings in a "},{label:"RowHeights",type:"keyword",info:"System`RowHeights"},{label:"RowLines",type:"keyword",info:"RowLines is an option for the low-level function GridBox that specifies whether lines should be draw"},{label:"RowMinHeight",type:"keyword",info:"RowMinHeight is an option for the low-level function GridBox that specifies the minimum total height"},{label:"RowReduce",type:"keyword",info:"RowReduce[m] gives the row\xe2\x80\x90reduced form of the matrix m. "},{label:"RowsEqual",type:"keyword",info:"RowsEqual is an option for the low-level function GridBox that specifies whether all rows in the gri"},{label:"RowSpacings",type:"keyword",info:"RowSpacings is an option for the low-level function GridBox that specifies the spaces in x heights t"},{label:"RSolve",type:"keyword",info:"RSolve[eqn, a[n], n] solves a recurrence equation for a[n]. RSolve[{eqn , eqn , \xe2\x80\xa6}, {a [n], a [n], \xe2\x80\xa6"},{label:"RSolveValue",type:"keyword",info:"RSolveValue[eqn, expr, n] gives the value of expr determined by a symbolic solution to the ordinary "},{label:"RudinShapiro",type:"keyword",info:"                            th\nRudinShapiro[n] gives the n\xef\x8e\xa0   term in the Rudin\xe2\x80\x93Shapiro sequence."},{label:"RudvalisGroupRu",type:"keyword",info:"RudvalisGroupRu[] represents the sporadic simple Rudvalis group Ru."},{label:"Rule",type:"keyword",info:"lhs -> rhs or lhs \xef\x94\xa2 rhs represents a rule that transforms lhs to rhs. "},{label:"RuleCondition",type:"keyword",info:"RuleCondition is an internal symbol."},{label:"RuleDelayed",type:"keyword",info:"lhs :> rhs or lhs \xef\x94\x9f rhs represents a rule that transforms lhs to rhs, evaluating rhs only after the "},{label:"RuleForm",type:"keyword",info:"RuleForm is an internal symbol used for formatting and printing."},{label:"RulePlot",type:"keyword",info:"RulePlot[sys] generates a plot representing the rule for the computational system sys.RulePlot[sys, "},{label:"RulerUnits",type:"keyword",info:"RulerUnits is an option for notebooks that specifies the units in the ruler toolbar."},{label:"RulesTree",type:"keyword",info:"RulesTree[data \xef\x94\xa2 {rule , rule , \xe2\x80\xa6}] gives a tree whose root contains data and that has children spec"},{label:"Run",type:"keyword",info:'Run["command"] runs command as an external operating system command, returning the exit code obtaine'},{label:"RunProcess",type:"keyword",info:'RunProcess["command"] runs the specified external command, returning information on the outcome.\nRun'},{label:"RunScheduledTask",type:"keyword",info:"RunScheduledTask[expr] schedules and starts a local scheduled task that will repeatedly evaluate exp"},{label:"RunThrough",type:"keyword",info:'RunThrough["command", expr] executes an external command, giving the printed form of expr as input a'},{label:"RuntimeAttributes",type:"keyword",info:"RuntimeAttributes is an option for Compile that specifies attributes for the compiled function it cr"},{label:"RuntimeOptions",type:"keyword",info:"RuntimeOptions is an option for Compile that specifies runtime settings for the compiled function it"},{label:"RussellRaoDissimilarity",type:"keyword",info:"RussellRaoDissimilarity[u, v] gives the Russell\xe2\x80\x93Rao dissimilarity between Boolean vectors u and v."},{label:"SameQ",type:"keyword",info:"lhs === rhs yields True if the expression lhs is identical to rhs, and yields False otherwise. "},{label:"SameTest",type:"keyword",info:"SameTest is an option whose setting gives a pairwise comparison function to determine whether expres"},{label:"SameTestProperties",type:"keyword",info:"SameTestProperties is an option for set operations on entity classes whose setting gives the propert"},{label:"SampledEntityClass",type:"keyword",info:"SampledEntityClass[class, n] represents an entity class containing n entities from class.SampledEnti"},{label:"SampleDepth",type:"keyword",info:"SampleDepth is an option for sound primitives that specifies how many bits should be used to encode "},{label:"SampledSoundFunction",type:"keyword",info:"SampledSoundFunction[f, n, r] is a sound primitive that represents a sound whose amplitude sampled r"},{label:"SampledSoundList",type:"keyword",info:"SampledSoundList[{a , a , \xe2\x80\xa6}, r] is a sound primitive that represents a sound whose amplitude has le"},{label:"SampleRate",type:"keyword",info:"SampleRate is an option that specifies the number of samples per second for sound and signal process"},{label:"SamplingPeriod",type:"keyword",info:"SamplingPeriod is an option to StateSpaceModel etc. that specifies the sampling period."},{label:"SARIMAProcess",type:"keyword",info:"SARIMAProcess[{a , \xe2\x80\xa6, a }, d, {b , \xe2\x80\xa6, b }, {s, {\xce\\[PlusMinus] , \xe2\x80\xa6, \xce\\[PlusMinus] }, \xce.b4, {\xce.b2 , \xe2\x80\xa6, \xce.b2 }}, v] represents a seasona"},{label:"SARMAProcess",type:"keyword",info:"SARMAProcess[{a , \xe2\x80\xa6, a }, {b , \xe2\x80\xa6, b }, {s, {\xce\\[PlusMinus] , \xe2\x80\xa6, \xce\\[PlusMinus] }, {\xce.b2 , \xe2\x80\xa6, \xce.b2 }}, v] represents a weakly station"},{label:"SASTriangle",type:"keyword",info:"SASTriangle[a, \xce.b3, b] returns a filled triangle with sides of length a and b and angle \xce.b3 between them"},{label:"SatelliteData",type:"keyword",info:"SatelliteData[entity, property] gives the value of the specified property for the satellite entity.S"},{label:"SatisfiabilityCount",type:"keyword",info:"SatisfiabilityCount[bf] counts the number of possible combinations of variable values that yield Tru"},{label:"SatisfiabilityInstances",type:"keyword",info:"SatisfiabilityInstances[bf] attempts to find a choice of variables that makes the Boolean function b"},{label:"SatisfiableQ",type:"keyword",info:"SatisfiableQ[bf] gives True if a combination of values of variables exists that makes the Boolean fu"},{label:"Saturday",type:"keyword",info:"Saturday is a day of the week."},{label:"Save",type:"keyword",info:'Save["filename", symbol] appends definitions associated with the specified symbol to a file. Save["f'},{label:"Saveable",type:"keyword",info:"Saveable is an option for notebooks that specifies whether a notebook can be saved."},{label:"SaveAutoDelete",type:"keyword",info:"System`SaveAutoDelete"},{label:"SaveConnection",type:"keyword",info:"SaveConnection is an option for ServiceConnect that determines whether the connection should be save"},{label:"SaveDefinitions",type:"keyword",info:"SaveDefinitions is an option to Manipulate and related functions that specifies whether current defi"},{label:"SavitzkyGolayMatrix",type:"keyword",info:"                                                                                                    "},{label:"SawtoothWave",type:"keyword",info:"SawtoothWave[x] gives a sawtooth wave that varies from 0 to 1 with unit period.SawtoothWave[{min, ma"},{label:"Scale",type:"keyword",info:"Scale[g, s] represents graphics primitives g scaled by a factor s. Scale[g, s, {x, y, \xe2\x80\xa6}] scales wit"},{label:"Scaled",type:"keyword",info:"Scaled[{x, y, \xe2\x80\xa6}] gives the position of a graphical object in terms of coordinates scaled to run fro"},{label:"ScaleDivisions",type:"keyword",info:"ScaleDivisions is an option for gauge functions that specifies how many tick marks should be drawn o"},{label:"ScaledMousePosition",type:"keyword",info:"System`ScaledMousePosition"},{label:"ScaleOrigin",type:"keyword",info:"ScaleOrigin is an option for gauge functions that describes how to position the scale on the gauge."},{label:"ScalePadding",type:"keyword",info:"ScalePadding is an option for gauge functions that specifies how much space to leave around the scal"},{label:"ScaleRanges",type:"keyword",info:"ScaleRanges is an option for gauge functions that describes how to draw sections of the scale."},{label:"ScaleRangeStyle",type:"keyword",info:"ScaleRangeStyle is an option for gauge functions to describe how to style different sections of the "},{label:"ScalingFunctions",type:"keyword",info:"ScalingFunctions is an option for ListPlot, BarChart, Histogram, and other plotting functions that s"},{label:"ScalingMatrix",type:"keyword",info:"ScalingMatrix[{s , s , \xe2\x80\xa6}] gives the matrix corresponding to scaling by a factor s  along each coord"},{label:"ScalingTransform",type:"keyword",info:"ScalingTransform[{s , s , \xe2\x80\xa6}] gives a TransformationFunction that represents scaling by a factor s  "},{label:"Scan",type:"keyword",info:"Scan[f, expr] evaluates f applied to each element of expr in turn. Scan[f, expr, levelspec] applies "},{label:"ScheduledTask",type:"keyword",info:"ScheduledTask[expr, timespec] represents a scheduled task to be evaluated on the schedule defined by"},{label:"ScheduledTaskActiveQ",type:"keyword",info:"ScheduledTaskActiveQ[obj] yields True if obj represents an active task, and False otherwise."},{label:"ScheduledTaskInformation",type:"keyword",info:"ScheduledTaskInformation[CloudObject] returns information about a task.\nScheduledTaskInformation[Clo"},{label:"ScheduledTaskInformationData",type:"keyword",info:"System`ScheduledTaskInformationData"},{label:"ScheduledTaskObject",type:"keyword",info:"ScheduledTaskObject[id, expr, spec, \xe2\x80\xa6] is a task object specifying future evaluation of expr accordi"},{label:"ScheduledTasks",type:"keyword",info:"ScheduledTasks[] returns a list of ScheduledTaskObject and CloudObject expressions that represent cu"},{label:"SchurDecomposition",type:"keyword",info:"SchurDecomposition[m] yields the Schur decomposition for a numerical matrix m, given as a list {q, t"},{label:"ScientificForm",type:"keyword",info:"ScientificForm[expr] prints with all real numbers in expr given in scientific notation. ScientificFo"},{label:"ScientificNotationThreshold",type:"keyword",info:"ScientificNotationThreshold is an option for NumberForm and related functions that specifies the thr"},{label:"ScorerGi",type:"keyword",info:"ScorerGi[z] gives the Scorer function Gi(z)."},{label:"ScorerGiPrime",type:"keyword",info:"                                                               \xe2\x80.b2\nScorerGiPrime[z] gives the derivati"},{label:"ScorerHi",type:"keyword",info:"ScorerHi[z] gives the Scorer function Hi(z)."},{label:"ScorerHiPrime",type:"keyword",info:"                                                               \xe2\x80.b2\nScorerHiPrime[z] gives the derivati"},{label:"ScreenRectangle",type:"keyword",info:"ScreenRectangle is a global option that specifies the position of the primary screen by giving the c"},{label:"ScreenStyleEnvironment",type:"keyword",info:"ScreenStyleEnvironment is an option for notebooks that specifies the style environment to be used in"},{label:"ScriptBaselineShifts",type:"keyword",info:"ScriptBaselineShifts is an option for Style that specifies the minimum distance in x\xe2\x80\x90heights to shif"},{label:"ScriptForm",type:"keyword",info:"System`ScriptForm"},{label:"ScriptLevel",type:"keyword",info:"ScriptLevel is an option for selections that is used in determining the font size of modifiers such "},{label:"ScriptMinSize",type:"keyword",info:"ScriptMinSize is an option for Style which specifies the minimum font size to use in rendering subsc"},{label:"ScriptRules",type:"keyword",info:"System`ScriptRules"},{label:"ScriptSizeMultipliers",type:"keyword",info:"ScriptSizeMultipliers is an option for Style that specifies how much smaller to render each successi"},{label:"Scrollbars",type:"keyword",info:"Scrollbars is an option for Pane that specifies whether scrollbars should be displayed."},{label:"ScrollingOptions",type:"keyword",info:"ScrollingOptions is an option for notebooks that specifies settings for scrolling."},{label:"ScrollPosition",type:"keyword",info:"ScrollPosition is an option for Pane that specifies the scroll position of the contents of the pane."},{label:"SearchAdjustment",type:"keyword",info:"SearchAdjustment[query, w] represents a component of a search query that is to be treated as having "},{label:"SearchIndexObject",type:"keyword",info:"SearchIndexObject[loc] represents a search index object, as created by CreateSearchIndex.SearchIndex"},{label:"SearchIndices",type:"keyword",info:"SearchIndices[] returns a list with all the locally stored instances of SearchIndexObject."},{label:"SearchQueryString",type:"keyword",info:'SearchQueryString["query"] represents a search engine-style query in TextSearch and related function'},{label:"SearchResultObject",type:"keyword",info:"SearchResultObject[\xe2\x80\xa6] represents a result from TextSearch[\xe2\x80\xa6] and related functions."},{label:"Sec",type:"keyword",info:"Sec[z] gives the secant of z. "},{label:"Sech",type:"keyword",info:"Sech[z] gives the hyperbolic secant of z. "},{label:"SechDistribution",type:"keyword",info:"SechDistribution[\xce\xbc, \xcf\x83] represents the hyperbolic secant distribution with location parameter \xce\xbc and s"},{label:"SecondOrderConeOptimization",type:"keyword",info:"SecondOrderConeOptimization[f, cons, vars] finds values of variables vars that minimize the linear o"},{label:"SectionGrouping",type:"keyword",info:"System`SectionGrouping"},{label:"SectorChart",type:"keyword",info:"SectorChart[{{x , y }, {x , y }, \xe2\x80\xa6}] makes a sector chart with sector angles proportional to x  and "},{label:"SectorChart3D",type:"keyword",info:"SectorChart3D[{{x , y , z }, {x , y , z }, \xe2\x80\xa6}] makes a 3D sector chart with sector angle proportiona"},{label:"SectorOrigin",type:"keyword",info:"SectorOrigin is an option to PieChart and related functions that specifies where sectors should star"},{label:"SectorSpacing",type:"keyword",info:"SectorSpacing is an option to PieChart and related functions that specifies radial spacing of sector"},{label:"SecuredAuthenticationKey",type:"keyword",info:"SecuredAuthenticationKey[assoc] represents a secured authentication key with credentials and detail"},{label:"SecuredAuthenticationKeys",type:"keyword",info:"SecuredAuthenticationKeys[] retrieves a list of all instances of SecuredAuthenticationKey owned by t"},{label:"SecurityCertificate",type:"keyword",info:"SecurityCertificate[assoc] represents the security certificate issued for a public key."},{label:"SeedRandom",type:"keyword",info:"SeedRandom[s] resets the pseudorandom generator, using s as a seed. SeedRandom[] resets the generato"},{label:"Select",type:"keyword",info:"Select[list, crit] picks out all elements e  of list for which crit[e ] is True. Select[list, crit, "},{label:"Selectable",type:"keyword",info:"Selectable is an option for displayed objects, cells, and notebooks that specifies whether their con"},{label:"SelectComponents",type:"keyword",info:"SelectComponents[{image, lmat}, crit] selects components of image indicated by the label matrix lmat"},{label:"SelectedCells",type:"keyword",info:"SelectedCells[notebook] returns a list of CellObject expressions corresponding to the currently sele"},{label:"SelectedNotebook",type:"keyword",info:"SelectedNotebook[] gives the currently selected notebook in the front end. "},{label:"SelectFirst",type:"keyword",info:'SelectFirst[{e , e , \xe2\x80\xa6}, crit] gives the first e  for which crit[e ] is True, or Missing["NotFound"]'},{label:"Selection",type:"keyword",info:"System`Selection"},{label:"SelectionAnimate",type:"keyword",info:"SelectionAnimate[notebook] animates graphics in the current selection in a notebook. SelectionAnimat"},{label:"SelectionCell",type:"keyword",info:"System`SelectionCell"},{label:"SelectionCellCreateCell",type:"keyword",info:"System`SelectionCellCreateCell"},{label:"SelectionCellDefaultStyle",type:"keyword",info:"System`SelectionCellDefaultStyle"},{label:"SelectionCellParentStyle",type:"keyword",info:"System`SelectionCellParentStyle"},{label:"SelectionCreateCell",type:"keyword",info:"SelectionCreateCell[notebook] copies the contents of the current selection in a notebook into a new "},{label:"SelectionDebuggerTag",type:"keyword",info:"System`SelectionDebuggerTag"},{label:"SelectionDuplicateCell",type:"keyword",info:"System`SelectionDuplicateCell"},{label:"SelectionEvaluate",type:"keyword",info:"SelectionEvaluate[notebook] replaces the current selection in a notebook with the result obtained by"},{label:"SelectionEvaluateCreateCell",type:"keyword",info:"SelectionEvaluateCreateCell[notebook] takes the current selection in a notebook and creates a new ce"},{label:"SelectionMove",type:"keyword",info:"SelectionMove[obj, dir, unit] moves the current selection in an open notebook in the front end in th"},{label:"SelectionPlaceholder",type:"keyword",info:"System`SelectionPlaceholder"},{label:"SelectionSetStyle",type:"keyword",info:"System`SelectionSetStyle"},{label:"SelectWithContents",type:"keyword",info:"System`SelectWithContents"},{label:"SelfLoops",type:"keyword",info:"System`SelfLoops"},{label:"SelfLoopStyle",type:"keyword",info:"SelfLoopStyle is an option for GraphPlot and related functions that specifies how to draw self-loops"},{label:"SemanticImport",type:"keyword",info:"SemanticImport[file] attempts to import a file semantically to give a Dataset object.SemanticImport["},{label:"SemanticImportString",type:"keyword",info:'SemanticImportString["string"] attempts to import a string semantically to give a Dataset object.Sem'},{label:"SemanticInterpretation",type:"keyword",info:'SemanticInterpretation["string"] attempts to give the best semantic interpretation of the specified '},{label:"SemialgebraicComponentInstances",type:"keyword",info:"SemialgebraicComponentInstances[ineqs, {x , x , \xe2\x80\xa6}] gives at least one sample point in each connecte"},{label:"SemidefiniteOptimization",type:"keyword",info:"                                                                                                    "},{label:"SendMail",type:"keyword",info:'SendMail[body] sends mail consisting of body to the address specified by ECCloudUserID.SendMail[{"sub'},{label:"SendMessage",type:"keyword",info:"SendMessage[channel, message] sends a message to the specified channel.SendMessage[channel \xef\x94\xa2 dest, m"},{label:"Sequence",type:"keyword",info:"Sequence[expr , expr , \xe2\x80\xa6] represents a sequence of arguments to be spliced automatically into any fu"},{label:"SequenceAlignment",type:"keyword",info:"SequenceAlignment[s , s ] finds an optimal alignment of sequences of elements in the strings or list"},{label:"SequenceAttentionLayer",type:"keyword",info:'SequenceAttentionLayer[] is equivalent to AttentionLayer[] with a single "Input" port instead of por'},{label:"SequenceCases",type:"keyword",info:"SequenceCases[list, patt] gives a list of the sublists in list that match the sequence pattern patt."},{label:"SequenceCount",type:"keyword",info:"SequenceCount[list, sub] gives a count of the number of times sub appears as a sublist of list.Seque"},{label:"SequenceFold",type:"keyword",info:"SequenceFold[f, {x , \xe2\x80\xa6, x }, {a , a , \xe2\x80\xa6}] gives the last element of SequenceFoldList[f, {x , \xe2\x80\xa6, x },"},{label:"SequenceFoldList",type:"keyword",info:"SequenceFoldList[f, {x , \xe2\x80\xa6, x }, {a , a , \xe2\x80\xa6}] gives {x , \xe2\x80\xa6, x , f[x , \xe2\x80\xa6, x , a ], f[x , \xe2\x80\xa6, x , f[x ,"},{label:"SequenceForm",type:"keyword",info:"SequenceForm[expr , expr , \xe2\x80\xa6] prints as the textual concatenation of the printed forms of the expr ."},{label:"SequenceHold",type:"keyword",info:"SequenceHold is an attribute that specifies that Sequence objects appearing in the arguments of a fu"},{label:"SequenceIndicesLayer",type:"keyword",info:"SequenceIndicesLayer[] represents a net layer that produces a list of indices for an input sequence."},{label:"SequenceLastLayer",type:"keyword",info:"SequenceLastLayer[] represents a net that takes a sequence of inputs and returns the last element of"},{label:"SequenceMostLayer",type:"keyword",info:"SequenceMostLayer[] represents a net that takes a sequence of inputs and removes its last element."},{label:"SequencePosition",type:"keyword",info:"SequencePosition[list, sublist] gives a list of the starting and ending positions at which sublist a"},{label:"SequencePredict",type:"keyword",info:"SequencePredict[{seq , seq , \xe2\x80\xa6}] generates a SequencePredictorFunction[\xe2\x80\xa6] based on the sequences giv"},{label:"SequencePredictorFunction",type:"keyword",info:"SequencePredictorFunction[\xe2\x80\xa6] represents a function generated by SequencePredict that predicts the ne"},{label:"SequenceReplace",type:"keyword",info:"SequenceReplace[list, rules] replaces sequences in list according to the specified rule or list of r"},{label:"SequenceRestLayer",type:"keyword",info:"SequenceRestLayer[] represents a net that takes a sequence of inputs and removes its first element."},{label:"SequenceReverseLayer",type:"keyword",info:"SequenceReverseLayer[] represents a net that reverses the order of an input sequence."},{label:"SequenceSplit",type:"keyword",info:"SequenceSplit[list, patt] splits list into sublists separated by sequences that match the sequence p"},{label:"Series",type:"keyword",info:"                                                                                                    "},{label:"SeriesCoefficient",type:"keyword",info:"                                                             th                                     "},{label:"SeriesData",type:"keyword",info:"SeriesData[x, x , {a , a , \xe2\x80\xa6}, n   , n   , den] represents a power series in the variable x about th"},{label:"SeriesTermGoal",type:"keyword",info:"SeriesTermGoal is an option for Asymptotic, DiscreteAsymptotic and similar functions that specifies "},{label:"ServiceConnect",type:"keyword",info:'ServiceConnect["service"] creates a connection to an external service.ServiceConnect["service", id] '},{label:"ServiceDisconnect",type:"keyword",info:"ServiceDisconnect[service] disconnects from an external service specified by a ServiceObject."},{label:"ServiceExecute",type:"keyword",info:'ServiceExecute[service, "req"] executes "req" on an external service.ServiceExecute[service, "req", '},{label:"ServiceObject",type:"keyword",info:'ServiceObject["service", \xe2\x80\xa6] represents an open connection to an external service.'},{label:"ServiceRequest",type:"keyword",info:'ServiceRequest[service, "req"] represents a service request built from service, which might be a con'},{label:"ServiceResponse",type:"keyword",info:"System`ServiceResponse"},{label:"ServiceSubmit",type:"keyword",info:"ServiceSubmit[ServiceRequest[assoc]] submits a request to be executed by an external service specifi"},{label:"SessionSubmit",type:"keyword",info:"SessionSubmit[expr] submits an asynchronous task to evaluate expr in the current session.SessionSubm"},{label:"SessionTime",type:"keyword",info:"SessionTime[] gives the total number of seconds of real time that have elapsed since the beginning o"},{label:"Set",type:"keyword",info:"lhs = rhs evaluates rhs and assigns the result to be the value of lhs. From then on, lhs is replaced"},{label:"SetAccuracy",type:"keyword",info:"SetAccuracy[expr, a] yields a version of expr in which all numbers have been set to have accuracy a."},{label:"SetAlphaChannel",type:"keyword",info:"SetAlphaChannel[color] adds full opacity to color.SetAlphaChannel[color, a] adds opacity a to color."},{label:"SetAttributes",type:"keyword",info:"SetAttributes[symbol, attr] adds attr to the list of attributes of the symbol symbol. SetAttributes["},{label:"Setbacks",type:"keyword",info:"System`Setbacks"},{label:"SetBoxFormNamesPacket",type:"keyword",info:"System`SetBoxFormNamesPacket"},{label:"SetCloudDirectory",type:"keyword",info:"SetCloudDirectory[dir] sets the current working directory used for cloud objects to dir.SetCloudDire"},{label:"SetCookies",type:"keyword",info:"SetCookies[assoc] sets cookies with attributes specified by the association assoc, to be used by fun"},{label:"SetDelayed",type:"keyword",info:"lhs := rhs assigns rhs to be the delayed value of lhs. rhs is maintained in an unevaluated form. Whe"},{label:"SetDirectory",type:"keyword",info:'SetDirectory["dir"] sets the current working directory to dir. SetDirectory[] sets the current worki'},{label:"SetEnvironment",type:"keyword",info:'SetEnvironment["var" \xef\x94\xa2 value] sets the value of an operating system environment variable.SetEnvironm'},{label:"SetEvaluationNotebook",type:"keyword",info:"System`SetEvaluationNotebook"},{label:"SetFileDate",type:"keyword",info:'SetFileDate["file"] sets the modification and access dates for a file to be the current date. '},{label:"SetFileFormatProperties",type:"keyword",info:'SetFileFormatProperties["fmt", "prop" \xef\x94\xa2 val] sets the value of a property "prop" for the specified f'},{label:"SetFileLoadingContext",type:"keyword",info:"System`SetFileLoadingContext"},{label:"SetNotebookStatusLine",type:"keyword",info:"System`SetNotebookStatusLine"},{label:"SetOptions",type:"keyword",info:"SetOptions[s, name  \xef\x94\xa2 value , name  \xef\x94\xa2 value , \xe2\x80\xa6] sets the specified default options for a symbol s. "},{label:"SetOptionsPacket",type:"keyword",info:"System`SetOptionsPacket"},{label:"SetPermissions",type:"keyword",info:'SetPermissions[obj, "pstring"] sets permissions for the cloud object obj to be as specified by the s'},{label:"SetPrecision",type:"keyword",info:"SetPrecision[expr, p] yields a version of expr in which all numbers have been set to have precision "},{label:"SetProperty",type:"keyword",info:"SetProperty[{obj, itemspec}, name \xef\x94\xa2 value] sets the property name \xef\x94\xa2 value for itemspec in obj."},{label:"SetSecuredAuthenticationKey",type:"keyword",info:"System`SetSecuredAuthenticationKey"},{label:"SetSelectedNotebook",type:"keyword",info:"SetSelectedNotebook[obj] makes the notebook corresponding to obj be the currently selected one in th"},{label:"SetSharedFunction",type:"keyword",info:"SetSharedFunction[f , f , \xe2\x80\xa6] declares the symbols f  as shared functions whose downvalues are synchr"},{label:"SetSharedVariable",type:"keyword",info:"SetSharedVariable[s , s , \xe2\x80\xa6] declares the symbols s  as shared variables whose values are synchroniz"},{label:"SetSpeechParametersPacket",type:"keyword",info:"System`SetSpeechParametersPacket"},{label:"SetStreamPosition",type:"keyword",info:"SetStreamPosition[stream, n] sets the current point in an open stream. "},{label:"SetSystemModel",type:"keyword",info:"SetSystemModel[model, spec] changes model parameters, initializations or other properties in place."},{label:"SetSystemOptions",type:"keyword",info:'SetSystemOptions["name" \xef\x94\xa2 value] resets the value for the internal system option with the specified '},{label:"Setter",type:"keyword",info:"Setter[x, val] represents a setter button whose setting x is set to val when the button is clicked. "},{label:"SetterBar",type:"keyword",info:"SetterBar[x, {val , val , \xe2\x80\xa6}] represents a setter bar with setting x and with setter buttons for val"},{label:"SetterBox",type:"keyword",info:"System`SetterBox"},{label:"SetterBoxOptions",type:"keyword",info:"SetterBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for SetterBox "},{label:"Setting",type:"keyword",info:"Setting[expr] replaces forms and control objects such as sliders or popup menus in expr by their set"},{label:"SetUsers",type:"keyword",info:"SetUsers[group, {user , \xe2\x80\xa6}] sets the members of the permissions group group to be {user , \xe2\x80\xa6}.\n      "},{label:"SetValue",type:"keyword",info:"System`SetValue"},{label:"Shading",type:"keyword",info:"Shading is an option for SurfaceGraphics that specifies whether the surfaces should be shaded. "},{label:"Shallow",type:"keyword",info:"Shallow[expr] prints as a shallow form of expr. Shallow[expr, depth] prints with all parts of expr b"},{label:"ShannonWavelet",type:"keyword",info:"ShannonWavelet[] represents the Shannon wavelet evaluated on the equally spaced interval {-10, 10}. "},{label:"ShapiroWilkTest",type:"keyword",info:"ShapiroWilkTest[data] tests whether data is normally distributed using the Shapiro\xe2\x80\x93Wilk test.Shapiro"},{label:"Share",type:"keyword",info:"Share[expr] changes the way expr is stored internally, to try and minimize the amount of memory used"},{label:"SharingList",type:"keyword",info:"SharingList is an option for CloudObject and related constructs that specifies with whom the object "},{label:"Sharpen",type:"keyword",info:"Sharpen[image] gives a sharpened version of image.Sharpen[image, r] gives a version of image sharpen"},{label:"ShearingMatrix",type:"keyword",info:"ShearingMatrix[\xce\xb8, v, n] gives the matrix corresponding to shearing by \xce\xb8 radians along the direction "},{label:"ShearingTransform",type:"keyword",info:"ShearingTransform[\xce\xb8, v, n] gives a TransformationFunction that represents a shear by \xce\xb8 radians along"},{label:"ShellRegion",type:"keyword",info:"ShellRegion[reg] gives a solid shell of a 3D region reg.ShellRegion[reg, t] gives a solid shell of r"},{label:"ShenCastanMatrix",type:"keyword",info:"                                                                                                    "},{label:"ShiftedGompertzDistribution",type:"keyword",info:"ShiftedGompertzDistribution[\xce\xbb, \xce\xbe] represents a shifted Gompertz distribution with scale parameter \xce\xbb "},{label:"ShiftRegisterSequence",type:"keyword",info:"ShiftRegisterSequence[n] gives a complete maximum-length sequence for a size n linear-feedback shift"},{label:"Short",type:"keyword",info:"Short[expr] prints as a short form of expr, less than about one line long. Short[expr, n] prints as "},{label:"ShortDownArrow",type:"keyword",info:"ShortDownArrow[x, y, \xe2\x80\xa6] displays as x \xef\x94\xab y \xef\x94\xab \xe2\x80\xa6."},{label:"Shortest",type:"keyword",info:"Shortest[p] is a pattern object that matches the shortest sequence consistent with the pattern p. "},{label:"ShortestMatch",type:"keyword",info:"ShortestMatch[p] is a string pattern object matching the shortest sequence of characters consistent "},{label:"ShortestPathFunction",type:"keyword",info:"ShortestPathFunction[type, data] represents a function that gives the shortest path from a source ve"},{label:"ShortLeftArrow",type:"keyword",info:"ShortLeftArrow[x, y, \xe2\x80\xa6] displays as x \xef\x94\xa6 y \xef\x94\xa6 \xe2\x80\xa6."},{label:"ShortRightArrow",type:"keyword",info:"ShortRightArrow[x, y, \xe2\x80\xa6] displays as x \xef\x94\xa5 y \xef\x94\xa5 \xe2\x80\xa6."},{label:"ShortTimeFourier",type:"keyword",info:"ShortTimeFourier[data] returns the short-time Fourier transform (STFT) of data as a ShortTimeFourier"},{label:"ShortTimeFourierData",type:"keyword",info:"ShortTimeFourierData[assoc] represents the result and properties of a short-time Fourier transform ("},{label:"ShortUpArrow",type:"keyword",info:"ShortUpArrow[x, y, \xe2\x80\xa6] displays as x \xef\x94\xaa y \xef\x94\xaa \xe2\x80\xa6."},{label:"Show",type:"keyword",info:"Show[graphics, options] shows graphics with the specified options added. Show[g , g , \xe2\x80\xa6] shows sever"},{label:"ShowAutoConvert",type:"keyword",info:"System`ShowAutoConvert"},{label:"ShowAutoSpellCheck",type:"keyword",info:"ShowAutoSpellCheck is an option for Cell that specifies whether to highlight misspelled words."},{label:"ShowAutoStyles",type:"keyword",info:"ShowAutoStyles is an option for Cell that specifies whether styles that are specified to be automati"},{label:"ShowCellBracket",type:"keyword",info:"ShowCellBracket is an option for Cell that specifies whether to display the bracket that indicates t"},{label:"ShowCellLabel",type:"keyword",info:"ShowCellLabel is an option for Cell that specifies whether to display the label for a cell. "},{label:"ShowCellTags",type:"keyword",info:"ShowCellTags is an option for Cell that specifies whether to display tags for a cell. "},{label:"ShowClosedCellArea",type:"keyword",info:"ShowClosedCellArea is an option for cells that specifies whether a rectangular bar is displayed next"},{label:"ShowCodeAssist",type:"keyword",info:"System`ShowCodeAssist"},{label:"ShowContents",type:"keyword",info:"ShowContents is an option for selections that specifies whether an object represented by a StyleBox "},{label:"ShowControls",type:"keyword",info:"System`ShowControls"},{label:"ShowCursorTracker",type:"keyword",info:"ShowCursorTracker is an option for Cell that specifies whether an elliptical spot should appear mome"},{label:"ShowGroupOpenCloseIcon",type:"keyword",info:"ShowGroupOpenCloseIcon is an option for cells that specifies whether a triangular icon is displayed "},{label:"ShowGroupOpener",type:"keyword",info:"ShowGroupOpener is an option for cells that specifies whether an opener icon is displayed next to th"},{label:"ShowInvisibleCharacters",type:"keyword",info:"System`ShowInvisibleCharacters"},{label:"ShowPageBreaks",type:"keyword",info:"ShowPageBreaks is a notebook option that specifies whether to indicate in the on\xe2\x80\x90screen display of a"},{label:"ShowPredictiveInterface",type:"keyword",info:"System`ShowPredictiveInterface"},{label:"ShowSelection",type:"keyword",info:"ShowSelection is an option to Notebook, Cell, and Style that specifies whether to show the current s"},{label:"ShowShortBoxForm",type:"keyword",info:"ShowShortBoxForm is an option for cells that specifies whether box expressions, which are used to re"},{label:"ShowSpecialCharacters",type:"keyword",info:"ShowSpecialCharacters is an option for Style and Cell that specifies whether to replace \\[Name], \\:n"},{label:"ShowStringCharacters",type:"keyword",info:'ShowStringCharacters is an option for Cell that specifies whether to display " when a string is ente'},{label:"ShowSyntaxStyles",type:"keyword",info:"System`ShowSyntaxStyles"},{label:"ShrinkingDelay",type:"keyword",info:"ShrinkingDelay is an option for dynamic objects that specifies how long to delay before shrinking th"},{label:"ShrinkWrapBoundingBox",type:"keyword",info:"System`ShrinkWrapBoundingBox"},{label:"SiderealTime",type:"keyword",info:"SiderealTime[] gives the right ascension of the local meridian for the current date and location.Sid"},{label:"SiegelTheta",type:"keyword",info:"SiegelTheta[\xce\xa9, s] gives the Siegel theta function \xce\x98 (\xce\xa9, s) with Riemann modular matrix \xce\xa9 and vector "},{label:"SiegelTukeyTest",type:"keyword",info:"                                                                                                    "},{label:"SierpinskiCurve",type:"keyword",info:"                                                              th\nSierpinskiCurve[n] gives the line s"},{label:"SierpinskiMesh",type:"keyword",info:"                                                         th                                         "},{label:"Sign",type:"keyword",info:"Sign[x] gives -1, 0, or 1 depending on whether x is negative, zero, or positive. "},{label:"Signature",type:"keyword",info:"Signature[list] gives the signature of the permutation needed to place the elements of list in canon"},{label:"SignedRankTest",type:"keyword",info:"SignedRankTest[data] tests whether the median of data is zero. SignedRankTest[{data , data }] tests "},{label:"SignedRegionDistance",type:"keyword",info:"SignedRegionDistance[reg, p] gives the minimum distance from the point p to the region reg if p is o"},{label:"SignificanceLevel",type:"keyword",info:"SignificanceLevel is an option to VarianceTest and similar functions that controls cutoffs for diagn"},{label:"SignPadding",type:"keyword",info:"SignPadding is an option for NumberForm and related functions that specifies whether padding should "},{label:"SignTest",type:"keyword",info:"SignTest[data] tests whether the median of data is zero. SignTest[{data , data }] tests whether the "},{label:"SimilarityRules",type:"keyword",info:"SimilarityRules is an option for functions such as SequenceAlignment that gives a list of rules for "},{label:"SimpleGraph",type:"keyword",info:"SimpleGraph[g] gives the underlying simple graph from the graph g.SimpleGraph[{v \xef\x94\xa2 w, \xe2\x80\xa6}] uses rules"},{label:"SimpleGraphQ",type:"keyword",info:"SimpleGraphQ[g] yields True if the graph g is a simple graph and False otherwise."},{label:"SimplePolygonQ",type:"keyword",info:"SimplePolygonQ[poly] gives True if the polygon poly is simple and False otherwise."},{label:"SimplePolyhedronQ",type:"keyword",info:"SimplePolyhedronQ[poly] gives True if the polyhedron poly is simple and False otherwise."},{label:"Simplex",type:"keyword",info:"Simplex[{p , \xe2\x80\xa6, p }] represents the simplex spanned by points p .\n          1      k                "},{label:"Simplify",type:"keyword",info:"Simplify[expr] performs a sequence of algebraic and other transformations on expr and returns the si"},{label:"Sin",type:"keyword",info:"Sin[z] gives the sine of z. "},{label:"Sinc",type:"keyword",info:"Sinc[z] gives sinc(z). "},{label:"SinghMaddalaDistribution",type:"keyword",info:"SinghMaddalaDistribution[q, a, b] represents the Singh\xe2\x80\x93Maddala distribution with shape parameters q "},{label:"SingleEvaluation",type:"keyword",info:"System`SingleEvaluation"},{label:"SingleLetterItalics",type:"keyword",info:"SingleLetterItalics is an option for Cell that specifies whether single\xe2\x80\x90letter names should be displ"},{label:"SingleLetterStyle",type:"keyword",info:"System`SingleLetterStyle"},{label:"SingularValueDecomposition",type:"keyword",info:"SingularValueDecomposition[m] gives the singular value decomposition for a numerical matrix m as a l"},{label:"SingularValueList",type:"keyword",info:"SingularValueList[m] gives a list of the nonzero singular values of a matrix m. SingularValueList[{m"},{label:"SingularValuePlot",type:"keyword",info:"SingularValuePlot[lsys] generates a plot of the singular values of the transfer function for the sys"},{label:"SingularValues",type:"keyword",info:"SingularValues[m] gives the singular value decomposition for a numerical matrix m. The result is a l"},{label:"Sinh",type:"keyword",info:"Sinh[z] gives the hyperbolic sine of z. "},{label:"SinhIntegral",type:"keyword",info:"SinhIntegral[z] gives the hyperbolic sine integral function Shi(z). "},{label:"SinIntegral",type:"keyword",info:"SinIntegral[z] gives the sine integral function Si (z). "},{label:"SixJSymbol",type:"keyword",info:"SixJSymbol[{j , j , j }, {j , j , j }] gives the values of the Racah 6\xe2\x80\x90j symbol. \n             1   2"},{label:"Skeleton",type:"keyword",info:"Skeleton[n] represents a sequence of n omitted elements in an expression printed with Short or Shall"},{label:"SkeletonTransform",type:"keyword",info:"SkeletonTransform[image] gives the skeleton transform of image, in which the value of each skeleton "},{label:"SkellamDistribution",type:"keyword",info:"SkellamDistribution[\xce\xbc , \xce\xbc ] represents a Skellam distribution with shape parameters \xce\xbc  and \xce\xbc .\n     "},{label:"Skewness",type:"keyword",info:"Skewness[list] gives the coefficient of skewness for the elements in list.Skewness[dist] gives the c"},{label:"SkewNormalDistribution",type:"keyword",info:"SkewNormalDistribution[\xce\xbc, \xcf\x83, \xce\\[PlusMinus]] represents a skew-normal distribution with shape parameter \xce\\[PlusMinus], locati"},{label:"SkinStyle",type:"keyword",info:"SkinStyle is an option of AnatomyPlot3D that specifies what style to use for automatically included "},{label:"Skip",type:"keyword",info:"Skip[stream, type] skips one object of the specified type in an input stream. Skip[stream, type, n] "},{label:"SliceContourPlot3D",type:"keyword",info:"SliceContourPlot3D[f, surf, {x, x   , x   }, {y, y   , y   }, {z, z   , z   }] generates a contour p"},{label:"SliceDensityPlot3D",type:"keyword",info:"SliceDensityPlot3D[f, surf, {x, x   , x   }, {y, y   , y   }, {z, z   , z   }] generates a density p"},{label:"SliceDistribution",type:"keyword",info:"SliceDistribution[proc, t] represents the distribution of the process state at time t.SliceDistribut"},{label:"SliceVectorPlot3D",type:"keyword",info:"SliceVectorPlot3D[{v , v , v }, surf, {x, x   , x   }, {y, y   , y   }, {z, z   , z   }] generates a"},{label:"Slider",type:"keyword",info:"Slider[x] represents a slider with setting x in the range 0 to 1. Slider[Dynamic[x]] takes the setti"},{label:"Slider2D",type:"keyword",info:"Slider2D[{x, y}] represents a 2D slider with settings x and y in the range 0 to 1. Slider2D[Dynamic["},{label:"Slider2DBox",type:"keyword",info:"System`Slider2DBox"},{label:"Slider2DBoxOptions",type:"keyword",info:"Slider2DBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Slider2D"},{label:"SliderBox",type:"keyword",info:"System`SliderBox"},{label:"SliderBoxOptions",type:"keyword",info:"SliderBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for SliderBox "},{label:"SlideShowVideo",type:"keyword",info:"SlideShowVideo[{image , image , \xe2\x80\xa6}] generates a video iterating through all image .SlideShowVideo[{i"},{label:"SlideView",type:"keyword",info:"                                                                                                    "},{label:"Slot",type:"keyword",info:"                                                                                  th\n# represents th"},{label:"SlotSequence",type:"keyword",info:"                                                                                                    "},{label:"Small",type:"keyword",info:"Small is a style or option setting that specifies that objects should be small."},{label:"SmallCircle",type:"keyword",info:"SmallCircle[x, y, \xe2\x80\xa6] displays as x \xe2\x88\x98 y \xe2\x88\x98 \xe2\x80\xa6."},{label:"Smaller",type:"keyword",info:"Smaller is a style or option setting that specifies that objects should be smaller."},{label:"SmithDecomposition",type:"keyword",info:"SmithDecomposition[m] gives the Smith normal form decomposition of an integer matrix m."},{label:"SmithDelayCompensator",type:"keyword",info:"SmithDelayCompensator[sys, con] gives the Smith compensator for the time-delay system sys and the de"},{label:"SmithWatermanSimilarity",type:"keyword",info:"SmithWatermanSimilarity[u, v] gives a number representing the Smith\xe2\x80\x93Waterman similarity between stri"},{label:"SmoothDensityHistogram",type:"keyword",info:"SmoothDensityHistogram[{{x , y }, {x , y }, \xe2\x80\xa6}] plots a smooth kernel histogram of the values {x , y"},{label:"SmoothHistogram",type:"keyword",info:"SmoothHistogram[{x , x , \xe2\x80\xa6}] plots a smooth kernel histogram for the PDF of the values x .SmoothHist"},{label:"SmoothHistogram3D",type:"keyword",info:"SmoothHistogram3D[{{x , y }, {x , y }, \xe2\x80\xa6}] plots a 3D smooth kernel histogram of the values {x , y }"},{label:"SmoothKernelDistribution",type:"keyword",info:"SmoothKernelDistribution[{x , x , \xe2\x80\xa6}] represents a smooth kernel distribution based on the data valu"},{label:"SmoothPointDensity",type:"keyword",info:"SmoothPointDensity[pdata] estimates the point density function \xce\xbc(x) for point data pdata.SmoothPoint"},{label:"SnDispersion",type:"keyword",info:"SnDispersion[list] gives the S  statistic of the elements in list.SnDispersion[list, c] gives the S "},{label:"Snippet",type:"keyword",info:"Snippet[doc] gives a snippet of text from a document or other content object.Snippet[doc, n] gives a"},{label:"SnippetsVideo",type:"keyword",info:"SnippetsVideo[video, n] returns a summary video based on n snippets from video.SnippetsVideo[video, "},{label:"SnubPolyhedron",type:"keyword",info:"SnubPolyhedron[poly] gives the snub polyhedron of poly by truncating some corners."},{label:"SocialMediaData",type:"keyword",info:'SocialMediaData["name"] gives information about the social media entity "name".SocialMediaData["name'},{label:"Socket",type:"keyword",info:"Socket is a possible value returned by FileType and related functions."},{label:"SocketConnect",type:"keyword",info:"SocketConnect[address] makes a socket connection to the TCP host at the specified address and return"},{label:"SocketListen",type:"keyword",info:"SocketListen[socket, fun] starts listening on the specified socket, asynchronously applying fun when"},{label:"SocketListener",type:"keyword",info:"SocketListener[\xe2\x80\xa6] represents a socket listener created by SocketListen."},{label:"SocketObject",type:"keyword",info:"SocketObject[\xe2\x80\xa6] represents a network socket connection."},{label:"SocketOpen",type:"keyword",info:"SocketOpen[port] opens a socket that accepts TCP connections to localhost:port and returns a SocketO"},{label:"SocketReadMessage",type:"keyword",info:"SocketReadMessage[socket] reads the next available message on the specified socket, returning it as "},{label:"SocketReadyQ",type:"keyword",info:"SocketReadyQ[socket] tests if there is any data immediately available to read from the specified soc"},{label:"Sockets",type:"keyword",info:"Sockets[] returns all active socket connections initiated by your current Wolfram Language session.S"},{label:"SocketWaitAll",type:"keyword",info:"SocketWaitAll[{socket , socket , \xe2\x80\xa6}] waits until there is data ready to read on all of the socket .\n"},{label:"SocketWaitNext",type:"keyword",info:"SocketWaitNext[{socket , socket , \xe2\x80\xa6}] waits until there is data ready to read on any of the socket ,"},{label:"SoftmaxLayer",type:"keyword",info:"SoftmaxLayer[] represents a softmax net layer.SoftmaxLayer[n] represents a softmax net layer that us"},{label:"SokalSneathDissimilarity",type:"keyword",info:"SokalSneathDissimilarity[u, v] gives the Sokal\xe2\x80\x93Sneath dissimilarity between Boolean vectors u and v."},{label:"SolarEclipse",type:"keyword",info:"SolarEclipse[] gives the time of the next solar eclipse.SolarEclipse[datespec] gives the time for th"},{label:"SolarSystemFeatureData",type:"keyword",info:"SolarSystemFeatureData[entity, property] gives the value of the specified property for the solar sys"},{label:"SolarTime",type:"keyword",info:"SolarTime[] gives the angle on the celestial equator between the Sun and the local antimeridian for "},{label:"SolidAngle",type:"keyword",info:"SolidAngle[p, {u , \xe2\x80\xa6, u }] gives the solid angle at the point p and spanned by the vectors u , \xe2\x80\xa6, u "},{label:"SolidBoundaryLoadValue",type:"keyword",info:"SolidBoundaryLoadValue[pred, vars, pars] represents a boundary load condition for PDEs with predicat"},{label:"SolidData",type:"keyword",info:"SolidData[entity, property] gives the value of the specified property for the solid entity.SolidData"},{label:"SolidDisplacementCondition",type:"keyword",info:"SolidDisplacementCondition[pred, vars, pars] represents a prescribed displacement on a solid boundar"},{label:"SolidFixedCondition",type:"keyword",info:"SolidFixedCondition[pred, vars, pars] represents a fully constrained solid boundary for PDEs with pr"},{label:"SolidMechanicsPDEComponent",type:"keyword",info:"SolidMechanicsPDEComponent[vars, pars] yields solid mechanics PDE terms with variables vars and para"},{label:"SolidMechanicsStrain",type:"keyword",info:"SolidMechanicsStrain[vars, pars, displ] yields solid mechanics strain with variables vars, parameter"},{label:"SolidMechanicsStress",type:"keyword",info:"SolidMechanicsStress[vars, pars, strain] yields solid mechanics stress with variables vars, paramete"},{label:"SolidRegionQ",type:"keyword",info:"SolidRegionQ[reg] gives True if the 3D region reg is a solid region and False otherwise."},{label:"Solve",type:"keyword",info:"Solve[expr, vars] attempts to solve the system expr of equations or inequalities for the variables v"},{label:"SolveAlways",type:"keyword",info:"SolveAlways[eqns, vars] gives the values of parameters that make the equations eqns valid for all va"},{label:"SolveDelayed",type:"keyword",info:"SolveDelayed is an option to NDSolve. SolveDelayed -> False causes the derivatives to be solved for "},{label:"SolveValues",type:"keyword",info:"SolveValues[expr, vars] gives the values of vars determined by the solutions of the system expr.Solv"},{label:"Sort",type:"keyword",info:"Sort[list] sorts the elements of list into canonical order. Sort[list, p] sorts using the ordering f"},{label:"SortBy",type:"keyword",info:"SortBy[list, f] sorts the elements of list in the order defined by applying f to each of them. SortB"},{label:"SortedBy",type:"keyword",info:"SortedBy is an option that specifies a function by which to sort the results of a computation."},{label:"SortedEntityClass",type:"keyword",info:"SortedEntityClass[class, prop] represents an entity class derived from class by sorting according to"},{label:"Sound",type:"keyword",info:"Sound[primitives] represents a sound. Sound[primitives, t] specifies that the sound should have dura"},{label:"SoundAndGraphics",type:"keyword",info:"System`SoundAndGraphics"},{label:"SoundNote",type:"keyword",info:"SoundNote[pitch] represents a music-like sound note with the specified pitch.SoundNote[pitch, t] tak"},{label:"SoundVolume",type:"keyword",info:"SoundVolume is an option to Sound and SoundNote and related functions that specifies the relative vo"},{label:"SourceLink",type:"keyword",info:"SourceLink is an option for CloudObject and related cloud functions that specifies the source of the"},{label:"SourcePDETerm",type:"keyword",info:"SourcePDETerm[vars, f] represents a source term f with source coefficient f and model variables vars"},{label:"Sow",type:"keyword",info:"Sow[e] specifies that e should be collected by the nearest enclosing Reap. Sow[e, tag] specifies tha"},{label:"Space",type:"keyword",info:"System`Space"},{label:"SpaceCurveData",type:"keyword",info:"SpaceCurveData[entity, property] gives the value of the specified property for the space curve entit"},{label:"SpaceForm",type:"keyword",info:"SpaceForm[n] prints as n spaces."},{label:"Spacer",type:"keyword",info:"Spacer[w] displays as a spacer w printer's points wide.Spacer[{w, h}] displays as a spacer w points "},{label:"Spacings",type:"keyword",info:"Spacings is an option to Grid and related constructs that specifies the spacings to leave between su"},{label:"Span",type:"keyword",info:"i;;j represents a span of elements i through j.i;; represents a span from i to the end.;;j represent"},{label:"SpanAdjustments",type:"keyword",info:"SpanAdjustments is an option for selections that specifies the height and width of spanning characte"},{label:"SpanCharacterRounding",type:"keyword",info:"SpanCharacterRounding is an option for selections that specifies the method used for rounding a span"},{label:"SpanFromAbove",type:"keyword",info:"SpanFromAbove is a symbol that can appear at a particular position in a Grid or related construct to"},{label:"SpanFromBoth",type:"keyword",info:"SpanFromBoth is a symbol that can appear at a particular position in a Grid or related construct to "},{label:"SpanFromLeft",type:"keyword",info:"SpanFromLeft is a symbol that can appear at a particular position in a Grid or related construct to "},{label:"SpanLineThickness",type:"keyword",info:"SpanLineThickness is an option for selections that specifies the thickness in printer's points of li"},{label:"SpanMaxSize",type:"keyword",info:"SpanMaxSize is an option for selections that specifies the maximum size of spanning characters such "},{label:"SpanMinSize",type:"keyword",info:"SpanMinSize is an option for selections that specifies the minimum size of spanning characters such "},{label:"SpanningCharacters",type:"keyword",info:"System`SpanningCharacters"},{label:"SpanSymmetric",type:"keyword",info:"SpanSymmetric is an option for selections that specifies whether vertically expandable characters ar"},{label:"SparseArray",type:"keyword",info:"SparseArray[{pos  \xef\x94\xa2 v , pos  \xef\x94\xa2 v , \xe2\x80\xa6}] yields a sparse array with all elements zero except for value"},{label:"SparseArrayQ",type:"keyword",info:"SparseArrayQ[s] yields True if s is a valid SparseArray object and False otherwise."},{label:"SpatialBinnedPointData",type:"keyword",info:"SpatialBinnedPointData[{reg  \xef\x94\xa2 val , reg  \xef\x94\xa2 val , \xe2\x80\xa6}] represents values val  associated with disjoin"},{label:"SpatialBoundaryCorrection",type:"keyword",info:"SpatialBoundaryCorrection is an option to various spatial statistics functions that control how to c"},{label:"SpatialEstimate",type:"keyword",info:"SpatialEstimate[{loc  \xef\x94\xa2 val , loc  \xef\x94\xa2 val , \xe2\x80\xa6}] creates a spatial prediction from values val  given a"},{label:"SpatialEstimatorFunction",type:"keyword",info:"SpatialEstimatorFunction[] represents a function generated by SpatialEstimate and predicts spatial f"},{label:"SpatialGraphDistribution",type:"keyword",info:"SpatialGraphDistribution[n, r] represents a spatial distribution for graphs with n vertices uniforml"},{label:"SpatialJ",type:"keyword",info:"SpatialJ[pdata, r] estimates the J function J(r) for point data pdata at radius r.SpatialJ[pproc, r]"},{label:"SpatialMedian",type:"keyword",info:"SpatialMedian[{x , x , \xe2\x80\xa6}] gives the spatial median of the elements x .SpatialMedian[data] gives the"},{label:"SpatialNoiseLevel",type:"keyword",info:"SpatialNoiseLevel is an option to SpatialEstimate and other spatial functions that gives the noise v"},{label:"SpatialObservationRegionQ",type:"keyword",info:"SpatialObservationRegionQ[reg] tests whether the geometric or geographic region reg can be an observ"},{label:"SpatialPointData",type:"keyword",info:"SpatialPointData[points] represents a collection of spatial locations points.SpatialPointData[points"},{label:"SpatialPointSelect",type:"keyword",info:"SpatialPointSelect[spdata, crit] selects a subset of the SpatialPointData spdata according to crit."},{label:"SpatialRandomnessTest",type:"keyword",info:"SpatialRandomnessTest[pdata] tests whether the point collection pdata is distributed uniformly over "},{label:"SpatialTransformationLayer",type:"keyword",info:"SpatialTransformationLayer[{h, w}] represents a net layer that applies an affine transformation to a"},{label:"SpatialTrendFunction",type:"keyword",info:"SpatialTrendFunction is an option to SpatialEstimate that specifies what global trend model to use f"},{label:"Speak",type:"keyword",info:"Speak[expr] speaks a spoken representation of the expression expr."},{label:"SpeakerMatchQ",type:"keyword",info:"SpeakerMatchQ[audio, ref] gives True if speaker features in audio match the one from reference ref a"},{label:"SpeakTextPacket",type:"keyword",info:"System`SpeakTextPacket"},{label:"SpearmanRankTest",type:"keyword",info:"SpearmanRankTest[v , v ] tests whether the vectors v  and v  are independent.SpearmanRankTest[m , m "},{label:"SpearmanRho",type:"keyword",info:"                                                                                                    "},{label:"SpeciesData",type:"keyword",info:"SpeciesData[name, property] gives the value of the specified property for the species entity.Species"},{label:"SpecificityGoal",type:"keyword",info:"SpecificityGoal is an option for ImageIdentify and related functions that defines what specificity o"},{label:"SpectralLineData",type:"keyword",info:"SpectralLineData[entity] gives the values of all known properties for an atomic state or state trans"},{label:"Spectrogram",type:"keyword",info:"Spectrogram[list] plots the spectrogram of list.Spectrogram[list, n] uses partitions of length n.Spe"},{label:"SpectrogramArray",type:"keyword",info:"SpectrogramArray[list] returns the spectrogram data of list.SpectrogramArray[list, n] uses partition"},{label:"Specularity",type:"keyword",info:"Specularity[s] is a graphics directive which specifies that surfaces of 3D graphics objects which fo"},{label:"SpeechCases",type:"keyword",info:"SpeechCases[audio, form] gives a list of cases of text identified as being of type form that appear "},{label:"SpeechInterpreter",type:"keyword",info:"SpeechInterpreter[form] represents an interpreter object that can be applied to a speech input to tr"},{label:"SpeechRecognize",type:"keyword",info:"SpeechRecognize[audio] recognizes speech in audio and returns it as a string."},{label:"SpeechSynthesize",type:"keyword",info:"SpeechSynthesize[expr] synthesizes the contents of expr as an Audio object. SpeechSynthesize[expr, v"},{label:"SpellingCorrection",type:"keyword",info:"SpellingCorrection is an option for StringMatchQ, Names, and related functions that specifies whethe"},{label:"SpellingCorrectionList",type:"keyword",info:'SpellingCorrectionList["word"] gives a list of possible spelling corrections for "word".'},{label:"SpellingDictionaries",type:"keyword",info:"SpellingDictionaries is a global option that specifies settings for spell checking."},{label:"SpellingDictionariesPath",type:"keyword",info:"SpellingDictionariesPath is a global option that specifies which directories are searched for spelli"},{label:"SpellingOptions",type:"keyword",info:"SpellingOptions is an option for notebooks that specifies settings for spellchecking."},{label:"SpellingSuggestionsPacket",type:"keyword",info:"System`SpellingSuggestionsPacket"},{label:"Sphere",type:"keyword",info:"Sphere[p] represents a unit sphere centered at the point p.Sphere[p, r] represents a sphere of radiu"},{label:"SphereBox",type:"keyword",info:"System`SphereBox"},{label:"SpherePoints",type:"keyword",info:"SpherePoints[n] gives the positions of n uniformly distributed points on the surface of a unit spher"},{label:"SphericalBesselJ",type:"keyword",info:"SphericalBesselJ[n, z] gives the spherical Bessel function of the first kind j (z). \n               "},{label:"SphericalBesselY",type:"keyword",info:"SphericalBesselY[n, z] gives the spherical Bessel function of the second kind y (z). \n              "},{label:"SphericalHankelH1",type:"keyword",info:"                                                                               (1)\nSphericalHankelH1"},{label:"SphericalHankelH2",type:"keyword",info:"                                                                                (2)\nSphericalHankelH"},{label:"SphericalHarmonicY",type:"keyword",info:"                                                             m\nSphericalHarmonicY[l, m, \xce\xb8, \xcf\x95] gives "},{label:"SphericalPlot3D",type:"keyword",info:"SphericalPlot3D[r, \xce\xb8, \xcf\x95] generates a 3D plot with a spherical radius r as a function of spherical co"},{label:"SphericalRegion",type:"keyword",info:"SphericalRegion is an option for three-dimensional graphics functions that specifies whether the fin"},{label:"SphericalShell",type:"keyword",info:"SphericalShell[c, {r     , r     }] represents a filled spherical shell centered at c with inner rad"},{label:"SpheroidalEigenvalue",type:"keyword",info:"SpheroidalEigenvalue[n, m, \xce.b3] gives the spheroidal eigenvalue with degree n and order m."},{label:"SpheroidalJoiningFactor",type:"keyword",info:"SpheroidalJoiningFactor[n, m, \xce.b3] gives the spheroidal joining factor with degree n and order m."},{label:"SpheroidalPS",type:"keyword",info:"SpheroidalPS[n, m, \xce.b3, z] gives the angular spheroidal function PS    (\xce.b3, z) of the first kind.\n     "},{label:"SpheroidalPSPrime",type:"keyword",info:"SpheroidalPSPrime[n, m, \xce.b3, z] gives the derivative with respect to z of the angular spheroidal funct"},{label:"SpheroidalQS",type:"keyword",info:"SpheroidalQS[n, m, \xce.b3, z] gives the angular spheroidal function QS    (\xce.b3, z) of the second kind.\n    "},{label:"SpheroidalQSPrime",type:"keyword",info:"SpheroidalQSPrime[n, m, \xce.b3, z] gives the derivative with respect to z of the angular spheroidal funct"},{label:"SpheroidalRadialFactor",type:"keyword",info:"SpheroidalRadialFactor[n, m, c] gives the spheroidal radial factor with degree n and order m."},{label:"SpheroidalS1",type:"keyword",info:"                                                               (1)\nSpheroidalS1[n, m, \xce.b3, z] gives th"},{label:"SpheroidalS1Prime",type:"keyword",info:"                                                                                                    "},{label:"SpheroidalS2",type:"keyword",info:"                                                               (2)\nSpheroidalS2[n, m, \xce.b3, z] gives th"},{label:"SpheroidalS2Prime",type:"keyword",info:"                                                                                                    "},{label:"Splice",type:"keyword",info:"Splice[{e , e , \xe2\x80\xa6}] represents an expression that will automatically be spliced into any list in whi"},{label:"SplicedDistribution",type:"keyword",info:"SplicedDistribution[{w , w , \xe2\x80\xa6, w }, {c , c , \xe2\x80\xa6, c }, {dist   dist , \xe2\x80\xa6, dist }] represents the distr"},{label:"SplineClosed",type:"keyword",info:"SplineClosed is an option for B-spline functions and graphics primitives that specifies whether spli"},{label:"SplineDegree",type:"keyword",info:"SplineDegree is an option for spline functions and graphics primitives that specifies the degree of "},{label:"SplineKnots",type:"keyword",info:"SplineKnots is an option for B-spline functions and graphics primitives that specifies the positions"},{label:"SplineWeights",type:"keyword",info:"SplineWeights is an option for B-spline functions and graphics primitives that specifies weights of "},{label:"Split",type:"keyword",info:"Split[list] splits list into sublists consisting of runs of identical elements. Split[list, test] tr"},{label:"SplitBy",type:"keyword",info:"SplitBy[list, f] splits list into sublists consisting of runs of successive elements that give the s"},{label:"SpokenString",type:"keyword",info:"SpokenString[expr] gives a string of text corresponding to a spoken representation of the expression"},{label:"SpotLight",type:"keyword",info:"SpotLight[col, pt, \xce\\[PlusMinus]] is a three-dimensional graphics directive to use in coloring 3D surfaces that "},{label:"Sqrt",type:"keyword",info:"Sqrt[z] or Sqrt[z] gives the square root of z. "},{label:"SqrtBox",type:"keyword",info:"SqrtBox[x] is a low-level box construct that represents the displayed object Sqrt[x] in notebook exp"},{label:"SqrtBoxOptions",type:"keyword",info:"SqrtBoxOptions is an option that specifies settings for SqrtBox objects."},{label:"Square",type:"keyword",info:"Square[x] displays as \xef\x94\xa0 x."},{label:"SquaredEuclideanDistance",type:"keyword",info:"SquaredEuclideanDistance[u, v] gives the squared Euclidean distance between vectors u and v."},{label:"SquareFreeQ",type:"keyword",info:"SquareFreeQ[expr] gives True if expr is a square-free polynomial or number, and False otherwise.Squa"},{label:"SquareIntersection",type:"keyword",info:"SquareIntersection[x, y, \xe2\x80\xa6] displays as x \xe2\x8a\x93 y \xe2\x8a\x93 \xe2\x80\xa6."},{label:"SquareMatrixQ",type:"keyword",info:"SquareMatrixQ[m] gives True if m is a square matrix, and False otherwise."},{label:"SquareRepeatingElement",type:"keyword",info:"SquareRepeatingElement[spec] represents a square array of elements of type spec in an interpreter, A"},{label:"SquaresR",type:"keyword",info:"SquaresR[d, n] gives the number of ways r (n) to represent the integer n as a sum of d squares.\n    "},{label:"SquareSubset",type:"keyword",info:"SquareSubset[x, y, \xe2\x80\xa6] displays as x \xe2\x8a\x8f y \xe2\x8a\x8f \xe2\x80\xa6."},{label:"SquareSubsetEqual",type:"keyword",info:"SquareSubsetEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x8a\x91 y \xe2\x8a\x91 \xe2\x80\xa6."},{label:"SquareSuperset",type:"keyword",info:"SquareSuperset[x, y, \xe2\x80\xa6] displays as x \xe2\x8a\x90 y \xe2\x8a\x90 \xe2\x80\xa6."},{label:"SquareSupersetEqual",type:"keyword",info:"SquareSupersetEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x8a\x92 y \xe2\x8a\x92 \xe2\x80\xa6."},{label:"SquareUnion",type:"keyword",info:"SquareUnion[x, y, \xe2\x80\xa6] displays as x \xe2\x8a\x94 y \xe2\x8a\x94 \xe2\x80\xa6."},{label:"SquareWave",type:"keyword",info:"SquareWave[x] gives a square wave that alternates between +1 and -1 with unit period.SquareWave[{y ,"},{label:"SSSTriangle",type:"keyword",info:"SSSTriangle[a, b, c] returns a filled triangle with sides of lengths a, b, and c."},{label:"StabilityMargins",type:"keyword",info:"StabilityMargins is an option to frequency response plots such as BodePlot, NyquistPlot, and Nichols"},{label:"StabilityMarginsStyle",type:"keyword",info:"StabilityMarginsStyle is an option to frequency response plots such as BodePlot, NyquistPlot, and Ni"},{label:"StableDistribution",type:"keyword",info:"StableDistribution[type, \xce\\[PlusMinus], \xce.b2, \xce\xbc, \xcf\x83] represents the stable distribution S     with index of stabilit"},{label:"Stack",type:"keyword",info:"Stack[] shows the current evaluation stack, giving a list of the tags associated with evaluations th"},{label:"StackBegin",type:"keyword",info:"StackBegin[expr] evaluates expr, starting a fresh evaluation stack. "},{label:"StackComplete",type:"keyword",info:"StackComplete[expr] evaluates expr with intermediate expressions in evaluation chains included on th"},{label:"StackedDateListPlot",type:"keyword",info:"StackedDateListPlot[{{date , v }, {date , v }, \xe2\x80\xa6}] plots points with values v  at a sequence of date"},{label:"StackedListPlot",type:"keyword",info:"                                                                                 th\nStackedListPlot["},{label:"StackInhibit",type:"keyword",info:"StackInhibit[expr] evaluates expr without modifying the evaluation stack. "},{label:"StadiumShape",type:"keyword",info:"StadiumShape[{{x , y }, {x , y }}, r] represents a stadium of radius r between the points {x , y } a"},{label:"StandardAtmosphereData",type:"keyword",info:"StandardAtmosphereData[altitude, property] returns the value of the property at the specified geomet"},{label:"StandardDeviation",type:"keyword",info:"StandardDeviation[list] gives the sample standard deviation of the elements in list. StandardDeviati"},{label:"StandardDeviationFilter",type:"keyword",info:"                                                                                                    "},{label:"StandardForm",type:"keyword",info:"StandardForm[expr] prints as the standard Wolfram Language two-dimensional representation of expr. "},{label:"Standardize",type:"keyword",info:"Standardize[list] shifts and rescales the elements of list to have zero mean and unit sample varianc"},{label:"Standardized",type:"keyword",info:"Standardized is an option that determines whether to standardize the data."},{label:"StandardOceanData",type:"keyword",info:"StandardOceanData[spec] returns the thermodynamic properties of seawater for the specified parameter"},{label:"StandbyDistribution",type:"keyword",info:"                                                                                                    "},{label:"Star",type:"keyword",info:"Star[x, y, \xe2\x80\xa6] displays as x \xe2\x8b\x86 y \xe2\x8b\x86 \xe2\x80\xa6."},{label:"StarClusterData",type:"keyword",info:"StarClusterData[entity, property] gives the value of the specified property for the star cluster ent"},{label:"StarData",type:"keyword",info:"StarData[entity, property] gives the value of the specified property for the star entity.StarData[{e"},{label:"StarGraph",type:"keyword",info:"StarGraph[n] gives the star graph with n vertices S .\n                                              "},{label:"StartAsynchronousTask",type:"keyword",info:"StartAsynchronousTask[task] allows asynchronous evaluations from task after it has been stopped."},{label:"StartExternalSession",type:"keyword",info:'StartExternalSession["sys"] starts an external session using the external evaluator sys, returning a'},{label:"StartingStepSize",type:"keyword",info:"StartingStepSize is an option to NDSolve and related functions that specifies the initial step size "},{label:"StartOfLine",type:"keyword",info:"StartOfLine represents the start of a line in a string for purposes of matching in StringExpression."},{label:"StartOfString",type:"keyword",info:"StartOfString represents the start of a string for purposes of matching in StringExpression."},{label:"StartProcess",type:"keyword",info:'StartProcess["executable"] executes an external program, yielding a ProcessObject to represent the r'},{label:"StartScheduledTask",type:"keyword",info:"StartScheduledTask[obj] starts the local or cloud scheduled task represented by obj."},{label:"StartupSound",type:"keyword",info:"System`StartupSound"},{label:"StartWebSession",type:"keyword",info:'StartWebSession[] starts a web session and returns a web session object.StartWebSession["browser"] s'},{label:"StateDimensions",type:"keyword",info:"StateDimensions is an option to TemporalData that specifies the dimensions of the state space. "},{label:"StateFeedbackGains",type:"keyword",info:"StateFeedbackGains[sspec, {p , \xe2\x80\xa6, p }] gives the state feedback gains for the system specification s"},{label:"StateOutputEstimator",type:"keyword",info:"StateOutputEstimator[ssm, l] constructs an estimator for the StateSpaceModel ssm, with estimator gai"},{label:"StateResponse",type:"keyword",info:"StateResponse[sys, u, {t, t   , t   }] gives the numeric state response of the state-space model sys"},{label:"StateSpaceModel",type:"keyword",info:"StateSpaceModel[{a, b, c, d}] represents the standard state-space model with state matrix a, input m"},{label:"StateSpaceRealization",type:"keyword",info:"StateSpaceRealization is an option to StateSpaceModel that specifies its canonical representation."},{label:"StateSpaceTransform",type:"keyword",info:"StateSpaceTransform[sys, {p, q}] transforms the state-space model sys using the matrices p and q. St"},{label:"StateTransformationLinearize",type:"keyword",info:"StateTransformationLinearize[asys] linearizes the AffineStateSpaceModel asys by state transformation"},{label:"StationaryDistribution",type:"keyword",info:"StationaryDistribution[proc] represents the stationary distribution of the process proc, when it exi"},{label:"StationaryWaveletPacketTransform",type:"keyword",info:"StationaryWaveletPacketTransform[data] gives the stationary wavelet packet transform (SWPT) of an ar"},{label:"StationaryWaveletTransform",type:"keyword",info:"StationaryWaveletTransform[data] gives the stationary wavelet transform (SWT) of an array of data.St"},{label:"StatusArea",type:"keyword",info:"StatusArea[expr, string] displays string in the status area of the current notebook when the mouse p"},{label:"StatusCentrality",type:"keyword",info:"StatusCentrality[g] gives a list of status centralities for the vertices in the graph g.StatusCentra"},{label:"StepMonitor",type:"keyword",info:"StepMonitor is an option for iterative numerical computation functions that gives an expression to e"},{label:"StereochemistryElements",type:"keyword",info:"StereochemistryElements is an option for Molecule that specifies the local stereochemical arrangemen"},{label:"StieltjesGamma",type:"keyword",info:"StieltjesGamma[n] gives the Stieltjes constant \xce.b3 . StieltjesGamma[n, a] gives the generalized Stielt"},{label:"StippleShading",type:"keyword",info:"StippleShading[] is a three-dimensional graphics directive specifying that objects that follow are t"},{label:"StirlingS1",type:"keyword",info:"                                                              (m)\nStirlingS1[n, m] gives the Stirlin"},{label:"StirlingS2",type:"keyword",info:"                                                               (m)\nStirlingS2[n, m] gives the Stirli"},{label:"StopAsynchronousTask",type:"keyword",info:"StopAsynchronousTask[task] stops asynchronous evaluations from task."},{label:"StoppingPowerData",type:"keyword",info:'StoppingPowerData[entity, {"Particle" \xef\x94\xa2 particle, "Energy" \xef\x94\xa2 quantity}, property] gives the value of'},{label:"StopScheduledTask",type:"keyword",info:"StopScheduledTask[obj] deactivates the local or cloud scheduled task represented by obj."},{label:"StrataVariables",type:"keyword",info:"StrataVariables is an option for fitting functions such as CoxModelFit that specify the variables on"},{label:"StratonovichProcess",type:"keyword",info:"StratonovichProcess[{a, b}, x, t] represents a Stratonovich process x(t), where \xef\x9d\x8c x(t) \xef\x9f\x99 a(t, x(t)) "},{label:"StraussHardcorePointProcess",type:"keyword",info:"                                                                                                    "},{label:"StraussPointProcess",type:"keyword",info:"                                                                                                    "},{label:"StreamColorFunction",type:"keyword",info:"StreamColorFunction is an option for StreamPlot and related functions that specifies a function to a"},{label:"StreamColorFunctionScaling",type:"keyword",info:"StreamColorFunctionScaling is an option for graphics functions that specifies whether arguments supp"},{label:"StreamDensityPlot",type:"keyword",info:"StreamDensityPlot[{{v , v }, s}, {x, x   , x   }, {y, y   , y   }] generates a stream plot of the ve"},{label:"StreamMarkers",type:"keyword",info:"StreamMarkers is an option for StreamPlot, ListStreamPlot and related functions that specifies what "},{label:"StreamPlot",type:"keyword",info:"StreamPlot[{v , v }, {x, x   , x   }, {y, y   , y   }] generates a stream plot of the vector field {"},{label:"StreamPlot3D",type:"keyword",info:"StreamPlot3D[{v , v , v }, {x, x   , x   }, {y, y   , y   }, {z, z   , z   }] plots streamlines for "},{label:"StreamPoints",type:"keyword",info:"StreamPoints is an option to StreamPlot, ListStreamPlot, and related functions that determines how m"},{label:"StreamPosition",type:"keyword",info:"StreamPosition[stream] returns an integer that specifies the position of the current point in an ope"},{label:"Streams",type:"keyword",info:'Streams[] gives a list of all streams that are currently open. Streams["name"] lists only streams wi'},{label:"StreamScale",type:"keyword",info:"StreamScale is an option to StreamPlot, ListStreamPlot, and related functions that determines the le"},{label:"StreamStyle",type:"keyword",info:"StreamStyle is an option to StreamPlot, StreamDensityPlot, and related functions that determines the"},{label:"StrictInequalities",type:"keyword",info:"StrictInequalities is an option to FunctionSign and FunctionMonotonicity, etc. that determines wheth"},{label:"String",type:"keyword",info:'String is the head of a character string "text". '},{label:"StringBreak",type:"keyword",info:"System`StringBreak"},{label:"StringByteCount",type:"keyword",info:'StringByteCount["string"] gives the total number of bytes used to store the characters in a string.'},{label:"StringCases",type:"keyword",info:'StringCases["string", patt] gives a list of the substrings in "string" that match the string express'},{label:"StringContainsQ",type:"keyword",info:'StringContainsQ["string", patt] yields True if any part of string matches the string pattern patt, a'},{label:"StringCount",type:"keyword",info:'StringCount["string", "sub"] gives a count of the number of times "sub" appears as a substring of "s'},{label:"StringDelete",type:"keyword",info:'StringDelete["string", patt] yields the string obtained by deleting from string all occurrences of a'},{label:"StringDrop",type:"keyword",info:"                                                                                                    "},{label:"StringEndsQ",type:"keyword",info:'StringEndsQ["string", patt] yields True if the end of string matches the string pattern patt, and yi'},{label:"StringExpression",type:"keyword",info:"s  ~~ s  ~~ \xe2\x80\xa6 or StringExpression[s , s , \xe2\x80\xa6] represents a sequence of strings and symbolic string ob"},{label:"StringExtract",type:"keyword",info:'                                          th\nStringExtract["string", n] extracts the n\xef\x8e\xa0   block of c'},{label:"StringForm",type:"keyword",info:'StringForm["controlstring", expr , \xe2\x80\xa6] prints as the text of the controlstring, with the printed form'},{label:"StringFormat",type:"keyword",info:'StringFormat["string"] attempts to determine what ImportString format could be used to import the st'},{label:"StringFormatQ",type:"keyword",info:'StringFormatQ["string", "fmt"] gives True if the string "string" might be imported as format "fmt" a'},{label:"StringFreeQ",type:"keyword",info:'StringFreeQ["string", patt] yields True if no substring in "string" matches the string expression pa'},{label:"StringInsert",type:"keyword",info:'StringInsert["string", "snew", n] yields a string with "snew" inserted starting at position n in "st'},{label:"StringJoin",type:"keyword",info:'"s " <> "s " <> \xe2\x80\xa6, StringJoin["s ", "s ", \xe2\x80\xa6], or StringJoin[{"s ", "s ", \xe2\x80\xa6}] yields a string consist'},{label:"StringLength",type:"keyword",info:'StringLength["string"] gives the number of characters in a string. '},{label:"StringMatchQ",type:"keyword",info:'StringMatchQ["string", patt] tests whether "string" matches the string pattern patt. StringMatchQ["s'},{label:"StringPadLeft",type:"keyword",info:'StringPadLeft["string", n] makes string be of length n, padding it on the left with spaces or trunca'},{label:"StringPadRight",type:"keyword",info:'StringPadRight["string", n] makes string be of length n, padding it on the right with spaces or trun'},{label:"StringPart",type:"keyword",info:"                                    th                                                              "},{label:"StringPartition",type:"keyword",info:'StringPartition["string", n] partitions string into nonoverlapping substrings of length n.StringPart'},{label:"StringPosition",type:"keyword",info:'StringPosition["string", "sub"] gives a list of the starting and ending character positions at which'},{label:"StringQ",type:"keyword",info:"StringQ[expr] gives True if expr is a string, and False otherwise."},{label:"StringRepeat",type:"keyword",info:'StringRepeat["str", n] creates a string consisting of "str" repeated n times.StringRepeat["str", n, '},{label:"StringReplace",type:"keyword",info:'StringReplace["string", s \xef\x94\xa2 sp] replaces the string expression s by sp wherever it appears in "strin'},{label:"StringReplaceList",type:"keyword",info:'StringReplaceList["string", s \xef\x94\xa2 sp] or StringReplaceList["string", {s  \xef\x94\xa2 sp , s  \xef\x94\xa2 sp , \xe2\x80\xa6}] gives a '},{label:"StringReplacePart",type:"keyword",info:'StringReplacePart["string", "snew", {m, n}] replaces the characters at positions m through n in "str'},{label:"StringReverse",type:"keyword",info:'StringReverse["string"] reverses the order of the characters in "string".'},{label:"StringRiffle",type:"keyword",info:"StringRiffle[{s , s , s , \xe2\x80\xa6}] creates a string by concatenating all the s , with spaces inserted bet"},{label:"StringRotateLeft",type:"keyword",info:"StringRotateLeft[string, n] cycles the characters in string n positions to the left.StringRotateLeft"},{label:"StringRotateRight",type:"keyword",info:"StringRotateRight[string, n] cycles the characters in string n positions to the right.StringRotateRi"},{label:"StringSkeleton",type:"keyword",info:"StringSkeleton[n] represents a sequence of n omitted characters in a string printed with Short. The "},{label:"StringSplit",type:"keyword",info:'StringSplit["string"] splits "string" into a list of substrings separated by whitespace. StringSplit'},{label:"StringStartsQ",type:"keyword",info:'StringStartsQ["string", patt] yields True if the beginning of string matches the string pattern patt'},{label:"StringTake",type:"keyword",info:"                                                                                                    "},{label:"StringTakeDrop",type:"keyword",info:'StringTakeDrop["string", n] gives a pair of strings containing the first n characters in "string" an'},{label:"StringTemplate",type:"keyword",info:'StringTemplate["string"] yields a TemplateObject expression that represents a string template to be '},{label:"StringToByteArray",type:"keyword",info:'StringToByteArray["string"] returns a byte array corresponding to the UTF-8 encoding of the specifie'},{label:"StringToStream",type:"keyword",info:'StringToStream["string"] opens an input stream for reading from a string. '},{label:"StringTrim",type:"keyword",info:'StringTrim["string"] trims whitespace from the beginning and end of "string".StringTrim["string", pa'},{label:"StripBoxes",type:"keyword",info:"StripBoxes[expr] will strip out unnecessary boxes, spaces, and styles from a format expression."},{label:"StripOnInput",type:"keyword",info:"StripOnInput is an option for certain boxes that determines whether the box should be stripped on ev"},{label:"StripStyleOnPaste",type:"keyword",info:"System`StripStyleOnPaste"},{label:"StripWrapperBoxes",type:"keyword",info:"StripWrapperBoxes is an option to TagBox that controls how boxes are stripped upon evaluation."},{label:"StrokeForm",type:"keyword",info:"System`StrokeForm"},{label:"StructuralImportance",type:"keyword",info:"StructuralImportance[rdist] gives the structural importances for all components in the ReliabilityDi"},{label:"StructuredArray",type:"keyword",info:"StructuredArray[st, {d , d , \xe2\x80\xa6}, data] represents a d \xc3\x97d \xc3\x97\xe2\x80\xa6 array with structure type st and specifi"},{label:"StructuredArrayHeadQ",type:"keyword",info:"System`StructuredArrayHeadQ"},{label:"StructuredSelection",type:"keyword",info:"StructuredSelection is an option for Cell that specifies whether to allow only complete subexpressio"},{label:"StruveH",type:"keyword",info:"StruveH[n, z] gives the Struve function H (z). \n                                         n"},{label:"StruveL",type:"keyword",info:"StruveL[n, z] gives the modified Struve function L (z). \n                                           "},{label:"Stub",type:"keyword",info:"Stub is an attribute which specifies that if a symbol is ever used, Needs should automatically be ca"},{label:"StudentTDistribution",type:"keyword",info:"StudentTDistribution[\xce\xbd] represents a Student t distribution with \xce\xbd degrees of freedom.StudentTDistri"},{label:"Style",type:"keyword",info:'Style[expr, options] displays with expr formatted using the specified option settings. Style[expr, "'},{label:"StyleBox",type:"keyword",info:"StyleBox[boxes, options] is a low-level representation of boxes to be shown with the specified optio"},{label:"StyleBoxAutoDelete",type:"keyword",info:"StyleBoxAutoDelete is an option for selections that specifies whether a StyleBox wrapped around them"},{label:"StyleData",type:"keyword",info:'StyleData["style"] is a low-level representation of the contents of a style definition cell.StyleDat'},{label:"StyleDefinitions",type:"keyword",info:"StyleDefinitions is an option for notebooks that gives definitions for the styles that can be used i"},{label:"StyleForm",type:"keyword",info:'StyleForm[expr, options] prints using the specified style options. StyleForm[expr, "style"] prints u'},{label:"StyleHints",type:"keyword",info:"StyleHints is an option for cells and notebooks that specifies an association containing hints used "},{label:"StyleKeyMapping",type:"keyword",info:"System`StyleKeyMapping"},{label:"StyleMenuListing",type:"keyword",info:"StyleMenuListing is an option for cells that specifies whether a given cell style is listed in the F"},{label:"StyleNameDialogSettings",type:"keyword",info:"StyleNameDialogSettings is a global option that specifies the cell style displayed in the Custom Sty"},{label:"StyleNames",type:"keyword",info:"System`StyleNames"},{label:"StylePrint",type:"keyword",info:'StylePrint[expr, "style"] creates a new cell in the current notebook with the specified style, and p'},{label:"StyleSheetPath",type:"keyword",info:"StyleSheetPath is a global option that specifies which directories the Wolfram System searches to fi"},{label:"Subdivide",type:"keyword",info:"Subdivide[n] generates the list {0, 1/n, 2/n, \xe2\x80\xa6, 1}.Subdivide[x   , n] generates the list of values "},{label:"Subfactorial",type:"keyword",info:"Subfactorial[n] gives the number of permutations of n objects that leave no object fixed."},{label:"Subgraph",type:"keyword",info:"Subgraph[g, {v , v , \xe2\x80\xa6}] gives the subgraph of the graph g generated by the vertices v .Subgraph[g, "},{label:"SubMinus",type:"keyword",info:"SubMinus[expr] displays as expr .\n                               -"},{label:"SubPlus",type:"keyword",info:"SubPlus[expr] displays as expr .\n                              +"},{label:"SubresultantPolynomialRemainders",type:"keyword",info:"SubresultantPolynomialRemainders[poly , poly , var] gives the subresultant polynomial remainder sequ"},{label:"SubresultantPolynomials",type:"keyword",info:"SubresultantPolynomials[poly , poly , var] generates a list of subresultant polynomials of the polyn"},{label:"Subresultants",type:"keyword",info:"Subresultants[poly , poly , var] generates a list of the principal subresultant coefficients of the "},{label:"Subscript",type:"keyword",info:"Subscript[x, y] is an object that formats as x . Subscript[x, y , y , \xe2\x80\xa6] formats as x         .\n    "},{label:"SubscriptBox",type:"keyword",info:"SubscriptBox[x, y] is the low\xe2\x80\x90level box representation for x  in notebook expressions. \n            "},{label:"SubscriptBoxOptions",type:"keyword",info:"SubscriptBoxOptions is an option for selections that specifies settings for SubscriptBox objects."},{label:"Subscripted",type:"keyword",info:"System`Subscripted"},{label:"Subsequences",type:"keyword",info:"                                                                                                    "},{label:"Subset",type:"keyword",info:"Subset[x, y, \xe2\x80\xa6] displays as x \xe2\x8a\x82 y \xe2\x8a\x82 \xe2\x80\xa6."},{label:"SubsetCases",type:"keyword",info:"SubsetCases[list, patt] gives a list of the sublists in list that match the pattern patt in any orde"},{label:"SubsetCount",type:"keyword",info:"SubsetCount[list, sub] gives a count of the number of times sub appears in any order as a sublist of"},{label:"SubsetEqual",type:"keyword",info:"SubsetEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x8a\x86 y \xe2\x8a\x86 \xe2\x80\xa6."},{label:"SubsetMap",type:"keyword",info:"SubsetMap[f, {e , e , \xe2\x80\xa6}, {i, j, \xe2\x80\xa6}] yields an expression in which the elements e , e , \xe2\x80\xa6 in the lis"},{label:"SubsetPosition",type:"keyword",info:"SubsetPosition[list, sublist] gives a list of positions at which sublist appears in list in any orde"},{label:"SubsetQ",type:"keyword",info:"SubsetQ[list , list ] yields True if list  is a subset of list , and False otherwise.\n            1 "},{label:"SubsetReplace",type:"keyword",info:"SubsetReplace[list, rules] replaces sublists in list according to the specified rule or list of rule"},{label:"Subsets",type:"keyword",info:"                                                                                                    "},{label:"SubStar",type:"keyword",info:"SubStar[expr] displays as expr .\n                              *"},{label:"SubstitutionSystem",type:"keyword",info:"SubstitutionSystem[rule, init, t] generates a list representing the evolution of the substitution sy"},{label:"Subsuperscript",type:"keyword",info:"                                                      z\nSubsuperscript[x, y, z] is an object that fo"},{label:"SubsuperscriptBox",type:"keyword",info:"                                                                    z\nSubsuperscriptBox[x, y, z] is "},{label:"SubsuperscriptBoxOptions",type:"keyword",info:"SubsuperscriptBoxOptions is an option for selections that specifies settings for SubsuperscriptBox o"},{label:"SubtitleEncoding",type:"keyword",info:"SubtitleEncoding is an option for Export and other functions that specifies the subtitle encoding to"},{label:"SubtitleTrackSelection",type:"keyword",info:"SubtitleTrackSelection is an option that specifies the subtitle tracks of interest."},{label:"Subtract",type:"keyword",info:"x - y is equivalent to x + (-1 * y). "},{label:"SubtractFrom",type:"keyword",info:"x -= dx subtracts dx from x and returns the new value of x. "},{label:"SubtractSides",type:"keyword",info:"SubtractSides[rel, x] subtracts x from each side of the equation or inequality rel.SubtractSides[rel"},{label:"SubValues",type:"keyword",info:"SubValues[f] gives a list of transformation rules corresponding to all subvalues (values for f[\xe2\x80\xa6][\xe2\x80\xa6]"},{label:"Succeeds",type:"keyword",info:"Succeeds[x, y, \xe2\x80\xa6] displays as x \xe2\x89\xbb y \xe2\x89\xbb \xe2\x80\xa6."},{label:"SucceedsEqual",type:"keyword",info:"SucceedsEqual[x, y, \xe2\x80\xa6] displays as x \xe2\xaa\\[Degree] y \xe2\xaa\\[Degree] \xe2\x80\xa6."},{label:"SucceedsSlantEqual",type:"keyword",info:"SucceedsSlantEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x89\xbd y \xe2\x89\xbd \xe2\x80\xa6."},{label:"SucceedsTilde",type:"keyword",info:"SucceedsTilde[x, y, \xe2\x80\xa6] displays as x \xe2\x89\xbf y \xe2\x89\xbf \xe2\x80\xa6."},{label:"Success",type:"keyword",info:'Success["tag", assoc] represents a success of a type indicated by tag, with details given by the ass'},{label:"SuchThat",type:"keyword",info:"SuchThat[x, y] displays as x \xe2\x88\x8d y."},{label:"Sum",type:"keyword",info:"                                                                                                    "},{label:"SumConvergence",type:"keyword",info:"                                                  \xe2\x88\x9e                                                 "},{label:"SummationLayer",type:"keyword",info:"SummationLayer[] represents a net layer that sums all of its input elements."},{label:"Sunday",type:"keyword",info:"Sunday is a day of the week."},{label:"SunPosition",type:"keyword",info:"SunPosition[] gives the position of the Sun for the current date and location.SunPosition[datespec] "},{label:"Sunrise",type:"keyword",info:"Sunrise[] gives the time of the next sunrise for the current date and location.Sunrise[datespec] giv"},{label:"Sunset",type:"keyword",info:"Sunset[] gives the time of the next sunset for the current date and location.Sunset[datespec] gives "},{label:"SuperDagger",type:"keyword",info:"                                  \xe2\x80\xa0\nSuperDagger[expr] displays as expr ."},{label:"SuperMinus",type:"keyword",info:"                                 -\nSuperMinus[expr] displays as expr ."},{label:"SupernovaData",type:"keyword",info:"SupernovaData[entity, property] gives the value of the specified property for the supernova entity.S"},{label:"SuperPlus",type:"keyword",info:"                                +\nSuperPlus[expr] displays as expr ."},{label:"Superscript",type:"keyword",info:"                                                y\nSuperscript[x, y] is an object that formats as x ."},{label:"SuperscriptBox",type:"keyword",info:"                                                              y\nSuperscriptBox[x, y] is the low\xe2\x80\x90leve"},{label:"SuperscriptBoxOptions",type:"keyword",info:"SuperscriptBoxOptions is an option for selections that specifies settings for SuperscriptBox objects"},{label:"Superset",type:"keyword",info:"Superset[x, y, \xe2\x80\xa6] displays as x \xe2\x8a\x83 y \xe2\x8a\x83 \xe2\x80\xa6."},{label:"SupersetEqual",type:"keyword",info:"SupersetEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x8a\x87 y \xe2\x8a\x87 \xe2\x80\xa6."},{label:"SuperStar",type:"keyword",info:"                                *\nSuperStar[expr] displays as expr ."},{label:"Surd",type:"keyword",info:"                                   th\nSurd[x, n] gives the real-valued n\xef\x8e\xa0   root of x."},{label:"SurdForm",type:"keyword",info:"SurdForm is an option to RadicalBox and SqrtBox that indicates whether the radical represents a Surd"},{label:"SurfaceAppearance",type:"keyword",info:"System`SurfaceAppearance"},{label:"SurfaceArea",type:"keyword",info:"SurfaceArea[reg] gives the surface area of the three-dimensional region reg.SurfaceArea[{x , \xe2\x80\xa6, x },"},{label:"SurfaceColor",type:"keyword",info:"SurfaceColor[dcol] is a three-dimensional graphics directive which specifies that the surfaces which"},{label:"SurfaceData",type:"keyword",info:"SurfaceData[entity, property] gives the value of the specified property for the surface entity.Surfa"},{label:"SurfaceGraphics",type:"keyword",info:"SurfaceGraphics[array] is a representation of a three-dimensional plot of a surface, with heights of"},{label:"SurvivalDistribution",type:"keyword",info:"SurvivalDistribution[{e , e , \xe2\x80\xa6}] represents a survival distribution with event times e .SurvivalDis"},{label:"SurvivalFunction",type:"keyword",info:"SurvivalFunction[dist, x] gives the survival function for the distribution dist evaluated at x.Survi"},{label:"SurvivalModel",type:"keyword",info:"SurvivalModel[\xe2\x80\xa6] represents the symbolic survival model obtained from functions like SurvivalModelFi"},{label:"SurvivalModelFit",type:"keyword",info:"SurvivalModelFit[{e , e , \xe2\x80\xa6}] creates a survival model for event times e .\n                   1   2 "},{label:"SuspendPacket",type:"keyword",info:"SuspendPacket[] is a WSTP packet used for synchronization with the Wolfram Language kernel."},{label:"SuzukiDistribution",type:"keyword",info:"SuzukiDistribution[\xce\xbc, \xce\xbd] represents the Suzuki distribution with shape parameters \xce\xbc and \xce\xbd."},{label:"SuzukiGroupSuz",type:"keyword",info:"SuzukiGroupSuz[] represents the sporadic simple Suzuki group Suz."},{label:"SwatchLegend",type:"keyword",info:"SwatchLegend[{col , \xe2\x80\xa6}, {lbl , \xe2\x80\xa6}] generates a legend that associates swatches of colors col  with l"},{label:"Switch",type:"keyword",info:"Switch[expr, form , value , form , value , \xe2\x80\xa6] evaluates expr, then compares it with each of the form"},{label:"Symbol",type:"keyword",info:'Symbol["name"] refers to a symbol with the specified name. '},{label:"SymbolName",type:"keyword",info:"SymbolName[symbol] gives the name of the specified symbol. "},{label:"SymletWavelet",type:"keyword",info:"SymletWavelet[] represents the Symlet wavelet of order 4.SymletWavelet[n] represents the Symlet wave"},{label:"Symmetric",type:"keyword",info:"Symmetric[{s , \xe2\x80\xa6, s }] represents the symmetry of a tensor that is symmetric in the slots s .\n      "},{label:"SymmetricGroup",type:"keyword",info:"SymmetricGroup[n] represents the symmetric group of degree n."},{label:"SymmetricKey",type:"keyword",info:"SymmetricKey[assoc] represents all the information needed for encryption, decryption, and other oper"},{label:"SymmetricMatrixQ",type:"keyword",info:"SymmetricMatrixQ[m] gives True if m is explicitly symmetric, and False otherwise. "},{label:"SymmetricPolynomial",type:"keyword",info:"                                                th\nSymmetricPolynomial[k, {x , \xe2\x80\xa6, x }] gives the k\xef\x8e\xa0 "},{label:"SymmetricReduction",type:"keyword",info:"SymmetricReduction[f, {x , \xe2\x80\xa6, x }] gives a pair of polynomials {p, q} in x , \xe2\x80\xa6, x  such that f == p "},{label:"Symmetrize",type:"keyword",info:"Symmetrize[tensor, sym] returns the symmetrization of tensor under the symmetry sym."},{label:"SymmetrizedArray",type:"keyword",info:"SymmetrizedArray[{pos  \xef\x94\xa2 val , pos  \xef\x94\xa2 val , \xe2\x80\xa6}, dims, sym] yields an array of dimensions dims whose "},{label:"SymmetrizedArrayRules",type:"keyword",info:"SymmetrizedArrayRules[sa] returns a list of rules pos  \xef\x94\xa2 val  of the symmetrized array sa.Symmetrize"},{label:"SymmetrizedDependentComponents",type:"keyword",info:"SymmetrizedDependentComponents[comp, sym] gives the list of components that are equivalent to the co"},{label:"SymmetrizedIndependentComponents",type:"keyword",info:"SymmetrizedIndependentComponents[dims, sym] gives the list of independent components of an array of "},{label:"SymmetrizedReplacePart",type:"keyword",info:"SymmetrizedReplacePart[sa, {pos  \xef\x94\xa2 val , pos  \xef\x94\xa2 val , \xe2\x80\xa6}] replaces independent values of the symmetr"},{label:"SynchronousInitialization",type:"keyword",info:"SynchronousInitialization is an option for Manipulate, DynamicModule, and related functions that spe"},{label:"SynchronousUpdating",type:"keyword",info:"SynchronousUpdating is an option for Manipulate, Dynamic, and related functions that specifies wheth"},{label:"Synonyms",type:"keyword",info:'Synonyms["word"] returns the synonyms associated with the specified word.'},{label:"Syntax",type:"keyword",info:"System`Syntax"},{label:"SyntaxForm",type:"keyword",info:"SyntaxForm is an option for operator-like box objects that specifies the precedence level to use whe"},{label:"SyntaxInformation",type:"keyword",info:"SyntaxInformation[f] gives information used to generate syntax coloring and other advisories when f["},{label:"SyntaxLength",type:"keyword",info:'SyntaxLength["string"] finds the number of characters starting at the beginning of a string that cor'},{label:"SyntaxPacket",type:"keyword",info:"SyntaxPacket[integer] is a WSTP packet where integer indicates the position at which a syntax error "},{label:"SyntaxQ",type:"keyword",info:'SyntaxQ["string"] returns True if the string corresponds to syntactically correct input for a single'},{label:"SynthesizeMissingValues",type:"keyword",info:"SynthesizeMissingValues[{example , example , \xe2\x80\xa6}] replaces missing values in each example by generate"},{label:"SystemCredential",type:"keyword",info:'SystemCredential["keyname"] gives the expression stored under "keyname" in secure storage.'},{label:"SystemCredentialData",type:"keyword",info:'SystemCredentialData[assoc, "pwfield"] represents data intended for secure credential storage. '},{label:"SystemCredentialKey",type:"keyword",info:"SystemCredentialKey is an option of AuthenticationDialog that specifies the name for secure storage "},{label:"SystemCredentialKeys",type:"keyword",info:'SystemCredentialKeys["patt"] gives the list of keys in secure storage that match patt.'},{label:"SystemCredentialStoreObject",type:"keyword",info:"SystemCredentialStoreObject[assoc] represents a credential store."},{label:"SystemDialogInput",type:"keyword",info:'SystemDialogInput["type"] brings up an interactive system dialog and returns the value chosen in the'},{label:"SystemException",type:"keyword",info:"System`SystemException"},{label:"SystemGet",type:"keyword",info:'SystemGet[{sym , \xe2\x80\xa6}, "filename"] loads source file with path encoded in "filename"\n              1'},{label:"SystemHelpPath",type:"keyword",info:"SystemHelpPath is a global option that specifies which directories are searched for the help noteboo"},{label:"SystemInformation",type:"keyword",info:"SystemInformation[] gives detailed information about the Wolfram System being run. SystemInformation"},{label:"SystemInformationData",type:"keyword",info:"System`SystemInformationData"},{label:"SystemInstall",type:"keyword",info:"SystemInstall[pack] downloads and installs the software package pack on your machine."},{label:"SystemModel",type:"keyword",info:'SystemModel["model"] gives a representation of the model "model", usable as input to other functions'},{label:"SystemModeler",type:"keyword",info:"SystemModeler[] starts SystemModeler. SystemModeler[model] starts SystemModeler and opens the System"},{label:"SystemModelExamples",type:"keyword",info:"SystemModelExamples[] shows an interactive browser of system modeling example models. SystemModelExa"},{label:"SystemModelLinearize",type:"keyword",info:"SystemModelLinearize[model] gives a linearized StateSpaceModel for model at an equilibrium. SystemMo"},{label:"SystemModelParametricSimulate",type:"keyword",info:"SystemModelParametricSimulate[model, v, {p , p , \xe2\x80\xa6}] simulates model for the variable v with paramet"},{label:"SystemModelPlot",type:"keyword",info:"SystemModelPlot[sim] shows default plots from the SystemModelSimulationData object sim.SystemModelPl"},{label:"SystemModelProgressReporting",type:"keyword",info:"SystemModelProgressReporting is an option for SystemModelSimulate and related functions that specifi"},{label:"SystemModelReliability",type:"keyword",info:"SystemModelReliability[model] retrieves the lifetime distribution for model.SystemModelReliability[m"},{label:"SystemModels",type:"keyword",info:"SystemModels[] returns a list of loaded system models.SystemModels[patt] returns the models matching"},{label:"SystemModelSimulate",type:"keyword",info:"SystemModelSimulate[model] simulates model according to experiment settings.SystemModelSimulate[mode"},{label:"SystemModelSimulateSensitivity",type:"keyword",info:"SystemModelSimulateSensitivity[model, {p , p , \xe2\x80\xa6}] simulates model and sensitivities to parameters p"},{label:"SystemModelSimulationData",type:"keyword",info:"SystemModelSimulationData[\xe2\x80\xa6] represents simulation data from functions such as SystemModelSimulate e"},{label:"SystemOpen",type:"keyword",info:'SystemOpen["target"] opens the specified file, URL, or other target with the associated program on y'},{label:"SystemOptions",type:"keyword",info:'SystemOptions["name"] gives the current setting for the internal system option with the specified na'},{label:"SystemProcessData",type:"keyword",info:"SystemProcessData[] returns a Dataset containing information on the processes running on the host co"},{label:"SystemProcesses",type:"keyword",info:"SystemProcesses[] returns a list of ProcessObjects that represent system programs."},{label:"SystemsConnectionsModel",type:"keyword",info:"SystemsConnectionsModel[{sys , sys , \xe2\x80\xa6}, conxs, ins, outs] gives a model with inputs ins and outputs"},{label:"SystemsModelControllerData",type:"keyword",info:"SystemsModelControllerData[\xe2\x80\xa6] represents controller data generated by functions LQGRegulator, PIDTun"},{label:"SystemsModelDelay",type:"keyword",info:"SystemsModelDelay[\xce.b4] represents a time delay of \xce.b4 in a StateSpaceModel or TransferFunctionModel."},{label:"SystemsModelDelayApproximate",type:"keyword",info:"SystemsModelDelayApproximate[sys, ord] gives a delay-free system by using approximations of order or"},{label:"SystemsModelDelete",type:"keyword",info:"SystemsModelDelete[sys, {in , \xe2\x80\xa6}] deletes the subsystem of the systems model sys associated with inp"},{label:"SystemsModelDimensions",type:"keyword",info:"SystemsModelDimensions[sys] gives the number of inputs and outputs of the systems model sys."},{label:"SystemsModelExtract",type:"keyword",info:"SystemsModelExtract[sys, {in , \xe2\x80\xa6}] extracts the subsystem of the systems model sys associated with i"},{label:"SystemsModelFeedbackConnect",type:"keyword",info:"                                                                                                    "},{label:"SystemsModelLabels",type:"keyword",info:"SystemsModelLabels is an option to StateSpaceModel etc. that specifies labels of variables."},{label:"SystemsModelLinearity",type:"keyword",info:"SystemsModelLinearity[sys] gives the linearity of the systems model sys.SystemsModelLinearity[{sys, "},{label:"SystemsModelMerge",type:"keyword",info:"SystemsModelMerge[{sys , sys , \xe2\x80\xa6}] merges the systems models sys . \n                      1     2   "},{label:"SystemsModelOrder",type:"keyword",info:"SystemsModelOrder[sys] gives the order of the state-space model sys."},{label:"SystemsModelParallelConnect",type:"keyword",info:"SystemsModelParallelConnect[sys , sys ] connects the systems models sys  and sys  in parallel.System"},{label:"SystemsModelSeriesConnect",type:"keyword",info:"SystemsModelSeriesConnect[sys , sys ] connects systems models sys  and sys  in series. SystemsModelS"},{label:"SystemsModelStateFeedbackConnect",type:"keyword",info:"                                                                                                    "},{label:"SystemsModelVectorRelativeOrders",type:"keyword",info:"SystemsModelVectorRelativeOrders[sys] gives the vector-relative orders of the systems model sys."},{label:"SystemStub",type:"keyword",info:'SystemStub[{sym , sym , \xe2\x80\xa6}, "context", "filename"] saves definitions of given symbols {sym , sym , \xe2\x80\xa6'},{label:"SystemTest",type:"keyword",info:"System`SystemTest"},{label:"Tab",type:"keyword",info:"System`Tab"},{label:"TabFilling",type:"keyword",info:"TabFilling is an option for character selections that specifies how a Tab character is represented o"},{label:"Table",type:"keyword",info:"Table[expr, n] generates a list of n copies of expr. Table[expr, {i, i   }] generates a list of the "},{label:"TableAlignments",type:"keyword",info:"TableAlignments is an option for TableForm and MatrixForm which specifies how entries in each dimens"},{label:"TableDepth",type:"keyword",info:"TableDepth is an option for TableForm and MatrixForm that specifies the maximum number of levels to "},{label:"TableDirections",type:"keyword",info:"TableDirections is an option for TableForm and MatrixForm which specifies whether successive dimensi"},{label:"TableForm",type:"keyword",info:"TableForm[list] prints with the elements of list arranged in an array of rectangular cells. "},{label:"TableHeadings",type:"keyword",info:"TableHeadings is an option for TableForm and MatrixForm that gives the labels to be printed for entr"},{label:"TableSpacing",type:"keyword",info:"TableSpacing is an option for TableForm and MatrixForm that specifies how many spaces should be left"},{label:"TableView",type:"keyword",info:"TableView[{{expr  , expr  , \xe2\x80\xa6}, {expr  , expr  , \xe2\x80\xa6}, \xe2\x80\xa6}] displays as a spreadsheet-like table view f"},{label:"TableViewBox",type:"keyword",info:"System`TableViewBox"},{label:"TableViewBoxAlignment",type:"keyword",info:"System`TableViewBoxAlignment"},{label:"TableViewBoxBackground",type:"keyword",info:"System`TableViewBoxBackground"},{label:"TableViewBoxHeaders",type:"keyword",info:"System`TableViewBoxHeaders"},{label:"TableViewBoxItemSize",type:"keyword",info:"System`TableViewBoxItemSize"},{label:"TableViewBoxItemStyle",type:"keyword",info:"System`TableViewBoxItemStyle"},{label:"TableViewBoxOptions",type:"keyword",info:"System`TableViewBoxOptions"},{label:"TabSpacings",type:"keyword",info:"TabSpacings is an option for character selections that specifies the number of spaces in ems that th"},{label:"TabView",type:"keyword",info:"                                                                                                    "},{label:"TabViewBox",type:"keyword",info:"System`TabViewBox"},{label:"TabViewBoxOptions",type:"keyword",info:"TabViewBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for TabViewBo"},{label:"TagBox",type:"keyword",info:"TagBox[boxes, tag] is a low-level box construct that displays as boxes but maintains tag to guide th"},{label:"TagBoxNote",type:"keyword",info:"System`TagBoxNote"},{label:"TagBoxOptions",type:"keyword",info:"TagBoxOptions is an option that specifies settings for TagBox objects."},{label:"TaggingRules",type:"keyword",info:"TaggingRules is an option for selections that specifies a list of strings to be associated with a se"},{label:"TagSet",type:"keyword",info:"f/:lhs = rhs assigns rhs to be the value of lhs, and associates the assignment with the symbol f. "},{label:"TagSetDelayed",type:"keyword",info:"f/:lhs := rhs assigns rhs to be the delayed value of lhs, and associates the assignment with the sym"},{label:"TagStyle",type:"keyword",info:"System`TagStyle"},{label:"TagUnset",type:"keyword",info:"f/:lhs=. removes any rules defined for lhs, associated with the symbol f. "},{label:"Take",type:"keyword",info:"Take[list, n] gives the first n elements of list. Take[list, -n] gives the last n elements of list. "},{label:"TakeDrop",type:"keyword",info:"TakeDrop[list, n] gives the pair {list , list }, where list  contains the first n elements of list a"},{label:"TakeLargest",type:"keyword",info:"TakeLargest[list, n] gives the n numerically largest elements in list, sorted in descending order.Ta"},{label:"TakeLargestBy",type:"keyword",info:"TakeLargestBy[list, f, n] gives the n elements e  in list for which f[e ] is largest, sorted in d"},{label:"TakeList",type:"keyword",info:"TakeList[list, {n , n , \xe2\x80\xa6}] gives the list of results obtained by successively taking n  elements fr"},{label:"TakeSmallest",type:"keyword",info:"TakeSmallest[list, n] gives the n numerically smallest elements in list, sorted in ascending order.T"},{label:"TakeSmallestBy",type:"keyword",info:"TakeSmallestBy[list, f, n] gives the n elements e  in list for which f[e ] is smallest, sorted in as"},{label:"TakeWhile",type:"keyword",info:"TakeWhile[list, crit] gives elements e  from the beginning of list, continuing so long as crit[e ] i"},{label:"Tally",type:"keyword",info:"Tally[list] tallies the elements in list, listing all distinct elements together with their multipli"},{label:"Tan",type:"keyword",info:"Tan[z] gives the tangent of z."},{label:"Tanh",type:"keyword",info:"Tanh[z] gives the hyperbolic tangent of z."},{label:"TargetDevice",type:"keyword",info:"TargetDevice is an option for certain functions that specifies whether CPU or GPU computation should"},{label:"TargetFunctions",type:"keyword",info:"TargetFunctions is an option for functions such as ComplexExpand and FindDistribution that specifies"},{label:"TargetSystem",type:"keyword",info:"TargetSystem is an option for FunctionCompile and related functions that specifies machine architect"},{label:"TargetUnits",type:"keyword",info:"TargetUnits is an option used to specify the desired output units for visualization functions operat"},{label:"TaskAbort",type:"keyword",info:"TaskAbort[task] generates an interrupt to abort the current execution of a task."},{label:"TaskExecute",type:"keyword",info:"TaskExecute[task] immediately executes an instance of the specified task, independently of any sched"},{label:"TaskObject",type:"keyword",info:"TaskObject[spec] is an object that represents a background task."},{label:"TaskRemove",type:"keyword",info:"TaskRemove[task] terminates and removes the specified task."},{label:"TaskResume",type:"keyword",info:"TaskResume[task] resumes execution of the specified task."},{label:"Tasks",type:"keyword",info:"Tasks[type] gives a list of TaskObject expressions representing currently submitted tasks of given t"},{label:"TaskSuspend",type:"keyword",info:"TaskSuspend[task] suspends the execution of the specified task."},{label:"TaskWait",type:"keyword",info:"TaskWait[task] waits for the specified task to be completely finished. "},{label:"TautologyQ",type:"keyword",info:"TautologyQ[bf] gives True if all combinations of values of variables make the Boolean function bf yi"},{label:"TelegraphProcess",type:"keyword",info:"TelegraphProcess[\xce\xbc] represents a telegraph process with rate \xce\xbc."},{label:"TemplateApply",type:"keyword",info:"TemplateApply[template] applies a template, evaluating all template elements it contains.TemplateApp"},{label:"TemplateArgBox",type:"keyword",info:"System`TemplateArgBox"},{label:"TemplateBox",type:"keyword",info:"TemplateBox[{box , box , \xe2\x80\xa6}, tag] is a low-level box structure that parameterizes the display and ev"},{label:"TemplateBoxOptions",type:"keyword",info:"TemplateBoxOptions is an option that specifies settings for TemplateBox objects."},{label:"TemplateEvaluate",type:"keyword",info:"System`TemplateEvaluate"},{label:"TemplateExpression",type:"keyword",info:"TemplateExpression[expr] represents an expression held until a template is applied, and then evaluat"},{label:"TemplateIf",type:"keyword",info:"TemplateIf[condition, tclause] represents an element of a template object that inserts tclause if th"},{label:"TemplateObject",type:"keyword",info:"TemplateObject[expr] represents a template object to be applied using functions like TemplateApply.T"},{label:"TemplateSequence",type:"keyword",info:"TemplateSequence[body, list] represents an element of a template object that yields a sequence consi"},{label:"TemplateSlot",type:"keyword",info:"                                                                   th\nTemplateSlot[n] represents a t"},{label:"TemplateSlotSequence",type:"keyword",info:"System`TemplateSlotSequence"},{label:"TemplateUnevaluated",type:"keyword",info:"System`TemplateUnevaluated"},{label:"TemplateVerbatim",type:"keyword",info:"System`TemplateVerbatim"},{label:"TemplateWith",type:"keyword",info:'TemplateWith["name" \xef\x94\xa2 value, expr] represents an element of a template object that evaluates expr af'},{label:"TemporalData",type:"keyword",info:"TemporalData[{v , v , \xe2\x80\xa6}, tspec] represents temporal data with values v  at times specified by tspec"},{label:"TemporalRegularity",type:"keyword",info:"TemporalRegularity is an option for TemporalData, TimeSeries, and EventSeries that controls whether "},{label:"Temporary",type:"keyword",info:"Temporary is an attribute assigned to symbols which are created as local variables by Module. "},{label:"TemporaryVariable",type:"keyword",info:"System`TemporaryVariable"},{label:"TensorContract",type:"keyword",info:"TensorContract[tensor, {{s  , s  }, {s  , s  }, \xe2\x80\xa6}] yields the contraction of tensor in the pairs {s"},{label:"TensorDimensions",type:"keyword",info:"TensorDimensions[tensor] gives the list of dimensions of tensor."},{label:"TensorExpand",type:"keyword",info:"TensorExpand[texpr] expands out tensor-related products in the symbolic tensor expression texpr."},{label:"TensorProduct",type:"keyword",info:"TensorProduct[tensor , tensor , \xe2\x80\xa6] represents the tensor product of the tensor .\n                   "},{label:"TensorQ",type:"keyword",info:"System`TensorQ"},{label:"TensorRank",type:"keyword",info:"TensorRank[tensor] gives the rank of tensor."},{label:"TensorReduce",type:"keyword",info:"TensorReduce[texpr] attempts to return a canonical form for the symbolic tensor expression texpr."},{label:"TensorSymmetry",type:"keyword",info:"TensorSymmetry[tensor] gives the symmetry of tensor under permutations of its slots.TensorSymmetry[t"},{label:"TensorTranspose",type:"keyword",info:"TensorTranspose[tensor, perm] represents the tensor obtained by transposing the slots of tensor as g"},{label:"TensorWedge",type:"keyword",info:"TensorWedge[tensor , tensor , \xe2\x80\xa6] represents the antisymmetrized tensor product of the tensor .\n     "},{label:"TestID",type:"keyword",info:"TestID is an option to VerificationTest that specifies a string used as an identifier for the test."},{label:"TestReport",type:"keyword",info:'TestReport["file"] runs tests from a file, returning an analysis of the completed test run.TestRepor'},{label:"TestReportObject",type:"keyword",info:"TestReportObject[\xe2\x80\xa6] gives an object that represents the results of TestReport."},{label:"TestResultObject",type:"keyword",info:"TestResultObject[\xe2\x80\xa6] gives an object that represents the results of a VerificationTest."},{label:"Tetrahedron",type:"keyword",info:"Tetrahedron[] represents a regular tetrahedron centered at the origin with unit edge length.Tetrahed"},{label:"TetrahedronBox",type:"keyword",info:"System`TetrahedronBox"},{label:"TetrahedronBoxOptions",type:"keyword",info:"System`TetrahedronBoxOptions"},{label:"TeXForm",type:"keyword",info:"TeXForm[expr] prints as a TeX version of expr. "},{label:"TeXSave",type:"keyword",info:'TeXSave["file.tex"] saves a TeX version of the current input notebook in the front end. TeXSave["fil'},{label:"Text",type:"keyword",info:"Text[expr] displays with expr in plain text format. Text[expr, coords] is a graphics primitive that "},{label:"Text3DBox",type:"keyword",info:"System`Text3DBox"},{label:"Text3DBoxOptions",type:"keyword",info:"Text3DBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for Text3DBox "},{label:"TextAlignment",type:"keyword",info:"TextAlignment is an option for Cell, Style and related constructs which specifies how successive lin"},{label:"TextBand",type:"keyword",info:"System`TextBand"},{label:"TextBoundingBox",type:"keyword",info:"System`TextBoundingBox"},{label:"TextBox",type:"keyword",info:"System`TextBox"},{label:"TextCases",type:"keyword",info:"TextCases[text, form] gives a list of all cases of text identified as being of type form that appear"},{label:"TextCell",type:"keyword",info:'TextCell["string"] gives a text cell that can appear in a Wolfram System notebook.TextCell["string",'},{label:"TextClipboardType",type:"keyword",info:"TextClipboardType is an option for cells that specifies how Edit \xe2\x96\\[Paragraph] Copy treats a cell when convertin"},{label:"TextContents",type:"keyword",info:"TextContents[text] gives a dataset of information about entities, dates, quantities and other conten"},{label:"TextData",type:"keyword",info:"TextData[exprs] is a low-level representation of the contents of a textual cell."},{label:"TextElement",type:"keyword",info:"TextElement[text, props] represents an element of text with the specified properties.TextElement[{el"},{label:"TextForm",type:"keyword",info:"System`TextForm"},{label:"TextGrid",type:"keyword",info:"TextGrid[{{expr  , expr  , \xe2\x80\xa6}, {expr  , expr  , \xe2\x80\xa6}, \xe2\x80\xa6}] is an object that formats expr   textually a"},{label:"TextJustification",type:"keyword",info:"TextJustification is an option for Cell and Inset which specifies how much lines of text can be stre"},{label:"TextLine",type:"keyword",info:"System`TextLine"},{label:"TextPacket",type:"keyword",info:"TextPacket[string] is a WSTP packet containing string, the text output from the Wolfram System as pr"},{label:"TextParagraph",type:"keyword",info:"System`TextParagraph"},{label:"TextPosition",type:"keyword",info:"TextPosition[text, form] gives a list of the starting and ending positions at which instances of for"},{label:"TextRecognize",type:"keyword",info:"TextRecognize[image] recognizes text in image and returns it as a string.TextRecognize[image, level]"},{label:"TextSearch",type:"keyword",info:"TextSearch[source, form] searches for files referenced by source that contain text matching form.Tex"},{label:"TextSearchReport",type:"keyword",info:"TextSearchReport[source, form] gives a structured report of files referenced by source that contain "},{label:"TextSentences",type:"keyword",info:'TextSentences["string"] gives a list of the runs of characters identified as sentences in string.Tex'},{label:"TextString",type:"keyword",info:"TextString[expr] gives a human-readable string representation of expr."},{label:"TextStructure",type:"keyword",info:'TextStructure["text"] generates a nested collection of TextElement objects representing the grammati'},{label:"TextStyle",type:"keyword",info:"TextStyle is an option for graphics functions and for Text which specifies the default style and fon"},{label:"TextTranslation",type:"keyword",info:'TextTranslation["text"] translates text into the current default language. TextTranslation["text", l'},{label:"Texture",type:"keyword",info:"Texture[obj] is a graphics directive that specifies that obj should be used as a texture on faces of"},{label:"TextureCoordinateFunction",type:"keyword",info:"TextureCoordinateFunction is an option to Plot3D and similar functions that specifies a function tha"},{label:"TextureCoordinateScaling",type:"keyword",info:"TextureCoordinateScaling is an option to Plot3D and similar functions that specifies whether argumen"},{label:"TextWords",type:"keyword",info:'TextWords["string"] gives a list of the runs of characters identified as words in string.TextWords["'},{label:"Therefore",type:"keyword",info:"Therefore[x, y] displays as x \xe2\x88.b4 y."},{label:"ThermodynamicData",type:"keyword",info:'ThermodynamicData["name", "property"] gives the value of the specific property for the substance "na'},{label:"ThermometerGauge",type:"keyword",info:"ThermometerGauge[value] draws a thermometer showing value in a range of 0 to 1.ThermometerGauge[valu"},{label:"Thick",type:"keyword",info:"Thick is a graphics directive that specifies that lines which follow should be drawn thick."},{label:"Thickness",type:"keyword",info:"Thickness[r] is a graphics directive which specifies that lines which follow are to be drawn with th"},{label:"Thin",type:"keyword",info:"Thin is a graphics directive that specifies that lines which follow should be drawn thin."},{label:"Thinning",type:"keyword",info:"Thinning[image] finds the skeletons of foreground regions in image by applying morphological thinnin"},{label:"ThisLink",type:"keyword",info:"ThisLink is used in patterns for external packages to distinguish between several instances of the s"},{label:"ThomasPointProcess",type:"keyword",info:"                                                                                                    "},{label:"ThompsonGroupTh",type:"keyword",info:"ThompsonGroupTh[] represents the sporadic simple Thompson group Th."},{label:"Thread",type:"keyword",info:'Thread[f[args]] "threads" f over any lists that appear in args. Thread[f[args], h] threads f over an'},{label:"ThreadingLayer",type:"keyword",info:"ThreadingLayer[f] represents a net layer that takes several input arrays and applies a function f to"},{label:"ThreeJSymbol",type:"keyword",info:"ThreeJSymbol[{j , m }, {j , m }, {j , m }] gives the values of the Wigner 3\xe2\x80\x90j symbol. \n             "},{label:"Threshold",type:"keyword",info:"Threshold[data] thresholds data by replacing values close to zero by zero.Threshold[data, tspec] thr"},{label:"Through",type:"keyword",info:"Through[p[f , f ][x]] gives p[f [x], f [x]]. Through[expr, h] performs the transformation wherever h"},{label:"Throw",type:"keyword",info:"Throw[value] stops evaluation and returns value as the value of the nearest enclosing Catch.Throw[va"},{label:"ThueMorse",type:"keyword",info:"                         th\nThueMorse[n] gives the n\xef\x8e\xa0   term in the Thue\xe2\x80\x93Morse sequence."},{label:"Thumbnail",type:"keyword",info:"Thumbnail[image] gives a thumbnail version of an image.Thumbnail[file] gives a thumbnail of an image"},{label:"Thursday",type:"keyword",info:"Thursday is a day of the week."},{label:"TickDirection",type:"keyword",info:"TickDirection is an option for AxisObject that specifies where the ticks are drawn relative to the a"},{label:"TickLabelOrientation",type:"keyword",info:"TickLabelOrientation is an option for AxisObject that specifies how the tick labels should be orient"},{label:"TickLabelPositioning",type:"keyword",info:"TickLabelPositioning is an option for AxisObject that specifies how the tick labels should be positi"},{label:"TickLabels",type:"keyword",info:"TickLabels is an option for AxisObject that specifies how the tick marks should be labeled."},{label:"TickLengths",type:"keyword",info:"TickLengths is an option for AxisObject that specifies the lengths of the tick marks."},{label:"TickPositions",type:"keyword",info:"TickPositions is an option for AxisObject that specifies where the tick marks should be positioned."},{label:"Ticks",type:"keyword",info:"Ticks is an option for graphics functions that specifies tick marks for axes. "},{label:"TicksStyle",type:"keyword",info:"TicksStyle is an option for graphics functions which specifies how ticks should be rendered."},{label:"TideData",type:"keyword",info:"TideData[spec] returns the tidal properties for a location or a set of tidal parameters.TideData[spe"},{label:"Tilde",type:"keyword",info:"Tilde[x, y, \xe2\x80\xa6] displays as x \xe2\x88\xbc y \xe2\x88\xbc \xe2\x80\xa6."},{label:"TildeEqual",type:"keyword",info:"TildeEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x89\x83 y \xe2\x89\x83 \xe2\x80\xa6."},{label:"TildeFullEqual",type:"keyword",info:"TildeFullEqual[x, y, \xe2\x80\xa6] displays as x \xe2\x89\x85 y \xe2\x89\x85 \xe2\x80\xa6."},{label:"TildeTilde",type:"keyword",info:"TildeTilde[x, y, \xe2\x80\xa6] displays as x \xe2\x89\x88 y \xe2\x89\x88 \xe2\x80\xa6."},{label:"TimeConstrained",type:"keyword",info:"TimeConstrained[expr, t] evaluates expr, stopping after t seconds. TimeConstrained[expr, t, failexpr"},{label:"TimeConstraint",type:"keyword",info:"TimeConstraint is an option for various functions that specifies the maximum time to spend doing a p"},{label:"TimeDirection",type:"keyword",info:"TimeDirection is an option for Sunrise, Sunset, and related functions that specifies whether the nex"},{label:"TimeFormat",type:"keyword",info:"TimeFormat is an option that determines the time formatting that is used when formatting a TimeObjec"},{label:"TimeGoal",type:"keyword",info:"TimeGoal is an option for various functions that specifies how long to spend doing a particular oper"},{label:"TimelinePlot",type:"keyword",info:"TimelinePlot[{date , date , \xe2\x80\xa6}] makes a timeline plot with dates date , date , \xe2\x80\xa6. TimelinePlot[{even"},{label:"TimeObject",type:"keyword",info:"TimeObject[] represents the current time.TimeObject[{h, m, s}] represents a time object of standard "},{label:"TimeObjectQ",type:"keyword",info:"TimeObjectQ[expr] gives True if expr is a TimeObject with valid arguments, and False otherwise."},{label:"TimeRemaining",type:"keyword",info:"TimeRemaining[] gives the number of seconds remaining until the earliest enclosing TimeConstrained w"},{label:"Times",type:"keyword",info:"x * y * z, x \xc3\x97 y \xc3\x97 z, or x y z represents a product of terms. "},{label:"TimesBy",type:"keyword",info:"x *= c multiplies x by c and returns the new value of x. "},{label:"TimeSeries",type:"keyword",info:"TimeSeries[{{t , v }, {t , v } \xe2\x80\xa6}] represents a time series specified by time-value pairs {t , v }.T"},{label:"TimeSeriesAggregate",type:"keyword",info:"TimeSeriesAggregate[tseries, dt] computes the mean value of tseries over non-overlapping windows of "},{label:"TimeSeriesForecast",type:"keyword",info:"TimeSeriesForecast[tproc, data, k] gives the k-step-ahead forecast beyond data according to the time"},{label:"TimeSeriesInsert",type:"keyword",info:"TimeSeriesInsert[tseries, {t, v}] inserts a value v at time t in the time series tseries.TimeSeriesI"},{label:"TimeSeriesInvertibility",type:"keyword",info:"TimeSeriesInvertibility[tproc] gives conditions for the time series process tproc to be invertible. "},{label:"TimeSeriesMap",type:"keyword",info:"TimeSeriesMap[f, tseries] applies f to the values in tseries."},{label:"TimeSeriesMapThread",type:"keyword",info:"TimeSeriesMapThread[f, tseries] gives {{t , f[t , x ]}, {t , f[t , x ]}, \xe2\x80\xa6} for the time series tser"},{label:"TimeSeriesModel",type:"keyword",info:"TimeSeriesModel[\xe2\x80\xa6] represents the symbolic time series model obtained from TimeSeriesModelFit."},{label:"TimeSeriesModelFit",type:"keyword",info:"TimeSeriesModelFit[data] constructs a time series model for data from an automatically selected mode"},{label:"TimeSeriesResample",type:"keyword",info:"TimeSeriesResample[tseries] uniformly resamples tseries according to its minimum time increment.Time"},{label:"TimeSeriesRescale",type:"keyword",info:"TimeSeriesRescale[tseries, {t   , t   }] rescales the times in time series tseries to run from t    "},{label:"TimeSeriesShift",type:"keyword",info:"TimeSeriesShift[tseries, shift] shifts the time series tseries to the left or right according to shi"},{label:"TimeSeriesThread",type:"keyword",info:"TimeSeriesThread[f, {tseries , tseries , \xe2\x80\xa6}] combines the tseries  using the function f.\n           "},{label:"TimeSeriesWindow",type:"keyword",info:"TimeSeriesWindow[tseries, {t   , t   }] gives the elements of the time series tseries that fall betw"},{label:"TimeSystem",type:"keyword",info:"TimeSystem is an option for time functions that specifies the time system being used to define time."},{label:"TimeSystemConvert",type:"keyword",info:"TimeSystemConvert[date, tsys] converts the date object date to the specified time system tsys.TimeSy"},{label:"TimeUsed",type:"keyword",info:"TimeUsed[] gives the total number of seconds of CPU time used so far in the current Wolfram System s"},{label:"TimeValue",type:"keyword",info:"TimeValue[s, i, t] calculates the time value of a security s at time t for an interest specified by "},{label:"TimeWarpingCorrespondence",type:"keyword",info:"TimeWarpingCorrespondence[s , s ] gives the time warping (DTW) similarity path between sequences s  "},{label:"TimeWarpingDistance",type:"keyword",info:"TimeWarpingDistance[s , s ] gives the dynamic time warping (DTW) distance between sequences s  and s"},{label:"TimeZone",type:"keyword",info:"TimeZone is an option for DateObject, DateString, and related functions that specifies the time zone"},{label:"TimeZoneConvert",type:"keyword",info:"TimeZoneConvert[time, timezone] converts the date or time object time to the specified time zone tim"},{label:"TimeZoneOffset",type:"keyword",info:"TimeZoneOffset[tz] gives the numeric offset between the time zone tz and GMT on the current date.Tim"},{label:"Timing",type:"keyword",info:"Timing[expr] evaluates expr, and returns a list of the time in seconds used, together with the resul"},{label:"Tiny",type:"keyword",info:"Tiny is a style or option setting that specifies that objects should be tiny."},{label:"TitleGrouping",type:"keyword",info:"System`TitleGrouping"},{label:"TitsGroupT",type:"keyword",info:"TitsGroupT[] represents the simple Tits group T."},{label:"ToBoxes",type:"keyword",info:"ToBoxes[expr] generates boxes corresponding to the printed form of expr in StandardForm. ToBoxes[exp"},{label:"ToCharacterCode",type:"keyword",info:'ToCharacterCode["string"] gives a list of the integer codes corresponding to the characters in a str'},{label:"ToColor",type:"keyword",info:"ToColor[color, form] converts color to form if form is GrayLevel, RGBColor or CMYKColor. Otherwise f"},{label:"ToContinuousTimeModel",type:"keyword",info:"ToContinuousTimeModel[lsys] gives the continuous-time approximation of the discrete-time systems mod"},{label:"ToDate",type:"keyword",info:"ToDate[time] converts an absolute time in seconds since the beginning of January 1, 1900 to a date o"},{label:"Today",type:"keyword",info:"Today gives a DateObject representing the current day."},{label:"ToDiscreteTimeModel",type:"keyword",info:"ToDiscreteTimeModel[lsys, \xcf\x84] gives the discrete-time approximation, with sampling period \xcf\x84, of the c"},{label:"ToEntity",type:"keyword",info:"ToEntity[expr] returns an entity object corresponding to the given expression.ToEntity[expr, type] r"},{label:"ToeplitzMatrix",type:"keyword",info:"ToeplitzMatrix[n] gives the n\xc3\x97n Toeplitz matrix with first row and first column being successive int"},{label:"ToExpression",type:"keyword",info:"ToExpression[input] gives the expression obtained by interpreting strings or boxes as Wolfram Langua"},{label:"ToFileName",type:"keyword",info:'ToFileName["directory", "name"] assembles a full file name from a directory name and a file name. To'},{label:"Together",type:"keyword",info:"Together[expr] puts terms in a sum over a common denominator, and cancels factors in the result. "},{label:"Toggle",type:"keyword",info:"System`Toggle"},{label:"ToggleFalse",type:"keyword",info:"System`ToggleFalse"},{label:"Toggler",type:"keyword",info:"Toggler[x] represents a toggler button with setting x, that toggles between True and False. Toggler["},{label:"TogglerBar",type:"keyword",info:"TogglerBar[x, {val , val , \xe2\x80\xa6}] represents a toggler bar with setting x and with toggler buttons for "},{label:"TogglerBox",type:"keyword",info:"System`TogglerBox"},{label:"TogglerBoxOptions",type:"keyword",info:"TogglerBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for TogglerBo"},{label:"ToHeldExpression",type:"keyword",info:"System`ToHeldExpression"},{label:"ToInvertibleTimeSeries",type:"keyword",info:"ToInvertibleTimeSeries[tproc] returns an invertible version of a time series process tproc."},{label:"TokenWords",type:"keyword",info:"TokenWords is an option for Read and related functions which gives a list of token words to be used "},{label:"Tolerance",type:"keyword",info:"Tolerance is an option for various numerical options which specifies the tolerance that should be al"},{label:"ToLowerCase",type:"keyword",info:"ToLowerCase[string] yields a string in which all letters have been converted to lowercase. "},{label:"Tomorrow",type:"keyword",info:"Tomorrow gives a DateObject representing the following day."},{label:"ToNumberField",type:"keyword",info:"ToNumberField[a, \xce\xb8] expresses the algebraic number a in the number field generated by \xce\xb8. ToNumberFie"},{label:"TooBig",type:"keyword",info:"TooBig is an internal symbol."},{label:"Tooltip",type:"keyword",info:"Tooltip[expr, label] displays label as a tooltip while the mouse pointer is in the area where expr i"},{label:"TooltipBox",type:"keyword",info:"System`TooltipBox"},{label:"TooltipBoxOptions",type:"keyword",info:"TooltipBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for TooltipBo"},{label:"TooltipDelay",type:"keyword",info:"TooltipDelay is an option for objects such as Tooltip that specifies how long to delay after the mou"},{label:"TooltipStyle",type:"keyword",info:"TooltipStyle is an option for tooltips that specifies the style to use in displaying their elements."},{label:"ToonShading",type:"keyword",info:"ToonShading[] is a three-dimensional graphics directive specifying that surfaces that follow are to "},{label:"Top",type:"keyword",info:"Top is a symbol that represents the top for purposes of alignment and positioning. "},{label:"TopHatTransform",type:"keyword",info:"TopHatTransform[image, ker] gives the morphological top-hat transform of image with respect to struc"},{label:"ToPolarCoordinates",type:"keyword",info:"ToPolarCoordinates[{x, y}] gives the {r, \xce\xb8} polar coordinates corresponding to the Cartesian coordin"},{label:"TopologicalSort",type:"keyword",info:"TopologicalSort[g] gives a list of vertices of g in topologically sorted order for a directed acycli"},{label:"ToRadicals",type:"keyword",info:"ToRadicals[expr] attempts to express all Root objects in expr in terms of radicals. "},{label:"ToRules",type:"keyword",info:"ToRules[eqns] takes logical combinations of equations, in the form generated by Roots and Reduce, an"},{label:"Torus",type:"keyword",info:"Torus[{x, y, z}, {r     , r     }] represents a torus centered at {x, y, z} with inner radius r     "},{label:"ToSphericalCoordinates",type:"keyword",info:"ToSphericalCoordinates[{x, y, z}] gives the {r, \xce\xb8, \xcf\x95} spherical coordinates corresponding to the Car"},{label:"ToString",type:"keyword",info:"ToString[expr] gives a string corresponding to the printed form of expr in OutputForm. ToString[expr"},{label:"Total",type:"keyword",info:"Total[list] gives the total of the elements in list. Total[list, n] totals all elements down to leve"},{label:"TotalHeight",type:"keyword",info:"System`TotalHeight"},{label:"TotalLayer",type:"keyword",info:"TotalLayer[] represents a net layer taking a list of input arrays and performing elementwise additio"},{label:"TotalVariationFilter",type:"keyword",info:"TotalVariationFilter[data] iteratively reduces noise while preserving rapid transitions in data.Tota"},{label:"TotalWidth",type:"keyword",info:"TotalWidth is an option that can be set for output streams to specify the maximum total number of ch"},{label:"TouchPosition",type:"keyword",info:"                                                                                                    "},{label:"TouchscreenAutoZoom",type:"keyword",info:"TouchscreenAutoZoom is an option for Manipulate and Graphics3D that determines whether the interface"},{label:"TouchscreenControlPlacement",type:"keyword",info:"TouchscreenControlPlacement is an option for Manipulate that determines the placement of the slide-o"},{label:"ToUpperCase",type:"keyword",info:"ToUpperCase[string] yields a string in which all letters have been converted to uppercase. "},{label:"TourVideo",type:"keyword",info:"TourVideo[graphics, {pt , pt , \xe2\x80\xa6}] generates a video by taking a tour at points pt  around graphics."},{label:"Tr",type:"keyword",info:"Tr[list] finds the trace of the matrix or tensor list. Tr[list, f] finds a generalized trace, combin"},{label:"Trace",type:"keyword",info:"Trace[expr] generates a list of all expressions used in the evaluation of expr. Trace[expr, form] in"},{label:"TraceAbove",type:"keyword",info:"TraceAbove is an option for Trace and related functions which specifies whether to include evaluatio"},{label:"TraceAction",type:"keyword",info:"TraceAction is an option for TracePrint and TraceDialog that specifies the function to be applied to"},{label:"TraceBackward",type:"keyword",info:"TraceBackward is an option for Trace and related functions that specifies whether to include precedi"},{label:"TraceDepth",type:"keyword",info:"TraceDepth is an option for Trace and related functions which specifies the maximum nesting of evalu"},{label:"TraceDialog",type:"keyword",info:"TraceDialog[expr] initiates a dialog for every expression used in the evaluation of expr. TraceDialo"},{label:"TraceForward",type:"keyword",info:"TraceForward is an option for Trace and related functions which specifies whether to include later e"},{label:"TraceInternal",type:"keyword",info:"TraceInternal is an option for Trace and related functions which, if True or False, specifies whethe"},{label:"TraceLevel",type:"keyword",info:"TraceLevel[] returns the level currently being traced when it appears within Trace and related funct"},{label:"TraceOff",type:"keyword",info:"TraceOff is an option for Trace and related functions which specifies forms inside which tracing sho"},{label:"TraceOn",type:"keyword",info:"TraceOn is an option for Trace and related functions which specifies when tracing should be switched"},{label:"TraceOriginal",type:"keyword",info:"TraceOriginal is an option for Trace and related functions which specifies whether to test the form "},{label:"TracePrint",type:"keyword",info:"TracePrint[expr] prints all expressions used in the evaluation of expr. TracePrint[expr, form] inclu"},{label:"TraceScan",type:"keyword",info:"TraceScan[f, expr] applies f to all expressions used in the evaluation of expr. TraceScan[f, expr, f"},{label:"TrackCellChangeTimes",type:"keyword",info:"System`TrackCellChangeTimes"},{label:"TrackedSymbols",type:"keyword",info:"TrackedSymbols is an option to Refresh, Manipulate, and related functions that specifies which symbo"},{label:"TrackingFunction",type:"keyword",info:"TrackingFunction is an option for Manipulate controls that specifies functions to use during interac"},{label:"TracyWidomDistribution",type:"keyword",info:"TracyWidomDistribution[\xce.b2] represents a Tracy\xe2\x80\x93Widom distribution with Dyson index \xce.b2."},{label:"TradingChart",type:"keyword",info:"TradingChart[{{date , {open , high , low , close , volume }}, \xe2\x80\xa6}] makes a chart showing prices and v"},{label:"TraditionalForm",type:"keyword",info:"TraditionalForm[expr] prints as an approximation to the traditional mathematical notation for expr. "},{label:"TraditionalFunctionNotation",type:"keyword",info:"TraditionalFunctionNotation is an option for selections that specifies whether input of the form f(x"},{label:"TraditionalNotation",type:"keyword",info:"System`TraditionalNotation"},{label:"TraditionalOrder",type:"keyword",info:"System`TraditionalOrder"},{label:"TrainImageContentDetector",type:"keyword",info:"TrainImageContentDetector[{img  \xef\x94\xa2 {bbox  \xef\x94\xa2 class , \xe2\x80\xa6}, \xe2\x80\xa6}] trains a ContentDetectorFunction[\xe2\x80\xa6] based"},{label:"TrainingProgressCheckpointing",type:"keyword",info:"TrainingProgressCheckpointing is an option for NetTrain that specifies how to save copies of the net"},{label:"TrainingProgressFunction",type:"keyword",info:"TrainingProgressFunction is an option for NetTrain that specifies a function to run periodically dur"},{label:"TrainingProgressMeasurements",type:"keyword",info:"TrainingProgressMeasurements is an option for NetTrain that specifies measurements to make while tra"},{label:"TrainingProgressReporting",type:"keyword",info:"TrainingProgressReporting is an option for NetTrain and related functions that specifies how to repo"},{label:"TrainingStoppingCriterion",type:"keyword",info:"TrainingStoppingCriterion is an option for NetTrain that specifies a criterion for stopping training"},{label:"TrainingUpdateSchedule",type:"keyword",info:"TrainingUpdateSchedule is an option for NetTrain that specifies which arrays of the network can be u"},{label:"TrainTextContentDetector",type:"keyword",info:"TrainTextContentDetector[{text  \xef\x94\xa2 {span  \xef\x94\xa2 class , \xe2\x80\xa6}, \xe2\x80\xa6}] trains a ContentDetectorFunction[\xe2\x80\xa6] based"},{label:"TransferFunctionCancel",type:"keyword",info:"TransferFunctionCancel[tfm] cancels common poles and zeros in the TransferFunctionModel tfm.Transfer"},{label:"TransferFunctionExpand",type:"keyword",info:"TransferFunctionExpand[tfm] expands polynomial terms in the numerators and denominators of the Trans"},{label:"TransferFunctionFactor",type:"keyword",info:"TransferFunctionFactor[tfm] factors the polynomial terms in the numerators and denominators of the T"},{label:"TransferFunctionModel",type:"keyword",info:"TransferFunctionModel[m, s] represents the model of the transfer-function matrix m with complex vari"},{label:"TransferFunctionPoles",type:"keyword",info:"TransferFunctionPoles[tfm] gives a matrix of roots of the denominators in the TransferFunctionModel "},{label:"TransferFunctionTransform",type:"keyword",info:"TransferFunctionTransform[f, tf] transforms the TransferFunctionModel object tf using the transforma"},{label:"TransferFunctionZeros",type:"keyword",info:"TransferFunctionZeros[tfm] gives a matrix of roots of the numerators in the TransferFunctionModel tf"},{label:"TransformationClass",type:"keyword",info:"TransformationClass is an option that specifies the class of geometric transformations to be used."},{label:"TransformationFunction",type:"keyword",info:"TransformationFunction[data] represents a transformation function that applies geometric and other t"},{label:"TransformationFunctions",type:"keyword",info:"TransformationFunctions is an option for Simplify and FullSimplify which gives the list of functions"},{label:"TransformationMatrix",type:"keyword",info:"TransformationMatrix[tfun] gives the homogeneous matrix associated with a TransformationFunction obj"},{label:"TransformedDistribution",type:"keyword",info:"TransformedDistribution[expr, x \xef\x8f\x92 dist] represents the transformed distribution of expr where the ra"},{label:"TransformedField",type:"keyword",info:"TransformedField[t, f, {x , x , \xe2\x80\xa6, x } \xef\x94\xa2 {y , y , \xe2\x80\xa6, y }] uses the coordinate transformation t to tr"},{label:"TransformedProcess",type:"keyword",info:"TransformedProcess[expr, x \xef\x8f\x92 proc, t] represents the transformed process of expr where the variable "},{label:"TransformedRegion",type:"keyword",info:"TransformedRegion[reg, f] represents the transformed region {f(p) | p \xe2\x88\x88 reg}, where reg is a region "},{label:"TransitionDirection",type:"keyword",info:"TransitionDirection is an option for PaneSelector that specifies the direction in which a transition"},{label:"TransitionDuration",type:"keyword",info:"TransitionDuration is an option for PaneSelector that specifies the duration in seconds that a trans"},{label:"TransitionEffect",type:"keyword",info:"TransitionEffect is an option for PaneSelector that specifies the visual effect used when transition"},{label:"TransitiveClosureGraph",type:"keyword",info:"TransitiveClosureGraph[g] gives the transitive closure of the graph g.TransitiveClosureGraph[{v \xef\x94\xa2 w,"},{label:"TransitiveReductionGraph",type:"keyword",info:"TransitiveReductionGraph[g] gives a transitive reduction of the graph g.TransitiveReductionGraph[{v "},{label:"Translate",type:"keyword",info:"Translate[g, {x, y, \xe2\x80\xa6}] represents graphics primitives g translated by the vector {x, y, \xe2\x80\xa6}. Transla"},{label:"TranslationOptions",type:"keyword",info:"TranslationOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option for Style and Cell that controls how"},{label:"TranslationTransform",type:"keyword",info:"TranslationTransform[v] gives a TransformationFunction that represents translation of points by a ve"},{label:"Transliterate",type:"keyword",info:'Transliterate["string"] attempts to transliterate string into plain ASCII.Transliterate["string", sc'},{label:"Transparent",type:"keyword",info:"Transparent represents perfect transparency in graphics or style specifications. "},{label:"TransparentColor",type:"keyword",info:"System`TransparentColor"},{label:"Transpose",type:"keyword",info:"                                                                                                    "},{label:"TransposeLayer",type:"keyword",info:"                                                                                                    "},{label:"TrapEnterKey",type:"keyword",info:"System`TrapEnterKey"},{label:"TrapSelection",type:"keyword",info:"System`TrapSelection"},{label:"TravelDirections",type:"keyword",info:"TravelDirections[{loc , loc , \xe2\x80\xa6}] generates directions for travel from loc  to loc , \xe2\x80\xa6.TravelDirecti"},{label:"TravelDirectionsData",type:"keyword",info:"TravelDirectionsData[\xe2\x80\xa6] represents travel directions generated by TravelDirections."},{label:"TravelDistance",type:"keyword",info:"TravelDistance[{loc , loc , \xe2\x80\xa6}] gives the estimated distance for travel from loc  to loc , \xe2\x80\xa6.\n      "},{label:"TravelDistanceList",type:"keyword",info:"TravelDistanceList[{loc , loc , \xe2\x80\xa6, loc }] returns the list {TravelDistance[loc , loc ], \xe2\x80\xa6, TravelDis"},{label:"TravelMethod",type:"keyword",info:"TravelMethod is an option for TravelDirections and related functions that specifies the mode of tran"},{label:"TravelTime",type:"keyword",info:"TravelTime[{loc , loc , \xe2\x80\xa6}] gives the estimated time to travel from loc  to loc , \xe2\x80\xa6.\n               "},{label:"Tree",type:"keyword",info:"Tree[{subtree , subtree , \xe2\x80\xa6}] represents a tree with a list of child subtrees subtree .Tree[data, su"},{label:"TreeCases",type:"keyword",info:"TreeCases[tree, pattern] gives a list of subtrees of tree with data matching pattern.TreeCases[tree,"},{label:"TreeChildren",type:"keyword",info:"TreeChildren[tree] extracts the children of the root of the Tree object tree."},{label:"TreeCount",type:"keyword",info:"TreeCount[tree, pattern] gives the number of subtrees of tree whose data matches pattern.TreeCount[t"},{label:"TreeData",type:"keyword",info:"TreeData[tree] extracts the data in the root of tree."},{label:"TreeDelete",type:"keyword",info:"TreeDelete[tree, pos] deletes the subtree of tree at the position specified by pos.TreeDelete[tree, "},{label:"TreeDepth",type:"keyword",info:"TreeDepth[tree] gives the maximum level of tree.TreeDepth[tree, pattern] gives the maximum level of "},{label:"TreeElementLabel",type:"keyword",info:"TreeElementLabel is an option for Tree and related functions that specifies what labels should be us"},{label:"TreeElementStyle",type:"keyword",info:"TreeElementStyle is an option for Tree and related functions that specifies what style to use for su"},{label:"TreeExpression",type:"keyword",info:"TreeExpression[tree] gives the expression corresponding to the tree tree.TreeExpression[tree, struct"},{label:"TreeExtract",type:"keyword",info:"TreeExtract[tree, pos] extracts the subtree of tree at the position specified by pos.TreeExtract[tre"},{label:"TreeFold",type:"keyword",info:"                                                                                                    "},{label:"TreeForm",type:"keyword",info:"TreeForm[expr] displays expr as a tree with different levels at different depths. TreeForm[expr, n] "},{label:"TreeGraph",type:"keyword",info:"TreeGraph[{v , v , \xe2\x80\xa6}, {u , u , \xe2\x80\xa6}] yields a tree where u  is the predecessor of v .TreeGraph[{e , e"},{label:"TreeGraphQ",type:"keyword",info:"TreeGraphQ[g] yields True if the graph g is a tree and False otherwise."},{label:"TreeInsert",type:"keyword",info:"TreeInsert[tree, child, pos] inserts child at the position specified by pos in tree.TreeInsert[tree,"},{label:"TreeLayout",type:"keyword",info:"TreeLayout is an option to Tree and related functions that specifies what layout to use."},{label:"TreeLeafQ",type:"keyword",info:"TreeLeafQ[tree] gives True if tree is a tree with no children, and gives False otherwise."},{label:"TreeLeaves",type:"keyword",info:"TreeLeaves[tree] returns the list of leaves of the tree tree."},{label:"TreeLevel",type:"keyword",info:"TreeLevel[tree, levelspec] gives a list of all subtrees of tree on levels specified by levelspec.Tre"},{label:"TreeMap",type:"keyword",info:"TreeMap[f, tree] applies f to the data in each subtree of tree.TreeMap[f, tree, levelspec] applies f"},{label:"TreeMapAt",type:"keyword",info:"TreeMapAt[f, tree, pos] applies f to the data at the position specified by pos in tree.TreeMapAt[f, "},{label:"TreeOutline",type:"keyword",info:"TreeOutline[tree] gives an outline of the data in tree as a nested OpenerView.TreeOutline[tree, pos]"},{label:"TreePlot",type:"keyword",info:"TreePlot[g] generates a tree plot of the graph g.TreePlot[{e , e , \xe2\x80\xa6}] generates a tree plot of the "},{label:"TreePosition",type:"keyword",info:"TreePosition[tree, pattern] gives a list of the positions of subtrees of tree whose data matches pat"},{label:"TreeQ",type:"keyword",info:"TreeQ[tree] yields True if tree is a valid Tree object and False otherwise."},{label:"TreeReplacePart",type:"keyword",info:"TreeReplacePart[tree, pos \xef\x94\xa2 new] gives a tree in which the subtree of tree at the position specified"},{label:"TreeRules",type:"keyword",info:"TreeRules[tree] returns the rules associated with the Tree object tree."},{label:"TreeScan",type:"keyword",info:"TreeScan[f, tree] evaluates f applied to the data in each subtree of tree in turn.TreeScan[f, tree, "},{label:"TreeSelect",type:"keyword",info:"TreeSelect[tree, crit] picks out all subtrees tree  of tree for which crit[tree ] is True.TreeSelect"},{label:"TreeSize",type:"keyword",info:"TreeSize[tree] gives the number of subtrees of tree."},{label:"TreeTraversalOrder",type:"keyword",info:"TreeTraversalOrder is an option for TreeMap and related functions that specifies the order to visit "},{label:"TrendStyle",type:"keyword",info:"TrendStyle is an option to CandlestickChart, RenkoChart, and other financial charting functions that"},{label:"Triangle",type:"keyword",info:"Triangle[{p , p , p }] represents a filled triangle with corner points p , p , and p .Triangle[{{p  "},{label:"TriangleCenter",type:"keyword",info:"TriangleCenter[tri, type] gives the specified type of center for the triangle tri.TriangleCenter[tri"},{label:"TriangleConstruct",type:"keyword",info:"TriangleConstruct[tri, type] gives the specified type of construct for the triangle tri."},{label:"TriangleMeasurement",type:"keyword",info:"TriangleMeasurement[tri, type] gives the specified type of measurement for the triangle tri."},{label:"TriangleWave",type:"keyword",info:"TriangleWave[x] gives a triangle wave that varies between -1 and +1 with unit period.TriangleWave[{m"},{label:"TriangularDistribution",type:"keyword",info:"TriangularDistribution[{min, max}] represents a symmetric triangular statistical distribution giving"},{label:"TriangulateMesh",type:"keyword",info:"TriangulateMesh[mr] generates a triangulation of the mesh region mr."},{label:"Trig",type:"keyword",info:"Trig is an option for various polynomial manipulation functions that specifies whether trigonometric"},{label:"TrigExpand",type:"keyword",info:"TrigExpand[expr] expands out trigonometric functions in expr. "},{label:"TrigFactor",type:"keyword",info:"TrigFactor[expr] factors trigonometric functions in expr. "},{label:"TrigFactorList",type:"keyword",info:"TrigFactorList[expr] factors trigonometric functions in expr, yielding a list of lists containing tr"},{label:"Trigger",type:"keyword",info:"Trigger[Dynamic[u]] represents a trigger that can be pressed to make the dynamically updated value o"},{label:"TrigReduce",type:"keyword",info:"TrigReduce[expr] rewrites products and powers of trigonometric functions in expr in terms of trigono"},{label:"TrigToExp",type:"keyword",info:"TrigToExp[expr] converts trigonometric functions in expr to exponentials. "},{label:"TrimmedMean",type:"keyword",info:"TrimmedMean[list, f] gives the mean of the elements in list after dropping a fraction f of the small"},{label:"TrimmedVariance",type:"keyword",info:"TrimmedVariance[list, f] gives the variance of the elements in list after dropping a fraction f of t"},{label:"TropicalStormData",type:"keyword",info:"TropicalStormData[entity, property] gives the value of the specified property for the tropical storm"},{label:"True",type:"keyword",info:"True is the symbol for the Boolean value true. "},{label:"TrueQ",type:"keyword",info:"TrueQ[expr] yields True if expr is True, and yields False otherwise. "},{label:"TruncatedDistribution",type:"keyword",info:"TruncatedDistribution[{x   , x   }, dist] represents the distribution obtained by truncating the val"},{label:"TruncatedPolyhedron",type:"keyword",info:"TruncatedPolyhedron[poly] gives the truncated polyhedron of poly by truncating all vertices. Truncat"},{label:"TsallisQExponentialDistribution",type:"keyword",info:"TsallisQExponentialDistribution[\xce\xbb, q] represents a Tsallis q-exponential distribution with scale inv"},{label:"TsallisQGaussianDistribution",type:"keyword",info:"TsallisQGaussianDistribution[\xce\xbc, \xce.b2, q] represents a Tsallis q-Gaussian distribution with mean \xce\xbc, scal"},{label:"TTest",type:"keyword",info:"TTest[data] tests whether the mean of data is zero. TTest[{data , data }] tests whether the means of"},{label:"Tube",type:"keyword",info:"Tube[{{x , y , z }, {x , y , z }, \xe2\x80\xa6}] represents a 3D tube around the line joining a sequence of poi"},{label:"TubeBezierCurveBox",type:"keyword",info:"System`TubeBezierCurveBox"},{label:"TubeBezierCurveBoxOptions",type:"keyword",info:"TubeBezierCurveBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for T"},{label:"TubeBox",type:"keyword",info:"System`TubeBox"},{label:"TubeBoxOptions",type:"keyword",info:"TubeBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for TubeBox obje"},{label:"TubeBSplineCurveBox",type:"keyword",info:"System`TubeBSplineCurveBox"},{label:"TubeBSplineCurveBoxOptions",type:"keyword",info:"TubeBSplineCurveBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for "},{label:"Tuesday",type:"keyword",info:"Tuesday is a day of the week."},{label:"TukeyLambdaDistribution",type:"keyword",info:"TukeyLambdaDistribution[\xce\xbb] represents Tukey's lambda distribution with shape parameter \xce\xbb.TukeyLambda"},{label:"TukeyWindow",type:"keyword",info:"TukeyWindow[x] represents a Tukey window function of x.TukeyWindow[x, \xce\\[PlusMinus]] uses the parameter \xce\\[PlusMinus].\n"},{label:"TunnelData",type:"keyword",info:"TunnelData[entity, property] gives the value of the specified property for the tunnel entity.TunnelD"},{label:"Tuples",type:"keyword",info:"                                                                                                    "},{label:"TuranGraph",type:"keyword",info:"TuranGraph[n, k] gives the k-partite Tur\xc3\xa1n graph with n vertices T    .\n                            "},{label:"TuringMachine",type:"keyword",info:"TuringMachine[rule, init, t] generates a list representing the evolution of the Turing machine with "},{label:"TuttePolynomial",type:"keyword",info:"TuttePolynomial[g, {x, y}] gives the Tutte polynomial of the graph g.TuttePolynomial[{v \xef\x94\xa2 w, \xe2\x80\xa6}, \xe2\x80\xa6] "},{label:"TwoWayRule",type:"keyword",info:"x<->y or x \xef\x84\xa0 y represents a two-way rule expressing exchange or correspondence of x and y."},{label:"Typed",type:"keyword",info:"Typed[expr, type] represents an expression that should be assumed to be of a specified type for comp"},{label:"TypeDeclaration",type:"keyword",info:"System`TypeDeclaration"},{label:"TypeSpecifier",type:"keyword",info:"TypeSpecifier[cons] represents a type specifier that can be applied to other types to create a compo"},{label:"UnateQ",type:"keyword",info:"UnateQ[bexpr, {x , x , \xe2\x80\xa6}] tests whether the Boolean expression bexpr is positive unate in the varia"},{label:"Uncompress",type:"keyword",info:'Uncompress["string"] recovers an expression from a compressed string representation generated by Com'},{label:"UnconstrainedParameters",type:"keyword",info:"UnconstrainedParameters is an option to functions like GeometricScene that specifies what parameters"},{label:"Undefined",type:"keyword",info:"Undefined is a symbol that represents a quantity with no defined value."},{label:"UnderBar",type:"keyword",info:"UnderBar[expr] displays with a bar under expr."},{label:"Underflow",type:"keyword",info:"Underflow[] represents a number too small to represent explicitly on your computer system."},{label:"Underlined",type:"keyword",info:"Underlined represents an underlined font."},{label:"Underoverscript",type:"keyword",info:"                                                      z\nUnderoverscript[x, y, z] is an object that f"},{label:"UnderoverscriptBox",type:"keyword",info:"                                                                    z\nUnderoverscriptBox[x, y, z] is"},{label:"UnderoverscriptBoxOptions",type:"keyword",info:"UnderoverscriptBoxOptions is an option for selections that specifies settings for UnderoverscriptBox"},{label:"Underscript",type:"keyword",info:"Underscript[x, y] is an object that formats as x. \n                                               y"},{label:"UnderscriptBox",type:"keyword",info:"UnderscriptBox[x, y] is the low\xe2\x80\x90level box representation for x in notebook expressions. \n           "},{label:"UnderscriptBoxOptions",type:"keyword",info:"UnderscriptBoxOptions is an option for selections that specifies settings for UnderscriptBox objects"},{label:"UnderseaFeatureData",type:"keyword",info:"UnderseaFeatureData[entity, property] gives the value of the specified property for the undersea fea"},{label:"UndirectedEdge",type:"keyword",info:"                                                                                                    "},{label:"UndirectedGraph",type:"keyword",info:"UndirectedGraph[g] gives an undirected graph from the directed graph g.UndirectedGraph[{v \xef\x94\xa2 w, \xe2\x80\xa6}] u"},{label:"UndirectedGraphQ",type:"keyword",info:"UndirectedGraphQ[g] yields True if the graph g is an undirected graph and False otherwise."},{label:"UndoOptions",type:"keyword",info:"UndoOptions is an option for Style that specifies settings for controlling the behavior of the front"},{label:"UndoTrackedVariables",type:"keyword",info:"UndoTrackedVariables is an option for Manipulate, DynamicModule, and related functions that sets var"},{label:"Unequal",type:"keyword",info:"lhs != rhs or lhs \xe2\x89\xa0 rhs returns False if lhs and rhs are identical. "},{label:"UnequalTo",type:"keyword",info:"UnequalTo[y] is an operator form that yields x \xe2\x89\xa0 y when applied to an expression x."},{label:"Unevaluated",type:"keyword",info:"Unevaluated[expr] represents the unevaluated form of expr when it appears as the argument to a funct"},{label:"UniformDistribution",type:"keyword",info:"UniformDistribution[{min, max}] represents a continuous uniform statistical distribution giving valu"},{label:"UniformGraphDistribution",type:"keyword",info:"UniformGraphDistribution[n, m] represents a uniform graph distribution on n-vertex, m-edge graphs."},{label:"UniformPolyhedron",type:"keyword",info:'UniformPolyhedron["name"] gives the uniform polyhedron with the given name.UniformPolyhedron[{n, m}]'},{label:"UniformSumDistribution",type:"keyword",info:"UniformSumDistribution[n] represents the distribution of a sum of n random variables uniformly distr"},{label:"Uninstall",type:"keyword",info:"Uninstall[link] terminates an external program started by Install, and removes Wolfram Language defi"},{label:"Union",type:"keyword",info:"Union[list , list , \xe2\x80\xa6] gives a sorted list of all the distinct elements that appear in any of the li"},{label:"UnionedEntityClass",type:"keyword",info:"UnionedEntityClass[class , \xe2\x80\xa6] represents an entity class containing all the distinct entities in all"},{label:"UnionPlus",type:"keyword",info:"UnionPlus[x, y, \xe2\x80\xa6] displays as x \xe2\x8a\x8e y \xe2\x8a\x8e \xe2\x80\xa6."},{label:"Unique",type:"keyword",info:"Unique[] generates a new symbol, whose name is of the form ECnnn. Unique[x] generates a new symbol, w"},{label:"UnitaryMatrixQ",type:"keyword",info:"UnitaryMatrixQ[m] gives True if m is a unitary matrix, and False otherwise."},{label:"UnitBox",type:"keyword",info:"                                                                    1                               "},{label:"UnitConvert",type:"keyword",info:"UnitConvert[quantity, targetunit] attempts to convert the specified quantity to the specified target"},{label:"UnitDimensions",type:"keyword",info:"UnitDimensions[unit] returns a list of base dimensions associated with the specified unit.UnitDimens"},{label:"Unitize",type:"keyword",info:"Unitize[x] gives 0 when x is zero, and 1 when x has any other numerical value."},{label:"UnitRootTest",type:"keyword",info:"UnitRootTest[data] tests whether data came from an autoregressive time series process with unit root"},{label:"UnitSimplify",type:"keyword",info:"UnitSimplify[quantity] attempts to simplify the units of the specified quantity."},{label:"UnitStep",type:"keyword",info:"UnitStep[x] represents the unit step function, equal to 0 for x < 0 and 1 for x \xe2\x89\xa5 0. UnitStep[x , x "},{label:"UnitSystem",type:"keyword",info:"UnitSystem is an option for functions like AirTemperatureData that determines the units of the resul"},{label:"UnitTriangle",type:"keyword",info:"UnitTriangle[x] represents the unit triangle function on the interval \xef\x98\x83 x \xef\x98\x84 \xe2\x89\xa4 1 .UnitTriangle[x , x "},{label:"UnitVector",type:"keyword",info:"                                                             th                                     "},{label:"UnitVectorLayer",type:"keyword",info:"UnitVectorLayer[n] represents a net layer that transforms integers between 1 and n into n-dimensiona"},{label:"UnityDimensions",type:"keyword",info:"UnityDimensions is an option for UnitSimplify that specifies which UnitDimensions should be factored"},{label:"UniverseModelData",type:"keyword",info:"UniverseModelData[spec] returns properties of the universe based on the default model at specificati"},{label:"UniversityData",type:"keyword",info:"UniversityData[entity, property] gives the value of the specified property for the university entity"},{label:"UnixTime",type:"keyword",info:"UnixTime[] gives the total number of seconds since the beginning of January 1, 1970, in the GMT time"},{label:"Unprotect",type:"keyword",info:'Unprotect[s , s , \xe2\x80\xa6] removes the attribute Protected for the symbols s . Unprotect["form ", "form ",'},{label:"UnregisterExternalEvaluator",type:"keyword",info:"UnregisterExternalEvaluator[sys, target] unregisters the external evaluator referenced by target for"},{label:"UnsameQ",type:"keyword",info:"lhs =!= rhs yields True if the expression lhs is not identical to rhs, and yields False otherwise. "},{label:"UnsavedVariables",type:"keyword",info:"UnsavedVariables is an option for Manipulate, DynamicModule, and related functions that specifies lo"},{label:"Unset",type:"keyword",info:"lhs=. removes any rules defined for lhs. "},{label:"UnsetShared",type:"keyword",info:"UnsetShared[s , s , \xe2\x80\xa6] stops the sharing of the variables or functions s  among parallel kernels.Uns"},{label:"UntrackedVariables",type:"keyword",info:"System`UntrackedVariables"},{label:"Up",type:"keyword",info:"System`Up"},{label:"UpArrow",type:"keyword",info:"UpArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x86\x91 y \xe2\x86\x91 \xe2\x80\xa6."},{label:"UpArrowBar",type:"keyword",info:"UpArrowBar[x, y, \xe2\x80\xa6] displays as x \xe2\xa4\x92 y \xe2\xa4\x92 \xe2\x80\xa6."},{label:"UpArrowDownArrow",type:"keyword",info:"UpArrowDownArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x87\x85 y \xe2\x87\x85 \xe2\x80\xa6."},{label:"Update",type:"keyword",info:"Update[symbol] tells the Wolfram Language that hidden changes have been made that could affect value"},{label:"UpdateDynamicObjects",type:"keyword",info:"System`UpdateDynamicObjects"},{label:"UpdateDynamicObjectsSynchronous",type:"keyword",info:"System`UpdateDynamicObjectsSynchronous"},{label:"UpdateInterval",type:"keyword",info:"UpdateInterval is an option to Refresh and Dynamic that specifies at what time interval to do update"},{label:"UpdatePacletSites",type:"keyword",info:"UpdatePacletSites is an option to PacletInstall and PacletInstallSubmit that specifies whether to fi"},{label:"UpdateSearchIndex",type:"keyword",info:'UpdateSearchIndex[obj] updates the given search index object.UpdateSearchIndex["name"] updates the s'},{label:"UpDownArrow",type:"keyword",info:"UpDownArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x86\x95 y \xe2\x86\x95 \xe2\x80\xa6."},{label:"UpEquilibrium",type:"keyword",info:"UpEquilibrium[x, y, \xe2\x80\xa6] displays as x \xe2\xa5\xae y \xe2\xa5\xae \xe2\x80\xa6."},{label:"UpperCaseQ",type:"keyword",info:"UpperCaseQ[string] yields True if all the characters in the string are uppercase letters, and yields"},{label:"UpperLeftArrow",type:"keyword",info:"UpperLeftArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x86\x96 y \xe2\x86\x96 \xe2\x80\xa6."},{label:"UpperRightArrow",type:"keyword",info:"UpperRightArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x86\x97 y \xe2\x86\x97 \xe2\x80\xa6."},{label:"UpperTriangularize",type:"keyword",info:"                                                                                                    "},{label:"UpperTriangularMatrixQ",type:"keyword",info:"                                                                                                    "},{label:"Upsample",type:"keyword",info:"Upsample[array, n] returns an upsampled version of the array by inserting n - 1 zeros between array "},{label:"UpSet",type:"keyword",info:"lhs^=rhs assigns rhs to be the value of lhs, and associates the assignment with symbols that occur a"},{label:"UpSetDelayed",type:"keyword",info:"lhs^:=rhs assigns rhs to be the delayed value of lhs, and associates the assignment with symbols tha"},{label:"UpTee",type:"keyword",info:"UpTee[x, y] displays as x \xe2\x8a\xa5 y."},{label:"UpTeeArrow",type:"keyword",info:"UpTeeArrow[x, y, \xe2\x80\xa6] displays as x \xe2\x86\xa5 y \xe2\x86\xa5 \xe2\x80\xa6."},{label:"UpTo",type:"keyword",info:"UpTo[n] is a symbolic specification that represents up to n objects or positions. If n objects or po"},{label:"UpValues",type:"keyword",info:"UpValues[f] gives a list of transformation rules corresponding to all upvalues (values for g[\xe2\x80\xa6, f[\xe2\x80\xa6]"},{label:"URL",type:"keyword",info:'URL["url"] is a symbolic representation of a URL.'},{label:"URLBuild",type:"keyword",info:'URLBuild["path", {param  \xef\x94\xa2 val , param  \xef\x94\xa2 val , \xe2\x80\xa6}] builds a URL with the specified path and query p'},{label:"URLDecode",type:"keyword",info:'URLDecode["string"] decodes a URL-style percent-encoded string.'},{label:"URLDispatcher",type:"keyword",info:"URLDispatcher[{patt  \xef\x94\x9f content , patt  \xef\x94\x9f content , \xe2\x80\xa6}] represents a dispatcher for deployed URLs tha"},{label:"URLDownload",type:"keyword",info:"URLDownload[url] downloads the content of the specified URL to a local temporary file.URLDownload[{u"},{label:"URLDownloadSubmit",type:"keyword",info:"URLDownloadSubmit[url, file] submits the specified URL to be downloaded asynchronously to the file g"},{label:"URLEncode",type:"keyword",info:'URLEncode["string"] converts "string" into a URL-style, percent-encoded ASCII string. '},{label:"URLExecute",type:"keyword",info:"URLExecute[url] executes the specified URL, importing whatever result is generated.URLExecute[url, {"},{label:"URLExpand",type:"keyword",info:'URLExpand["url"] expands a shortened "url".'},{label:"URLFetch",type:"keyword",info:"URLFetch[url] returns the contents of a URL as a string.URLFetch[url, elements] returns the specifie"},{label:"URLFetchAsynchronous",type:"keyword",info:"URLFetchAsynchronous[url, func] performs a connection in the background, calling func when an event "},{label:"URLParse",type:"keyword",info:'URLParse["url"] takes a well-formed URL and gives an association whose values correspond to the comp'},{label:"URLQueryDecode",type:"keyword",info:'URLQueryDecode["string"] decodes a URL-style query string into a list of key-value rules. '},{label:"URLQueryEncode",type:"keyword",info:"URLQueryEncode[\xef\x84\x93 key  \xef\x94\xa2 val , key  \xef\x94\xa2 val , \xe2\x80\xa6 \xef\x84\x94] creates a URL-style query string from an association"},{label:"URLRead",type:"keyword",info:"URLRead[url] sends a request to a URL and reads back the response, returning it as a response object"},{label:"URLResponseTime",type:"keyword",info:"URLResponseTime[url] gives the total number of seconds to request one byte from the specified URL.UR"},{label:"URLSave",type:"keyword",info:'URLSave["url"] saves the content of the URL to a file in ECTemporaryDirectory.URLSave["url", "file"] '},{label:"URLSaveAsynchronous",type:"keyword",info:'URLSaveAsynchronous["url", "file", func] performs a download to "file" in the background, calling fu'},{label:"URLShorten",type:"keyword",info:'URLShorten["url"] creates a shortened URL that redirects to "url".URLShorten[CloudObject[\xe2\x80\xa6]] creates'},{label:"URLSubmit",type:"keyword",info:"URLSubmit[url] submits the specified URL to be executed asynchronously.URLSubmit[url, {param  \xef\x94\xa2 val "},{label:"UseEmbeddedLibrary",type:"keyword",info:"UseEmbeddedLibrary is an option of FunctionCompile that embeds a shared library in a CompiledCodeFun"},{label:"UseGraphicsRange",type:"keyword",info:"System`UseGraphicsRange"},{label:"UserDefinedWavelet",type:"keyword",info:"System`UserDefinedWavelet"},{label:"Using",type:"keyword",info:"Using is an option to Roots that specifies any subsidiary equations that are to be used."},{label:"UtilityFunction",type:"keyword",info:"UtilityFunction is an option for Predict, Classify, and related functions that specifies the utility"},{label:"V2Get",type:"keyword",info:"V2Get[name] reads in a file written by the V2.x versions."},{label:"ValenceErrorHandling",type:"keyword",info:"ValenceErrorHandling is an option for MoleculeModify that specifies whether molecule valences should"},{label:"ValenceFilling",type:"keyword",info:"ValenceFilling is an option for Molecule that specifies whether to fill open valences with hydrogen "},{label:"ValidationLength",type:"keyword",info:"ValidationLength is an option to FindSequenceFunction and related functions that specifies the numbe"},{label:"ValidationSet",type:"keyword",info:"ValidationSet is an option for Predict, Classify, NetTrain, and related functions that specifies the"},{label:"Value",type:"keyword",info:"System`Value"},{label:"ValueBox",type:"keyword",info:"System`ValueBox"},{label:"ValueBoxOptions",type:"keyword",info:"ValueBoxOptions \xef\x94\xa2 {opt  \xef\x94\xa2 val , opt  \xef\x94\xa2 val , \xe2\x80\xa6} is an option that specifies settings for ValueBox ob"},{label:"ValueDimensions",type:"keyword",info:"ValueDimensions is an option to TemporalData, TimeSeries, and EventSeries that specifies the dimensi"},{label:"ValueForm",type:"keyword",info:"ValueForm is an internal symbol."},{label:"ValuePreprocessingFunction",type:"keyword",info:"ValuePreprocessingFunction is an option for functions such as PersistentSymbol and InitializationVal"},{label:"ValueQ",type:"keyword",info:"ValueQ[expr] gives True if a value has been defined for expr, and gives False otherwise. "},{label:"Values",type:"keyword",info:"Values[\xef\x84\x93 key  \xef\x94\xa2 val , key  \xef\x94\xa2 val , \xe2\x80\xa6 \xef\x84\x94] gives a list of the values val  in an association.Values[{ke"},{label:"ValuesData",type:"keyword",info:"System`ValuesData"},{label:"Variables",type:"keyword",info:"Variables[poly] gives a list of all independent variables in a polynomial. "},{label:"Variance",type:"keyword",info:"Variance[list] gives the sample variance of the elements in list. Variance[dist] gives the variance "},{label:"VarianceEquivalenceTest",type:"keyword",info:"VarianceEquivalenceTest[{data , data , \xe2\x80\xa6}] tests whether the variances of the data  are equal. Varia"},{label:"VarianceEstimatorFunction",type:"keyword",info:"VarianceEstimatorFunction is an option for LinearModelFit and NonlinearModelFit which specifies the "},{label:"VarianceGammaDistribution",type:"keyword",info:"VarianceGammaDistribution[\xce\xbb, \xce\\[PlusMinus], \xce.b2, \xce\xbc] represents a variance\xe2\x80\x90gamma distribution with location paramet"},{label:"VarianceGammaPointProcess",type:"keyword",info:"                                                                                                    "},{label:"VarianceTest",type:"keyword",info:"                                                                                                    "},{label:"VariogramFunction",type:"keyword",info:"VariogramFunction is an option to SpatialEstimate that specifies the local variation model to use. "},{label:"VariogramModel",type:"keyword",info:'VariogramModel["model", {params}] represents the function for the variogram model specified by "mode'},{label:"VectorAngle",type:"keyword",info:"VectorAngle[u, v] gives the angle between the vectors u and v."},{label:"VectorAround",type:"keyword",info:"VectorAround[{x , x , \xe2\x80\xa6}, {\xce.b4 , \xce.b4 , \xe2\x80\xa6}] represents a vector of uncorrelated approximate numbers or qu"},{label:"VectorAspectRatio",type:"keyword",info:"VectorAspectRatio is an option setting for VectorPlot and related functions that determines the rela"},{label:"VectorColorFunction",type:"keyword",info:"VectorColorFunction is an option for VectorPlot and related functions that specifies a function to a"},{label:"VectorColorFunctionScaling",type:"keyword",info:"VectorColorFunctionScaling is an option for graphics functions which specifies whether arguments sup"},{label:"VectorDensityPlot",type:"keyword",info:"VectorDensityPlot[{{v , v }, s}, {x, x   , x   }, {y, y   , y   }] generates a vector plot of the ve"},{label:"VectorDisplacementPlot",type:"keyword",info:"VectorDisplacementPlot[{v , v }, {x, x   , x   }, {y, y   , y   }] generates a displacement plot for"},{label:"VectorDisplacementPlot3D",type:"keyword",info:"VectorDisplacementPlot3D[{v , v , v }, {x, x   , x   }, {y, y   , y   }, {z, z   , z   }] generates "},{label:"VectorGlyphData",type:"keyword",info:"System`VectorGlyphData"},{label:"VectorGreater",type:"keyword",info:"x \xef\x90.b4 y or VectorGreater[{x, y}] yields True for vectors of length n if x  > y  for all components 1 \xe2\x89\xa4"},{label:"VectorGreaterEqual",type:"keyword",info:"x \xef\x90\\[Micro] y or VectorGreaterEqual[{x, y}] yields True for vectors of length n if x  \xe2\x89\xa5 y  for all component"},{label:"VectorLess",type:"keyword",info:"x \xef\x90\\[Paragraph] y or VectorLess[{x, y}] yields True for vectors of length n if x  < y  for all components 1 \xe2\x89\xa4 i "},{label:"VectorLessEqual",type:"keyword",info:"x \xef\x90\\[CenterDot] y or VectorLessEqual[{x, y}] yields True for vectors of length n if x  \xe2\x89\xa4 y  for all components 1"},{label:"VectorMarkers",type:"keyword",info:"VectorMarkers is an option for graphics functions like VectorPlot, ListVectorPlot and related functi"},{label:"VectorPlot",type:"keyword",info:"VectorPlot[{v , v }, {x, x   , x   }, {y, y   , y   }] generates a vector plot of the vector field {"},{label:"VectorPlot3D",type:"keyword",info:"VectorPlot3D[{v , v , v }, {x, x   , x   }, {y, y   , y   }, {z, z   , z   }] generates a 3D vector "},{label:"VectorPoints",type:"keyword",info:"VectorPoints is an option to VectorPlot, ListVectorPlot, and related functions that determines where"},{label:"VectorQ",type:"keyword",info:"VectorQ[expr] gives True if expr is a list or a one\xe2\x80\x90dimensional SparseArray object, none of whose el"},{label:"VectorRange",type:"keyword",info:"VectorRange is an option for VectorPlot and related functions that specifies the range of vector mag"},{label:"Vectors",type:"keyword",info:"Vectors[d] represents the domain of vectors of dimension d.Vectors[d, dom] represents the domain of "},{label:"VectorScale",type:"keyword",info:"VectorScale is an option to VectorPlot, ListVectorPlot, and related functions that determines the le"},{label:"VectorScaling",type:"keyword",info:"VectorScaling is an option for VectorPlot and related functions that determines how the magnitudes o"},{label:"VectorSizes",type:"keyword",info:"VectorSizes is an option for VectorPlot and related functions that specifies the range of sizes used"},{label:"VectorStyle",type:"keyword",info:"VectorStyle is an option to VectorPlot, ListVectorPlot, and related functions that determines the st"},{label:"Vee",type:"keyword",info:"Vee[x, y, \xe2\x80\xa6] displays as x \xe2\x8b\x81 y \xe2\x8b\x81 \xe2\x80\xa6."},{label:"Verbatim",type:"keyword",info:"Verbatim[expr] represents expr in pattern matching, requiring that expr be matched exactly as it app"},{label:"Verbose",type:"keyword",info:"System`Verbose"},{label:"VerboseConvertToPostScriptPacket",type:"keyword",info:"System`VerboseConvertToPostScriptPacket"},{label:"VerificationTest",type:"keyword",info:"VerificationTest[input] runs a verification test to determine whether input evaluates to True, witho"},{label:"VerifyConvergence",type:"keyword",info:"VerifyConvergence is an option to Sum, NSum, and similar functions that specifies whether convergenc"},{label:"VerifyDerivedKey",type:"keyword",info:"VerifyDerivedKey[key, password] verifies that password matches the password used to generate the der"},{label:"VerifyDigitalSignature",type:"keyword",info:"VerifyDigitalSignature[{expr, sig}, key] verifies the digital signature sig for expr using the speci"},{label:"VerifyFileSignature",type:"keyword",info:'VerifyFileSignature[{"file", sig}, key] verifies the digital signature sig for file using the specif'},{label:"VerifyInterpretation",type:"keyword",info:"VerifyInterpretation is an option for TextCases, TextPosition and TextContents that verifies that re"},{label:"VerifySecurityCertificates",type:"keyword",info:"VerifySecurityCertificates is an option for URLRead and related functions that specifies whether to "},{label:"VerifySolutions",type:"keyword",info:"VerifySolutions is an option to Solve and related functions that controls whether to verify solution"},{label:"VerifyTestAssumptions",type:"keyword",info:"VerifyTestAssumptions is an option to LocationTest and similar functions that controls which assumpt"},{label:"Version",type:"keyword",info:"System`Version"},{label:"VersionedPreferences",type:"keyword",info:"VersionedPreferences is a global front end option that specifies whether settings on ECFrontEnd shoul"},{label:"VersionNumber",type:"keyword",info:"System`VersionNumber"},{label:"VertexAdd",type:"keyword",info:"VertexAdd[g, v] makes a graph by adding the vertex v to the graph g.VertexAdd[g, {v , v , \xe2\x80\xa6}] adds a"},{label:"VertexCapacity",type:"keyword",info:"VertexCapacity is an option and annotation for Graph and related functions that specifies a vertex c"},{label:"VertexChromaticNumber",type:"keyword",info:"VertexChromaticNumber[g] gives the chromatic number for the vertices of the graph g."},{label:"VertexColors",type:"keyword",info:"VertexColors is an option for graphics primitives which specifies the colors to assign to vertices."},{label:"VertexComponent",type:"keyword",info:"VertexComponent[g, {v , v , \xe2\x80\xa6}] gives the vertices in the graph g that have a path to at least one o"},{label:"VertexConnectivity",type:"keyword",info:"VertexConnectivity[g] gives the vertex connectivity of the graph g.VertexConnectivity[g, s, t] gives"},{label:"VertexContract",type:"keyword",info:"VertexContract[g, {v , v , \xe2\x80\xa6}] contracts a collection of vertices v , v , \xe2\x80\xa6 into a single vertex of "},{label:"VertexCoordinateRules",type:"keyword",info:"VertexCoordinateRules is an option for GraphPlot and related functions which specifies rules for det"},{label:"VertexCoordinates",type:"keyword",info:"VertexCoordinates is an option to Graph and related functions that specifies the coordinates to use "},{label:"VertexCorrelationSimilarity",type:"keyword",info:"VertexCorrelationSimilarity[g, u, v] gives the correlation similarity between vertices u and v of th"},{label:"VertexCosineSimilarity",type:"keyword",info:"VertexCosineSimilarity[g, u, v] gives the cosine similarity between vertices u and v of the graph g."},{label:"VertexCount",type:"keyword",info:"VertexCount[g] gives a count of the number of vertices in the graph g.VertexCount[g, patt] gives a c"},{label:"VertexCoverQ",type:"keyword",info:"VertexCoverQ[g, vlist] yields True if the vertex list vlist is a vertex cover of the graph g, and Fa"},{label:"VertexDataCoordinates",type:"keyword",info:"VertexDataCoordinates is an option to Raster3D that determines how to map data to the displayed rang"},{label:"VertexDegree",type:"keyword",info:"VertexDegree[g] gives the list of vertex degrees for all vertices in the graph g.VertexDegree[g, v] "},{label:"VertexDelete",type:"keyword",info:"VertexDelete[g, v] makes a graph by deleting the vertex \xce\xbd and all edges connected to v from the grap"},{label:"VertexDiceSimilarity",type:"keyword",info:"VertexDiceSimilarity[g, u, v] gives the Dice similarity between vertices u and v of the graph g.Vert"},{label:"VertexEccentricity",type:"keyword",info:"VertexEccentricity[g, s] gives the length of the longest shortest path from the source s to every ot"},{label:"VertexInComponent",type:"keyword",info:"VertexInComponent[g, {v , v , \xe2\x80\xa6}] gives the vertices in the graph g that have a directed path to at "},{label:"VertexInComponentGraph",type:"keyword",info:"VertexInComponentGraph[g, {v , v , \xe2\x80\xa6}] gives the subgraph of the graph g generated by the vertices t"},{label:"VertexInDegree",type:"keyword",info:"VertexInDegree[g] gives the list of vertex in-degrees for all vertices in the graph g.VertexInDegree"},{label:"VertexIndex",type:"keyword",info:"VertexIndex[g, v] gives the integer index for the vertex v in the graph g.VertexIndex[{v \xef\x94\xa2 w, \xe2\x80\xa6}, \xe2\x80\xa6]"},{label:"VertexJaccardSimilarity",type:"keyword",info:"VertexJaccardSimilarity[g, u, v] gives the Jaccard similarity between vertices u and v of the graph "},{label:"VertexLabeling",type:"keyword",info:"VertexLabeling is an option for GraphPlot and related functions which specifies whether labeling sho"},{label:"VertexLabels",type:"keyword",info:"VertexLabels is an option and annotation for Graph and related functions that specifies what labels "},{label:"VertexLabelStyle",type:"keyword",info:"VertexLabelStyle is an option and property for Graph and related functions that specifies the style "},{label:"VertexList",type:"keyword",info:"VertexList[g] gives the list of vertices for the graph g.VertexList[g, patt] gives a list of vertice"},{label:"VertexNormals",type:"keyword",info:"VertexNormals is an option for graphics primitives which specifies the normal directions to assign t"},{label:"VertexOutComponent",type:"keyword",info:"VertexOutComponent[g, {v , v , \xe2\x80\xa6}] gives the vertices in the graph g that have a directed path from "},{label:"VertexOutComponentGraph",type:"keyword",info:"VertexOutComponentGraph[g, {v , v , \xe2\x80\xa6}] gives the subgraph of the graph g generated by the vertices "},{label:"VertexOutDegree",type:"keyword",info:"VertexOutDegree[g] gives the list of vertex out-degrees for all vertices in the graph g.VertexOutDeg"},{label:"VertexQ",type:"keyword",info:"VertexQ[g, v] yields True if v is a vertex in the graph g and False otherwise."},{label:"VertexRenderingFunction",type:"keyword",info:"VertexRenderingFunction is an option for GraphPlot and related functions that gives a function to ge"},{label:"VertexReplace",type:"keyword",info:"VertexReplace[g, {v  \xef\x94\xa2 w , v  \xef\x94\xa2 w , \xe2\x80\xa6}] replaces each vertex v  in the graph g by w .VertexReplace[{"},{label:"VertexShape",type:"keyword",info:"VertexShape is an option and property for Graph and related functions that specifies the graphics us"},{label:"VertexShapeFunction",type:"keyword",info:"VertexShapeFunction is an option and annotation for Graph and related functions that specifies a fun"},{label:"VertexSize",type:"keyword",info:"VertexSize is an option and property for Graph and related functions that specifies the size used fo"},{label:"VertexStyle",type:"keyword",info:"VertexStyle is an option and annotation for Graph and related functions that specifies what style to"},{label:"VertexTextureCoordinates",type:"keyword",info:"VertexTextureCoordinates is an option for graphics primitives that specifies the texture coordinates"},{label:"VertexTransitiveGraphQ",type:"keyword",info:"VertexTransitiveGraphQ[g] yields True if the graph g is a vertex\xe2\x80\x93transitive graph and False otherwis"},{label:"VertexWeight",type:"keyword",info:"VertexWeight is an option and annotation for Graph and related functions that specifies a vertex wei"},{label:"VertexWeightedGraphQ",type:"keyword",info:"VertexWeightedGraphQ[g] yields True if the graph g is a vertex-weighted graph, and False otherwise."},{label:"Vertical",type:"keyword",info:"System`Vertical"},{label:"VerticalBar",type:"keyword",info:"VerticalBar[x, y, \xe2\x80\xa6] displays as x \xef\x8f\x90 y \xef\x8f\x90 \xe2\x80\xa6."},{label:"VerticalForm",type:"keyword",info:"VerticalForm is an internal symbol used for formatting and printing."},{label:"VerticalGauge",type:"keyword",info:"VerticalGauge[value] draws a linear gauge showing value in a range of 0 to 1.VerticalGauge[value, {m"},{label:"VerticalSeparator",type:"keyword",info:"VerticalSeparator[x, y, \xe2\x80\xa6] displays as x \xef\x90.b2 y \xef\x90.b2 \xe2\x80\xa6."},{label:"VerticalSlider",type:"keyword",info:"VerticalSlider[y] represents a vertical slider at position y with range 0 to 1. VerticalSlider[Dynam"},{label:"VerticalTilde",type:"keyword",info:"VerticalTilde[x, y, \xe2\x80\xa6] displays as x \xe2\x89\x80 y \xe2\x89\x80 \xe2\x80\xa6."},{label:"Video",type:"keyword",info:"Video[file] represents video stored in the given file.Video[url] represents video stored in the give"},{label:"VideoCombine",type:"keyword",info:"VideoCombine[{obj , obj , \xe2\x80\xa6}] creates a multi-track video by combining all tracks of Video or Audio "},{label:"VideoDelete",type:"keyword",info:"VideoDelete[video, t] deletes the first t seconds of video.VideoDelete[video, -t] deletes the last t"},{label:"VideoEncoding",type:"keyword",info:"VideoEncoding is an option for Export and other functions that specifies the video encoding to use w"},{label:"VideoExtractFrames",type:"keyword",info:"VideoExtractFrames[video, t] extracts a frame at time t from video.VideoExtractFrames[video, tspec] "},{label:"VideoFrameList",type:"keyword",info:"VideoFrameList[video, n] gives a list of n images extracted from video.VideoFrameList[video, spec] g"},{label:"VideoFrameMap",type:"keyword",info:"VideoFrameMap[f, video] applies f to each frame of the Video object video, returning a new Video obj"},{label:"VideoGenerator",type:"keyword",info:"VideoGenerator[model] generates one second of video of a given model.VideoGenerator[model, dur] gene"},{label:"VideoInsert",type:"keyword",info:"VideoInsert[video, t \xef\x94\xa2 new] inserts the video new at time t.VideoInsert[video, {t , t , \xe2\x80\xa6} \xef\x94\xa2 new] in"},{label:"VideoIntervals",type:"keyword",info:"VideoIntervals[video, crit] returns time intervals of video for which the criterion crit is satisfie"},{label:"VideoJoin",type:"keyword",info:"VideoJoin[video , video , \xe2\x80\xa6] concatenates all video  and returns a video object.\n               1   "},{label:"VideoMap",type:"keyword",info:"VideoMap[f, video] applies f to partial video and audio data corresponding to one frame of video, re"},{label:"VideoMapList",type:"keyword",info:"VideoMapList[f, video] applies f to a chunk of data corresponding to one frame from the Video object"},{label:"VideoMapTimeSeries",type:"keyword",info:"VideoMapTimeSeries[f, video] applies f to each frame of the Video object video, returning a time ser"},{label:"VideoPause",type:"keyword",info:"VideoPause[] pauses the playback of all VideoStream objects.VideoPause[vstream] pauses the playback "},{label:"VideoPlay",type:"keyword",info:"VideoPlay[video] returns a new VideoStream object from video and starts the playback.VideoPlay[vstre"},{label:"VideoQ",type:"keyword",info:"VideoQ[video] yields True if video has the form of a valid Video object, and False otherwise."},{label:"VideoRecord",type:"keyword",info:"VideoRecord[source] creates a VideoStream object and records from source.VideoRecord[vstream] starts"},{label:"VideoReplace",type:"keyword",info:"VideoReplace[video, {t , t } \xef\x94\xa2 new] replaces the video between t  and t  with the new video new.Vide"},{label:"VideoSplit",type:"keyword",info:"VideoSplit[video, t] splits video at time t.VideoSplit[video, {t , t , \xe2\x80\xa6}] splits video at times t ."},{label:"VideoStop",type:"keyword",info:"VideoStop[] stops the playback of all VideoStream objects.VideoStop[vstream] stops the playback of t"},{label:"VideoStream",type:"keyword",info:"VideoStream[source] creates a new VideoStream object from source.VideoStream[id] is an object that r"},{label:"VideoStreams",type:"keyword",info:"VideoStreams[] returns all existing video streams."},{label:"VideoTimeStretch",type:"keyword",info:"VideoTimeStretch[video, spec] applies time stretching to video using the specified spec."},{label:"VideoTrackSelection",type:"keyword",info:"VideoTrackSelection is an option that specifies the video tracks of interest."},{label:"VideoTranscode",type:"keyword",info:'VideoTranscode[video, "format"] converts video to the specified format.VideoTranscode[video, service'},{label:"VideoTrim",type:"keyword",info:"VideoTrim[video, t] returns the first t seconds of video.VideoTrim[video, -t] returns the last t sec"},{label:"ViewAngle",type:"keyword",info:"ViewAngle is an option for Graphics3D and related functions that gives the opening angle for a simul"},{label:"ViewCenter",type:"keyword",info:"ViewCenter is an option for Graphics3D and related functions which gives the scaled coordinates of t"},{label:"ViewMatrix",type:"keyword",info:"ViewMatrix is an option for Graphics3D and related functions that can be used to specify a pair of e"},{label:"ViewPoint",type:"keyword",info:"ViewPoint is an option for Graphics3D and related functions which gives the point in space from whic"},{label:"ViewPointSelectorSettings",type:"keyword",info:"System`ViewPointSelectorSettings"},{label:"ViewPort",type:"keyword",info:"System`ViewPort"},{label:"ViewProjection",type:"keyword",info:"ViewProjection is an option for three-dimensional graphics that specifies the projection to use for "},{label:"ViewRange",type:"keyword",info:"ViewRange is an option for Graphics3D and related functions which specifies the range of distances f"},{label:"ViewVector",type:"keyword",info:"ViewVector is an option for Graphics3D and related functions which specifies the position and direct"},{label:"ViewVertical",type:"keyword",info:"ViewVertical is an option for Graphics3D and related functions which specifies what direction in sca"},{label:"VirtualGroupData",type:"keyword",info:"System`VirtualGroupData"},{label:"Visible",type:"keyword",info:"Visible is a notebook option which specifies whether the notebook should be explicitly displayed on "},{label:"VisibleCell",type:"keyword",info:"System`VisibleCell"},{label:"VoiceStyleData",type:"keyword",info:"VoiceStyleData[] gives the list of available voices for speech synthesis.VoiceStyleData[voice] retur"},{label:"VoigtDistribution",type:"keyword",info:"VoigtDistribution[\xce.b4, \xcf\x83] represents Voigt distribution with parameters \xce.b4 and \xcf\x83."},{label:"VolcanoData",type:"keyword",info:"VolcanoData[entity, property] gives the value of the specified property for the volcano entity.Volca"},{label:"Volume",type:"keyword",info:"Volume[reg] gives the volume of the three-dimensional region reg.Volume[{x , \xe2\x80\xa6, x }, {s, s   , s   }"},{label:"VonMisesDistribution",type:"keyword",info:"VonMisesDistribution[\xce\xbc, \xce\xba] represents a von Mises distribution with mean \xce\xbc and concentration \xce\xba."},{label:"VoronoiMesh",type:"keyword",info:"VoronoiMesh[{p , \xe2\x80\xa6, p }] gives a MeshRegion representing the Voronoi mesh from the points p , p , \xe2\x80\xa6."},{label:"WaitAll",type:"keyword",info:"WaitAll[expr] waits for all concurrent evaluations represented by EvaluationObject expressions in ex"},{label:"WaitAsynchronousTask",type:"keyword",info:"WaitAsynchronousTask[task] waits for task to complete."},{label:"WaitNext",type:"keyword",info:"WaitNext[{eid , eid , \xe2\x80\xa6}] waits until the first evaluation represented by any of the eid  finishes, "},{label:"WaitUntil",type:"keyword",info:"System`WaitUntil"},{label:"WakebyDistribution",type:"keyword",info:"WakebyDistribution[\xce\\[PlusMinus], \xce.b2, \xce.b3, \xce.b4, \xce\xbc] represents Wakeby distribution with shape parameters \xce.b2 and \xce.b4, scal"},{label:"WalleniusHypergeometricDistribution",type:"keyword",info:"WalleniusHypergeometricDistribution[n, n    , n   , w] represents a Wallenius noncentral hypergeomet"},{label:"WaringYuleDistribution",type:"keyword",info:"WaringYuleDistribution[\xce\\[PlusMinus]] represents the Yule distribution with shape parameter \xce\\[PlusMinus].WaringYuleDistribu"},{label:"WarpingCorrespondence",type:"keyword",info:"WarpingCorrespondence[s , s ] gives the time warping (DTW) similarity path between sequences s  and "},{label:"WarpingDistance",type:"keyword",info:"WarpingDistance[s , s ] gives the dynamic time warping (DTW) distance between sequences s  and s .Wa"},{label:"WatershedComponents",type:"keyword",info:"WatershedComponents[image] computes the watershed transform of image, returning the result as an arr"},{label:"WatsonUSquareTest",type:"keyword",info:"                                                                                     2              "},{label:"WattsStrogatzGraphDistribution",type:"keyword",info:"WattsStrogatzGraphDistribution[n, p] represents the Watts\xe2\x80\x93Strogatz graph distribution for n-vertex g"},{label:"WaveletBestBasis",type:"keyword",info:"WaveletBestBasis[dwd] computes a best basis representation in the DiscreteWaveletData object dwd.Wav"},{label:"WaveletFilterCoefficients",type:"keyword",info:"WaveletFilterCoefficients[wave, filt] gives the filter coefficients for the symbolic wavelet wave of"},{label:"WaveletImagePlot",type:"keyword",info:"WaveletImagePlot[dwd] plots the basis tree of wavelet image coefficients in the DiscreteWaveletData "},{label:"WaveletListPlot",type:"keyword",info:"WaveletListPlot[dwd] plots wavelet transform coefficients in the DiscreteWaveletData dwd.WaveletList"},{label:"WaveletMapIndexed",type:"keyword",info:"WaveletMapIndexed[f, wd] applies the function f to the arrays of coefficients and indices of a Conti"},{label:"WaveletMatrixPlot",type:"keyword",info:"WaveletMatrixPlot[dwd] plots the basis tree of wavelet matrix coefficients in the DiscreteWaveletDat"},{label:"WaveletPhi",type:"keyword",info:"WaveletPhi[wave, x] gives the scaling function \xcf\x95(x) for the symbolic wavelet wave evaluated at x.Wav"},{label:"WaveletPsi",type:"keyword",info:"WaveletPsi[wave, x] gives the wavelet function \xcf\x88(x) for the symbolic wavelet wave evaluated at x.Wav"},{label:"WaveletScale",type:"keyword",info:"WaveletScale is an option for ContinuousWaveletTransform and related constructs used to specify the "},{label:"WaveletScalogram",type:"keyword",info:"WaveletScalogram[wd] plots wavelet vector coefficients in a DiscreteWaveletData or ContinuousWavelet"},{label:"WaveletThreshold",type:"keyword",info:"WaveletThreshold[dwd] thresholds the detail wavelet coefficients in the DiscreteWaveletData object d"},{label:"WavePDEComponent",type:"keyword",info:"                                                                2\n                                  "},{label:"WeaklyConnectedComponents",type:"keyword",info:"WeaklyConnectedComponents[g] gives the weakly connected components of the graph g.WeaklyConnectedCom"},{label:"WeaklyConnectedGraphComponents",type:"keyword",info:"WeaklyConnectedGraphComponents[g] gives the weakly connected components of the graph g.WeaklyConnect"},{label:"WeaklyConnectedGraphQ",type:"keyword",info:"WeaklyConnectedGraphQ[g] yields True if the graph g is weakly connected, and False otherwise."},{label:"WeakStationarity",type:"keyword",info:"WeakStationarity[proc] gives conditions for the process proc to be weakly stationary. "},{label:"WeatherData",type:"keyword",info:'WeatherData[loc, "property"] gives the most recent measurement for the specified weather property at'},{label:"WeatherForecastData",type:"keyword",info:"WeatherForecastData[loc] gives the most recent forecast for all weather forecast properties for the "},{label:"WebAudioSearch",type:"keyword",info:'WebAudioSearch["string"] gives a dataset of the top web audio search results for the specified liter'},{label:"WebColumn",type:"keyword",info:"WebColumn[{expr , expr , \xe2\x80\xa6}] represents an HTML column containing the expr .WebColumn[expr, options]"},{label:"WebElementObject",type:"keyword",info:"WebElementObject[\xe2\x80\xa6] represents an element of an open webpage operated on by WebExecute."},{label:"WeberE",type:"keyword",info:"                                                                                                 \xce\xbc\nW"},{label:"WebExecute",type:"keyword",info:"WebExecute[cmd] executes the command cmd in a web browser. WebExecute[{cmd , cmd , \xe2\x80\xa6}] executes a li"},{label:"WebImage",type:"keyword",info:"WebImage[url] gives an image of the webpage specified by url.WebImage[list] gives images specified b"},{label:"WebImageSearch",type:"keyword",info:'WebImageSearch["string"] gives a list of thumbnails of the top web image search results for the spec'},{label:"WebItem",type:"keyword",info:"WebItem[expr] represents an HTML element containing expr.WebItem[expr, options] represents an HTML e"},{label:"WebPageMetaInformation",type:"keyword",info:"System`WebPageMetaInformation"},{label:"WebRow",type:"keyword",info:"WebRow[{expr , expr , \xe2\x80\xa6}] represents an HTML column containing the expr .WebRow[expr, options] displ"},{label:"WebSearch",type:"keyword",info:'WebSearch["string"] gives a dataset of the top web search results for the specified literal string.W'},{label:"WebSessionObject",type:"keyword",info:"WebSessionObject[\xe2\x80\xa6] represents a web browser session started by StartWebSession for use with WebExec"},{label:"WebSessions",type:"keyword",info:"WebSessions[] gives the list of all active web sessions."},{label:"WebWindowObject",type:"keyword",info:"WebWindowObject[\xe2\x80\xa6] represents an open window or tab in a web browser."},{label:"Wedge",type:"keyword",info:"Wedge[x, y, \xe2\x80\xa6] displays as x \xe2\x8b\x80 y \xe2\x8b\x80 \xe2\x80\xa6."},{label:"Wednesday",type:"keyword",info:"Wednesday is a day of the week."},{label:"WeibullDistribution",type:"keyword",info:"WeibullDistribution[\xce\\[PlusMinus], \xce.b2] represents a Weibull distribution with shape parameter \xce\\[PlusMinus] and scale paramet"},{label:"WeierstrassE1",type:"keyword",info:"WeierstrassE1[{g , g }] gives the value e  of the Weierstrass elliptic function \xe2\x84\x98 at the half-period"},{label:"WeierstrassE2",type:"keyword",info:"WeierstrassE2[{g , g }] gives the value e  of the Weierstrass elliptic function \xe2\x84\x98 at the half-period"},{label:"WeierstrassE3",type:"keyword",info:"WeierstrassE3[{g , g }] gives the value e  of the Weierstrass elliptic function \xe2\x84\x98 at the half-period"},{label:"WeierstrassEta1",type:"keyword",info:"WeierstrassEta1[{g , g }] gives the value \xce\\[CenterDot]  of the Weierstrass zeta function \xce\\[Paragraph] at the half-period \xcf\x89"},{label:"WeierstrassEta2",type:"keyword",info:"WeierstrassEta2[{g , g }] gives the value \xce\\[CenterDot]  of the Weierstrass zeta function \xce\\[Paragraph] at the half-period \xcf\x89"},{label:"WeierstrassEta3",type:"keyword",info:"WeierstrassEta3[{g , g }] gives the value \xce\\[CenterDot]  of the Weierstrass zeta function \xce\\[Paragraph] at the half-period \xcf\x89"},{label:"WeierstrassHalfPeriods",type:"keyword",info:"WeierstrassHalfPeriods[{g , g }] gives the half\xe2\x80\x90periods {\xcf\x89 , \xcf\x89 } for Weierstrass elliptic functions "},{label:"WeierstrassHalfPeriodW1",type:"keyword",info:"WeierstrassHalfPeriodW1[{g , g }] gives the half-period \xcf\x89  for Weierstrass elliptic functions corres"},{label:"WeierstrassHalfPeriodW2",type:"keyword",info:"WeierstrassHalfPeriodW2[{g , g }] gives the half-period \xcf\x89  for the Weierstrass elliptic functions co"},{label:"WeierstrassHalfPeriodW3",type:"keyword",info:"WeierstrassHalfPeriodW3[{g , g }] gives the half-period \xcf\x89  for the Weierstrass elliptic functions co"},{label:"WeierstrassInvariantG2",type:"keyword",info:"                            \xe2\x80.b2                                                                       "},{label:"WeierstrassInvariantG3",type:"keyword",info:"                            \xe2\x80.b2                                                                       "},{label:"WeierstrassInvariants",type:"keyword",info:"WeierstrassInvariants[{\xcf\x89 , \xcf\x89 }] gives the invariants {g , g } for Weierstrass elliptic functions cor"},{label:"WeierstrassP",type:"keyword",info:"WeierstrassP[u, {g , g }] gives the Weierstrass elliptic function \xe2\x84\x98(u ; g , g ). \n                  "},{label:"WeierstrassPPrime",type:"keyword",info:"WeierstrassPPrime[u, {g , g }] gives the derivative of the Weierstrass elliptic function \xe2\x84\x98(u ; g , g"},{label:"WeierstrassSigma",type:"keyword",info:"WeierstrassSigma[u, {g , g }] gives the Weierstrass sigma function \xcf\x83(u ; g , g ). \n                 "},{label:"WeierstrassZeta",type:"keyword",info:"WeierstrassZeta[u, {g , g }] gives the Weierstrass zeta function \xce\\[Paragraph](u ; g , g ). \n                   "},{label:"WeightedAdjacencyGraph",type:"keyword",info:"WeightedAdjacencyGraph[wmat] gives the graph with weighted adjacency matrix wmat.WeightedAdjacencyGr"},{label:"WeightedAdjacencyMatrix",type:"keyword",info:"WeightedAdjacencyMatrix[g] gives the adjacency matrix of edge weights of the graph g.WeightedAdjacen"},{label:"WeightedData",type:"keyword",info:"WeightedData[{x , x , \xe2\x80\xa6}, {w , w , \xe2\x80\xa6}] represents observations x  with weights w .WeightedData[{x , "},{label:"WeightedGraphQ",type:"keyword",info:"WeightedGraphQ[g] yields True if the graph g is a weighted graph and False otherwise."},{label:"Weights",type:"keyword",info:"Weights is an option for various fitting and other functions which specifies weights to associate wi"},{label:"WelchWindow",type:"keyword",info:"WelchWindow[x] represents a Welch window function of x.WelchWindow[x, \xce\\[PlusMinus]] uses the parameter \xce\\[PlusMinus].\n"},{label:"WheelGraph",type:"keyword",info:"WheelGraph[n] gives the wheel graph with n vertices W .\n                                            "},{label:"WhenEvent",type:"keyword",info:"WhenEvent[event, action] specifies an action that occurs when the event triggers it for equations in"},{label:"Which",type:"keyword",info:"Which[test , value , test , value , \xe2\x80\xa6] evaluates each of the test  in turn, returning the value of t"},{label:"While",type:"keyword",info:"While[test, body] evaluates test, then body, repetitively, until test first fails to give True. "},{label:"White",type:"keyword",info:"White represents the color white in graphics or style specifications. "},{label:"WhiteNoiseProcess",type:"keyword",info:"WhiteNoiseProcess[] represents a Gaussian white noise process with mean 0 and standard deviation 1.W"},{label:"WhitePoint",type:"keyword",info:"WhitePoint is an option for ColorConvert, ChromaticityPlot and other functions to specify the white "},{label:"Whitespace",type:"keyword",info:"Whitespace represents a sequence of whitespace characters in StringExpression."},{label:"WhitespaceCharacter",type:"keyword",info:"WhitespaceCharacter represents a single whitespace character in StringExpression."},{label:"WhittakerM",type:"keyword",info:"WhittakerM[k, m, z] gives the Whittaker function M    (z). \n                                        "},{label:"WhittakerW",type:"keyword",info:"WhittakerW[k, m, z] gives the Whittaker function W    (z). \n                                        "},{label:"WholeCellGroupOpener",type:"keyword",info:"System`WholeCellGroupOpener"},{label:"WienerFilter",type:"keyword",info:"WienerFilter[data, r] removes noise from data by applying a range-r Wiener filter.WienerFilter[data,"},{label:"WienerProcess",type:"keyword",info:"WienerProcess[\xce\xbc, \xcf\x83] represents a Wiener process with a drift \xce\xbc and volatility \xcf\x83.WienerProcess[] repr"},{label:"WignerD",type:"keyword",info:"                                                           j                                        "},{label:"WignerSemicircleDistribution",type:"keyword",info:"WignerSemicircleDistribution[r] represents a Wigner semicircle distribution with radius r centered a"},{label:"WikidataData",type:"keyword",info:"WikidataData[item, property] gives the values of the specified property for the given item.WikidataD"},{label:"WikidataSearch",type:"keyword",info:'WikidataSearch["keywords"] returns a list of Wikidata items whose labels include the given keywords.'},{label:"WikipediaData",type:"keyword",info:"WikipediaData[article] gives the plain text of the specified Wikipedia article.WikipediaData[article"},{label:"WikipediaSearch",type:"keyword",info:"WikipediaSearch[keywords] returns a list of Wikipedia articles whose titles include the given keywor"},{label:"WilksW",type:"keyword",info:"WilksW[m , m ] gives Wilks's \xef\x9e\x86 for the matrices m  and m .\n        1   2                            "},{label:"WilksWTest",type:"keyword",info:'WilksWTest[m , m ] tests whether the matrices m  and m  are independent.WilksWTest[\xe2\x80\xa6, "property"] re'},{label:"WindDirectionData",type:"keyword",info:"WindDirectionData[] gives the most recent measurement for wind direction near the current location.W"},{label:"WindingCount",type:"keyword",info:"WindingCount[contour, p] gives the count of the number of times a closed curve winds around a point "},{label:"WindingPolygon",type:"keyword",info:"WindingPolygon[{p , p , \xe2\x80\xa6, p }] gives a polygon representing all points for which the closed contour"},{label:"WindowClickSelect",type:"keyword",info:"WindowClickSelect is a notebook option that specifies whether the window for the notebook should bec"},{label:"WindowElements",type:"keyword",info:"WindowElements is a notebook option that specifies the elements to include in the window used to dis"},{label:"WindowFloating",type:"keyword",info:"WindowFloating is a notebook option that specifies whether the window for the notebook should float "},{label:"WindowFrame",type:"keyword",info:"WindowFrame is a notebook option that specifies the type of frame to draw around the window in which"},{label:"WindowFrameElements",type:"keyword",info:"WindowFrameElements is an option for notebooks that specifies the elements to include in the frame o"},{label:"WindowMargins",type:"keyword",info:"WindowMargins is a notebook option that specifies what margins to leave around the window that is us"},{label:"WindowMovable",type:"keyword",info:"WindowMovable is a notebook option that specifies whether to allow the window for the notebook to be"},{label:"WindowOpacity",type:"keyword",info:"WindowOpacity is a notebook option that determines the overall opacity of a displayed window."},{label:"WindowPersistentStyles",type:"keyword",info:"System`WindowPersistentStyles"},{label:"WindowSelected",type:"keyword",info:"System`WindowSelected"},{label:"WindowSize",type:"keyword",info:"WindowSize is a notebook option that specifies the size of window that should be used to display a n"},{label:"WindowStatusArea",type:"keyword",info:"WindowStatusArea is a notebook option that specifies what should appear in the status area in the fr"},{label:"WindowTitle",type:"keyword",info:"WindowTitle is an option that specifies the title to give for a window. "},{label:"WindowToolbars",type:"keyword",info:"WindowToolbars is a notebook option that specifies the toolbars to include at the top of the window "},{label:"WindowWidth",type:"keyword",info:"System`WindowWidth"},{label:"WindSpeedData",type:"keyword",info:"WindSpeedData[] gives the most recent measurement for wind speed near the current location.WindSpeed"},{label:"WindVectorData",type:"keyword",info:"WindVectorData[] gives the most recent weather station measurement for wind vector near the current "},{label:"WinsorizedMean",type:"keyword",info:"WinsorizedMean[list, f] gives the mean of the elements in list after replacing the fraction f of the"},{label:"WinsorizedVariance",type:"keyword",info:"WinsorizedVariance[list, f] gives the variance of the elements in list after replacing the fraction "},{label:"WishartMatrixDistribution",type:"keyword",info:"WishartMatrixDistribution[\xce\xbd, \xce\xa3] represents a Wishart matrix distribution with \xce\xbd degrees of freedom a"},{label:"With",type:"keyword",info:"With[{x = x , y = y , \xe2\x80\xa6}, expr] specifies that all occurrences of the symbols x, y, \xe2\x80\xa6 in expr should"},{label:"WithCleanup",type:"keyword",info:"WithCleanup[expr, cleanup] evaluates expr, running cleanup before returning the result, even if an a"},{label:"WithLock",type:"keyword",info:'WithLock[File["path"], expr] locks the file path, evaluates expr, then releases the file.WithLock[Lo'},{label:"WolframAlpha",type:"keyword",info:'WolframAlpha["query"] sends query to Wolfram|Alpha and imports the output.WolframAlpha["query", form'},{label:"WolframAlphaDate",type:"keyword",info:"System`WolframAlphaDate"},{label:"WolframAlphaQuantity",type:"keyword",info:"System`WolframAlphaQuantity"},{label:"WolframAlphaResult",type:"keyword",info:"System`WolframAlphaResult"},{label:"WolframLanguageData",type:"keyword",info:"WolframLanguageData[entity, property] gives the value of the specified property for the Wolfram Lang"},{label:"Word",type:"keyword",info:"Word represents a word in Read, Find, and related functions. "},{label:"WordBoundary",type:"keyword",info:"WordBoundary represents a boundary between words for purposes of matching in StringExpression."},{label:"WordCharacter",type:"keyword",info:"WordCharacter represents a letter or digit character in StringExpression."},{label:"WordCloud",type:"keyword",info:"WordCloud[{s , s , \xe2\x80\xa6}] generates a word cloud graphic in which the s  are sized according to their m"},{label:"WordCount",type:"keyword",info:'WordCount["string"] gives the total number of words in string.'},{label:"WordCounts",type:"keyword",info:'WordCounts["string"] gives an association whose keys are the distinct words identified in string, an'},{label:"WordData",type:"keyword",info:'WordData["word", "property"] gives the specified property for the English word "word".WordData["word'},{label:"WordDefinition",type:"keyword",info:'WordDefinition["word"] gives the dictionary definitions available for "word".'},{label:"WordFrequency",type:"keyword",info:"WordFrequency[text, word] gives the frequency of word in text.WordFrequency[text, {word , word , \xe2\x80\xa6}]"},{label:"WordFrequencyData",type:"keyword",info:"WordFrequencyData[word] gives the frequency of word in typical published English text.WordFrequencyD"},{label:"WordList",type:"keyword",info:"WordList[] gives a list of common words.WordList[type] gives a list of words of the specified type.\n"},{label:"WordOrientation",type:"keyword",info:"WordOrientation is an option for WordCloud that specifies the orientations in which words appear."},{label:"WordSearch",type:"keyword",info:"WordSearch is an option for Find and FindList that specifies whether the text searched for must appe"},{label:"WordSelectionFunction",type:"keyword",info:"WordSelectionFunction is an option for WordCloud and other functions that specifies which words to u"},{label:"WordSeparators",type:"keyword",info:"WordSeparators is an option for Read, Find, and related functions that specifies the list of strings"},{label:"WordSpacings",type:"keyword",info:"WordSpacings is an option for WordCloud that specifies the empty space to be added around each word."},{label:"WordStem",type:"keyword",info:'WordStem["word"] gives a stemmed form of word, removing plurals, inflections, etc.'},{label:"WordTranslation",type:"keyword",info:'WordTranslation["word", lang] gives translations for word into the language lang.WordTranslation["wo'},{label:"WorkingPrecision",type:"keyword",info:"WorkingPrecision is an option for various numerical operations that specifies how many digits of pre"},{label:"WrapAround",type:"keyword",info:"WrapAround is an option for NotebookFind that specifies whether the find operation should continue p"},{label:"Write",type:"keyword",info:"Write[channel, expr , expr , \xe2\x80\xa6] writes the expressions expr  in sequence, followed by a newline, to "},{label:"WriteLine",type:"keyword",info:'WriteLine[stream, "string"] writes "string", followed by a newline, to the specified output stream.\n'},{label:"WriteString",type:"keyword",info:'WriteString["file", "string"] writes "string" to a file.WriteString[channel, "string"] writes "strin'},{label:"Wronskian",type:"keyword",info:"Wronskian[{y , y , \xe2\x80\xa6}, x] gives the Wronskian determinant for the functions y , y , \xe2\x80\xa6 depending on x"},{label:"XMLElement",type:"keyword",info:"XMLElement[tag, {attr  \xef\x94\xa2 val , \xe2\x80\xa6}, {data , \xe2\x80\xa6}] represents an element in symbolic XML.\n              "},{label:"XMLObject",type:"keyword",info:'XMLObject["type"] represents the head of an XML object in symbolic XML.'},{label:"XMLTemplate",type:"keyword",info:'XMLTemplate["string"] yields a TemplateObject that represents an XML template to be applied using fu'},{label:"Xnor",type:"keyword",info:"Xnor[e , e , \xe2\x80\xa6] is the logical XNOR (not XOR) function. It gives True if an even number of the e  ar"},{label:"Xor",type:"keyword",info:"Xor[e , e , \xe2\x80\xa6] is the logical XOR (exclusive OR) function. It gives True if an odd number of the e  "},{label:"XYZColor",type:"keyword",info:"XYZColor[x, y, z] represents a color in the XYZ color space with tristimulus values x, y and z.XYZCo"},{label:"Yellow",type:"keyword",info:"Yellow represents the color yellow in graphics or style specifications. "},{label:"Yesterday",type:"keyword",info:"Yesterday gives a DateObject representing the previous day."},{label:"YuleDissimilarity",type:"keyword",info:"YuleDissimilarity[u, v] gives the Yule dissimilarity between Boolean vectors u and v."},{label:"ZernikeR",type:"keyword",info:"                                                       m\nZernikeR[n, m, r] gives the radial Zernike "},{label:"ZeroSymmetric",type:"keyword",info:"ZeroSymmetric[{s , \xe2\x80\xa6, s }] represents the symmetry of a zero tensor in the slots s .\n               "},{label:"ZeroTest",type:"keyword",info:"ZeroTest is an option to various linear algebra functions that gives a function to use in testing wh"},{label:"ZeroWidthTimes",type:"keyword",info:"ZeroWidthTimes is an option for selections that specifies whether blank spaces representing multipli"},{label:"Zeta",type:"keyword",info:"Zeta[s] gives the Riemann zeta function \xce\\[Paragraph](s). Zeta[s, a] gives the generalized Riemann zeta function"},{label:"ZetaZero",type:"keyword",info:"                             th                                                                     "},{label:"ZIPCodeData",type:"keyword",info:"ZIPCodeData[entity, property] gives the value of the specified property for the ZIP code entity.ZIPC"},{label:"ZipfDistribution",type:"keyword",info:"ZipfDistribution[\xcf\x81] represents a zeta distribution with parameter \xcf\x81.ZipfDistribution[n, \xcf\x81] represent"},{label:"ZoomCenter",type:"keyword",info:"ZoomCenter is an option for DynamicImage that specifies the position of a zoom window within an imag"},{label:"ZoomFactor",type:"keyword",info:"ZoomFactor is an option for DynamicImage that specifies the magnification factor of a zoom. "},{label:"ZTest",type:"keyword",info:"                                                                                                    "},{label:"ZTransform",type:"keyword",info:"ZTransform[expr, n, z] gives the Z transform of expr. ZTransform[expr, {n , n , \xe2\x80\xa6}, {z , z , \xe2\x80\xa6}] giv"},{label:"ECcaEC",type:"text",apply:"$CapitalAlpha$",detail:"CapitalAlpha"},{label:"ECcbEC",type:"text",apply:"$CapitalBeta$",detail:"CapitalBeta"},{label:"ECcgEC",type:"text",apply:"$CapitalGamma$",detail:"CapitalGamma"},{label:"ECcdEC",type:"text",apply:"$CapitalDelta$",detail:"CapitalDelta"},{label:"ECceEC",type:"text",apply:"$CapitalEpsilon$",detail:"CapitalEpsilon"},{label:"ECczEC",type:"text",apply:"$CapitalZeta$",detail:"CapitalZeta"},{label:"ECceEC",type:"text",apply:"$CapitalEta$",detail:"CapitalEta"},{label:"ECctEC",type:"text",apply:"$CapitalTheta$",detail:"CapitalTheta"},{label:"ECciEC",type:"text",apply:"$CapitalIota$",detail:"CapitalIota"},{label:"ECckEC",type:"text",apply:"$CapitalKappa$",detail:"CapitalKappa"},{label:"ECclEC",type:"text",apply:"$CapitalLambda$",detail:"CapitalLambda"},{label:"ECcmEC",type:"text",apply:"$CapitalMu$",detail:"CapitalMu"},{label:"ECcnEC",type:"text",apply:"$CapitalNu$",detail:"CapitalNu"},{label:"ECcxEC",type:"text",apply:"$CapitalXi$",detail:"CapitalXi"},{label:"ECcoEC",type:"text",apply:"$CapitalOmicron$",detail:"CapitalOmicron"},{label:"ECcpEC",type:"text",apply:"$CapitalPi$",detail:"CapitalPi"},{label:"ECcrEC",type:"text",apply:"$CapitalRho$",detail:"CapitalRho"},{label:"ECcsEC",type:"text",apply:"$CapitalSigma$",detail:"CapitalSigma"},{label:"ECctEC",type:"text",apply:"$CapitalTau$",detail:"CapitalTau"},{label:"ECcuEC",type:"text",apply:"$CapitalUpsilon$",detail:"CapitalUpsilon"},{label:"ECcpEC",type:"text",apply:"$CapitalPhi$",detail:"CapitalPhi"},{label:"ECccEC",type:"text",apply:"$CapitalChi$",detail:"CapitalChi"},{label:"ECcpEC",type:"text",apply:"$CapitalPsi$",detail:"CapitalPsi"},{label:"ECcoEC",type:"text",apply:"$CapitalOmega$",detail:"CapitalOmega"},{label:"ECalEC",type:"text",apply:"$Alpha$",detail:"Alpha"},{label:"ECbeEC",type:"text",apply:"$Beta$",detail:"Beta"},{label:"ECgaEC",type:"text",apply:"$Gamma$",detail:"Gamma"},{label:"ECdeEC",type:"text",apply:"$Delta$",detail:"Delta"},{label:"ECceEC",type:"text",apply:"$CurlyEpsilon$",detail:"CurlyEpsilon"},{label:"ECzeEC",type:"text",apply:"$Zeta$",detail:"Zeta"},{label:"ECetEC",type:"text",apply:"$Eta$",detail:"Eta"},{label:"ECthEC",type:"text",apply:"$Theta$",detail:"Theta"},{label:"ECioEC",type:"text",apply:"$Iota$",detail:"Iota"},{label:"ECkaEC",type:"text",apply:"$Kappa$",detail:"Kappa"},{label:"EClaEC",type:"text",apply:"$Lambda$",detail:"Lambda"},{label:"ECmuEC",type:"text",apply:"$Mu$",detail:"Mu"},{label:"ECnuEC",type:"text",apply:"$Nu$",detail:"Nu"},{label:"ECxiEC",type:"text",apply:"$Xi$",detail:"Xi"},{label:"EComEC",type:"text",apply:"$Omicron$",detail:"Omicron"},{label:"ECpiEC",type:"text",apply:"$Pi$",detail:"Pi"},{label:"ECrhEC",type:"text",apply:"$Rho$",detail:"Rho"},{label:"ECfiEC",type:"text",apply:"$FinalSigma$",detail:"FinalSigma"},{label:"ECsiEC",type:"text",apply:"$Sigma$",detail:"Sigma"},{label:"ECtaEC",type:"text",apply:"$Tau$",detail:"Tau"},{label:"ECupEC",type:"text",apply:"$Upsilon$",detail:"Upsilon"},{label:"ECcpEC",type:"text",apply:"$CurlyPhi$",detail:"CurlyPhi"},{label:"ECchEC",type:"text",apply:"$Chi$",detail:"Chi"},{label:"ECpsEC",type:"text",apply:"$Psi$",detail:"Psi"},{label:"EComEC",type:"text",apply:"$Omega$",detail:"Omega"},{label:"ECctEC",type:"text",apply:"$CurlyTheta$",detail:"CurlyTheta"},{label:"ECccEC",type:"text",apply:"$CurlyCapitalUpsilon$",detail:"CurlyCapitalUpsilon"},{label:"ECphEC",type:"text",apply:"$Phi$",detail:"Phi"},{label:"ECcpEC",type:"text",apply:"$CurlyPi$",detail:"CurlyPi"},{label:"ECcsEC",type:"text",apply:"$CapitalStigma$",detail:"CapitalStigma"},{label:"ECstEC",type:"text",apply:"$Stigma$",detail:"Stigma"},{label:"ECcdEC",type:"text",apply:"$CapitalDigamma$",detail:"CapitalDigamma"},{label:"ECdiEC",type:"text",apply:"$Digamma$",detail:"Digamma"},{label:"ECckEC",type:"text",apply:"$CapitalKoppa$",detail:"CapitalKoppa"},{label:"ECkoEC",type:"text",apply:"$Koppa$",detail:"Koppa"},{label:"ECcsEC",type:"text",apply:"$CapitalSampi$",detail:"CapitalSampi"},{label:"ECsaEC",type:"text",apply:"$Sampi$",detail:"Sampi"},{label:"ECckEC",type:"text",apply:"$CurlyKappa$",detail:"CurlyKappa"},{label:"ECcrEC",type:"text",apply:"$CurlyRho$",detail:"CurlyRho"},{label:"ECepEC",type:"text",apply:"$Epsilon$",detail:"Epsilon"}];function lP(){return({state:e,dispatch:t})=>{if(e.readOnly)return!1;let i=e.changeByRange(e=>{let{from:t,to:i}=e;return{changes:{from:t,to:i,insert:"EC"},range:q.cursor(t+2)}});return t(e.update(i,{scrollIntoView:!0,userEvent:"input"})),!0}}function lD(e,t){let i=e.matchBefore(/\w*/);return i.from!==i.to||e.explicit?{from:i.from,options:t}:null}var lT="[a-zA-Z\\$][a-zA-Z0-9\\$]*",lM="(?:\\.\\d+|\\d+\\.\\d*|\\d+)",lR="(?:`(?:`?"+lM+")?)",lQ=RegExp("(?:(?:\\d+)(?:\\^\\^(?:\\.\\w+|\\w+\\.\\w*|\\w+)"+lR+"?(?:\\*\\^[+-]?\\d+)?))"),lA=RegExp("(?:"+lM+lR+"?(?:\\*\\^[+-]?\\d+)?)"),lF=RegExp("(?:`?)(?:"+lT+")(?:`(?:"+lT+"))*(?:`?)");let lL=lC.map(e=>e.label);const lE=["True","False","All","None","Null","Full","$Failed","$Aborted"];function lB(e,t){var i;return'"'===(i=e.next())?(t.tokenize=lI,t.tokenize(e,t)):"("===i&&e.eat("*")?(t.commentLevel++,t.tokenize=lG,t.tokenize(e,t)):(e.backUp(1),e.match(lQ,!0,!1)||e.match(lA,!0,!1))?"number":e.match(/([a-zA-Z\$][a-zA-Z0-9\$]*(?:`[a-zA-Z0-9\$]+)*::usage)/,!0,!1)?"meta":e.match(/([a-zA-Z\$][a-zA-Z0-9\$]*(?:`[a-zA-Z0-9\$]+)*::[a-zA-Z\$][a-zA-Z0-9\$]*):?/,!0,!1)?"string.special":e.match(/([a-zA-Z\$][a-zA-Z0-9\$]*\s*:)(?:(?:[a-zA-Z\$][a-zA-Z0-9\$]*)|(?:[^:=>~@\^\&\*\)\[\]'\?,\|])).*/,!0,!1)||e.match(/[a-zA-Z\$][a-zA-Z0-9\$]*_+[a-zA-Z\$][a-zA-Z0-9\$]*/,!0,!1)||e.match(/[a-zA-Z\$][a-zA-Z0-9\$]*_+/,!0,!1)||e.match(/_+[a-zA-Z\$][a-zA-Z0-9\$]*/,!0,!1)?"variableName.special":e.match(/\\\[[a-zA-Z\$][a-zA-Z0-9\$]*\]/,!0,!1)?"character":e.match(/(?:\[|\]|{|}|\(|\))/,!0,!1)?"bracket":e.match(/(?:#[a-zA-Z\$][a-zA-Z0-9\$]*|#+[0-9]?)/,!0,!1)?"variableName.constant":e.match(lF,!0,!1)?lE.indexOf(e.current())>-1?"number":lL.indexOf(e.current())>-1?"keyword":e.current() in t.localVars?"atom":(t.localVars[e.current()]=!0,"function"):e.match(/(?:\\|\+|\-|\*|\/|,|;|\.|:|@|~|=|>|<|&|\||_|`|'|\^|\?|!|%)/,!0,!1)?"operator":(e.next(),"error")}function lI(e,t){for(var i,o=!1,a=!1;null!=(i=e.next());){if('"'===i&&!a){o=!0;break}a=!a&&"\\"===i}return o&&!a&&(t.tokenize=lB),"string"}function lG(e,t){for(var i,o;t.commentLevel>0&&null!=(o=e.next());)"("===i&&"*"===o&&t.commentLevel++,"*"===i&&")"===o&&t.commentLevel--,i=o;return t.commentLevel<=0&&(t.tokenize=lB),"comment"}const l$={name:"mathematica",extendVariables:function(e){},startState:function(){return{tokenize:lB,commentLevel:0,localVars:{}}},token:function(e,t){return e.eatSpace()?null:t.tokenize(e,t)},languageData:{commentTokens:{block:{open:"(*",close:"*)"}}}};function lN(e,t){return({state:i,dispatch:o})=>{if(i.readOnly)return!1;let a=e(t,i);return!!a&&(o(i.update(a)),!0)}}(i=[ss.define(l$),lv({override:[async e=>lD(e,lC)]}),o8.of([{key:"Escape",run:lP()}])]).of=e=>[ss.define(l$),lv({override:[async t=>lD(t,e)]}),o8.of([{key:"Escape",run:lP()}])],i.reBuild=e=>{lL=e.map(e=>e.label)};const lz=lN(function(e,t,i=t.selection.ranges){let o=[],a=-1;for(let{from:e,to:n}of i){let i=o.length,r=1e9,s=lq(t,e).line;if(s){for(let i=e;i<=n;){let l=t.doc.lineAt(i);if(l.from>a&&(e==n||n>l.from)){a=l.from;let e=/^\s*/.exec(l.text)[0].length,t=e==l.length,i=l.text.slice(e,e+s.length)==s?e:-1;e<l.text.length&&e<r&&(r=e),o.push({line:l,comment:i,token:s,indent:e,empty:t,single:!1})}i=l.to+1}if(r<1e9)for(let e=i;e<o.length;e++)o[e].indent<o[e].line.text.length&&(o[e].indent=r);o.length==i+1&&(o[i].single=!0)}}if(2!=e&&o.some(e=>e.comment<0&&(!e.empty||e.single))){let e=[];for(let{line:t,token:i,indent:a,empty:n,single:r}of o)(r||!n)&&e.push({from:t.from+a,insert:i+" "});let i=t.changes(e);return{changes:i,selection:t.selection.map(i,1)}}if(1!=e&&o.some(e=>e.comment>=0)){let e=[];for(let{line:t,comment:i,token:a}of o)if(i>=0){let o=t.from+i,n=o+a.length;" "==t.text[n-t.from]&&n++,e.push({from:o,to:n})}return{changes:e}}return null},0),lW=lN(lV,0),lj=lN((e,t)=>lV(e,t,function(e){let t=[];for(let i of e.selection.ranges){let o=e.doc.lineAt(i.from),a=i.to<=o.to?o:e.doc.lineAt(i.to),n=t.length-1;n>=0&&t[n].to>o.from?t[n].to=a.to:t.push({from:o.from+/^\s*/.exec(o.text)[0].length,to:a.to})}return t}(t)),0);function lq(e,t){let i=e.languageDataAt("commentTokens",t);return i.length?i[0]:{}}function lV(e,t,i=t.selection.ranges){let o=i.map(e=>lq(t,e.from).block);if(!o.every(e=>e))return null;let a=i.map((e,i)=>(function(e,{open:t,close:i},o,a){let n,r,s=e.sliceDoc(o-50,o),l=e.sliceDoc(a,a+50),p=/\s*$/.exec(s)[0].length,d=/^\s*/.exec(l)[0].length,c=s.length-p;if(s.slice(c-t.length,c)==t&&l.slice(d,d+i.length)==i)return{open:{pos:o-p,margin:p&&1},close:{pos:a+d,margin:d&&1}};a-o<=100?n=r=e.sliceDoc(o,a):(n=e.sliceDoc(o,o+50),r=e.sliceDoc(a-50,a));let f=/^\s*/.exec(n)[0].length,h=/\s*$/.exec(r)[0].length,y=r.length-h-i.length;return n.slice(f,f+t.length)==t&&r.slice(y,y+i.length)==i?{open:{pos:o+f+t.length,margin:/\s/.test(n.charAt(f+t.length))?1:0},close:{pos:a-h-i.length,margin:/\s/.test(r.charAt(y-1))?1:0}}:null})(t,o[i],e.from,e.to));if(2!=e&&!a.every(e=>e))return{changes:t.changes(i.map((e,t)=>a[t]?[]:[{from:e.from,insert:o[t].open+" "},{from:e.to,insert:" "+o[t].close}]))};if(1!=e&&a.some(e=>e)){let e=[];for(let t=0,i;t<a.length;t++)if(i=a[t]){let a=o[t],{open:n,close:r}=i;e.push({from:n.pos-a.open.length,to:n.pos+n.margin},{from:r.pos-r.margin,to:r.pos+a.close.length})}return{changes:e}}return null}const lZ=em.define(),lX=em.define(),lU=X.define(),lH=X.define({combine:e=>eT(e,{minDepth:100,newGroupDelay:500,joinToEvent:(e,t)=>t},{minDepth:Math.max,newGroupDelay:Math.min,joinToEvent:(e,t)=>(i,o)=>e(i,o)||t(i,o)})}),lY=J.define({create:()=>pe.empty,update(e,t){let i=t.state.facet(lH),o=t.annotation(lZ);if(o){var a;let n;let r=t.docChanged?q.single((a=t.changes,n=0,a.iterChangedRanges((e,t)=>n=t),n)):void 0,s=l8.fromTransaction(t,r),l=o.side,p=0==l?e.undone:e.done;return p=s?l6(p,p.length,i.minDepth,s):l4(p,t.startState.selection),new pe(0==l?o.rest:p,0==l?p:o.rest)}let n=t.annotation(lX);if(("full"==n||"before"==n)&&(e=e.isolate()),!1===t.annotation(ew.addToHistory))return t.changes.empty?e:e.addMapping(t.changes.desc);let r=l8.fromTransaction(t),s=t.annotation(ew.time),l=t.annotation(ew.userEvent);return r?e=e.addChanges(r,s,l,i,t):t.selection&&(e=e.addSelection(t.startState.selection,s,l,i.newGroupDelay)),("full"==n||"after"==n)&&(e=e.isolate()),e},toJSON:e=>({done:e.done.map(e=>e.toJSON()),undone:e.undone.map(e=>e.toJSON())}),fromJSON:e=>new pe(e.done.map(l8.fromJSON),e.undone.map(l8.fromJSON))});function l_(e={}){return[lY,lH.of(e),oH.domEventHandlers({beforeinput(e,t){let i="historyUndo"==e.inputType?lJ:"historyRedo"==e.inputType?l0:null;return!!i&&(e.preventDefault(),i(t))}})]}function lK(e,t){return function({state:i,dispatch:o}){if(!t&&i.readOnly)return!1;let a=i.field(lY,!1);if(!a)return!1;let n=a.pop(e,i,t);return!!n&&(o(n),!0)}}const lJ=lK(0,!1),l0=lK(1,!1),l2=lK(0,!0),l1=lK(1,!0);class l8{constructor(e,t,i,o,a){this.changes=e,this.effects=t,this.mapped=i,this.startSelection=o,this.selectionsAfter=a}setSelAfter(e){return new l8(this.changes,this.effects,this.mapped,this.startSelection,e)}toJSON(){var e,t,i;return{changes:null===(e=this.changes)||void 0===e?void 0:e.toJSON(),mapped:null===(t=this.mapped)||void 0===t?void 0:t.toJSON(),startSelection:null===(i=this.startSelection)||void 0===i?void 0:i.toJSON(),selectionsAfter:this.selectionsAfter.map(e=>e.toJSON())}}static fromJSON(e){return new l8(e.changes&&B.fromJSON(e.changes),[],e.mapped&&E.fromJSON(e.mapped),e.startSelection&&q.fromJSON(e.startSelection),e.selectionsAfter.map(q.fromJSON))}static fromTransaction(e,t){let i=l3;for(let t of e.startState.facet(lU)){let o=t(e);o.length&&(i=i.concat(o))}return!i.length&&e.changes.empty?null:new l8(e.changes.invert(e.startState.doc),i,void 0,t||e.startState.selection,l3)}static selection(e){return new l8(void 0,l3,void 0,void 0,e)}}function l6(e,t,i,o){let a=t+1>i+20?t-i-1:0,n=e.slice(a,t);return n.push(o),n}function l9(e,t){return e.length?t.length?e.concat(t):e:t}const l3=[];function l4(e,t){if(!e.length)return[l8.selection([t])];{let i=e[e.length-1],o=i.selectionsAfter.slice(Math.max(0,i.selectionsAfter.length-200));return o.length&&o[o.length-1].eq(t)?e:(o.push(t),l6(e,e.length-1,1e9,i.setSelAfter(o)))}}function l5(e,t){if(!e.length)return e;let i=e.length,o=l3;for(;i;){let a=function(e,t,i){let o=l9(e.selectionsAfter.length?e.selectionsAfter.map(e=>e.map(t)):l3,i);if(!e.changes)return l8.selection(o);let a=e.changes.map(t),n=t.mapDesc(e.changes,!0),r=e.mapped?e.mapped.composeDesc(n):n;return new l8(a,eb.mapEffects(e.effects,t),r,e.startSelection.map(n),o)}(e[i-1],t,o);if(a.changes&&!a.changes.empty||a.effects.length){let t=e.slice(0,i);return t[i-1]=a,t}t=a.mapped,i--,o=a.selectionsAfter}return o.length?[l8.selection(o)]:l3}const l7=/^(input\.type|delete)($|\.)/;class pe{constructor(e,t,i=0,o){this.done=e,this.undone=t,this.prevTime=i,this.prevUserEvent=o}isolate(){return this.prevTime?new pe(this.done,this.undone):this}addChanges(e,t,i,o,a){var n,r;let s,l,p=this.done,d=p[p.length-1];return p=d&&d.changes&&!d.changes.empty&&e.changes&&(!i||l7.test(i))&&(!d.selectionsAfter.length&&t-this.prevTime<o.newGroupDelay&&o.joinToEvent(a,(n=d.changes,r=e.changes,s=[],l=!1,n.iterChangedRanges((e,t)=>s.push(e,t)),r.iterChangedRanges((e,t,i,o)=>{for(let e=0;e<s.length;){let t=s[e++],a=s[e++];o>=t&&i<=a&&(l=!0)}}),l))||"input.type.compose"==i)?l6(p,p.length-1,o.minDepth,new l8(e.changes.compose(d.changes),l9(e.effects,d.effects),d.mapped,d.startSelection,l3)):l6(p,p.length,o.minDepth,e),new pe(p,l3,t,i)}addSelection(e,t,i,o){var a;let n=this.done.length?this.done[this.done.length-1].selectionsAfter:l3;return n.length>0&&t-this.prevTime<o&&i==this.prevUserEvent&&i&&/^select($|\.)/.test(i)&&(a=n[n.length-1]).ranges.length==e.ranges.length&&0===a.ranges.filter((t,i)=>t.empty!=e.ranges[i].empty).length?this:new pe(l4(this.done,e),this.undone,t,i)}addMapping(e){return new pe(l5(this.done,e),l5(this.undone,e),this.prevTime,this.prevUserEvent)}pop(e,t,i){let o=0==e?this.done:this.undone;if(0==o.length)return null;let a=o[o.length-1];if(i&&a.selectionsAfter.length){let i,n;return t.update({selection:a.selectionsAfter[a.selectionsAfter.length-1],annotations:lZ.of({side:e,rest:(i=o[o.length-1],(n=o.slice())[o.length-1]=i.setSelAfter(i.selectionsAfter.slice(0,i.selectionsAfter.length-1)),n)}),userEvent:0==e?"select.undo":"select.redo",scrollIntoView:!0})}{if(!a.changes)return null;let i=1==o.length?l3:o.slice(0,o.length-1);return a.mapped&&(i=l5(i,a.mapped)),t.update({changes:a.changes,selection:a.startSelection,effects:a.effects,annotations:lZ.of({side:e,rest:i}),filter:!1,userEvent:0==e?"undo":"redo",scrollIntoView:!0})}}}pe.empty=new pe(l3,l3);const pt=[{key:"Mod-z",run:lJ,preventDefault:!0},{key:"Mod-y",mac:"Mod-Shift-z",run:l0,preventDefault:!0},{linux:"Ctrl-Shift-z",run:l0,preventDefault:!0},{key:"Mod-u",run:l2,preventDefault:!0},{key:"Alt-u",mac:"Mod-Shift-u",run:l1,preventDefault:!0}];function pi(e,t){return q.create(e.ranges.map(t),e.mainIndex)}function po(e,t){return e.update({selection:t,scrollIntoView:!0,userEvent:"select"})}function pa({state:e,dispatch:t},i){let o=pi(e.selection,i);return!o.eq(e.selection)&&(t(po(e,o)),!0)}function pn(e,t){return q.cursor(t?e.to:e.from)}function pr(e,t){return pa(e,i=>i.empty?e.moveByChar(i,t):pn(i,t))}function ps(e){return e.textDirectionAt(e.state.selection.main.head)==iw.LTR}const pl=e=>pr(e,!ps(e)),pp=e=>pr(e,ps(e));function pd(e,t){return pa(e,i=>i.empty?e.moveByGroup(i,t):pn(i,t))}function pc(e,t,i){let o,a,n=rn(e).resolveInner(t.head),r=i?nh.closedBy:nh.openedBy;for(let o=t.head;;){let t=i?n.childAfter(o):n.childBefore(o);if(!t)break;!function(e,t,i){if(t.type.prop(i))return!0;let o=t.to-t.from;return o&&(o>2||/[^\s,.;:]/.test(e.sliceDoc(t.from,t.to)))||t.firstChild}(e,t,r)?o=i?t.to:t.from:n=t}return a=n.type.prop(r)&&(o=i?si(e,n.from,1):si(e,n.to,-1))&&o.matched?i?o.end.to:o.end.from:i?n.to:n.from,q.cursor(a,i?-1:1)}function pf(e,t){return pa(e,i=>{if(!i.empty)return pn(i,t);let o=e.moveVertically(i,t);return o.head!=i.head?o:e.moveToLineBoundary(i,t)})}const ph=e=>pf(e,!1),py=e=>pf(e,!0);function pu(e){let t=e.scrollDOM.clientHeight<e.scrollDOM.scrollHeight-2,i=0,o=0,a;if(t){for(let t of e.state.facet(oH.scrollMargins)){let a=t(e);(null==a?void 0:a.top)&&(i=Math.max(null==a?void 0:a.top,i)),(null==a?void 0:a.bottom)&&(o=Math.max(null==a?void 0:a.bottom,o))}a=e.scrollDOM.clientHeight-i-o}else a=(e.dom.ownerDocument.defaultView||window).innerHeight;return{marginTop:i,marginBottom:o,selfScroll:t,height:Math.max(e.defaultLineHeight,a-5)}}function pm(e,t){let i,o=pu(e),{state:a}=e,n=pi(a.selection,i=>i.empty?e.moveVertically(i,t,o.height):pn(i,t));if(n.eq(a.selection))return!1;if(o.selfScroll){let t=e.coordsAtPos(a.selection.main.head),r=e.scrollDOM.getBoundingClientRect(),s=r.top+o.marginTop,l=r.bottom-o.marginBottom;t&&t.top>s&&t.bottom<l&&(i=oH.scrollIntoView(n.main.head,{y:"start",yMargin:t.top-s}))}return e.dispatch(po(a,n),{effects:i}),!0}const px=e=>pm(e,!1),pg=e=>pm(e,!0);function pb(e,t,i){let o=e.lineBlockAt(t.head),a=e.moveToLineBoundary(t,i);if(a.head==t.head&&a.head!=(i?o.to:o.from)&&(a=e.moveToLineBoundary(t,i,!1)),!i&&a.head==o.from&&o.length){let i=/^\s*/.exec(e.state.sliceDoc(o.from,Math.min(o.from+100,o.to)))[0].length;i&&t.head!=o.from+i&&(a=q.cursor(o.from+i))}return a}function pw(e,t){let i=pi(e.state.selection,e=>{let i=t(e);return q.range(e.anchor,i.head,i.goalColumn,i.bidiLevel||void 0)});return!i.eq(e.state.selection)&&(e.dispatch(po(e.state,i)),!0)}function pk(e,t){return pw(e,i=>e.moveByChar(i,t))}const pv=e=>pk(e,!ps(e)),pO=e=>pk(e,ps(e));function pS(e,t){return pw(e,i=>e.moveByGroup(i,t))}function pC(e,t){return pw(e,i=>e.moveVertically(i,t))}const pP=e=>pC(e,!1),pD=e=>pC(e,!0);function pT(e,t){return pw(e,i=>e.moveVertically(i,t,pu(e).height))}const pM=e=>pT(e,!1),pR=e=>pT(e,!0),pQ=({state:e,dispatch:t})=>(t(po(e,{anchor:0})),!0),pA=({state:e,dispatch:t})=>(t(po(e,{anchor:e.doc.length})),!0),pF=({state:e,dispatch:t})=>(t(po(e,{anchor:e.selection.main.anchor,head:0})),!0),pL=({state:e,dispatch:t})=>(t(po(e,{anchor:e.selection.main.anchor,head:e.doc.length})),!0);function pE(e,t){if(e.state.readOnly)return!1;let i="delete.selection",{state:o}=e,a=o.changeByRange(o=>{let{from:a,to:n}=o;if(a==n){let o=t(a);o<a?(i="delete.backward",o=pB(e,o,!1)):o>a&&(i="delete.forward",o=pB(e,o,!0)),a=Math.min(a,o),n=Math.max(n,o)}else a=pB(e,a,!1),n=pB(e,n,!0);return a==n?{range:o}:{changes:{from:a,to:n},range:q.cursor(a)}});return!a.changes.empty&&(e.dispatch(o.update(a,{scrollIntoView:!0,userEvent:i,effects:"delete.selection"==i?oH.announce.of(o.phrase("Selection deleted")):void 0})),!0)}function pB(e,t,i){if(e instanceof oH)for(let o of e.state.facet(oH.atomicRanges).map(t=>t(e)))o.between(t,t,(e,o)=>{e<t&&o>t&&(t=i?o:e)});return t}const pI=(e,t)=>pE(e,i=>{let{state:o}=e,a=o.doc.lineAt(i),n,r;if(!t&&i>a.from&&i<a.from+200&&!/[^ \t]/.test(n=a.text.slice(0,i-a.from))){if("	"==n[n.length-1])return i-1;let e=eV(n,o.tabSize)%rg(o)||rg(o);for(let t=0;t<e&&" "==n[n.length-1-t];t++)i--;r=i}else(r=x(a.text,i-a.from,t,t)+a.from)==i&&a.number!=(t?o.doc.lines:1)&&(r+=t?1:-1);return r}),pG=e=>pI(e,!1),p$=e=>pI(e,!0),pN=(e,t)=>pE(e,i=>{let o=i,{state:a}=e,n=a.doc.lineAt(o),r=a.charCategorizer(o);for(let e=null;;){if(o==(t?n.to:n.from)){o==i&&n.number!=(t?a.doc.lines:1)&&(o+=t?1:-1);break}let s=x(n.text,o-n.from,t)+n.from,l=n.text.slice(Math.min(o,s)-n.from,Math.max(o,s)-n.from),p=r(l);if(null!=e&&p!=e)break;(" "!=l||o!=i)&&(e=p),o=s}return o}),pz=e=>pN(e,!1),pW=e=>pE(e,t=>{let i=e.lineBlockAt(t).to;return t<i?i:Math.min(e.state.doc.length,t+1)});function pj(e){let t=[],i=-1;for(let o of e.selection.ranges){let a=e.doc.lineAt(o.from),n=e.doc.lineAt(o.to);if(o.empty||o.to!=n.from||(n=e.doc.lineAt(o.to-1)),i>=a.number){let e=t[t.length-1];e.to=n.to,e.ranges.push(o)}else t.push({from:a.from,to:n.to,ranges:[o]});i=n.number+1}return t}function pq(e,t,i){if(e.readOnly)return!1;let o=[],a=[];for(let t of pj(e)){if(i?t.to==e.doc.length:0==t.from)continue;let n=e.doc.lineAt(i?t.to+1:t.from-1),r=n.length+1;if(i)for(let i of(o.push({from:t.to,to:n.to},{from:t.from,insert:n.text+e.lineBreak}),t.ranges))a.push(q.range(Math.min(e.doc.length,i.anchor+r),Math.min(e.doc.length,i.head+r)));else for(let i of(o.push({from:n.from,to:t.from},{from:t.to,insert:e.lineBreak+n.text}),t.ranges))a.push(q.range(i.anchor-r,i.head-r))}return!!o.length&&(t(e.update({changes:o,scrollIntoView:!0,selection:q.create(a,e.selection.mainIndex),userEvent:"move.line"})),!0)}function pV(e,t,i){if(e.readOnly)return!1;let o=[];for(let t of pj(e))i?o.push({from:t.from,insert:e.doc.slice(t.from,t.to)+e.lineBreak}):o.push({from:t.to,insert:e.lineBreak+e.doc.slice(t.from,t.to)});return t(e.update({changes:o,scrollIntoView:!0,userEvent:"input.copyline"})),!0}const pZ=pU(!1),pX=pU(!0);function pU(e){return({state:t,dispatch:i})=>{if(t.readOnly)return!1;let o=t.changeByRange(i=>{let{from:o,to:a}=i,n=t.doc.lineAt(o),r=!e&&o==a&&function(e,t){if(/\(\)|\[\]|\{\}/.test(e.sliceDoc(t-1,t+1)))return{from:t,to:t};let i=rn(e).resolveInner(t),o=i.childBefore(t),a=i.childAfter(t),n;return o&&a&&o.to<=t&&a.from>=t&&(n=o.type.prop(nh.closedBy))&&n.indexOf(a.name)>-1&&e.doc.lineAt(o.to).from==e.doc.lineAt(a.from).from?{from:o.to,to:a.from}:null}(t,o);e&&(o=a=(a<=n.to?n:t.doc.lineAt(a)).to);let l=new rk(t,{simulateBreak:o,simulateDoubleBreak:!!r}),p=rw(l,o);for(null==p&&(p=/^\s*/.exec(t.doc.lineAt(o).text)[0].length);a<n.to&&/\s/.test(n.text[a-n.from]);)a++;r?{from:o,to:a}=r:o>n.from&&o<n.from+100&&!/\S/.test(n.text.slice(0,o))&&(o=n.from);let d=["",rb(t,p)];return r&&d.push(rb(t,l.lineIndent(n.from,-1))),{changes:{from:o,to:a,insert:s.of(d)},range:q.cursor(o+1+d[1].length)}});return i(t.update(o,{scrollIntoView:!0,userEvent:"input"})),!0}}function pH(e,t){let i=-1;return e.changeByRange(o=>{let a=[];for(let n=o.from;n<=o.to;){let r=e.doc.lineAt(n);r.number>i&&(o.empty||o.to>r.from)&&(t(r,a,o),i=r.number),n=r.to+1}let n=e.changes(a);return{changes:a,range:q.range(n.mapPos(o.anchor,1),n.mapPos(o.head,1))}})}const pY=[{key:"Ctrl-b",run:pl,shift:pv,preventDefault:!0},{key:"Ctrl-f",run:pp,shift:pO},{key:"Ctrl-p",run:ph,shift:pP},{key:"Ctrl-n",run:py,shift:pD},{key:"Ctrl-a",run:e=>pa(e,t=>q.cursor(e.lineBlockAt(t.head).from,1)),shift:e=>pw(e,t=>q.cursor(e.lineBlockAt(t.head).from))},{key:"Ctrl-e",run:e=>pa(e,t=>q.cursor(e.lineBlockAt(t.head).to,-1)),shift:e=>pw(e,t=>q.cursor(e.lineBlockAt(t.head).to))},{key:"Ctrl-d",run:p$},{key:"Ctrl-h",run:pG},{key:"Ctrl-k",run:pW},{key:"Ctrl-Alt-h",run:pz},{key:"Ctrl-o",run:({state:e,dispatch:t})=>{if(e.readOnly)return!1;let i=e.changeByRange(e=>({changes:{from:e.from,to:e.to,insert:s.of(["",""])},range:q.cursor(e.from)}));return t(e.update(i,{scrollIntoView:!0,userEvent:"input"})),!0}},{key:"Ctrl-t",run:({state:e,dispatch:t})=>{if(e.readOnly)return!1;let i=e.changeByRange(t=>{if(!t.empty||0==t.from||t.from==e.doc.length)return{range:t};let i=t.from,o=e.doc.lineAt(i),a=i==o.from?i-1:x(o.text,i-o.from,!1)+o.from,n=i==o.to?i+1:x(o.text,i-o.from,!0)+o.from;return{changes:{from:a,to:n,insert:e.doc.slice(i,n).append(e.doc.slice(a,i))},range:q.cursor(n)}});return!i.changes.empty&&(t(e.update(i,{scrollIntoView:!0,userEvent:"move.character"})),!0)}},{key:"Ctrl-v",run:pg}],p_=[{key:"ArrowLeft",run:pl,shift:pv,preventDefault:!0},{key:"Mod-ArrowLeft",mac:"Alt-ArrowLeft",run:e=>pd(e,!ps(e)),shift:e=>pS(e,!ps(e)),preventDefault:!0},{mac:"Cmd-ArrowLeft",run:e=>pa(e,t=>pb(e,t,!ps(e))),shift:e=>pw(e,t=>pb(e,t,!ps(e))),preventDefault:!0},{key:"ArrowRight",run:pp,shift:pO,preventDefault:!0},{key:"Mod-ArrowRight",mac:"Alt-ArrowRight",run:e=>pd(e,ps(e)),shift:e=>pS(e,ps(e)),preventDefault:!0},{mac:"Cmd-ArrowRight",run:e=>pa(e,t=>pb(e,t,ps(e))),shift:e=>pw(e,t=>pb(e,t,ps(e))),preventDefault:!0},{key:"ArrowUp",run:ph,shift:pP,preventDefault:!0},{mac:"Cmd-ArrowUp",run:pQ,shift:pF},{mac:"Ctrl-ArrowUp",run:px,shift:pM},{key:"ArrowDown",run:py,shift:pD,preventDefault:!0},{mac:"Cmd-ArrowDown",run:pA,shift:pL},{mac:"Ctrl-ArrowDown",run:pg,shift:pR},{key:"PageUp",run:px,shift:pM},{key:"PageDown",run:pg,shift:pR},{key:"Home",run:e=>pa(e,t=>pb(e,t,!1)),shift:e=>pw(e,t=>pb(e,t,!1)),preventDefault:!0},{key:"Mod-Home",run:pQ,shift:pF},{key:"End",run:e=>pa(e,t=>pb(e,t,!0)),shift:e=>pw(e,t=>pb(e,t,!0)),preventDefault:!0},{key:"Mod-End",run:pA,shift:pL},{key:"Enter",run:pZ},{key:"Mod-a",run:({state:e,dispatch:t})=>(t(e.update({selection:{anchor:0,head:e.doc.length},userEvent:"select"})),!0)},{key:"Backspace",run:pG,shift:pG},{key:"Delete",run:p$},{key:"Mod-Backspace",mac:"Alt-Backspace",run:pz},{key:"Mod-Delete",mac:"Alt-Delete",run:e=>pN(e,!0)},{mac:"Mod-Backspace",run:e=>pE(e,t=>{let i=e.lineBlockAt(t).from;return t>i?i:Math.max(0,t-1)})},{mac:"Mod-Delete",run:pW}].concat(pY.map(e=>({mac:e.key,run:e.run,shift:e.shift}))),pK=[{key:"Alt-ArrowLeft",mac:"Ctrl-ArrowLeft",run:e=>pa(e,t=>pc(e.state,t,!ps(e))),shift:e=>pw(e,t=>pc(e.state,t,!ps(e)))},{key:"Alt-ArrowRight",mac:"Ctrl-ArrowRight",run:e=>pa(e,t=>pc(e.state,t,ps(e))),shift:e=>pw(e,t=>pc(e.state,t,ps(e)))},{key:"Alt-ArrowUp",run:({state:e,dispatch:t})=>pq(e,t,!1)},{key:"Shift-Alt-ArrowUp",run:({state:e,dispatch:t})=>pV(e,t,!1)},{key:"Alt-ArrowDown",run:({state:e,dispatch:t})=>pq(e,t,!0)},{key:"Shift-Alt-ArrowDown",run:({state:e,dispatch:t})=>pV(e,t,!0)},{key:"Escape",run:({state:e,dispatch:t})=>{let i=e.selection,o=null;return i.ranges.length>1?o=q.create([i.main]):i.main.empty||(o=q.create([q.cursor(i.main.head)])),!!o&&(t(po(e,o)),!0)}},{key:"Mod-Enter",run:pX},{key:"Alt-l",mac:"Ctrl-l",run:({state:e,dispatch:t})=>{let i=pj(e).map(({from:t,to:i})=>q.range(t,Math.min(i+1,e.doc.length)));return t(e.update({selection:q.create(i),userEvent:"select"})),!0}},{key:"Mod-i",run:({state:e,dispatch:t})=>{let i=pi(e.selection,t=>{var i;let o=rn(e).resolveInner(t.head,1);for(;!(o.from<t.from&&o.to>=t.to||o.to>t.to&&o.from<=t.from||!(null===(i=o.parent)||void 0===i?void 0:i.parent));)o=o.parent;return q.range(o.to,o.from)});return t(po(e,i)),!0},preventDefault:!0},{key:"Mod-[",run:({state:e,dispatch:t})=>!e.readOnly&&(t(e.update(pH(e,(t,i)=>{let o=/^\s*/.exec(t.text)[0];if(!o)return;let a=eV(o,e.tabSize),n=0,r=rb(e,Math.max(0,a-rg(e)));for(;n<o.length&&n<r.length&&o.charCodeAt(n)==r.charCodeAt(n);)n++;i.push({from:t.from+n,to:t.from+o.length,insert:r.slice(n)})}),{userEvent:"delete.dedent"})),!0)},{key:"Mod-]",run:({state:e,dispatch:t})=>!e.readOnly&&(t(e.update(pH(e,(t,i)=>{i.push({from:t.from,insert:e.facet(rx)})}),{userEvent:"input.indent"})),!0)},{key:"Mod-Alt-\\",run:({state:e,dispatch:t})=>{if(e.readOnly)return!1;let i=Object.create(null),o=new rk(e,{overrideIndentation:e=>{let t=i[e];return null==t?-1:t}}),a=pH(e,(t,a,n)=>{let r=rw(o,t.from);if(null==r)return;/\S/.test(t.text)||(r=0);let s=/^\s*/.exec(t.text)[0],l=rb(e,r);(s!=l||n.from<t.from+s.length)&&(i[t.from]=r,a.push({from:t.from,to:t.from+s.length,insert:l}))});return a.changes.empty||t(e.update(a,{userEvent:"indent"})),!0}},{key:"Shift-Mod-k",run:e=>{if(e.state.readOnly)return!1;let{state:t}=e,i=t.changes(pj(t).map(({from:e,to:i})=>(e>0?e--:i<t.doc.length&&i++,{from:e,to:i}))),o=pi(t.selection,t=>e.moveVertically(t,!0)).map(i);return e.dispatch({changes:i,selection:o,scrollIntoView:!0,userEvent:"delete.line"}),!0}},{key:"Shift-Mod-\\",run:({state:e,dispatch:t})=>(function(e,t,i){let o=!1,a=pi(e.selection,t=>{let a=si(e,t.head,-1)||si(e,t.head,1)||t.head>0&&si(e,t.head-1,1)||t.head<e.doc.length&&si(e,t.head+1,-1);if(!a||!a.end)return t;o=!0;let n=a.start.from==t.head?a.end.to:a.end.from;return i?q.range(t.anchor,n):q.cursor(n)});return!!o&&(t(po(e,a)),!0)})(e,t,!1)},{key:"Mod-/",run:e=>{let{state:t}=e,i=t.doc.lineAt(t.selection.main.from),o=lq(e.state,i.from);return o.line?lz(e):!!o.block&&lj(e)}},{key:"Alt-A",run:lW}].concat(p_);function pJ(){var e=arguments[0];"string"==typeof e&&(e=document.createElement(e));var t=1,i=arguments[1];if(i&&"object"==typeof i&&null==i.nodeType&&!Array.isArray(i)){for(var o in i)if(Object.prototype.hasOwnProperty.call(i,o)){var a=i[o];"string"==typeof a?e.setAttribute(o,a):null!=a&&(e[o]=a)}t++}for(;t<arguments.length;t++)!function e(t,i){if("string"==typeof i)t.appendChild(document.createTextNode(i));else if(null==i);else if(null!=i.nodeType)t.appendChild(i);else if(Array.isArray(i))for(var o=0;o<i.length;o++)e(t,i[o]);else throw RangeError("Unsupported child node: "+i)}(e,arguments[t]);return e}const p0="function"==typeof String.prototype.normalize?e=>e.normalize("NFKD"):e=>e;class p2{constructor(e,t,i=0,o=e.length,a,n){this.test=n,this.value={from:0,to:0},this.done=!1,this.matches=[],this.buffer="",this.bufferPos=0,this.iter=e.iterRange(i,o),this.bufferStart=i,this.normalize=a?e=>a(p0(e)):p0,this.query=this.normalize(t)}peek(){if(this.bufferPos==this.buffer.length){if(this.bufferStart+=this.buffer.length,this.iter.next(),this.iter.done)return -1;this.bufferPos=0,this.buffer=this.iter.value}return v(this.buffer,this.bufferPos)}next(){for(;this.matches.length;)this.matches.pop();return this.nextOverlapping()}nextOverlapping(){for(;;){let e=this.peek();if(e<0)return this.done=!0,this;let t=O(e),i=this.bufferStart+this.bufferPos;this.bufferPos+=S(e);let o=this.normalize(t);for(let e=0,a=i;;e++){let n=o.charCodeAt(e),r=this.match(n,a);if(r)return this.value=r,this;if(e==o.length-1)break;a==i&&e<t.length&&t.charCodeAt(e)==n&&a++}}}match(e,t){let i=null;for(let o=0;o<this.matches.length;o+=2){let a=this.matches[o],n=!1;this.query.charCodeAt(a)==e&&(a==this.query.length-1?i={from:this.matches[o+1],to:t+1}:(this.matches[o]++,n=!0)),n||(this.matches.splice(o,2),o-=2)}return this.query.charCodeAt(0)==e&&(1==this.query.length?i={from:t,to:t+1}:this.matches.push(1,t)),i&&this.test&&!this.test(i.from,i.to,this.buffer,this.bufferPos)&&(i=null),i}}"undefined"!=typeof Symbol&&(p2.prototype[Symbol.iterator]=function(){return this});const p1={from:-1,to:-1,match:/.*/.exec("")},p8="gm"+(null==/x/.unicode?"":"u");class p6{constructor(e,t,i,o=0,a=e.length){if(this.text=e,this.to=a,this.curLine="",this.done=!1,this.value=p1,/\\[sWDnr]|\n|\r|\[\^/.test(t))return new p4(e,t,i,o,a);this.re=new RegExp(t,p8+((null==i?void 0:i.ignoreCase)?"i":"")),this.test=null==i?void 0:i.test,this.iter=e.iter();let n=e.lineAt(o);this.curLineStart=n.from,this.matchPos=p5(e,o),this.getLine(this.curLineStart)}getLine(e){this.iter.next(e),this.iter.lineBreak?this.curLine="":(this.curLine=this.iter.value,this.curLineStart+this.curLine.length>this.to&&(this.curLine=this.curLine.slice(0,this.to-this.curLineStart)),this.iter.next())}nextLine(){this.curLineStart=this.curLineStart+this.curLine.length+1,this.curLineStart>this.to?this.curLine="":this.getLine(0)}next(){for(let e=this.matchPos-this.curLineStart;;){this.re.lastIndex=e;let t=this.matchPos<=this.to&&this.re.exec(this.curLine);if(t){let i=this.curLineStart+t.index,o=i+t[0].length;if(this.matchPos=p5(this.text,o+(i==o?1:0)),i==this.curLineStart+this.curLine.length&&this.nextLine(),(i<o||i>this.value.to)&&(!this.test||this.test(i,o,t)))return this.value={from:i,to:o,match:t},this;e=this.matchPos-this.curLineStart}else{if(!(this.curLineStart+this.curLine.length<this.to))return this.done=!0,this;this.nextLine(),e=0}}}}const p9=new WeakMap;class p3{constructor(e,t){this.from=e,this.text=t}get to(){return this.from+this.text.length}static get(e,t,i){let o=p9.get(e);if(!o||o.from>=i||o.to<=t){let o=new p3(t,e.sliceString(t,i));return p9.set(e,o),o}if(o.from==t&&o.to==i)return o;let{text:a,from:n}=o;return n>t&&(a=e.sliceString(t,n)+a,n=t),o.to<i&&(a+=e.sliceString(o.to,i)),p9.set(e,new p3(n,a)),new p3(t,a.slice(t-n,i-n))}}class p4{constructor(e,t,i,o,a){this.text=e,this.to=a,this.done=!1,this.value=p1,this.matchPos=p5(e,o),this.re=new RegExp(t,p8+((null==i?void 0:i.ignoreCase)?"i":"")),this.test=null==i?void 0:i.test,this.flat=p3.get(e,o,this.chunkEnd(o+5e3))}chunkEnd(e){return e>=this.to?this.to:this.text.lineAt(e).to}next(){for(;;){let e=this.re.lastIndex=this.matchPos-this.flat.from,t=this.re.exec(this.flat.text);if(t&&!t[0]&&t.index==e&&(this.re.lastIndex=e+1,t=this.re.exec(this.flat.text)),t){let e=this.flat.from+t.index,i=e+t[0].length;if((this.flat.to>=this.to||t.index+t[0].length<=this.flat.text.length-10)&&(!this.test||this.test(e,i,t)))return this.value={from:e,to:i,match:t},this.matchPos=p5(this.text,i+(e==i?1:0)),this}if(this.flat.to==this.to)return this.done=!0,this;this.flat=p3.get(this.text,this.flat.from,this.chunkEnd(this.flat.from+2*this.flat.text.length))}}}function p5(e,t){if(t>=e.length)return t;let i=e.lineAt(t),o;for(;t<i.to&&(o=i.text.charCodeAt(t-i.from))>=56320&&o<57344;)t++;return t}function p7(e){let t=pJ("input",{class:"cm-textfield",name:"line"});function i(){let i=/^([+-])?(\d+)?(:\d+)?(%)?$/.exec(t.value);if(!i)return;let{state:o}=e,a=o.doc.lineAt(o.selection.main.head),[,n,r,s,l]=i,p=s?+s.slice(1):0,d=r?+r:a.number;if(r&&l){let e=d/100;n&&(e=e*("-"==n?-1:1)+a.number/o.doc.lines),d=Math.round(o.doc.lines*e)}else r&&n&&(d=d*("-"==n?-1:1)+a.number);let c=o.doc.line(Math.max(1,Math.min(o.doc.lines,d)));e.dispatch({effects:de.of(!1),selection:q.cursor(c.from+Math.max(0,Math.min(p,c.length))),scrollIntoView:!0}),e.focus()}return{dom:pJ("form",{class:"cm-gotoLine",onkeydown:t=>{27==t.keyCode?(t.preventDefault(),e.dispatch({effects:de.of(!1)}),e.focus()):13==t.keyCode&&(t.preventDefault(),i())},onsubmit:e=>{e.preventDefault(),i()}},pJ("label",e.state.phrase("Go to line"),": ",t)," ",pJ("button",{class:"cm-button",type:"submit"},e.state.phrase("go")))}}"undefined"!=typeof Symbol&&(p6.prototype[Symbol.iterator]=p4.prototype[Symbol.iterator]=function(){return this});const de=eb.define(),dt=J.define({create:()=>!0,update(e,t){for(let i of t.effects)i.is(de)&&(e=i.value);return e},provide:e=>a0.from(e,e=>e?p7:null)}),di=oH.baseTheme({".cm-panel.cm-gotoLine":{padding:"2px 6px 4px","& label":{fontSize:"80%"}}}),da={highlightWordAroundCursor:!1,minSelectionLength:1,maxMatches:100,wholeWords:!1},dn=X.define({combine:e=>eT(e,da,{highlightWordAroundCursor:(e,t)=>e||t,minSelectionLength:Math.min,maxMatches:Math.min})}),dr=tZ.mark({class:"cm-selectionMatch"}),ds=tZ.mark({class:"cm-selectionMatch cm-selectionMatch-main"});function dl(e,t,i,o){return(0==i||e(t.sliceDoc(i-1,i))!=eC.Word)&&(o==t.doc.length||e(t.sliceDoc(o,o+1))!=eC.Word)}const dp=ip.fromClass(class{constructor(e){this.decorations=this.getDeco(e)}update(e){(e.selectionSet||e.docChanged||e.viewportChanged)&&(this.decorations=this.getDeco(e.view))}getDeco(e){let t=e.state.facet(dn),{state:i}=e,o=i.selection;if(o.ranges.length>1)return tZ.none;let a=o.main,n,r=null;if(a.empty){if(!t.highlightWordAroundCursor)return tZ.none;let e=i.wordAt(a.head);if(!e)return tZ.none;r=i.charCategorizer(a.head),n=i.sliceDoc(e.from,e.to)}else{let e=a.to-a.from;if(e<t.minSelectionLength||e>200)return tZ.none;if(t.wholeWords){var s,l,p;if(n=i.sliceDoc(a.from,a.to),!(dl(r=i.charCategorizer(a.head),i,a.from,a.to)&&(s=r,l=a.from,p=a.to,s(i.sliceDoc(l,l+1))==eC.Word&&s(i.sliceDoc(p-1,p))==eC.Word)))return tZ.none}else if(!(n=i.sliceDoc(a.from,a.to).trim()))return tZ.none}let d=[];for(let o of e.visibleRanges){let e=new p2(i.doc,n,o.from,o.to);for(;!e.next().done;){let{from:o,to:n}=e.value;if((!r||dl(r,i,o,n))&&(a.empty&&o<=a.from&&n>=a.to?d.push(ds.range(o,n)):(o>=a.to||n<=a.from)&&d.push(dr.range(o,n)),d.length>t.maxMatches))return tZ.none}}return tZ.set(d)}},{decorations:e=>e.decorations}),dd=oH.baseTheme({".cm-selectionMatch":{backgroundColor:"#99ff7780"},".cm-searchMatch .cm-selectionMatch":{backgroundColor:"transparent"}}),dc=({state:e,dispatch:t})=>{let{selection:i}=e,o=q.create(i.ranges.map(t=>e.wordAt(t.head)||q.cursor(t.head)),i.mainIndex);return!o.eq(i)&&(t(e.update({selection:o})),!0)},df=X.define({combine:e=>eT(e,{top:!1,caseSensitive:!1,literal:!1,wholeWord:!1,createPanel:e=>new dz(e),scrollToMatch:e=>oH.scrollIntoView(e)})});class dh{constructor(e){this.search=e.search,this.caseSensitive=!!e.caseSensitive,this.literal=!!e.literal,this.regexp=!!e.regexp,this.replace=e.replace||"",this.valid=!!this.search&&(!this.regexp||function(e){try{return new RegExp(e,p8),!0}catch(e){return!1}}(this.search)),this.unquoted=this.unquote(this.search),this.wholeWord=!!e.wholeWord}unquote(e){return this.literal?e:e.replace(/\\([nrt\\])/g,(e,t)=>"n"==t?"\n":"r"==t?"\r":"t"==t?"	":"\\")}eq(e){return this.search==e.search&&this.replace==e.replace&&this.caseSensitive==e.caseSensitive&&this.regexp==e.regexp&&this.wholeWord==e.wholeWord}create(){return this.regexp?new dw(this):new dm(this)}getCursor(e,t=0,i){let o=e.doc?e:eD.create({doc:e});return null==i&&(i=o.doc.length),this.regexp?dx(this,o,t,i):du(this,o,t,i)}}class dy{constructor(e){this.spec=e}}function du(e,t,i,o){var a,n;return new p2(t.doc,e.unquoted,i,o,e.caseSensitive?void 0:e=>e.toLowerCase(),e.wholeWord?(a=t.doc,n=t.charCategorizer(t.selection.main.head),(e,t,i,o)=>((o>e||o+i.length<t)&&(o=Math.max(0,e-2),i=a.sliceString(o,Math.min(a.length,t+2))),(n(dg(i,e-o))!=eC.Word||n(db(i,e-o))!=eC.Word)&&(n(db(i,t-o))!=eC.Word||n(dg(i,t-o))!=eC.Word))):void 0)}class dm extends dy{constructor(e){super(e)}nextMatch(e,t,i){let o=du(this.spec,e,i,e.doc.length).nextOverlapping();return o.done&&(o=du(this.spec,e,0,t).nextOverlapping()),o.done?null:o.value}prevMatchInRange(e,t,i){for(let o=i;;){let i=Math.max(t,o-1e4-this.spec.unquoted.length),a=du(this.spec,e,i,o),n=null;for(;!a.nextOverlapping().done;)n=a.value;if(n)return n;if(i==t)return null;o-=1e4}}prevMatch(e,t,i){return this.prevMatchInRange(e,0,t)||this.prevMatchInRange(e,i,e.doc.length)}getReplacement(e){return this.spec.unquote(this.spec.replace)}matchAll(e,t){let i=du(this.spec,e,0,e.doc.length),o=[];for(;!i.next().done;){if(o.length>=t)return null;o.push(i.value)}return o}highlight(e,t,i,o){let a=du(this.spec,e,Math.max(0,t-this.spec.unquoted.length),Math.min(i+this.spec.unquoted.length,e.doc.length));for(;!a.next().done;)o(a.value.from,a.value.to)}}function dx(e,t,i,o){var a;return new p6(t.doc,e.search,{ignoreCase:!e.caseSensitive,test:e.wholeWord?(a=t.charCategorizer(t.selection.main.head),(e,t,i)=>!i[0].length||(a(dg(i.input,i.index))!=eC.Word||a(db(i.input,i.index))!=eC.Word)&&(a(db(i.input,i.index+i[0].length))!=eC.Word||a(dg(i.input,i.index+i[0].length))!=eC.Word)):void 0},i,o)}function dg(e,t){return e.slice(x(e,t,!1),t)}function db(e,t){return e.slice(t,x(e,t))}class dw extends dy{nextMatch(e,t,i){let o=dx(this.spec,e,i,e.doc.length).next();return o.done&&(o=dx(this.spec,e,0,t).next()),o.done?null:o.value}prevMatchInRange(e,t,i){for(let o=1;;o++){let a=Math.max(t,i-1e4*o),n=dx(this.spec,e,a,i),r=null;for(;!n.next().done;)r=n.value;if(r&&(a==t||r.from>a+10))return r;if(a==t)return null}}prevMatch(e,t,i){return this.prevMatchInRange(e,0,t)||this.prevMatchInRange(e,i,e.doc.length)}getReplacement(e){return this.spec.unquote(this.spec.replace.replace(/\$([$&\d+])/g,(t,i)=>"$"==i?"$":"&"==i?e.match[0]:"0"!=i&&+i<e.match.length?e.match[i]:t))}matchAll(e,t){let i=dx(this.spec,e,0,e.doc.length),o=[];for(;!i.next().done;){if(o.length>=t)return null;o.push(i.value)}return o}highlight(e,t,i,o){let a=dx(this.spec,e,Math.max(0,t-250),Math.min(i+250,e.doc.length));for(;!a.next().done;)o(a.value.from,a.value.to)}}const dk=eb.define(),dv=eb.define(),dO=J.define({create:e=>new dS(dE(e).create(),null),update(e,t){for(let i of t.effects)i.is(dk)?e=new dS(i.value.create(),e.panel):i.is(dv)&&(e=new dS(e.query,i.value?dL:null));return e},provide:e=>a0.from(e,e=>e.panel)});class dS{constructor(e,t){this.query=e,this.panel=t}}const dC=tZ.mark({class:"cm-searchMatch"}),dP=tZ.mark({class:"cm-searchMatch cm-searchMatch-selected"}),dD=ip.fromClass(class{constructor(e){this.view=e,this.decorations=this.highlight(e.state.field(dO))}update(e){let t=e.state.field(dO);(t!=e.startState.field(dO)||e.docChanged||e.selectionSet||e.viewportChanged)&&(this.decorations=this.highlight(t))}highlight({query:e,panel:t}){if(!t||!e.spec.valid)return tZ.none;let{view:i}=this,o=new eL;for(let t=0,a=i.visibleRanges,n=a.length;t<n;t++){let{from:r,to:s}=a[t];for(;t<n-1&&s>a[t+1].from-500;)s=a[++t].to;e.highlight(i.state,r,s,(e,t)=>{let a=i.state.selection.ranges.some(i=>i.from==e&&i.to==t);o.add(e,t,a?dP:dC)})}return o.finish()}},{decorations:e=>e.decorations});function dT(e){return t=>{let i=t.state.field(dO,!1);return i&&i.query.spec.valid?e(t,i):dG(t)}}const dM=dT((e,{query:t})=>{let{to:i}=e.state.selection.main,o=t.nextMatch(e.state,i,i);if(!o)return!1;let a=q.single(o.from,o.to),n=e.state.facet(df);return e.dispatch({selection:a,effects:[dq(e,o),n.scrollToMatch(a.main,e)],userEvent:"select.search"}),dI(e),!0}),dR=dT((e,{query:t})=>{let{state:i}=e,{from:o}=i.selection.main,a=t.prevMatch(i,o,o);if(!a)return!1;let n=q.single(a.from,a.to),r=e.state.facet(df);return e.dispatch({selection:n,effects:[dq(e,a),r.scrollToMatch(n.main,e)],userEvent:"select.search"}),dI(e),!0}),dQ=dT((e,{query:t})=>{let i=t.matchAll(e.state,1e3);return!!i&&!!i.length&&(e.dispatch({selection:q.create(i.map(e=>q.range(e.from,e.to))),userEvent:"select.search.matches"}),!0)}),dA=dT((e,{query:t})=>{let{state:i}=e,{from:o,to:a}=i.selection.main;if(i.readOnly)return!1;let n=t.nextMatch(i,o,o);if(!n)return!1;let r=[],s,l,p=[];if(n.from==o&&n.to==a&&(l=i.toText(t.getReplacement(n)),r.push({from:n.from,to:n.to,insert:l}),n=t.nextMatch(i,n.from,n.to),p.push(oH.announce.of(i.phrase("replaced match on line $",i.doc.lineAt(o).number)+"."))),n){let t=0==r.length||r[0].from>=n.to?0:n.to-n.from-l.length;s=q.single(n.from-t,n.to-t),p.push(dq(e,n)),p.push(i.facet(df).scrollToMatch(s.main,e))}return e.dispatch({changes:r,selection:s,effects:p,userEvent:"input.replace"}),!0}),dF=dT((e,{query:t})=>{if(e.state.readOnly)return!1;let i=t.matchAll(e.state,1e9).map(e=>{let{from:i,to:o}=e;return{from:i,to:o,insert:t.getReplacement(e)}});if(!i.length)return!1;let o=e.state.phrase("replaced $ matches",i.length)+".";return e.dispatch({changes:i,effects:oH.announce.of(o),userEvent:"input.replace.all"}),!0});function dL(e){return e.state.facet(df).createPanel(e)}function dE(e,t){var i,o,a,n;let r=e.selection.main,s=r.empty||r.to>r.from+100?"":e.sliceDoc(r.from,r.to);if(t&&!s)return t;let l=e.facet(df);return new dh({search:(null!==(i=null==t?void 0:t.literal)&&void 0!==i?i:l.literal)?s:s.replace(/\n/g,"\\n"),caseSensitive:null!==(o=null==t?void 0:t.caseSensitive)&&void 0!==o?o:l.caseSensitive,literal:null!==(a=null==t?void 0:t.literal)&&void 0!==a?a:l.literal,wholeWord:null!==(n=null==t?void 0:t.wholeWord)&&void 0!==n?n:l.wholeWord})}function dB(e){let t=aY(e,dL);return t&&t.dom.querySelector("[main-field]")}function dI(e){let t=dB(e);t&&t==e.root.activeElement&&t.select()}const dG=e=>{let t=e.state.field(dO,!1);if(t&&t.panel){let i=dB(e);if(i&&i!=e.root.activeElement){let o=dE(e.state,t.query.spec);o.valid&&e.dispatch({effects:dk.of(o)}),i.focus(),i.select()}}else e.dispatch({effects:[dv.of(!0),t?dk.of(dE(e.state,t.query.spec)):eb.appendConfig.of(dZ)]});return!0},d$=e=>{let t=e.state.field(dO,!1);if(!t||!t.panel)return!1;let i=aY(e,dL);return i&&i.dom.contains(e.root.activeElement)&&e.focus(),e.dispatch({effects:dv.of(!1)}),!0},dN=[{key:"Mod-f",run:dG,scope:"editor search-panel"},{key:"F3",run:dM,shift:dR,scope:"editor search-panel",preventDefault:!0},{key:"Mod-g",run:dM,shift:dR,scope:"editor search-panel",preventDefault:!0},{key:"Escape",run:d$,scope:"editor search-panel"},{key:"Mod-Shift-l",run:({state:e,dispatch:t})=>{let i=e.selection;if(i.ranges.length>1||i.main.empty)return!1;let{from:o,to:a}=i.main,n=[],r=0;for(let t=new p2(e.doc,e.sliceDoc(o,a));!t.next().done;){if(n.length>1e3)return!1;t.value.from==o&&(r=n.length),n.push(q.range(t.value.from,t.value.to))}return t(e.update({selection:q.create(n,r),userEvent:"select.search.matches"})),!0}},{key:"Alt-g",run:e=>{let t=aY(e,p7);if(!t){let i=[de.of(!0)];null==e.state.field(dt,!1)&&i.push(eb.appendConfig.of([dt,di])),e.dispatch({effects:i}),t=aY(e,p7)}return t&&t.dom.querySelector("input").focus(),!0}},{key:"Mod-d",run:({state:e,dispatch:t})=>{let{ranges:i}=e.selection;if(i.some(e=>e.from===e.to))return dc({state:e,dispatch:t});let o=e.sliceDoc(i[0].from,i[0].to);if(e.selection.ranges.some(t=>e.sliceDoc(t.from,t.to)!=o))return!1;let a=function(e,t){let{main:i,ranges:o}=e.selection,a=e.wordAt(i.head),n=a&&a.from==i.from&&a.to==i.to;for(let i=!1,a=new p2(e.doc,t,o[o.length-1].to);;)if(a.next(),a.done){if(i)return null;a=new p2(e.doc,t,0,Math.max(0,o[o.length-1].from-1)),i=!0}else{if(i&&o.some(e=>e.from==a.value.from))continue;if(n){let t=e.wordAt(a.value.from);if(!t||t.from!=a.value.from||t.to!=a.value.to)continue}return a.value}}(e,o);return!!a&&(t(e.update({selection:e.selection.addRange(q.range(a.from,a.to),!1),effects:oH.scrollIntoView(a.to)})),!0)},preventDefault:!0}];class dz{constructor(e){this.view=e;let t=this.query=e.state.field(dO).query.spec;function i(e,t,i){return pJ("button",{class:"cm-button",name:e,onclick:t,type:"button"},i)}this.commit=this.commit.bind(this),this.searchField=pJ("input",{value:t.search,placeholder:dW(e,"Find"),"aria-label":dW(e,"Find"),class:"cm-textfield",name:"search",form:"","main-field":"true",onchange:this.commit,onkeyup:this.commit}),this.replaceField=pJ("input",{value:t.replace,placeholder:dW(e,"Replace"),"aria-label":dW(e,"Replace"),class:"cm-textfield",name:"replace",form:"",onchange:this.commit,onkeyup:this.commit}),this.caseField=pJ("input",{type:"checkbox",name:"case",form:"",checked:t.caseSensitive,onchange:this.commit}),this.reField=pJ("input",{type:"checkbox",name:"re",form:"",checked:t.regexp,onchange:this.commit}),this.wordField=pJ("input",{type:"checkbox",name:"word",form:"",checked:t.wholeWord,onchange:this.commit}),this.dom=pJ("div",{onkeydown:e=>this.keydown(e),class:"cm-search"},[this.searchField,i("next",()=>dM(e),[dW(e,"next")]),i("prev",()=>dR(e),[dW(e,"previous")]),i("select",()=>dQ(e),[dW(e,"all")]),pJ("label",null,[this.caseField,dW(e,"match case")]),pJ("label",null,[this.reField,dW(e,"regexp")]),pJ("label",null,[this.wordField,dW(e,"by word")]),...e.state.readOnly?[]:[pJ("br"),this.replaceField,i("replace",()=>dA(e),[dW(e,"replace")]),i("replaceAll",()=>dF(e),[dW(e,"replace all")])],pJ("button",{name:"close",onclick:()=>d$(e),"aria-label":dW(e,"close"),type:"button"},["\xd7"])])}commit(){let e=new dh({search:this.searchField.value,caseSensitive:this.caseField.checked,regexp:this.reField.checked,wholeWord:this.wordField.checked,replace:this.replaceField.value});e.eq(this.query)||(this.query=e,this.view.dispatch({effects:dk.of(e)}))}keydown(e){var t;o4(o9((t=this.view).state),e,t,"search-panel")?e.preventDefault():13==e.keyCode&&e.target==this.searchField?(e.preventDefault(),(e.shiftKey?dR:dM)(this.view)):13==e.keyCode&&e.target==this.replaceField&&(e.preventDefault(),dA(this.view))}update(e){for(let t of e.transactions)for(let e of t.effects)e.is(dk)&&!e.value.eq(this.query)&&this.setQuery(e.value)}setQuery(e){this.query=e,this.searchField.value=e.search,this.replaceField.value=e.replace,this.caseField.checked=e.caseSensitive,this.reField.checked=e.regexp,this.wordField.checked=e.wholeWord}mount(){this.searchField.select()}get pos(){return 80}get top(){return this.view.state.facet(df).top}}function dW(e,t){return e.state.phrase(t)}const dj=/[\s\.,:;?!]/;function dq(e,{from:t,to:i}){let o=e.state.doc.lineAt(t),a=e.state.doc.lineAt(i).to,n=Math.max(o.from,t-30),r=Math.min(a,i+30),s=e.state.sliceDoc(n,r);if(n!=o.from){for(let e=0;e<30;e++)if(!dj.test(s[e+1])&&dj.test(s[e])){s=s.slice(e);break}}if(r!=a){for(let e=s.length-1;e>s.length-30;e--)if(!dj.test(s[e-1])&&dj.test(s[e])){s=s.slice(0,e);break}}return oH.announce.of(`${e.state.phrase("current match")}. ${s} ${e.state.phrase("on line")} ${o.number}.`)}const dV=oH.baseTheme({".cm-panel.cm-search":{padding:"2px 6px 4px",position:"relative","& [name=close]":{position:"absolute",top:"0",right:"4px",backgroundColor:"inherit",border:"none",font:"inherit",padding:0,margin:0},"& input, & button, & label":{margin:".2em .6em .2em 0"},"& input[type=checkbox]":{marginRight:".2em"},"& label":{fontSize:"80%",whiteSpace:"pre"}},"&light .cm-searchMatch":{backgroundColor:"#ffff0054"},"&dark .cm-searchMatch":{backgroundColor:"#00ffff8a"},"&light .cm-searchMatch-selected":{backgroundColor:"#ff6a0054"},"&dark .cm-searchMatch-selected":{backgroundColor:"#ff00ff8a"}}),dZ=[dO,ei.lowest(dD),dV];class dX{constructor(e,t,i){this.from=e,this.to=t,this.diagnostic=i}}class dU{constructor(e,t,i){this.diagnostics=e,this.panel=t,this.selected=i}static init(e,t,i){let o=e,a=i.facet(d3).markerFilter;a&&(o=a(o));let n=tZ.set(o.map(e=>e.from==e.to||e.from==e.to-1&&i.doc.lineAt(e.from).to==e.from?tZ.widget({widget:new d7(e),diagnostic:e}).range(e.from):tZ.mark({attributes:{class:"cm-lintRange cm-lintRange-"+e.severity},diagnostic:e}).range(e.from,e.to)),!0);return new dU(n,t,dH(n))}}function dH(e,t=null,i=0){let o=null;return e.between(i,1e9,(e,i,{spec:a})=>{if(!t||a.diagnostic==t)return o=new dX(e,i,a.diagnostic),!1}),o}function dY(e,t){return!!(e.effects.some(e=>e.is(dK))||e.changes.touchesRange(t.pos))}function d_(e,t){return e.field(d2,!1)?t:t.concat(eb.appendConfig.of(cl))}const dK=eb.define(),dJ=eb.define(),d0=eb.define(),d2=J.define({create:()=>new dU(tZ.none,null,null),update(e,t){if(t.docChanged){let i=e.diagnostics.map(t.changes),o=null;if(e.selected){let a=t.changes.mapPos(e.selected.from,1);o=dH(i,e.selected.diagnostic,a)||dH(i,null,a)}e=new dU(i,e.panel,o)}for(let i of t.effects)i.is(dK)?e=dU.init(i.value,e.panel,t.state):i.is(dJ)?e=new dU(e.diagnostics,i.value?ct.open:null,e.selected):i.is(d0)&&(e=new dU(e.diagnostics,e.panel,i.value));return e},provide:e=>[a0.from(e,e=>e.panel),oH.decorations.from(e,e=>e.diagnostics)]}),d1=tZ.mark({class:"cm-lintRange cm-lintRange-active"});function d8(e,t){return pJ("ul",{class:"cm-tooltip-lint"},t.map(t=>d5(e,t,!1)))}const d6=e=>{let t=e.state.field(d2,!1);return!!t&&!!t.panel&&(e.dispatch({effects:dJ.of(!1)}),!0)},d9=[{key:"Mod-Shift-m",run:e=>{let t=e.state.field(d2,!1);t&&t.panel||e.dispatch({effects:d_(e.state,[dJ.of(!0)])});let i=aY(e,ct.open);return i&&i.dom.querySelector(".cm-panel-lint ul").focus(),!0},preventDefault:!0},{key:"F8",run:e=>{let t=e.state.field(d2,!1);if(!t)return!1;let i=e.state.selection.main,o=t.diagnostics.iter(i.to+1);return(!!o.value||!!(o=t.diagnostics.iter(0)).value&&(o.from!=i.from||o.to!=i.to))&&(e.dispatch({selection:{anchor:o.from,head:o.to},scrollIntoView:!0}),!0)}}];ip.fromClass(class{constructor(e){this.view=e,this.timeout=-1,this.set=!0;let{delay:t}=e.state.facet(d3);this.lintTime=Date.now()+t,this.run=this.run.bind(this),this.timeout=setTimeout(this.run,t)}run(){let e=Date.now();if(e<this.lintTime-10)setTimeout(this.run,this.lintTime-e);else{this.set=!1;let{state:e}=this.view,{sources:t}=e.facet(d3);Promise.all(t.map(e=>Promise.resolve(e(this.view)))).then(t=>{let i=t.reduce((e,t)=>e.concat(t));this.view.state.doc==e.doc&&this.view.dispatch({effects:d_(this.view.state,[dK.of(i)])})},e=>{ia(this.view.state,e)})}}update(e){let t=e.state.facet(d3);(e.docChanged||t!=e.startState.facet(d3)||t.needsRefresh&&t.needsRefresh(e))&&(this.lintTime=Date.now()+t.delay,this.set||(this.set=!0,this.timeout=setTimeout(this.run,t.delay)))}force(){this.set&&(this.lintTime=Date.now(),this.run())}destroy(){clearTimeout(this.timeout)}});const d3=X.define({combine:e=>Object.assign({sources:e.map(e=>e.source)},eT(e.map(e=>e.config),{delay:750,markerFilter:null,tooltipFilter:null,needsRefresh:null},{needsRefresh:(e,t)=>e?t?i=>e(i)||t(i):e:t}))});function d4(e){let t=[];if(e)i:for(let{name:i}of e){for(let e=0;e<i.length;e++){let o=i[e];if(/[a-zA-Z]/.test(o)&&!t.some(e=>e.toLowerCase()==o.toLowerCase())){t.push(o);continue i}}t.push("")}return t}function d5(e,t,i){var o;let a=i?d4(t.actions):[];return pJ("li",{class:"cm-diagnostic cm-diagnostic-"+t.severity},pJ("span",{class:"cm-diagnosticText"},t.renderMessage?t.renderMessage():t.message),null===(o=t.actions)||void 0===o?void 0:o.map((i,o)=>{let n=!1,r=o=>{if(o.preventDefault(),n)return;n=!0;let a=dH(e.state.field(d2).diagnostics,t);a&&i.apply(e,a.from,a.to)},{name:s}=i,l=a[o]?s.indexOf(a[o]):-1,p=l<0?s:[s.slice(0,l),pJ("u",s.slice(l,l+1)),s.slice(l+1)];return pJ("button",{type:"button",class:"cm-diagnosticAction",onclick:r,onmousedown:r,"aria-label":` Action: ${s}${l<0?"":` (access key "${a[o]})"`}.`},p)}),t.source&&pJ("div",{class:"cm-diagnosticSource"},t.source))}class d7 extends tq{constructor(e){super(),this.diagnostic=e}eq(e){return e.diagnostic==this.diagnostic}toDOM(){return pJ("span",{class:"cm-lintPoint cm-lintPoint-"+this.diagnostic.severity})}}class ce{constructor(e,t){this.diagnostic=t,this.id="item_"+Math.floor(4294967295*Math.random()).toString(16),this.dom=d5(e,t,!0),this.dom.id=this.id,this.dom.setAttribute("role","option")}}class ct{constructor(e){this.view=e,this.items=[],this.list=pJ("ul",{tabIndex:0,role:"listbox","aria-label":this.view.state.phrase("Diagnostics"),onkeydown:t=>{if(27==t.keyCode)d6(this.view),this.view.focus();else if(38==t.keyCode||33==t.keyCode)this.moveSelection((this.selectedIndex-1+this.items.length)%this.items.length);else if(40==t.keyCode||34==t.keyCode)this.moveSelection((this.selectedIndex+1)%this.items.length);else if(36==t.keyCode)this.moveSelection(0);else if(35==t.keyCode)this.moveSelection(this.items.length-1);else if(13==t.keyCode)this.view.focus();else{if(!(t.keyCode>=65)||!(t.keyCode<=90)||!(this.selectedIndex>=0))return;let{diagnostic:i}=this.items[this.selectedIndex],o=d4(i.actions);for(let a=0;a<o.length;a++)if(o[a].toUpperCase().charCodeAt(0)==t.keyCode){let t=dH(this.view.state.field(d2).diagnostics,i);t&&i.actions[a].apply(e,t.from,t.to)}}t.preventDefault()},onclick:e=>{for(let t=0;t<this.items.length;t++)this.items[t].dom.contains(e.target)&&this.moveSelection(t)}}),this.dom=pJ("div",{class:"cm-panel-lint"},this.list,pJ("button",{type:"button",name:"close","aria-label":this.view.state.phrase("close"),onclick:()=>d6(this.view)},"\xd7")),this.update()}get selectedIndex(){let e=this.view.state.field(d2).selected;if(!e)return -1;for(let t=0;t<this.items.length;t++)if(this.items[t].diagnostic==e.diagnostic)return t;return -1}update(){let{diagnostics:e,selected:t}=this.view.state.field(d2),i=0,o=!1,a=null;for(e.between(0,this.view.state.doc.length,(e,n,{spec:r})=>{let s=-1,l;for(let e=i;e<this.items.length;e++)if(this.items[e].diagnostic==r.diagnostic){s=e;break}s<0?(l=new ce(this.view,r.diagnostic),this.items.splice(i,0,l),o=!0):(l=this.items[s],s>i&&(this.items.splice(i,s-i),o=!0)),t&&l.diagnostic==t.diagnostic?l.dom.hasAttribute("aria-selected")||(l.dom.setAttribute("aria-selected","true"),a=l):l.dom.hasAttribute("aria-selected")&&l.dom.removeAttribute("aria-selected"),i++});i<this.items.length&&!(1==this.items.length&&this.items[0].diagnostic.from<0);)o=!0,this.items.pop();0==this.items.length&&(this.items.push(new ce(this.view,{from:-1,to:-1,severity:"info",message:this.view.state.phrase("No diagnostics")})),o=!0),a?(this.list.setAttribute("aria-activedescendant",a.id),this.view.requestMeasure({key:this,read:()=>({sel:a.dom.getBoundingClientRect(),panel:this.list.getBoundingClientRect()}),write:({sel:e,panel:t})=>{e.top<t.top?this.list.scrollTop-=t.top-e.top:e.bottom>t.bottom&&(this.list.scrollTop+=e.bottom-t.bottom)}})):this.selectedIndex<0&&this.list.removeAttribute("aria-activedescendant"),o&&this.sync()}sync(){let e=this.list.firstChild;function t(){let t=e;e=t.nextSibling,t.remove()}for(let i of this.items)if(i.dom.parentNode==this.list){for(;e!=i.dom;)t();e=i.dom.nextSibling}else this.list.insertBefore(i.dom,e);for(;e;)t()}moveSelection(e){if(this.selectedIndex<0)return;let t=dH(this.view.state.field(d2).diagnostics,this.items[e].diagnostic);t&&this.view.dispatch({selection:{anchor:t.from,head:t.to},scrollIntoView:!0,effects:d0.of(t)})}static open(e){return new ct(e)}}function ci(e,t='viewBox="0 0 40 40"'){return`url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" ${t}>${encodeURIComponent(e)}</svg>')`}function co(e){return ci(`<path d="m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0" stroke="${e}" fill="none" stroke-width=".7"/>`,'width="6" height="3"')}const ca=oH.baseTheme({".cm-diagnostic":{padding:"3px 6px 3px 8px",marginLeft:"-1px",display:"block",whiteSpace:"pre-wrap"},".cm-diagnostic-error":{borderLeft:"5px solid #d11"},".cm-diagnostic-warning":{borderLeft:"5px solid orange"},".cm-diagnostic-info":{borderLeft:"5px solid #999"},".cm-diagnosticAction":{font:"inherit",border:"none",padding:"2px 4px",backgroundColor:"#444",color:"white",borderRadius:"3px",marginLeft:"8px",cursor:"pointer"},".cm-diagnosticSource":{fontSize:"70%",opacity:.7},".cm-lintRange":{backgroundPosition:"left bottom",backgroundRepeat:"repeat-x",paddingBottom:"0.7px"},".cm-lintRange-error":{backgroundImage:co("#d11")},".cm-lintRange-warning":{backgroundImage:co("orange")},".cm-lintRange-info":{backgroundImage:co("#999")},".cm-lintRange-active":{backgroundColor:"#ffdd9980"},".cm-tooltip-lint":{padding:0,margin:0},".cm-lintPoint":{position:"relative","&:after":{content:'""',position:"absolute",bottom:0,left:"-2px",borderLeft:"3px solid transparent",borderRight:"3px solid transparent",borderBottom:"4px solid #d11"}},".cm-lintPoint-warning":{"&:after":{borderBottomColor:"orange"}},".cm-lintPoint-info":{"&:after":{borderBottomColor:"#999"}},".cm-panel.cm-panel-lint":{position:"relative","& ul":{maxHeight:"100px",overflowY:"auto","& [aria-selected]":{backgroundColor:"#ddd","& u":{textDecoration:"underline"}},"&:focus [aria-selected]":{background_fallback:"#bdf",backgroundColor:"Highlight",color_fallback:"white",color:"HighlightText"},"& u":{textDecoration:"none"},padding:0,margin:0},"& [name=close]":{position:"absolute",top:"0",right:"2px",background:"inherit",border:"none",font:"inherit",padding:0,margin:0}}});class cn extends a2{constructor(e){super(),this.diagnostics=e,this.severity=e.reduce((e,t)=>{let i=t.severity;return"error"==i||"warning"==i&&"info"==e?i:e},"info")}toDOM(e){let t=document.createElement("div");t.className="cm-lint-marker cm-lint-marker-"+this.severity;let i=this.diagnostics,o=e.state.facet(cp).tooltipFilter;return o&&(i=o(i)),i.length&&(t.onmouseover=()=>(function(e,t,i){function o(){let o,a=e.elementAtHeight(t.getBoundingClientRect().top+5-e.documentTop),n=e.coordsAtPos(a.from);n&&e.dispatch({effects:cr.of({pos:a.from,above:!1,create:()=>({dom:d8(e,i),getCoords:()=>t.getBoundingClientRect()})})}),t.onmouseout=t.onmousemove=null,o=i=>{let a=t.getBoundingClientRect();if(!(i.clientX>a.left-10)||!(i.clientX<a.right+10)||!(i.clientY>a.top-10)||!(i.clientY<a.bottom+10)){for(let e=i.target;e;e=e.parentNode)if(1==e.nodeType&&e.classList.contains("cm-tooltip-lint"))return;window.removeEventListener("mousemove",o),e.state.field(cs)&&e.dispatch({effects:cr.of(null)})}},window.addEventListener("mousemove",o)}let{hoverTime:a}=e.state.facet(cp),n=setTimeout(o,a);t.onmouseout=()=>{clearTimeout(n),t.onmouseout=t.onmousemove=null},t.onmousemove=()=>{clearTimeout(n),n=setTimeout(o,a)}})(e,t,i)),t}}J.define({create:()=>eF.empty,update(e,t){e=e.map(t.changes);let i=t.state.facet(cp).markerFilter;for(let o of t.effects)if(o.is(dK)){let a=o.value;i&&(a=i(a||[])),e=function(e,t){let i=Object.create(null);for(let o of t){let t=e.lineAt(o.from);(i[t.from]||(i[t.from]=[])).push(o)}let o=[];for(let e in i)o.push(new cn(i[e]).range(+e));return eF.of(o,!0)}(t.state.doc,a.slice(0))}return e}});const cr=eb.define(),cs=J.define({create:()=>null,update:(e,t)=>(e&&t.docChanged&&(e=dY(t,e)?null:Object.assign(Object.assign({},e),{pos:t.changes.mapPos(e.pos)})),t.effects.reduce((e,t)=>t.is(cr)?t.value:e,e)),provide:e=>az.from(e)});oH.baseTheme({".cm-gutter-lint":{width:"1.4em","& .cm-gutterElement":{padding:".2em"}},".cm-lint-marker":{width:"1em",height:"1em"},".cm-lint-marker-info":{content:ci('<path fill="#aaf" stroke="#77e" stroke-width="6" stroke-linejoin="round" d="M5 5L35 5L35 35L5 35Z"/>')},".cm-lint-marker-warning":{content:ci('<path fill="#fe8" stroke="#fd7" stroke-width="6" stroke-linejoin="round" d="M20 6L37 35L3 35Z"/>')},".cm-lint-marker-error":{content:ci('<circle cx="20" cy="20" r="15" fill="#f87" stroke="#f43" stroke-width="6"/>')}});const cl=[d2,oH.decorations.compute([d2],e=>{let{selected:t,panel:i}=e.field(d2);return t&&i&&t.from!=t.to?tZ.set([d1.range(t.from,t.to)]):tZ.none}),function(e,t={}){let i=eb.define(),o=J.define({create:()=>null,update(e,o){if(e&&(t.hideOnChange&&(o.docChanged||o.selection)||t.hideOn&&t.hideOn(o,e)))return null;if(e&&o.docChanged){let t=o.changes.mapPos(e.pos,-1,L.TrackDel);if(null==t)return null;let i=Object.assign(Object.create(null),e);i.pos=t,null!=e.end&&(i.end=o.changes.mapPos(e.end)),e=i}for(let t of o.effects)t.is(i)&&(e=t.value),t.is(aU)&&(e=null);return e},provide:e=>aW.from(e)});return[o,ip.define(a=>new aV(a,e,o,i,t.hoverTime||300)),aq]}(function(e,t,i){let{diagnostics:o}=e.state.field(d2),a=[],n=2e8,r=0;o.between(t-(i<0?1:0),t+(i>0?1:0),(e,o,{spec:s})=>{t>=e&&t<=o&&(e==o||(t>e||i>0)&&(t<o||i<0))&&(a.push(s.diagnostic),n=Math.min(e,n),r=Math.max(o,r))});let s=e.state.facet(d3).tooltipFilter;return(s&&(a=s(a)),a.length)?{pos:n,end:r,above:e.state.doc.lineAt(n).to<r,create:()=>({dom:d8(e,a)})}:null},{hideOn:dY}),ca],cp=X.define({combine:e=>eT(e,{hoverTime:300,markerFilter:null,tooltipFilter:null})}),cd=[function(e={}){return[na.of(e),a3(),ns]}(),nd,aS(),l_(),function(e={}){var t;let i=Object.assign(Object.assign({},rq),e),o=new rV(i,!0),a=new rV(i,!1),n=ip.fromClass(class{constructor(e){this.from=e.viewport.from,this.markers=this.buildMarkers(e)}update(e){(e.docChanged||e.viewportChanged||e.startState.facet(ry)!=e.state.facet(ry)||e.startState.field(rE,!1)!=e.state.field(rE,!1)||rn(e.startState)!=rn(e.state)||i.foldingChanged(e))&&(this.markers=this.buildMarkers(e.view))}buildMarkers(e){let t=new eL;for(let i of e.viewportLineBlocks){let n=rB(e.state,i.from,i.to)?a:rR(e.state,i.from,i.to)?o:null;n&&t.add(i.from,i.from,n)}return t.finish()}}),{domEventHandlers:r}=i;return[n,(t={class:"cm-foldGutter",markers(e){var t;return(null===(t=e.plugin(n))||void 0===t?void 0:t.markers)||eF.empty},initialSpacer:()=>new rV(i,!1),domEventHandlers:Object.assign(Object.assign({},r),{click:(e,t,i)=>{if(r.click&&r.click(e,t,i))return!0;let o=rB(e.state,t.from,t.to);if(o)return e.dispatch({effects:rF.of(o)}),!0;let a=rR(e.state,t.from,t.to);return!!a&&(e.dispatch({effects:rA.of(a)}),!0)}})},[a3(),a6.of(Object.assign(Object.assign({},a8),t))]),rW()]}(),as(),[au,am],eD.allowMultipleSelections.of(!0),eD.transactionFilter.of(e=>{if(!e.docChanged||!e.isUserEvent("input.type")&&!e.isUserEvent("input.complete"))return e;let t=e.startState.languageDataAt("indentOnInput",e.startState.selection.main.head);if(!t.length)return e;let i=e.newDoc,{head:o}=e.newSelection.main,a=i.lineAt(o);if(o>a.from+200)return e;let n=i.sliceString(a.from,o);if(!t.some(e=>e.test(n)))return e;let{state:r}=e,s=-1,l=[];for(let{head:e}of r.selection.ranges){let t=r.doc.lineAt(e);if(t.from==s)continue;s=t.from;let i=rw(r,t.from);if(null==i)continue;let o=/^\s*/.exec(t.text)[0],a=rb(r,i);o!=a&&l.push({from:t.from,to:t.from+o.length,insert:a})}return l.length?[e,{changes:l,sequential:!0}]:e}),r_(rJ,{fallback:!0}),r5(),[lm,lc],lv(),function(e){let t=(null==e?void 0:e.eventFilter)||(e=>e.altKey&&0==e.button);return oH.mouseSelectionStyle.of((e,i)=>{let o,a;return t(i)?(o=aR(e,i),a=e.state.selection,o?{update(e){if(e.docChanged){let t=e.changes.mapPos(e.startState.doc.line(o.line).from),i=e.state.doc.lineAt(t);o={line:i.number,col:o.col,off:Math.min(o.off,i.length)},a=a.map(e.changes)}},get(t,i,n){let r=aR(e,t);if(!r)return a;let s=function(e,t,i){let o=Math.min(t.line,i.line),a=Math.max(t.line,i.line),n=[];if(t.off>2e3||i.off>2e3||t.col<0||i.col<0){let r=Math.min(t.off,i.off),s=Math.max(t.off,i.off);for(let t=o;t<=a;t++){let i=e.doc.line(t);i.length<=s&&n.push(q.range(i.from+r,i.to+s))}}else{let r=Math.min(t.col,i.col),s=Math.max(t.col,i.col);for(let t=o;t<=a;t++){let i=e.doc.line(t),o=eZ(i.text,r,e.tabSize,!0);if(o<0)n.push(q.cursor(i.to));else{let t=eZ(i.text,s,e.tabSize);n.push(q.range(i.from+o,i.from+t))}}}return n}(e.state,o,r);return s.length?n?q.create(s.concat(a.ranges)):q.create(s):a}}:null):null})}(),function(e={}){let[t,i]=aQ[e.key||"Alt"],o=ip.fromClass(class{constructor(e){this.view=e,this.isDown=!1}set(e){this.isDown!=e&&(this.isDown=e,this.view.update([]))}},{eventHandlers:{keydown(e){this.set(e.keyCode==t||i(e))},keyup(e){e.keyCode!=t&&i(e)||this.set(!1)},mousemove(e){this.set(i(e))}}});return[o,oH.contentAttributes.of(e=>{var t;return(null===(t=e.plugin(o))||void 0===t?void 0:t.isDown)?aA:null})]}(),aM,function(e){let t=[dd,dp];return e&&t.push(dn.of(e)),t}(),o8.of([...lx,...pK,...dN,...pt,...r$,...lO,...d9])];aS(),l_(),as(),r_(rJ,{fallback:!0}),o8.of([...pK,...pt]);const cc="#2e3440",cf="#3b4252",ch="#434c5e",cy="#4c566a",cu="#d8dee9",cm="#8fbcbb",cx="#88c0d0",cg="#5e81ac",cb="#d08770",cw="#ebcb8b",ck="#a3be8c",cv="#b48ead",cO="#d30102",cS=oH.theme({"&":{color:cu,backgroundColor:cc},".cm-content":{caretColor:cu},".cm-cursor, .cm-dropCursor":{borderLeftColor:cu},"&.cm-focused .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection":{backgroundColor:cy},".cm-panels":{backgroundColor:"#252a33",color:cy},".cm-panels.cm-panels-top":{borderBottom:"2px solid black"},".cm-panels.cm-panels-bottom":{borderTop:"2px solid black"},".cm-searchMatch":{backgroundColor:"transparent",outline:`1px solid ${cm}`},".cm-searchMatch.cm-searchMatch-selected":{backgroundColor:cu,color:cc},".cm-activeLine":{backgroundColor:cy},".cm-selectionMatch":{backgroundColor:"#e5e9f0",color:cf},"&.cm-focused .cm-matchingBracket, &.cm-focused .cm-nonmatchingBracket":{outline:`1px solid ${cm}`},"&.cm-focused .cm-matchingBracket":{backgroundColor:"#eceff4",color:ch},".cm-gutters":{backgroundColor:cc,color:cy,border:"none"},".cm-activeLineGutter":{backgroundColor:cy,color:cu},".cm-foldPlaceholder":{backgroundColor:"transparent",border:"none",color:"#ddd"},".cm-tooltip":{border:"none",backgroundColor:cf},".cm-tooltip .cm-tooltip-arrow:before":{borderTopColor:"transparent",borderBottomColor:"transparent"},".cm-tooltip .cm-tooltip-arrow:after":{borderTopColor:cf,borderBottomColor:cf},".cm-tooltip-autocomplete":{"& > ul > li[aria-selected]":{backgroundColor:cy,color:cy}}},{dark:!0}),cC=rX.define([{tag:n5.keyword,color:cg},{tag:[n5.name,n5.deleted,n5.character,n5.propertyName,n5.macroName],color:cx},{tag:[n5.variableName],color:cm},{tag:[n5.function(n5.variableName)],color:cm},{tag:[n5.labelName],color:"#81a1c1"},{tag:[n5.color,n5.constant(n5.name),n5.standard(n5.name)],color:cg},{tag:[n5.definition(n5.name),n5.separator],color:ck},{tag:[n5.brace],color:cm},{tag:[n5.annotation],color:cO},{tag:[n5.number,n5.changed,n5.annotation,n5.modifier,n5.self,n5.namespace],color:cv},{tag:[n5.typeName,n5.className],color:cw},{tag:[n5.operator,n5.operatorKeyword],color:ck},{tag:[n5.tagName],color:cv},{tag:[n5.squareBracket],color:"#bf616a"},{tag:[n5.angleBracket],color:cb},{tag:[n5.attributeName],color:cw},{tag:[n5.regexp],color:cg},{tag:[n5.quote],color:cv},{tag:[n5.string],color:ck},{tag:n5.link,color:ck,textDecoration:"underline",textUnderlinePosition:"under"},{tag:[n5.url,n5.escape,n5.special(n5.string)],color:cm},{tag:[n5.meta],color:cx},{tag:[n5.monospace],color:cu,fontStyle:"italic"},{tag:[n5.comment],color:cy,fontStyle:"italic"},{tag:n5.strong,fontWeight:"bold",color:cg},{tag:n5.emphasis,fontStyle:"italic",color:cg},{tag:n5.strikethrough,textDecoration:"line-through"},{tag:n5.heading,fontWeight:"bold",color:cg},{tag:n5.special(n5.heading1),fontWeight:"bold",color:cg},{tag:n5.heading1,fontWeight:"bold",color:cg},{tag:[n5.heading2,n5.heading3,n5.heading4],fontWeight:"bold",color:cg},{tag:[n5.heading5,n5.heading6],color:cg},{tag:[n5.atom,n5.bool,n5.special(n5.variableName)],color:cb},{tag:[n5.processingInstruction,n5.inserted],color:cm},{tag:[n5.contentSeparator],color:cw},{tag:n5.invalid,color:ch,borderBottom:`1px dotted ${cO}`}]),cP=[cS,r_(cC)];var cD={},cT=cD={};function cM(){throw Error("setTimeout has not been defined")}function cR(){throw Error("clearTimeout has not been defined")}function cQ(e){if(T===setTimeout)return setTimeout(e,0);if((T===cM||!T)&&setTimeout)return T=setTimeout,setTimeout(e,0);try{return T(e,0)}catch(t){try{return T.call(null,e,0)}catch(t){return T.call(this,e,0)}}}!function(){try{T="function"==typeof setTimeout?setTimeout:cM}catch(e){T=cM}try{M="function"==typeof clearTimeout?clearTimeout:cR}catch(e){M=cR}}();var cA=[],cF=!1,cL=-1;function cE(){cF&&R&&(cF=!1,R.length?cA=R.concat(cA):cL=-1,cA.length&&cB())}function cB(){if(!cF){var e=cQ(cE);cF=!0;for(var t=cA.length;t;){for(R=cA,cA=[];++cL<t;)R&&R[cL].run();cL=-1,t=cA.length}R=null,cF=!1,function(e){if(M===clearTimeout)return clearTimeout(e);if((M===cR||!M)&&clearTimeout)return M=clearTimeout,clearTimeout(e);try{M(e)}catch(t){try{return M.call(null,e)}catch(t){return M.call(this,e)}}}(e)}}function cI(e,t){this.fun=e,this.array=t}function cG(){}cT.nextTick=function(e){var t=Array(arguments.length-1);if(arguments.length>1)for(var i=1;i<arguments.length;i++)t[i-1]=arguments[i];cA.push(new cI(e,t)),1!==cA.length||cF||cQ(cB)},cI.prototype.run=function(){this.fun.apply(null,this.array)},cT.title="browser",cT.browser=!0,cT.env={},cT.argv=[],cT.version="",cT.versions={},cT.on=cG,cT.addListener=cG,cT.once=cG,cT.off=cG,cT.removeListener=cG,cT.removeAllListeners=cG,cT.emit=cG,cT.prependListener=cG,cT.prependOnceListener=cG,cT.listeners=function(e){return[]},cT.binding=function(e){throw Error("process.binding is not supported")},cT.cwd=function(){return"/"},cT.chdir=function(e){throw Error("process.chdir is not supported")},cT.umask=function(){return 0};class c${constructor(e,t,i,o,a,n,r,s,l,p=0,d){this.p=e,this.stack=t,this.state=i,this.reducePos=o,this.pos=a,this.score=n,this.buffer=r,this.bufferBase=s,this.curContext=l,this.lookAhead=p,this.parent=d}toString(){return`[${this.stack.filter((e,t)=>t%3==0).concat(this.state)}]@${this.pos}${this.score?"!"+this.score:""}`}static start(e,t,i=0){let o=e.parser.context;return new c$(e,[],t,i,i,0,[],0,o?new cN(o,o.start):null,0,null)}get context(){return this.curContext?this.curContext.context:null}pushState(e,t){this.stack.push(this.state,t,this.bufferBase+this.buffer.length),this.state=e}reduce(e){var t;let i=e>>19,o=65535&e,{parser:a}=this.p,n=a.dynamicPrecedence(o);if(n&&(this.score+=n),0==i){this.pushState(a.getGoto(this.state,o,!0),this.reducePos),o<a.minRepeatTerm&&this.storeNode(o,this.reducePos,this.reducePos,4,!0),this.reduceContext(o,this.reducePos);return}let r=this.stack.length-(i-1)*3-(262144&e?6:0),s=r?this.stack[r-2]:this.p.ranges[0].from,l=this.reducePos-s;l>=2e3&&!(null===(t=this.p.parser.nodeSet.types[o])||void 0===t?void 0:t.isAnonymous)&&(s==this.p.lastBigReductionStart?(this.p.bigReductionCount++,this.p.lastBigReductionSize=l):this.p.lastBigReductionSize<l&&(this.p.bigReductionCount=1,this.p.lastBigReductionStart=s,this.p.lastBigReductionSize=l));let p=r?this.stack[r-1]:0,d=this.bufferBase+this.buffer.length-p;if(o<a.minRepeatTerm||131072&e){let e=a.stateFlag(this.state,1)?this.pos:this.reducePos;this.storeNode(o,s,e,d+4,!0)}if(262144&e)this.state=this.stack[r];else{let e=this.stack[r-3];this.state=a.getGoto(e,o,!0)}for(;this.stack.length>r;)this.stack.pop();this.reduceContext(o,s)}storeNode(e,t,i,o=4,a=!1){if(0==e&&(!this.stack.length||this.stack[this.stack.length-1]<this.buffer.length+this.bufferBase)){let e=this,o=this.buffer.length;if(0==o&&e.parent&&(o=e.bufferBase-e.parent.bufferBase,e=e.parent),o>0&&0==e.buffer[o-4]&&e.buffer[o-1]>-1){if(t==i)return;if(e.buffer[o-2]>=t){e.buffer[o-2]=i;return}}}if(a&&this.pos!=i){let a=this.buffer.length;if(a>0&&0!=this.buffer[a-4])for(;a>0&&this.buffer[a-2]>i;)this.buffer[a]=this.buffer[a-4],this.buffer[a+1]=this.buffer[a-3],this.buffer[a+2]=this.buffer[a-2],this.buffer[a+3]=this.buffer[a-1],a-=4,o>4&&(o-=4);this.buffer[a]=e,this.buffer[a+1]=t,this.buffer[a+2]=i,this.buffer[a+3]=o}else this.buffer.push(e,t,i,o)}shift(e,t,i){let o=this.pos;if(131072&e)this.pushState(65535&e,this.pos);else if((262144&e)==0){let{parser:a}=this.p;(i>this.pos||t<=a.maxNode)&&(this.pos=i,a.stateFlag(e,1)||(this.reducePos=i)),this.pushState(e,o),this.shiftContext(t,o),t<=a.maxNode&&this.buffer.push(t,o,i,4)}else this.pos=i,this.shiftContext(t,o),t<=this.p.parser.maxNode&&this.buffer.push(t,o,i,4)}apply(e,t,i){65536&e?this.reduce(e):this.shift(e,t,i)}useNode(e,t){let i=this.p.reused.length-1;(i<0||this.p.reused[i]!=e)&&(this.p.reused.push(e),i++);let o=this.pos;this.reducePos=this.pos=o+e.length,this.pushState(t,o),this.buffer.push(i,o,this.reducePos,-1),this.curContext&&this.updateContext(this.curContext.tracker.reuse(this.curContext.context,e,this,this.p.stream.reset(this.pos-e.length)))}split(){let e=this,t=e.buffer.length;for(;t>0&&e.buffer[t-2]>e.reducePos;)t-=4;let i=e.buffer.slice(t),o=e.bufferBase+t;for(;e&&o==e.bufferBase;)e=e.parent;return new c$(this.p,this.stack.slice(),this.state,this.reducePos,this.pos,this.score,i,o,this.curContext,this.lookAhead,e)}recoverByDelete(e,t){let i=e<=this.p.parser.maxNode;i&&this.storeNode(e,this.pos,t,4),this.storeNode(0,this.pos,t,i?8:4),this.pos=this.reducePos=t,this.score-=190}canShift(e){for(let t=new cz(this);;){let i=this.p.parser.stateSlot(t.state,4)||this.p.parser.hasAction(t.state,e);if(0==i)return!1;if((65536&i)==0)return!0;t.reduce(i)}}recoverByInsert(e){if(this.stack.length>=300)return[];let t=this.p.parser.nextStates(this.state);if(t.length>8||this.stack.length>=120){let i=[];for(let o=0,a;o<t.length;o+=2)(a=t[o+1])!=this.state&&this.p.parser.hasAction(a,e)&&i.push(t[o],a);if(this.stack.length<120)for(let e=0;i.length<8&&e<t.length;e+=2){let o=t[e+1];i.some((e,t)=>1&t&&e==o)||i.push(t[e],o)}t=i}let i=[];for(let e=0;e<t.length&&i.length<4;e+=2){let o=t[e+1];if(o==this.state)continue;let a=this.split();a.pushState(o,this.pos),a.storeNode(0,a.pos,a.pos,4,!0),a.shiftContext(t[e],this.pos),a.score-=200,i.push(a)}return i}forceReduce(){let{parser:e}=this.p,t=e.stateSlot(this.state,5);if((65536&t)==0)return!1;if(!e.validAction(this.state,t)){let i=t>>19,o=65535&t,a=this.stack.length-3*i;if(a<0||0>e.getGoto(this.stack[a],o,!1)){let e=this.findForcedReduction();if(null==e)return!1;t=e}this.storeNode(0,this.reducePos,this.reducePos,4,!0),this.score-=100}return this.reducePos=this.pos,this.reduce(t),!0}findForcedReduction(){let{parser:e}=this.p,t=[],i=(o,a)=>{if(!t.includes(o))return t.push(o),e.allActions(o,t=>{if(393216&t);else if(65536&t){let i=(t>>19)-a;if(i>1){let o=65535&t,a=this.stack.length-3*i;if(a>=0&&e.getGoto(this.stack[a],o,!1)>=0)return i<<19|65536|o}}else{let e=i(t,a+1);if(null!=e)return e}})};return i(this.state,0)}forceAll(){for(;!this.p.parser.stateFlag(this.state,2);)if(!this.forceReduce()){this.storeNode(0,this.pos,this.pos,4,!0);break}return this}get deadEnd(){if(3!=this.stack.length)return!1;let{parser:e}=this.p;return 65535==e.data[e.stateSlot(this.state,1)]&&!e.stateSlot(this.state,4)}restart(){this.state=this.stack[0],this.stack.length=0}sameState(e){if(this.state!=e.state||this.stack.length!=e.stack.length)return!1;for(let t=0;t<this.stack.length;t+=3)if(this.stack[t]!=e.stack[t])return!1;return!0}get parser(){return this.p.parser}dialectEnabled(e){return this.p.parser.dialect.flags[e]}shiftContext(e,t){this.curContext&&this.updateContext(this.curContext.tracker.shift(this.curContext.context,e,this,this.p.stream.reset(t)))}reduceContext(e,t){this.curContext&&this.updateContext(this.curContext.tracker.reduce(this.curContext.context,e,this,this.p.stream.reset(t)))}emitContext(){let e=this.buffer.length-1;(e<0||-3!=this.buffer[e])&&this.buffer.push(this.curContext.hash,this.reducePos,this.reducePos,-3)}emitLookAhead(){let e=this.buffer.length-1;(e<0||-4!=this.buffer[e])&&this.buffer.push(this.lookAhead,this.reducePos,this.reducePos,-4)}updateContext(e){if(e!=this.curContext.context){let t=new cN(this.curContext.tracker,e);t.hash!=this.curContext.hash&&this.emitContext(),this.curContext=t}}setLookAhead(e){e>this.lookAhead&&(this.emitLookAhead(),this.lookAhead=e)}close(){this.curContext&&this.curContext.tracker.strict&&this.emitContext(),this.lookAhead>0&&this.emitLookAhead()}}class cN{constructor(e,t){this.tracker=e,this.context=t,this.hash=e.strict?e.hash(t):0}}!function(e){e[e.Insert=200]="Insert",e[e.Delete=190]="Delete",e[e.Reduce=100]="Reduce",e[e.MaxNext=4]="MaxNext",e[e.MaxInsertStackDepth=300]="MaxInsertStackDepth",e[e.DampenInsertStackDepth=120]="DampenInsertStackDepth",e[e.MinBigReduction=2e3]="MinBigReduction"}(Q||(Q={}));class cz{constructor(e){this.start=e,this.state=e.state,this.stack=e.stack,this.base=this.stack.length}reduce(e){let t=e>>19;0==t?(this.stack==this.start.stack&&(this.stack=this.stack.slice()),this.stack.push(this.state,0,0),this.base+=3):this.base-=(t-1)*3;let i=this.start.p.parser.getGoto(this.stack[this.base-3],65535&e,!0);this.state=i}}class cW{constructor(e,t,i){this.stack=e,this.pos=t,this.index=i,this.buffer=e.buffer,0==this.index&&this.maybeNext()}static create(e,t=e.bufferBase+e.buffer.length){return new cW(e,t,t-e.bufferBase)}maybeNext(){let e=this.stack.parent;null!=e&&(this.index=this.stack.bufferBase-e.bufferBase,this.stack=e,this.buffer=e.buffer)}get id(){return this.buffer[this.index-4]}get start(){return this.buffer[this.index-3]}get end(){return this.buffer[this.index-2]}get size(){return this.buffer[this.index-1]}next(){this.index-=4,this.pos-=4,0==this.index&&this.maybeNext()}fork(){return new cW(this.stack,this.pos,this.index)}}function cj(e,t=Uint16Array){if("string"!=typeof e)return e;let i=null;for(let o=0,a=0;o<e.length;){let n=0;for(;;){let t=e.charCodeAt(o++),i=!1;if(126==t){n=65535;break}t>=92&&t--,t>=34&&t--;let a=t-32;if(a>=46&&(a-=46,i=!0),n+=a,i)break;n*=46}i?i[a++]=n:i=new t(n)}return i}class cq{constructor(){this.start=-1,this.value=-1,this.end=-1,this.extended=-1,this.lookAhead=0,this.mask=0,this.context=0}}const cV=new cq;class cZ{constructor(e,t){this.input=e,this.ranges=t,this.chunk="",this.chunkOff=0,this.chunk2="",this.chunk2Pos=0,this.next=-1,this.token=cV,this.rangeIndex=0,this.pos=this.chunkPos=t[0].from,this.range=t[0],this.end=t[t.length-1].to,this.readNext()}resolveOffset(e,t){let i=this.range,o=this.rangeIndex,a=this.pos+e;for(;a<i.from;){if(!o)return null;let e=this.ranges[--o];a-=i.from-e.to,i=e}for(;t<0?a>i.to:a>=i.to;){if(o==this.ranges.length-1)return null;let e=this.ranges[++o];a+=e.from-i.to,i=e}return a}clipPos(e){if(e>=this.range.from&&e<this.range.to)return e;for(let t of this.ranges)if(t.to>e)return Math.max(e,t.from);return this.end}peek(e){let t=this.chunkOff+e,i,o;if(t>=0&&t<this.chunk.length)i=this.pos+e,o=this.chunk.charCodeAt(t);else{let t=this.resolveOffset(e,1);if(null==t)return -1;if((i=t)>=this.chunk2Pos&&i<this.chunk2Pos+this.chunk2.length)o=this.chunk2.charCodeAt(i-this.chunk2Pos);else{let e=this.rangeIndex,t=this.range;for(;t.to<=i;)t=this.ranges[++e];this.chunk2=this.input.chunk(this.chunk2Pos=i),i+this.chunk2.length>t.to&&(this.chunk2=this.chunk2.slice(0,t.to-i)),o=this.chunk2.charCodeAt(0)}}return i>=this.token.lookAhead&&(this.token.lookAhead=i+1),o}acceptToken(e,t=0){let i=t?this.resolveOffset(t,-1):this.pos;if(null==i||i<this.token.start)throw RangeError("Token end out of bounds");this.token.value=e,this.token.end=i}getChunk(){if(this.pos>=this.chunk2Pos&&this.pos<this.chunk2Pos+this.chunk2.length){let{chunk:e,chunkPos:t}=this;this.chunk=this.chunk2,this.chunkPos=this.chunk2Pos,this.chunk2=e,this.chunk2Pos=t,this.chunkOff=this.pos-this.chunkPos}else{this.chunk2=this.chunk,this.chunk2Pos=this.chunkPos;let e=this.input.chunk(this.pos),t=this.pos+e.length;this.chunk=t>this.range.to?e.slice(0,this.range.to-this.pos):e,this.chunkPos=this.pos,this.chunkOff=0}}readNext(){return this.chunkOff>=this.chunk.length&&(this.getChunk(),this.chunkOff==this.chunk.length)?this.next=-1:this.next=this.chunk.charCodeAt(this.chunkOff)}advance(e=1){for(this.chunkOff+=e;this.pos+e>=this.range.to;){if(this.rangeIndex==this.ranges.length-1)return this.setDone();e-=this.range.to-this.pos,this.range=this.ranges[++this.rangeIndex],this.pos=this.range.from}return this.pos+=e,this.pos>=this.token.lookAhead&&(this.token.lookAhead=this.pos+1),this.readNext()}setDone(){return this.pos=this.chunkPos=this.end,this.range=this.ranges[this.rangeIndex=this.ranges.length-1],this.chunk="",this.next=-1}reset(e,t){if(t?(this.token=t,t.start=e,t.lookAhead=e+1,t.value=t.extended=-1):this.token=cV,this.pos!=e){if(this.pos=e,e==this.end)return this.setDone(),this;for(;e<this.range.from;)this.range=this.ranges[--this.rangeIndex];for(;e>=this.range.to;)this.range=this.ranges[++this.rangeIndex];e>=this.chunkPos&&e<this.chunkPos+this.chunk.length?this.chunkOff=e-this.chunkPos:(this.chunk="",this.chunkOff=0),this.readNext()}return this}read(e,t){if(e>=this.chunkPos&&t<=this.chunkPos+this.chunk.length)return this.chunk.slice(e-this.chunkPos,t-this.chunkPos);if(e>=this.chunk2Pos&&t<=this.chunk2Pos+this.chunk2.length)return this.chunk2.slice(e-this.chunk2Pos,t-this.chunk2Pos);if(e>=this.range.from&&t<=this.range.to)return this.input.read(e,t);let i="";for(let o of this.ranges){if(o.from>=t)break;o.to>e&&(i+=this.input.read(Math.max(o.from,e),Math.min(o.to,t)))}return i}}class cX{constructor(e,t){this.data=e,this.id=t}token(e,t){let{parser:i}=t.p;cY(this.data,e,t,this.id,i.data,i.tokenPrecTable)}}cX.prototype.contextual=cX.prototype.fallback=cX.prototype.extend=!1;class cU{constructor(e,t,i){this.precTable=t,this.elseToken=i,this.data="string"==typeof e?cj(e):e}token(e,t){let i=e.pos,o=0;for(;cY(this.data,e,t,0,this.data,this.precTable),!(e.token.value>-1);){if(null==this.elseToken)return;if(e.next<0)break;e.advance(),e.reset(e.pos,e.token),o++}o&&(e.reset(i,e.token),e.acceptToken(this.elseToken,o))}}cU.prototype.contextual=cX.prototype.fallback=cX.prototype.extend=!1;class cH{constructor(e,t={}){this.token=e,this.contextual=!!t.contextual,this.fallback=!!t.fallback,this.extend=!!t.extend}}function cY(e,t,i,o,a,n){let r=0,s=1<<o,{dialect:l}=i.p.parser;t:for(;(s&e[r])!=0;){let i=e[r+1];for(let o=r+3;o<i;o+=2)if((e[o+1]&s)>0){let i=e[o];if(l.allows(i)&&(-1==t.token.value||t.token.value==i||function(e,t,i,o){let a=c_(i,o,t);return a<0||c_(i,o,e)<a}(i,t.token.value,a,n))){t.acceptToken(i);break}}let o=t.next,p=0,d=e[r+2];if(t.next<0&&d>p&&65535==e[i+3*d-3]&&65535==e[i+3*d-3]){r=e[i+3*d-1];continue t}for(;p<d;){let a=p+d>>1,n=i+a+(a<<1),s=e[n],l=e[n+1]||65536;if(o<s)d=a;else if(o>=l)p=a+1;else{r=e[n+2],t.advance();continue t}}break}}function c_(e,t,i){for(let o=t,a;65535!=(a=e[o]);o++)if(a==i)return o-t;return -1}const cK=void 0!==cD&&cD.env&&/\bparse\b/.test(void 0);let cJ=null;function c0(e,t,i){let o=e.cursor(P.IncludeAnonymous);for(o.moveTo(t);;)if(!(i<0?o.childBefore(t):o.childAfter(t)))for(;;){if((i<0?o.to<t:o.from>t)&&!o.type.isError)return i<0?Math.max(0,Math.min(o.to-1,t-25)):Math.min(e.length,Math.max(o.from+1,t+25));if(i<0?o.prevSibling():o.nextSibling())break;if(!o.parent())return i<0?0:e.length}}!function(e){e[e.Margin=25]="Margin"}(A||(A={}));class c2{constructor(e,t){this.fragments=e,this.nodeSet=t,this.i=0,this.fragment=null,this.safeFrom=-1,this.safeTo=-1,this.trees=[],this.start=[],this.index=[],this.nextFragment()}nextFragment(){let e=this.fragment=this.i==this.fragments.length?null:this.fragments[this.i++];if(e){for(this.safeFrom=e.openStart?c0(e.tree,e.from+e.offset,1)-e.offset:e.from,this.safeTo=e.openEnd?c0(e.tree,e.to+e.offset,-1)-e.offset:e.to;this.trees.length;)this.trees.pop(),this.start.pop(),this.index.pop();this.trees.push(e.tree),this.start.push(-e.offset),this.index.push(0),this.nextStart=this.safeFrom}else this.nextStart=1e9}nodeAt(e){if(e<this.nextStart)return null;for(;this.fragment&&this.safeTo<=e;)this.nextFragment();if(!this.fragment)return null;for(;;){let t=this.trees.length-1;if(t<0)return this.nextFragment(),null;let i=this.trees[t],o=this.index[t];if(o==i.children.length){this.trees.pop(),this.start.pop(),this.index.pop();continue}let a=i.children[o],n=this.start[t]+i.positions[o];if(n>e)return this.nextStart=n,null;if(a instanceof nb){if(n==e){if(n<this.safeFrom)return null;let e=n+a.length;if(e<=this.safeTo){let t=a.prop(nh.lookAhead);if(!t||e+t<this.fragment.to)return a}}this.index[t]++,n+a.length>=Math.max(this.safeFrom,e)&&(this.trees.push(a),this.start.push(n),this.index.push(0))}else this.index[t]++,this.nextStart=n+a.length}}}class c1{constructor(e,t){this.stream=t,this.tokens=[],this.mainToken=null,this.actions=[],this.tokens=e.tokenizers.map(e=>new cq)}getActions(e){let t=0,i=null,{parser:o}=e.p,{tokenizers:a}=o,n=o.stateSlot(e.state,3),r=e.curContext?e.curContext.hash:0,s=0;for(let o=0;o<a.length;o++){if((1<<o&n)==0)continue;let l=a[o],p=this.tokens[o];if((!i||l.fallback)&&((l.contextual||p.start!=e.pos||p.mask!=n||p.context!=r)&&(this.updateCachedToken(p,l,e),p.mask=n,p.context=r),p.lookAhead>p.end+25&&(s=Math.max(p.lookAhead,s)),0!=p.value)){let o=t;if(p.extended>-1&&(t=this.addActions(e,p.extended,p.end,t)),t=this.addActions(e,p.value,p.end,t),!l.extend&&(i=p,t>o))break}}for(;this.actions.length>t;)this.actions.pop();return s&&e.setLookAhead(s),i||e.pos!=this.stream.end||((i=new cq).value=e.p.parser.eofTerm,i.start=i.end=e.pos,t=this.addActions(e,i.value,i.end,t)),this.mainToken=i,this.actions}getMainToken(e){if(this.mainToken)return this.mainToken;let t=new cq,{pos:i,p:o}=e;return t.start=i,t.end=Math.min(i+1,o.stream.end),t.value=i==o.stream.end?o.parser.eofTerm:0,t}updateCachedToken(e,t,i){let o=this.stream.clipPos(i.pos);if(t.token(this.stream.reset(o,e),i),e.value>-1){let{parser:t}=i.p;for(let o=0;o<t.specialized.length;o++)if(t.specialized[o]==e.value){let a=t.specializers[o](this.stream.read(e.start,e.end),i);if(a>=0&&i.p.parser.dialect.allows(a>>1)){(1&a)==0?e.value=a>>1:e.extended=a>>1;break}}}else e.value=0,e.end=this.stream.clipPos(o+1)}putAction(e,t,i,o){for(let t=0;t<o;t+=3)if(this.actions[t]==e)return o;return this.actions[o++]=e,this.actions[o++]=t,this.actions[o++]=i,o}addActions(e,t,i,o){let{state:a}=e,{parser:n}=e.p,{data:r}=n;for(let e=0;e<2;e++)for(let s=n.stateSlot(a,e?2:1);;s+=3){if(65535==r[s]){if(1==r[s+1])s=c5(r,s+2);else{0==o&&2==r[s+1]&&(o=this.putAction(c5(r,s+2),t,i,o));break}}r[s]==t&&(o=this.putAction(c5(r,s+1),t,i,o))}return o}}!function(e){e[e.Distance=5]="Distance",e[e.MaxRemainingPerStep=3]="MaxRemainingPerStep",e[e.MinBufferLengthPrune=500]="MinBufferLengthPrune",e[e.ForceReduceLimit=10]="ForceReduceLimit",e[e.CutDepth=15e3]="CutDepth",e[e.CutTo=9e3]="CutTo",e[e.MaxLeftAssociativeReductionCount=300]="MaxLeftAssociativeReductionCount",e[e.MaxStackCount=12]="MaxStackCount"}(F||(F={}));class c8{constructor(e,t,i,o){this.parser=e,this.input=t,this.ranges=o,this.recovering=0,this.nextStackID=9812,this.minStackPos=0,this.reused=[],this.stoppedAt=null,this.lastBigReductionStart=-1,this.lastBigReductionSize=0,this.bigReductionCount=0,this.stream=new cZ(t,o),this.tokens=new c1(e,this.stream),this.topTerm=e.top[1];let{from:a}=o[0];this.stacks=[c$.start(this,e.top[0],a)],this.fragments=i.length&&this.stream.end-a>4*e.bufferLength?new c2(i,e.nodeSet):null}get parsedPos(){return this.minStackPos}advance(){let e,t,i=this.stacks,o=this.minStackPos,a=this.stacks=[];if(this.bigReductionCount>300&&1==i.length){let[e]=i;for(;e.forceReduce()&&e.stack.length&&e.stack[e.stack.length-2]>=this.lastBigReductionStart;);this.bigReductionCount=this.lastBigReductionSize=0}for(let n=0;n<i.length;n++){let r=i[n];for(;;){if(this.tokens.mainToken=null,r.pos>o)a.push(r);else{if(this.advanceStack(r,a,i))continue;e||(e=[],t=[]),e.push(r);let o=this.tokens.getMainToken(r);t.push(o.value,o.end)}break}}if(!a.length){let t=e&&function(e){let t=null;for(let i of e){let e=i.p.stoppedAt;(i.pos==i.p.stream.end||null!=e&&i.pos>e)&&i.p.parser.stateFlag(i.state,2)&&(!t||t.score<i.score)&&(t=i)}return t}(e);if(t)return this.stackToTree(t);if(this.parser.strict)throw cK&&e&&console.log("Stuck with token "+(this.tokens.mainToken?this.parser.getName(this.tokens.mainToken.value):"none")),SyntaxError("No parse at "+o);this.recovering||(this.recovering=5)}if(this.recovering&&e){let i=null!=this.stoppedAt&&e[0].pos>this.stoppedAt?e[0]:this.runRecovery(e,t,a);if(i)return this.stackToTree(i.forceAll())}if(this.recovering){let e=1==this.recovering?1:3*this.recovering;if(a.length>e)for(a.sort((e,t)=>t.score-e.score);a.length>e;)a.pop();a.some(e=>e.reducePos>o)&&this.recovering--}else if(a.length>1){o:for(let e=0;e<a.length-1;e++){let t=a[e];for(let i=e+1;i<a.length;i++){let o=a[i];if(t.sameState(o)||t.buffer.length>500&&o.buffer.length>500){if((t.score-o.score||t.buffer.length-o.buffer.length)>0)a.splice(i--,1);else{a.splice(e--,1);continue o}}}}a.length>12&&a.splice(12,a.length-12)}this.minStackPos=a[0].pos;for(let e=1;e<a.length;e++)a[e].pos<this.minStackPos&&(this.minStackPos=a[e].pos);return null}stopAt(e){if(null!=this.stoppedAt&&this.stoppedAt<e)throw RangeError("Can't move stoppedAt forward");this.stoppedAt=e}advanceStack(e,t,i){let o=e.pos,{parser:a}=this,n=cK?this.stackID(e)+" -> ":"";if(null!=this.stoppedAt&&o>this.stoppedAt)return e.forceReduce()?e:null;if(this.fragments){let t=e.curContext&&e.curContext.tracker.strict,i=t?e.curContext.hash:0;for(let r=this.fragments.nodeAt(o);r;){let o=this.parser.nodeSet.types[r.type.id]==r.type?a.getGoto(e.state,r.type.id):-1;if(o>-1&&r.length&&(!t||(r.prop(nh.contextHash)||0)==i))return e.useNode(r,o),cK&&console.log(n+this.stackID(e)+` (via reuse of ${a.getName(r.type.id)})`),!0;if(!(r instanceof nb)||0==r.children.length||r.positions[0]>0)break;let s=r.children[0];if(s instanceof nb&&0==r.positions[0])r=s;else break}}let r=a.stateSlot(e.state,4);if(r>0)return e.reduce(r),cK&&console.log(n+this.stackID(e)+` (via always-reduce ${a.getName(65535&r)})`),!0;if(e.stack.length>=15e3)for(;e.stack.length>9e3&&e.forceReduce(););let s=this.tokens.getActions(e);for(let r=0;r<s.length;){let l=s[r++],p=s[r++],d=s[r++],c=r==s.length||!i,f=c?e:e.split();if(f.apply(l,p,d),cK&&console.log(n+this.stackID(f)+` (via ${(65536&l)==0?"shift":`reduce of ${a.getName(65535&l)}`} for ${a.getName(p)} @ ${o}${f==e?"":", split"})`),c)return!0;f.pos>o?t.push(f):i.push(f)}return!1}advanceFully(e,t){let i=e.pos;for(;;){if(!this.advanceStack(e,null,null))return!1;if(e.pos>i)return c6(e,t),!0}}runRecovery(e,t,i){let o=null,a=!1;for(let n=0;n<e.length;n++){let r=e[n],s=t[n<<1],l=t[(n<<1)+1],p=cK?this.stackID(r)+" -> ":"";if(r.deadEnd&&(a||(a=!0,r.restart(),cK&&console.log(p+this.stackID(r)+" (restarted)"),this.advanceFully(r,i))))continue;let d=r.split(),c=p;for(let e=0;d.forceReduce()&&e<10&&(cK&&console.log(c+this.stackID(d)+" (via force-reduce)"),!this.advanceFully(d,i));e++)cK&&(c=this.stackID(d)+" -> ");for(let e of r.recoverByInsert(s))cK&&console.log(p+this.stackID(e)+" (via recover-insert)"),this.advanceFully(e,i);this.stream.end>r.pos?(l==r.pos&&(l++,s=0),r.recoverByDelete(s,l),cK&&console.log(p+this.stackID(r)+` (via recover-delete ${this.parser.getName(s)})`),c6(r,i)):(!o||o.score<r.score)&&(o=r)}return o}stackToTree(e){return e.close(),nb.build({buffer:cW.create(e),nodeSet:this.parser.nodeSet,topID:this.topTerm,maxBufferLength:this.parser.bufferLength,reused:this.reused,start:this.ranges[0].from,length:e.pos-this.ranges[0].from,minRepeatType:this.parser.minRepeatTerm})}stackID(e){let t=(cJ||(cJ=new WeakMap)).get(e);return t||cJ.set(e,t=String.fromCodePoint(this.nextStackID++)),t+e}}function c6(e,t){for(let i=0;i<t.length;i++){let o=t[i];if(o.pos==e.pos&&o.sameState(e)){t[i].score<e.score&&(t[i]=e);return}}t.push(e)}class c9{constructor(e,t,i){this.source=e,this.flags=t,this.disabled=i}allows(e){return!this.disabled||0==this.disabled[e]}}const c3=e=>e;class c4 extends nB{constructor(e){if(super(),this.wrappers=[],14!=e.version)throw RangeError(`Parser version (${e.version}) doesn't match runtime version (14)`);let t=e.nodeNames.split(" ");this.minRepeatTerm=t.length;for(let i=0;i<e.repeatNodeCount;i++)t.push("");let i=Object.keys(e.topRules).map(t=>e.topRules[t][1]),o=[];for(let e=0;e<t.length;e++)o.push([]);function a(e,t,i){o[e].push([t,t.deserialize(String(i))])}if(e.nodeProps)for(let t of e.nodeProps){let e=t[0];"string"==typeof e&&(e=nh[e]);for(let i=1;i<t.length;){let o=t[i++];if(o>=0)a(o,e,t[i++]);else{let n=t[i+-o];for(let r=-o;r>0;r--)a(t[i++],e,n);i++}}}this.nodeSet=new nm(t.map((t,a)=>nu.define({name:a>=this.minRepeatTerm?void 0:t,id:a,props:o[a],top:i.indexOf(a)>-1,error:0==a,skipped:e.skippedNodes&&e.skippedNodes.indexOf(a)>-1}))),e.propSources&&(this.nodeSet=this.nodeSet.extend(...e.propSources)),this.strict=!1,this.bufferLength=1024;let n=cj(e.tokenData);this.context=e.context,this.specializerSpecs=e.specialized||[],this.specialized=new Uint16Array(this.specializerSpecs.length);for(let e=0;e<this.specializerSpecs.length;e++)this.specialized[e]=this.specializerSpecs[e].term;this.specializers=this.specializerSpecs.map(c7),this.states=cj(e.states,Uint32Array),this.data=cj(e.stateData),this.goto=cj(e.goto),this.maxTerm=e.maxTerm,this.tokenizers=e.tokenizers.map(e=>"number"==typeof e?new cX(n,e):e),this.topRules=e.topRules,this.dialects=e.dialects||{},this.dynamicPrecedences=e.dynamicPrecedences||null,this.tokenPrecTable=e.tokenPrec,this.termNames=e.termNames||null,this.maxNode=this.nodeSet.types.length-1,this.dialect=this.parseDialect(),this.top=this.topRules[Object.keys(this.topRules)[0]]}createParse(e,t,i){let o=new c8(this,e,t,i);for(let a of this.wrappers)o=a(o,e,t,i);return o}getGoto(e,t,i=!1){let o=this.goto;if(t>=o[0])return -1;for(let a=o[t+1];;){let t=o[a++],n=1&t,r=o[a++];if(n&&i)return r;for(let i=a+(t>>1);a<i;a++)if(o[a]==e)return r;if(n)return -1}}hasAction(e,t){let i=this.data;for(let o=0;o<2;o++)for(let a=this.stateSlot(e,o?2:1),n;;a+=3){if(65535==(n=i[a])){if(1==i[a+1])n=i[a=c5(i,a+2)];else if(2==i[a+1])return c5(i,a+2);else break}if(n==t||0==n)return c5(i,a+1)}return 0}stateSlot(e,t){return this.states[6*e+t]}stateFlag(e,t){return(this.stateSlot(e,0)&t)>0}validAction(e,t){return!!this.allActions(e,e=>e==t||null)}allActions(e,t){let i=this.stateSlot(e,4),o=i?t(i):void 0;for(let i=this.stateSlot(e,1);null==o;i+=3){if(65535==this.data[i]){if(1==this.data[i+1])i=c5(this.data,i+2);else break}o=t(c5(this.data,i+1))}return o}nextStates(e){let t=[];for(let i=this.stateSlot(e,1);;i+=3){if(65535==this.data[i]){if(1==this.data[i+1])i=c5(this.data,i+2);else break}if((1&this.data[i+2])==0){let e=this.data[i+1];t.some((t,i)=>1&i&&t==e)||t.push(this.data[i],e)}}return t}configure(e){let t=Object.assign(Object.create(c4.prototype),this);if(e.props&&(t.nodeSet=this.nodeSet.extend(...e.props)),e.top){let i=this.topRules[e.top];if(!i)throw RangeError(`Invalid top rule name ${e.top}`);t.top=i}return e.tokenizers&&(t.tokenizers=this.tokenizers.map(t=>{let i=e.tokenizers.find(e=>e.from==t);return i?i.to:t})),e.specializers&&(t.specializers=this.specializers.slice(),t.specializerSpecs=this.specializerSpecs.map((i,o)=>{let a=e.specializers.find(e=>e.from==i.external);if(!a)return i;let n=Object.assign(Object.assign({},i),{external:a.to});return t.specializers[o]=c7(n),n})),e.contextTracker&&(t.context=e.contextTracker),e.dialect&&(t.dialect=this.parseDialect(e.dialect)),null!=e.strict&&(t.strict=e.strict),e.wrap&&(t.wrappers=t.wrappers.concat(e.wrap)),null!=e.bufferLength&&(t.bufferLength=e.bufferLength),t}hasWrappers(){return this.wrappers.length>0}getName(e){return this.termNames?this.termNames[e]:String(e<=this.maxNode&&this.nodeSet.types[e].name||e)}get eofTerm(){return this.maxNode+1}get topNode(){return this.nodeSet.types[this.top[1]]}dynamicPrecedence(e){let t=this.dynamicPrecedences;return null==t?0:t[e]||0}parseDialect(e){let t=Object.keys(this.dialects),i=t.map(()=>!1);if(e)for(let o of e.split(" ")){let e=t.indexOf(o);e>=0&&(i[e]=!0)}let o=null;for(let e=0;e<t.length;e++)if(!i[e])for(let i=this.dialects[t[e]],a;65535!=(a=this.data[i++]);)(o||(o=new Uint8Array(this.maxTerm+1)))[a]=1;return new c9(e,i,o)}static deserialize(e){return new c4(e)}}function c5(e,t){return e[t]|e[t+1]<<16}function c7(e){if(e.external){let t=e.extend?1:0;return(i,o)=>e.external(i,o)<<1|t}return e.get}const fe=[9,10,11,12,13,32,133,160,5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8232,8233,8239,8287,12288],ft=new class{constructor(e){this.start=e.start,this.shift=e.shift||c3,this.reduce=e.reduce||c3,this.reuse=e.reuse||c3,this.hash=e.hash||(()=>0),this.strict=!1!==e.strict}}({start:!1,shift:(e,t)=>3==t||4==t||305==t?e:306==t,strict:!1}),fi=new cH((e,t)=>{let{next:i}=e;(125==i||-1==i||t.context)&&t.canShift(303)&&e.acceptToken(303)},{contextual:!0,fallback:!0}),fo=new cH((e,t)=>{let{next:i}=e,o;!(fe.indexOf(i)>-1)&&(47!=i||47!=(o=e.peek(1))&&42!=o)&&125!=i&&59!=i&&-1!=i&&!t.context&&t.canShift(302)&&e.acceptToken(302)},{contextual:!0}),fa=new cH((e,t)=>{let{next:i}=e;if((43==i||45==i)&&(e.advance(),i==e.next)){e.advance();let i=!t.context&&t.canShift(1);e.acceptToken(i?1:2)}},{contextual:!0}),fn=nW({"get set async static":n5.modifier,"for while do if else switch try catch finally return throw break continue default case":n5.controlKeyword,"in of await yield void typeof delete instanceof":n5.operatorKeyword,"let var const function class extends":n5.definitionKeyword,"import export from":n5.moduleKeyword,"with debugger as new":n5.keyword,TemplateString:n5.special(n5.string),super:n5.atom,BooleanLiteral:n5.bool,this:n5.self,null:n5.null,Star:n5.modifier,VariableName:n5.variableName,"CallExpression/VariableName TaggedTemplateExpression/VariableName":n5.function(n5.variableName),VariableDefinition:n5.definition(n5.variableName),Label:n5.labelName,PropertyName:n5.propertyName,PrivatePropertyName:n5.special(n5.propertyName),"CallExpression/MemberExpression/PropertyName":n5.function(n5.propertyName),"FunctionDeclaration/VariableDefinition":n5.function(n5.definition(n5.variableName)),"ClassDeclaration/VariableDefinition":n5.definition(n5.className),PropertyDefinition:n5.definition(n5.propertyName),PrivatePropertyDefinition:n5.definition(n5.special(n5.propertyName)),UpdateOp:n5.updateOperator,LineComment:n5.lineComment,BlockComment:n5.blockComment,Number:n5.number,String:n5.string,Escape:n5.escape,ArithOp:n5.arithmeticOperator,LogicOp:n5.logicOperator,BitOp:n5.bitwiseOperator,CompareOp:n5.compareOperator,RegExp:n5.regexp,Equals:n5.definitionOperator,Arrow:n5.function(n5.punctuation),": Spread":n5.punctuation,"( )":n5.paren,"[ ]":n5.squareBracket,"{ }":n5.brace,"InterpolationStart InterpolationEnd":n5.special(n5.brace),".":n5.derefOperator,", ;":n5.separator,"@":n5.meta,TypeName:n5.typeName,TypeDefinition:n5.definition(n5.typeName),"type enum interface implements namespace module declare":n5.definitionKeyword,"abstract global Privacy readonly override":n5.modifier,"is keyof unique infer":n5.operatorKeyword,JSXAttributeValue:n5.attributeValue,JSXText:n5.content,"JSXStartTag JSXStartCloseTag JSXSelfCloseEndTag JSXEndTag":n5.angleBracket,"JSXIdentifier JSXNameSpacedName":n5.tagName,"JSXAttribute/JSXIdentifier JSXAttribute/JSXNameSpacedName":n5.attributeName,"JSXBuiltin/JSXIdentifier":n5.standard(n5.tagName)}),fr={__proto__:null,export:14,as:19,from:27,default:30,async:35,function:36,extends:46,this:50,true:58,false:58,null:70,void:74,typeof:78,super:96,new:130,delete:146,yield:155,await:159,class:164,public:221,private:221,protected:221,readonly:223,instanceof:242,satisfies:245,in:246,const:248,import:280,keyof:335,unique:339,infer:345,is:381,abstract:401,implements:403,type:405,let:408,var:410,interface:417,enum:421,namespace:427,module:429,declare:433,global:437,for:456,of:465,while:468,with:472,do:476,if:480,else:482,switch:486,case:492,try:498,catch:502,finally:506,return:510,throw:514,break:518,continue:522,debugger:526},fs={__proto__:null,async:117,get:119,set:121,declare:181,public:183,private:183,protected:183,static:185,abstract:187,override:189,readonly:195,accessor:197,new:385},fl={__proto__:null,"<":137},fp=c4.deserialize({version:14,states:"$6[O`QUOOO%QQUOOO'TQWOOP(bOSOOO*pQ(CjO'#CfO*wOpO'#CgO+VO!bO'#CgO+eO07`O'#DZO-vQUO'#DaO.WQUO'#DlO%QQUO'#DvO0[QUO'#EOOOQ(CY'#EW'#EWO0uQSO'#ETOOQO'#Ei'#EiOOQO'#Ib'#IbO0}QSO'#GkO1YQSO'#EhO1_QSO'#EhO3aQ(CjO'#JcO6QQ(CjO'#JdO6nQSO'#FWO6sQ#tO'#FoOOQ(CY'#F`'#F`O7OO&jO'#F`O7^Q,UO'#FvO8tQSO'#FuOOQ(CY'#Jd'#JdOOQ(CW'#Jc'#JcOOQQ'#KO'#KOO8yQSO'#IOO9OQ(C[O'#IPOOQQ'#JP'#JPOOQQ'#IT'#ITQ`QUOOO%QQUO'#DnO9WQUO'#DzO%QQUO'#D|O9_QSO'#GkO9dQ,UO'#ClO9rQSO'#EgO9}QSO'#ErO:SQ,UO'#F_O:qQSO'#GkO:vQSO'#GoO;RQSO'#GoO;aQSO'#GrO;aQSO'#GsO;aQSO'#GuO9_QSO'#GxO<QQSO'#G{O=cQSO'#CbO=sQSO'#HXO={QSO'#H_O={QSO'#HaO`QUO'#HcO={QSO'#HeO={QSO'#HhO>QQSO'#HnO>VQ(C]O'#HtO%QQUO'#HvO>bQ(C]O'#HxO>mQ(C]O'#HzO9OQ(C[O'#H|O>xQ(CjO'#CfO?zQWO'#DfQOQSOOO@bQSO'#EPO9dQ,UO'#EgO@mQSO'#EgO@xQ`O'#F_OOQQ'#Cd'#CdOOQ(CW'#Dk'#DkOOQ(CW'#Jg'#JgO%QQUO'#JgOOQO'#Jk'#JkOOQO'#I_'#I_OAxQWO'#E`OOQ(CW'#E_'#E_OBtQ(C`O'#E`OCOQWO'#ESOOQO'#Jj'#JjOCdQWO'#JkODqQWO'#ESOCOQWO'#E`PEOO?MpO'#C`POOO)CDn)CDnOOOO'#IU'#IUOEZOpO,59ROOQ(CY,59R,59ROOOO'#IV'#IVOEiO!bO,59RO%QQUO'#D]OOOO'#IX'#IXOEwO07`O,59uOOQ(CY,59u,59uOFVQUO'#IYOFjQSO'#JeOHlQbO'#JeO+sQUO'#JeOHsQSO,59{OIZQSO'#EiOIhQSO'#JsOIsQSO'#JrOIsQSO'#JrOI{QSO,5;VOJQQSO'#JqOOQ(CY,5:W,5:WOJXQUO,5:WOLYQ(CjO,5:bOLyQSO,5:jOMdQ(C[O'#JpOMkQSO'#JoO:vQSO'#JoONPQSO'#JoONXQSO,5;UON^QSO'#JoO!!fQbO'#JdOOQ(CY'#Cf'#CfO%QQUO'#EOO!#UQ`O,5:oOOQO'#Jl'#JlOOQO-E<`-E<`O9_QSO,5=VO!#lQSO,5=VO!#qQUO,5;SO!%tQ,UO'#EdO!'XQSO,5;SO!(qQ,UO'#DpO!(xQUO'#DuO!)SQWO,5;]O!)[QWO,5;]O%QQUO,5;]OOQQ'#FO'#FOOOQQ'#FQ'#FQO%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^OOQQ'#FU'#FUO!)jQUO,5;oOOQ(CY,5;t,5;tOOQ(CY,5;u,5;uO!+mQSO,5;uOOQ(CY,5;v,5;vO%QQUO'#IfO!+uQ(C[O,5<cO!%tQ,UO,5;^O!,dQ,UO,5;^O%QQUO,5;rO!,kQ#tO'#FeO!-hQ#tO'#JwO!-SQ#tO'#JwO!-oQ#tO'#JwOOQO'#Jw'#JwO!.TQ#tO,5;}OOOO,5<Z,5<ZO!.fQUO'#FqOOOO'#Ie'#IeO7OO&jO,5;zO!.mQ#tO'#FsOOQ(CY,5;z,5;zO!/^Q7[O'#CrOOQ(CY'#Cv'#CvO!/qQSO'#CvO!/vO07`O'#CzO!0dQ,UO,5<`O!0kQSO,5<bO!2QQMhO'#GQO!2_QSO'#GRO!2dQSO'#GRO!2iQMhO'#GVO!3hQWO'#GZO!4ZQ7[O'#J^OOQ(CY'#J^'#J^O!4eQSO'#J]O!4sQSO'#J[O!4{QSO'#CqOOQ(CY'#Ct'#CtOOQ(CY'#DO'#DOOOQ(CY'#DQ'#DQO0xQSO'#DSO!'^Q,UO'#FxO!'^Q,UO'#FzO!5TQSO'#F|O!5YQSO'#F}O!2dQSO'#GTO!'^Q,UO'#GYO!5_QSO'#EjO!5|QSO,5<aO`QUO,5>jOOQQ'#JX'#JXOOQQ,5>k,5>kOOQQ-E<R-E<RO!7{Q(CjO,5:YO!:iQ(CjO,5:fO%QQUO,5:fO!=SQ(CjO,5:hOOQ(CW'#Co'#CoO!=sQ,UO,5=VO!>RQ(C[O'#JYO8tQSO'#JYO!>dQ(C[O,59WO!>oQWO,59WO!>wQ,UO,59WO9dQ,UO,59WO!?SQSO,5;SO!?[QSO'#HWO!?mQSO'#KSO%QQUO,5;wO!?uQWO,5;yO!?zQSO,5=qO!@PQSO,5=qO!@UQSO,5=qO9OQ(C[O,5=qO!@dQSO'#EkO!A^QWO'#ElOOQ(CW'#Jq'#JqO!AeQ(C[O'#KPO9OQ(C[O,5=ZO;aQSO,5=aOOQO'#Cr'#CrO!ApQWO,5=^O!AxQ,UO,5=_O!BTQSO,5=aO!BYQ`O,5=dO>QQSO'#G}O9_QSO'#HPO!BbQSO'#HPO9dQ,UO'#HRO!BgQSO'#HROOQQ,5=g,5=gO!BlQSO'#HSO!BtQSO'#ClO!ByQSO,58|O!CTQSO,58|O!E]QUO,58|OOQQ,58|,58|O!EjQ(C[O,58|O%QQUO,58|O!EuQUO'#HZOOQQ'#H['#H[OOQQ'#H]'#H]O`QUO,5=sO!FVQSO,5=sO`QUO,5=yO`QUO,5={O!F[QSO,5=}O`QUO,5>PO!FaQSO,5>SO!FfQUO,5>YOOQQ,5>`,5>`O%QQUO,5>`O9OQ(C[O,5>bOOQQ,5>d,5>dO!JmQSO,5>dOOQQ,5>f,5>fO!JmQSO,5>fOOQQ,5>h,5>hO!JrQWO'#DXO%QQUO'#JgO!KaQWO'#JgO!LOQWO'#DgO!LaQWO'#DgO!NrQUO'#DgO!NyQSO'#JfO# RQSO,5:QO# WQSO'#EmO# fQSO'#JtO# nQSO,5;WO# sQWO'#DgO#!QQWO'#EROOQ(CY,5:k,5:kO%QQUO,5:kO#!XQSO,5:kO>QQSO,5;RO!>oQWO,5;RO!>wQ,UO,5;RO9dQ,UO,5;RO#!aQSO,5@RO#!fQ!LQO,5:oOOQO-E<]-E<]O##lQ(C`O,5:zOCOQWO,5:nO##vQWO,5:nOCOQWO,5:zO!>dQ(C[O,5:nOOQ(CW'#Ec'#EcOOQO,5:z,5:zO%QQUO,5:zO#$TQ(C[O,5:zO#$`Q(C[O,5:zO!>oQWO,5:nOOQO,5;Q,5;QO#$nQ(C[O,5:zPOOO'#IS'#ISP#%SO?MpO,58zPOOO,58z,58zOOOO-E<S-E<SOOQ(CY1G.m1G.mOOOO-E<T-E<TO#%_Q`O,59wOOOO-E<V-E<VOOQ(CY1G/a1G/aO#%dQbO,5>tO+sQUO,5>tOOQO,5>z,5>zO#%nQUO'#IYOOQO-E<W-E<WO#%{QSO,5@PO#&TQbO,5@PO#&[QSO,5@^OOQ(CY1G/g1G/gO%QQUO,5@_O#&dQSO'#I`OOQO-E<^-E<^O#&[QSO,5@^OOQ(CW1G0q1G0qOOQ(CY1G/r1G/rOOQ(CY1G0U1G0UO%QQUO,5@[O#&xQ(C[O,5@[O#'ZQ(C[O,5@[O#'bQSO,5@ZO:vQSO,5@ZO#'jQSO,5@ZO#'xQSO'#IcO#'bQSO,5@ZOOQ(CW1G0p1G0pO!)SQWO,5:qO!)_QWO,5:qOOQO,5:s,5:sO#(jQSO,5:sO#(rQ,UO1G2qO9_QSO1G2qOOQ(CY1G0n1G0nO#)QQ(CjO1G0nO#*VQ(ChO,5;OOOQ(CY'#GP'#GPO#*sQ(CjO'#J^O!#qQUO1G0nO#,{Q,UO'#JhO#-VQSO,5:[O#-[QbO'#JiO%QQUO'#JiO#-fQSO,5:aOOQ(CY'#DX'#DXOOQ(CY1G0w1G0wO%QQUO1G0wOOQ(CY1G1a1G1aO#-kQSO1G0wO#0SQ(CjO1G0xO#0ZQ(CjO1G0xO#2tQ(CjO1G0xO#2{Q(CjO1G0xO#5VQ(CjO1G0xO#5mQ(CjO1G0xO#8gQ(CjO1G0xO#8nQ(CjO1G0xO#;XQ(CjO1G0xO#;`Q(CjO1G0xO#=WQ(CjO1G0xO#@WQ$IUO'#CfO#BUQ$IUO1G1ZO#B]Q$IUO'#JdO!+pQSO1G1aO#BmQ(CjO,5?QOOQ(CW-E<d-E<dO#CaQ(CjO1G0xOOQ(CY1G0x1G0xO#ElQ(CjO1G1^O#F`Q#tO,5<RO#FhQ#tO,5<SO#FpQ#tO'#FjO#GXQSO'#FiOOQO'#Jx'#JxOOQO'#Id'#IdO#G^Q#tO1G1iOOQ(CY1G1i1G1iOOOO1G1t1G1tO#GoQ$IUO'#JcO#GyQSO,5<]O!)jQUO,5<]OOOO-E<c-E<cOOQ(CY1G1f1G1fO#HOQWO'#JwOOQ(CY,5<_,5<_O#HWQWO,5<_OOQ(CY,59b,59bO!%tQ,UO'#C|OOOO'#IW'#IWO#H]O07`O,59fOOQ(CY,59f,59fO%QQUO1G1zO!5YQSO'#IhO#HhQSO,5<sOOQ(CY,5<p,5<pOOQO'#Gf'#GfO!'^Q,UO,5=POOQO'#Gh'#GhO!'^Q,UO,5=RO!%tQ,UO,5=TOOQO1G1|1G1|O#HvQ`O'#CoO#IZQ`O,5<lO#IbQSO'#J{O9_QSO'#J{O#IpQSO,5<nO!'^Q,UO,5<mO#IuQSO'#GSO#JQQSO,5<mO#JVQ`O'#GPO#JdQ`O'#J|O#JnQSO'#J|O!%tQ,UO'#J|O#JsQSO,5<qO#JxQWO'#G[O!3cQWO'#G[O#KZQSO'#G^O#K`QSO'#G`O!2dQSO'#GcO#KeQ(C[O'#IjO#KpQWO,5<uOOQ(CY,5<u,5<uO#KwQWO'#G[O#LVQWO'#G]O#L_QWO'#G]OOQ(CY,5=U,5=UO!'^Q,UO,5?wO!'^Q,UO,5?wO#LdQSO'#IkO#LoQSO,5?vO#LwQSO,59]O#MhQ,UO,59nOOQ(CY,59n,59nO#NZQ,UO,5<dO#N|Q,UO,5<fO?rQSO,5<hOOQ(CY,5<i,5<iO$ WQSO,5<oO$ ]Q,UO,5<tO$ mQSO'#JoO!#qQUO1G1{O$ rQSO1G1{OOQQ1G4U1G4UOOQ(CY1G/t1G/tO!+mQSO1G/tO$#qQ(CjO1G0QOOQQ1G2q1G2qO!%tQ,UO1G2qO%QQUO1G2qO$$bQSO1G2qO$$mQ,UO'#EdOOQ(CW,5?t,5?tO$$wQ(C[O,5?tOOQQ1G.r1G.rO!>dQ(C[O1G.rO!>oQWO1G.rO!>wQ,UO1G.rO$%YQSO1G0nO$%_QSO'#CfO$%jQSO'#KTO$%rQSO,5=rO$%wQSO'#KTO$%|QSO'#KTO$&XQSO'#IsO$&gQSO,5@nO$&oQbO1G1cOOQ(CY1G1e1G1eO9_QSO1G3]O?rQSO1G3]O$&vQSO1G3]O$&{QSO1G3]OOQQ1G3]1G3]O:vQSO'#JrO:vQSO'#EmO%QQUO'#EmO:vQSO'#ImO$'QQ(C[O,5@kOOQQ1G2u1G2uO!BTQSO1G2{O!%tQ,UO1G2xO$']QSO1G2xOOQQ1G2y1G2yO!%tQ,UO1G2yO$'bQSO1G2yO$'jQWO'#GwOOQQ1G2{1G2{O!3cQWO'#IoO!BYQ`O1G3OOOQQ1G3O1G3OOOQQ,5=i,5=iO$'rQ,UO,5=kO9_QSO,5=kO#K`QSO,5=mO8tQSO,5=mO!>oQWO,5=mO!>wQ,UO,5=mO9dQ,UO,5=mO$(QQSO'#KRO$(]QSO,5=nOOQQ1G.h1G.hO$(bQ(C[O1G.hO?rQSO1G.hO$(mQSO1G.hO9OQ(C[O1G.hO$*rQbO,5@pO$+SQSO,5@pO$+_QUO,5=uO$+fQSO,5=uO:vQSO,5@pOOQQ1G3_1G3_O`QUO1G3_OOQQ1G3e1G3eOOQQ1G3g1G3gO={QSO1G3iO$+kQUO1G3kO$/lQUO'#HjOOQQ1G3n1G3nO$/yQSO'#HpO>QQSO'#HrOOQQ1G3t1G3tO$0RQUO1G3tO9OQ(C[O1G3zOOQQ1G3|1G3|OOQ(CW'#GW'#GWO9OQ(C[O1G4OO9OQ(C[O1G4QO$4VQSO,5@RO!)jQUO,5;XO:vQSO,5;XO>QQSO,5:RO!)jQUO,5:RO!>oQWO,5:RO$4[Q$IUO,5:ROOQO,5;X,5;XO$4fQWO'#IZO$4|QSO,5@QOOQ(CY1G/l1G/lO$5UQWO'#IaO$5`QSO,5@`OOQ(CW1G0r1G0rO!LaQWO,5:ROOQO'#I^'#I^O$5hQWO,5:mOOQ(CY,5:m,5:mO#![QSO1G0VOOQ(CY1G0V1G0VO%QQUO1G0VOOQ(CY1G0m1G0mO>QQSO1G0mO!>oQWO1G0mO!>wQ,UO1G0mOOQ(CW1G5m1G5mO!>dQ(C[O1G0YOOQO1G0f1G0fO%QQUO1G0fO$5oQ(C[O1G0fO$5zQ(C[O1G0fO!>oQWO1G0YOCOQWO1G0YO$6YQ(C[O1G0fOOQO1G0Y1G0YO$6nQ(CjO1G0fPOOO-E<Q-E<QPOOO1G.f1G.fOOOO1G/c1G/cO$6xQ`O,5<cO$7QQbO1G4`OOQO1G4f1G4fO%QQUO,5>tO$7[QSO1G5kO$7dQSO1G5xO$7lQbO1G5yO:vQSO,5>zO$7vQ(CjO1G5vO%QQUO1G5vO$8WQ(C[O1G5vO$8iQSO1G5uO$8iQSO1G5uO:vQSO1G5uO$8qQSO,5>}O:vQSO,5>}OOQO,5>},5>}O$9VQSO,5>}O$ mQSO,5>}OOQO-E<a-E<aOOQO1G0]1G0]OOQO1G0_1G0_O!+pQSO1G0_OOQQ7+(]7+(]O!%tQ,UO7+(]O%QQUO7+(]O$9eQSO7+(]O$9pQ,UO7+(]O$:OQ(CjO,59nO$<WQ(CjO,5<dO$>cQ(CjO,5<fO$@nQ(CjO,5<tOOQ(CY7+&Y7+&YO$CPQ(CjO7+&YO$CsQ,UO'#I[O$C}QSO,5@SOOQ(CY1G/v1G/vO$DVQUO'#I]O$DdQSO,5@TO$DlQbO,5@TOOQ(CY1G/{1G/{O$DvQSO7+&cOOQ(CY7+&c7+&cO$D{Q$IUO,5:bO%QQUO7+&uO$EVQ$IUO,5:YO$EdQ$IUO,5:fO$EnQ$IUO,5:hOOQ(CY7+&{7+&{OOQO1G1m1G1mOOQO1G1n1G1nO$ExQ#tO,5<UO!)jQUO,5<TOOQO-E<b-E<bOOQ(CY7+'T7+'TOOOO7+'`7+'`OOOO1G1w1G1wO$FTQSO1G1wOOQ(CY1G1y1G1yO$FYQ`O,59hOOOO-E<U-E<UOOQ(CY1G/Q1G/QO$FaQ(CjO7+'fOOQ(CY,5?S,5?SO$GTQSO,5?SOOQ(CY1G2_1G2_P$GYQSO'#IhPOQ(CY-E<f-E<fO$G|Q,UO1G2kO$HoQ,UO1G2mO$HyQ`O1G2oOOQ(CY1G2W1G2WO$IQQSO'#IgO$I`QSO,5@gO$I`QSO,5@gO$IhQSO,5@gO$IsQSO,5@gOOQO1G2Y1G2YO$JRQ,UO1G2XO!'^Q,UO1G2XO$JcQMhO'#IiO$JsQSO,5@hO!%tQ,UO,5@hO$J{Q`O,5@hOOQ(CY1G2]1G2]OOQ(CW,5<v,5<vOOQ(CW,5<w,5<wO$ mQSO,5<wOBoQSO,5<wO!>oQWO,5<vOOQO'#G_'#G_O$KVQSO,5<xOOQ(CW,5<z,5<zO$ mQSO,5<}OOQO,5?U,5?UOOQO-E<h-E<hOOQ(CY1G2a1G2aO!3cQWO,5<vO$K_QSO,5<wO#KZQSO,5<xO!3cQWO,5<wO$KjQ,UO1G5cO$KtQ,UO1G5cOOQO,5?V,5?VOOQO-E<i-E<iOOQO1G.w1G.wO!?uQWO,59pO%QQUO,59pO$LRQSO1G2SO!'^Q,UO1G2ZO$LWQ(CjO7+'gOOQ(CY7+'g7+'gO!#qQUO7+'gOOQ(CY7+%`7+%`O$LzQ`O'#J}O#![QSO7+(]O$MUQbO7+(]O$9hQSO7+(]O$M]Q(ChO'#CfO$MpQ(ChO,5<{O$NbQSO,5<{OOQ(CW1G5`1G5`OOQQ7+$^7+$^O!>dQ(C[O7+$^O!>oQWO7+$^O!#qQUO7+&YO$NgQSO'#IrO$N{QSO,5@oOOQO1G3^1G3^O9_QSO,5@oO$N{QSO,5@oO% TQSO,5@oOOQO,5?_,5?_OOQO-E<q-E<qOOQ(CY7+&}7+&}O% YQSO7+(wO9OQ(C[O7+(wO9_QSO7+(wO?rQSO7+(wO% _QSO,5;XOOQ(CW,5?X,5?XOOQ(CW-E<k-E<kOOQQ7+(g7+(gO% dQ(ChO7+(dO!%tQ,UO7+(dO% nQ`O7+(eOOQQ7+(e7+(eO!%tQ,UO7+(eO% uQSO'#KQO%!QQSO,5=cOOQO,5?Z,5?ZOOQO-E<m-E<mOOQQ7+(j7+(jO%#aQWO'#HQOOQQ1G3V1G3VO!%tQ,UO1G3VO%QQUO1G3VO%#hQSO1G3VO%#sQ,UO1G3VO9OQ(C[O1G3XO#K`QSO1G3XO8tQSO1G3XO!>oQWO1G3XO!>wQ,UO1G3XO%$RQSO'#IqO%$^QSO,5@mO%$fQWO,5@mOOQ(CW1G3Y1G3YOOQQ7+$S7+$SO?rQSO7+$SO9OQ(C[O7+$SO%$qQSO7+$SO%QQUO1G6[O%QQUO1G6]O%$vQUO1G3aO%$}QSO1G3aO%%SQUO1G3aO%%ZQ(C[O1G6[OOQQ7+(y7+(yO9OQ(C[O7+)TO`QUO7+)VOOQQ'#KW'#KWOOQQ'#It'#ItO%%eQUO,5>UOOQQ,5>U,5>UO%QQUO'#HkO%%rQSO'#HmOOQQ,5>[,5>[O:vQSO,5>[OOQQ,5>^,5>^OOQQ7+)`7+)`OOQQ7+)f7+)fOOQQ7+)j7+)jOOQQ7+)l7+)lO%%wQWO1G5mO%&]Q$IUO1G0sO%&gQSO1G0sOOQO1G/m1G/mO%&rQ$IUO1G/mO>QQSO1G/mO!)jQUO'#DgOOQO,5>u,5>uOOQO-E<X-E<XOOQO,5>{,5>{OOQO-E<_-E<_O!>oQWO1G/mOOQO-E<[-E<[OOQ(CY1G0X1G0XOOQ(CY7+%q7+%qO#![QSO7+%qOOQ(CY7+&X7+&XO>QQSO7+&XO!>oQWO7+&XOOQO7+%t7+%tO$6nQ(CjO7+&QOOQO7+&Q7+&QO%QQUO7+&QO%&|Q(C[O7+&QO!>dQ(C[O7+%tO!>oQWO7+%tO%'XQ(C[O7+&QO%'gQ(CjO7++bO%QQUO7++bO%'wQSO7++aO%'wQSO7++aOOQO1G4i1G4iO:vQSO1G4iO%(PQSO1G4iOOQO7+%y7+%yO#![QSO<<KwO$MUQbO<<KwO%(_QSO<<KwOOQQ<<Kw<<KwO!%tQ,UO<<KwO%QQUO<<KwO%(gQSO<<KwO%(rQ(CjO1G2kO%*}Q(CjO1G2mO%-YQ(CjO1G2XO%/kQ,UO,5>vOOQO-E<Y-E<YO%/uQbO,5>wO%QQUO,5>wOOQO-E<Z-E<ZO%0PQSO1G5oOOQ(CY<<I}<<I}O%0XQ$IUO1G0nO%2cQ$IUO1G0xO%2jQ$IUO1G0xO%4nQ$IUO1G0xO%4uQ$IUO1G0xO%6jQ$IUO1G0xO%7QQ$IUO1G0xO%9eQ$IUO1G0xO%9lQ$IUO1G0xO%;pQ$IUO1G0xO%;wQ$IUO1G0xO%=oQ$IUO1G0xO%>SQ(CjO<<JaO%?XQ$IUO1G0xO%@}Q$IUO'#J^O%CQQ$IUO1G1^O%C_Q$IUO1G0QO!)jQUO'#FlOOQO'#Jy'#JyOOQO1G1p1G1pO%CiQSO1G1oO%CnQ$IUO,5?QOOOO7+'c7+'cOOOO1G/S1G/SOOQ(CY1G4n1G4nO!'^Q,UO7+(ZO%CxQSO,5?RO9_QSO,5?ROOQO-E<e-E<eO%DWQSO1G6RO%DWQSO1G6RO%D`QSO1G6RO%DkQ,UO7+'sO%D{Q`O,5?TO%EVQSO,5?TO!%tQ,UO,5?TOOQO-E<g-E<gO%E[Q`O1G6SO%EfQSO1G6SOOQ(CW1G2c1G2cO$ mQSO1G2cOOQ(CW1G2b1G2bO%EnQSO1G2dO!%tQ,UO1G2dOOQ(CW1G2i1G2iO!>oQWO1G2bOBoQSO1G2cO%EsQSO1G2dO%E{QSO1G2cO!'^Q,UO7+*}OOQ(CY1G/[1G/[O%FWQSO1G/[OOQ(CY7+'n7+'nO%F]Q,UO7+'uO%FmQ(CjO<<KROOQ(CY<<KR<<KRO!%tQ,UO'#IlO%GaQSO,5@iO!%tQ,UO1G2gOOQQ<<Gx<<GxO!>dQ(C[O<<GxO%GiQ(CjO<<ItOOQ(CY<<It<<ItOOQO,5?^,5?^O%H]QSO,5?^O$%|QSO,5?^OOQO-E<p-E<pO%HbQSO1G6ZO%HbQSO1G6ZO9_QSO1G6ZO?rQSO<<LcOOQQ<<Lc<<LcO%HjQSO<<LcO9OQ(C[O<<LcO%HoQSO1G0sOOQQ<<LO<<LOO% dQ(ChO<<LOOOQQ<<LP<<LPO% nQ`O<<LPO%HtQWO'#InO%IPQSO,5@lO!)jQUO,5@lOOQQ1G2}1G2}O%IXQUO'#JgOOQO'#Ip'#IpO9OQ(C[O'#IpO%IcQWO,5=lOOQQ,5=l,5=lO%IjQWO'#E`O%JOQSO7+(qO%JTQSO7+(qOOQQ7+(q7+(qO!%tQ,UO7+(qO%QQUO7+(qO%J]QSO7+(qOOQQ7+(s7+(sO9OQ(C[O7+(sO#K`QSO7+(sO8tQSO7+(sO!>oQWO7+(sO%JhQSO,5?]OOQO-E<o-E<oOOQO'#HT'#HTO%JsQSO1G6XO9OQ(C[O<<GnOOQQ<<Gn<<GnO?rQSO<<GnO%J{QSO7++vO%KQQSO7++wOOQQ7+({7+({O%KVQSO7+({O%K[QUO7+({O%KcQSO7+({O%QQUO7++vO%QQUO7++wOOQQ<<Lo<<LoOOQQ<<Lq<<LqOOQQ-E<r-E<rOOQQ1G3p1G3pO%KhQSO,5>VOOQQ,5>X,5>XO%KmQSO1G3vO:vQSO7+&_O!)jQUO7+&_OOQO7+%X7+%XO%KrQ$IUO1G5yO>QQSO7+%XOOQ(CY<<I]<<I]OOQ(CY<<Is<<IsO>QQSO<<IsOOQO<<Il<<IlO$6nQ(CjO<<IlO%QQUO<<IlOOQO<<I`<<I`O!>dQ(C[O<<I`O%K|Q(C[O<<IlO%LXQ(CjO<<N|O%LiQSO<<N{OOQO7+*T7+*TO:vQSO7+*TOOQQANAcANAcO%LqQSOANAcO!%tQ,UOANAcO#![QSOANAcO$MUQbOANAcO%QQUOANAcO%LyQ(CjO7+'sO& [Q(CjO7+'uO&#mQbO1G4cO&#wQ$IUO7+&YO&$UQ$IUO,59nO&&XQ$IUO,5<dO&([Q$IUO,5<fO&*_Q$IUO,5<tO&,TQ$IUO7+'fO&,bQ$IUO7+'gO&,oQSO,5<WOOQO7+'Z7+'ZO&,tQ,UO<<KuOOQO1G4m1G4mO&,{QSO1G4mO&-WQSO1G4mO&-fQSO7++mO&-fQSO7++mO!%tQ,UO1G4oO&-nQ`O1G4oO&-xQSO7++nOOQ(CW7+'}7+'}O$ mQSO7+(OO&.QQ`O7+(OOOQ(CW7+'|7+'|O$ mQSO7+'}O&.XQSO7+(OO!%tQ,UO7+(OOBoQSO7+'}O&.^Q,UO<<NiOOQ(CY7+$v7+$vO&.hQ`O,5?WOOQO-E<j-E<jO&.rQ(ChO7+(ROOQQAN=dAN=dO9_QSO1G4xOOQO1G4x1G4xO&/SQSO1G4xO&/XQSO7++uO&/XQSO7++uO9OQ(C[OANA}O?rQSOANA}OOQQANA}ANA}OOQQANAjANAjOOQQANAkANAkO&/aQSO,5?YOOQO-E<l-E<lO&/lQ$IUO1G6WO&1|QbO'#CfOOQO,5?[,5?[OOQO-E<n-E<nOOQQ1G3W1G3WO%IXQUO,5<xOOQQ<<L]<<L]O!%tQ,UO<<L]O%JOQSO<<L]O&2WQSO<<L]O%QQUO<<L]OOQQ<<L_<<L_O9OQ(C[O<<L_O#K`QSO<<L_O8tQSO<<L_O&2`QWO1G4wO&2kQSO7++sOOQQAN=YAN=YO9OQ(C[OAN=YOOQQ<= b<= bOOQQ<= c<= cOOQQ<<Lg<<LgO&2sQSO<<LgO&2xQUO<<LgO&3PQSO<= bO&3UQSO<= cOOQQ1G3q1G3qO>QQSO7+)bO&3ZQSO<<IyO&3fQ$IUO<<IyOOQO<<Hs<<HsOOQ(CYAN?_AN?_OOQOAN?WAN?WO$6nQ(CjOAN?WOOQOAN>zAN>zO%QQUOAN?WOOQO<<Mo<<MoOOQQG26}G26}O!%tQ,UOG26}O#![QSOG26}O&3pQSOG26}O$MUQbOG26}O&3xQ$IUO<<JaO&4VQ$IUO1G2XO&5{Q$IUO1G2kO&8OQ$IUO1G2mO&:RQ$IUO<<KRO&:`Q$IUO<<ItOOQO1G1r1G1rO!'^Q,UOANAaOOQO7+*X7+*XO&:mQSO7+*XO&:xQSO<= XO&;QQ`O7+*ZOOQ(CW<<Kj<<KjO$ mQSO<<KjOOQ(CW<<Ki<<KiO&;[Q`O<<KjO$ mQSO<<KiOOQO7+*d7+*dO9_QSO7+*dO&;cQSO<= aOOQQG27iG27iO9OQ(C[OG27iO!)jQUO1G4tO&;kQSO7++rO%JOQSOANAwOOQQANAwANAwO!%tQ,UOANAwO&;sQSOANAwOOQQANAyANAyO9OQ(C[OANAyO#K`QSOANAyOOQO'#HU'#HUOOQO7+*c7+*cOOQQG22tG22tOOQQANBRANBRO&;{QSOANBROOQQAND|AND|OOQQAND}AND}OOQQ<<L|<<L|O!)jQUOAN?eOOQOG24rG24rO$6nQ(CjOG24rO#![QSOLD,iOOQQLD,iLD,iO!%tQ,UOLD,iO&<QQSOLD,iO&<YQ$IUO7+'sO&>OQ$IUO7+'uO&?tQ,UOG26{OOQO<<Ms<<MsOOQ(CWANAUANAUO$ mQSOANAUOOQ(CWANATANATOOQO<<NO<<NOOOQQLD-TLD-TO&@UQ$IUO7+*`OOQQG27cG27cO%JOQSOG27cO!%tQ,UOG27cOOQQG27eG27eO9OQ(C[OG27eOOQQG27mG27mO&@`Q$IUOG25POOQOLD*^LD*^OOQQ!$(!T!$(!TO#![QSO!$(!TO!%tQ,UO!$(!TO&@jQ(CjOG26{OOQ(CWG26pG26pOOQQLD,}LD,}O%JOQSOLD,}OOQQLD-PLD-POOQQ!)9Eo!)9EoO#![QSO!)9EoOOQQ!$(!i!$(!iOOQQ!.K;Z!.K;ZO&B{Q$IUOG26{O!)jQUO'#DvO0uQSO'#ETO&DqQbO'#JcO!)jQUO'#DnO&DxQUO'#DzO!)jQUO'#D|O&EPQbO'#CfO&GgQbO'#CfO&GwQUO,5;SO!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO'#IfO&IzQSO,5<cO&JSQ,UO,5;^O&KgQ,UO,5;^O!)jQUO,5;rO0xQSO'#DSO0xQSO'#DSO!%tQ,UO'#FxO&JSQ,UO'#FxO!%tQ,UO'#FzO&JSQ,UO'#FzO!%tQ,UO'#GYO&JSQ,UO'#GYO!)jQUO,5:fO!)jQUO,5@_O&GwQUO1G0nO&KnQ$IUO'#CfO!)jQUO1G1zO!%tQ,UO,5=PO&JSQ,UO,5=PO!%tQ,UO,5=RO&JSQ,UO,5=RO!%tQ,UO,5<mO&JSQ,UO,5<mO&GwQUO1G1{O!)jQUO7+&uO!%tQ,UO1G2XO&JSQ,UO1G2XO!%tQ,UO1G2ZO&JSQ,UO1G2ZO&GwQUO7+'gO&GwQUO7+&YO!%tQ,UOANAaO&JSQ,UOANAaO&KxQSO'#EhO&K}QSO'#EhO&LVQSO'#FWO&L[QSO'#ErO&LaQSO'#JsO&LlQSO'#JqO&LwQSO,5;SO&L|Q,UO,5<`O&MTQSO'#GRO&MYQSO'#GRO&M_QSO,5<aO&MgQSO,5;SO&MoQ$IUO1G1ZO&MvQSO,5<mO&M{QSO,5<mO&NQQSO,5<oO&NVQSO,5<oO&N[QSO1G1{O&NaQSO1G0nO&NfQ,UO<<KuO&NmQ,UO<<KuO7^Q,UO'#FvO8tQSO'#FuO@mQSO'#EgO!)jQUO,5;oO!2dQSO'#GRO!2dQSO'#GRO!2dQSO'#GTO!2dQSO'#GTO!'^Q,UO7+(ZO!'^Q,UO7+(ZO$HyQ`O1G2oO$HyQ`O1G2oO!%tQ,UO,5=TO!%tQ,UO,5=T",stateData:"' v~O'mOS'nOSROS'oRQ~OPYOQYOV!TO^pOaxObwOikOkYOlkOmkOskOuYOwYO|WO!QkO!RkO!XXO!csO!hZO!kYO!lYO!mYO!otO!quO!tvO!x]O#p}O$QzO$UfO%`{O%b!OO%d|O%e|O%h!PO%j!QO%m!RO%n!RO%p!SO%|!UO&S!VO&U!WO&W!XO&Y!YO&]!ZO&c![O&i!]O&k!^O&m!_O&o!`O&q!aO'tSO'vTO'yUO(RVO(a[O(niO~OPYOQYOa!gOb!fOikOkYOlkOmkOskOuYOwYO|WO!QkO!RkO!X!cO!csO!hZO!kYO!lYO!mYO!otO!quO!t!eO$Q!hO$UfO't!bO'vTO'yUO(RVO(a[O(niO~O^!sOl!kO|!lO![!uO!]!rO!^!rO!x9mO!|!mO!}!mO#O!tO#P!mO#Q!mO#T!vO#U!vO'u!iO'vTO'yUO(U!jO(a!pO~O'o!wO~OPYXXYX^YXkYXyYXzYX|YX!VYX!eYX!fYX!hYX!lYX#XYX#dcX#gYX#hYX#iYX#jYX#kYX#lYX#mYX#nYX#oYX#qYX#sYX#uYX#vYX#{YX'kYX(RYX(bYX(iYX(jYX~O!a$zX~P(gO[!yO'v!{O'w!yO'x!{O~O[!|O'x!{O'y!{O'z!|O~Oq#OO!O#PO(S#PO(T#RO~OPYOQYOa!gOb!fOikOkYOlkOmkOskOuYOwYO|WO!QkO!RkO!X!cO!csO!hZO!kYO!lYO!mYO!otO!quO!t!eO$Q!hO$UfO't9rO'vTO'yUO(RVO(a[O(niO~O!U#VO!V#SO!S(XP!S(fP~P+sO!W#_O~P`OPYOQYOa!gOb!fOkYOlkOmkOskOuYOwYO|WO!QkO!RkO!X!cO!csO!hZO!kYO!lYO!mYO!otO!quO!t!eO$Q!hO$UfO'vTO'yUO(RVO(a[O(niO~Oi#iO!U#eO!x]O#b#hO#c#eO't9sO!g(cP~P._O!h#kO't#jO~O!t#oO!x]O%`#pO~O#d#qO~O!a#rO#d#qO~OP$YOX$aOk#}Oy#vOz#wO|#xO!V$^O!e$PO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O#k$OO#l$PO#m$PO#n$`O#o$PO#q$QO#s$SO#u$UO#v$VO(RVO(b$WO(i#yO(j#zO~O^(VX'k(VX'i(VX!g(VX!S(VX!X(VX%a(VX!a(VX~P1gO#X$bO#{$bOP(WXX(WXk(WXy(WXz(WX|(WX!V(WX!e(WX!h(WX!l(WX#g(WX#h(WX#i(WX#j(WX#k(WX#l(WX#m(WX#n(WX#o(WX#q(WX#s(WX#u(WX#v(WX(R(WX(b(WX(i(WX(j(WX!X(WX%a(WX~O^(WX!f(WX'k(WX'i(WX!S(WX!g(WXo(WX!a(WX~P3}O#X$bO~O$W$dO$Y$cO$a$iO~O!X$jO$UfO$d$kO$f$mO~Oi%POk$qOl$pOm$pOs%QOu%ROw%SO|$xO!X$yO!c%XO!h$uO#c%YO$Q%VO$m%TO$o%UO$r%WO't$oO'vTO'yUO'}%OO(R$rOd(OP~O!h%ZO~O!a%]O~O^%^O'k%^O~O'u!iO~P%QO't%eO~O!h%ZO't%eO'u!iO'}%OO~Ob%lO!h%ZO't%eO~O#o$PO~Oy%qO!X%nO!h%pO%b%tO't%eO'u!iO'vTO'yUO](vP~O!t#oO~O|%vO!X%wO't%eO~O|%vO!X%wO%j%{O't%eO~O't%|O~O#p}O%b!OO%d|O%e|O%h!PO%j!QO%m!RO%n!RO~Oa&VOb&UO!t&SO%`&TO%r&RO~P;fOa&YObwO!X&XO!tvO!x]O#p}O%`{O%d|O%e|O%h!PO%j!QO%m!RO%n!RO%p!SO~O_&]O#X&`O%b&ZO'u!iO~P<eO!h&aO!q&eO~O!h#kO~O!XXO~O^%^O'j&mO'k%^O~O^%^O'j&pO'k%^O~O^%^O'j&rO'k%^O~O'iYX!SYXoYX!gYX&QYX!XYX%aYX!aYX~P(gO!['PO!]&xO!^&xO'u!iO'vTO'yUO~Ol&vO|&uO!U&yO(U&tO!W(YP!W(hP~P?fOg'SO!X'QO't%eO~Ob'XO!h%ZO't%eO~Oy%qO!h%pO~Ol!kO|!lO!x9mO!|!mO!}!mO#P!mO#Q!mO'u!iO'vTO'yUO(U!jO(a!pO~O!['_O!]'^O!^'^O#O!mO#T'`O#U'`O~PAQO^%^O!a#rO!h%ZO'k%^O'}%OO(b'bO~O!l'fO#X'dO~PB`Ol!kO|!lO'vTO'yUO(U!jO(a!pO~O!XXOl(_X|(_X![(_X!](_X!^(_X!x(_X!|(_X!}(_X#O(_X#P(_X#Q(_X#T(_X#U(_X'u(_X'v(_X'y(_X(U(_X(a(_X~O!]'^O!^'^O'u!iO~PCOO'p'jO'q'jO'r'lO~O[!yO'v'nO'w!yO'x'nO~O[!|O'x'nO'y'nO'z!|O~Oq#OO!O#PO(S#PO(T'rO~O!U'tO!S&|X!S'SX!V&|X!V'SX~P+sO!V'vO!S(XX~OP$YOX$aOk#}Oy#vOz#wO|#xO!V'vO!e$PO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O#k$OO#l$PO#m$PO#n$`O#o$PO#q$QO#s$SO#u$UO#v$VO(RVO(b$WO(i#yO(j#zO~O!S(XX~PFrO!S'{O~O!S(eX!V(eX!a(eX!g(eX(b(eX~O#X(eX#d#]X!W(eX~PHxO#X'|O!S(gX!V(gX~O!V'}O!S(fX~O!S(QO~O#X$bO~PHxO!W(RO~P`Oy#vOz#wO|#xO!f#tO!h#uO(RVOP!jaX!jak!ja!V!ja!e!ja!l!ja#g!ja#h!ja#i!ja#j!ja#k!ja#l!ja#m!ja#n!ja#o!ja#q!ja#s!ja#u!ja#v!ja(b!ja(i!ja(j!ja~O^!ja'k!ja'i!ja!S!ja!g!jao!ja!X!ja%a!ja!a!ja~PJ`O!g(SO~O!a#rO#X(TO(b'bO!V(dX^(dX'k(dX~O!g(dX~PMOO|%vO!X%wO!x]O#b(YO#c(XO't%eO~O!V(ZO!g(cX~O!g(]O~O|%vO!X%wO#c(XO't%eO~OP(WXX(WXk(WXy(WXz(WX|(WX!V(WX!e(WX!f(WX!h(WX!l(WX#g(WX#h(WX#i(WX#j(WX#k(WX#l(WX#m(WX#n(WX#o(WX#q(WX#s(WX#u(WX#v(WX(R(WX(b(WX(i(WX(j(WX~O!a#rO!g(WX~PNlOy(^Oz(_O!f#tO!h#uO!x!wa|!wa~O!t!wa%`!wa!X!wa#b!wa#c!wa't!wa~P!!pO!t(cO~OPYOQYOa!gOb!fOikOkYOlkOmkOskOuYOwYO|WO!QkO!RkO!XXO!csO!hZO!kYO!lYO!mYO!otO!quO!t!eO$Q!hO$UfO't!bO'vTO'yUO(RVO(a[O(niO~Oi%POk$qOl$pOm$pOs%QOu%ROw:VO|$xO!X$yO!c;aO!h$uO#c:]O$Q%VO$m:XO$o:ZO$r%WO't(gO'vTO'yUO'}%OO(R$rO~O#d(iO~Oi%POk$qOl$pOm$pOs%QOu%ROw%SO|$xO!X$yO!c%XO!h$uO#c%YO$Q%VO$m%TO$o%UO$r%WO't(gO'vTO'yUO'}%OO(R$rO~Od([P~P!'^O!U(mO!g(]P~P%QO(U(oO(a[O~O|(qO!h#uO(U(oO(a[O~OP9lOQ9lOa;]Ob!fOikOk9lOlkOmkOskOu9lOw9lO|WO!QkO!RkO!X!cO!c9oO!hZO!k9lO!l9lO!m9lO!o9pO!q9qO!t!eO$Q!hO$UfO't)PO'vTO'yUO(RVO(a[O(n;ZO~Oz)SO!h#uO~O!V$^O^$ka'k$ka'i$ka!g$ka!S$ka!X$ka%a$ka!a$ka~O#p)WO~P!%tOy)ZO!a)YO!X$XX$T$XX$W$XX$Y$XX$a$XX~O!a)YO!X(kX$T(kX$W(kX$Y(kX$a(kX~Oy)ZO~P!-SOy)ZO!X(kX$T(kX$W(kX$Y(kX$a(kX~O!X)]O$T)aO$W)[O$Y)[O$a)bO~O!U)eO~P!)jO$W$dO$Y$cO$a)iO~Og$sXy$sX|$sX!f$sX(i$sX(j$sX~OdfXd$sXgfX!VfX#XfX~P!.xOl)kO~Oq)lO(S)mO(T)oO~Og)xOy)qO|)rO(i)tO(j)vO~Od)pO~P!0ROd)yO~Oi%POk$qOl$pOm$pOs%QOu%ROw:VO|$xO!X$yO!c;aO!h$uO#c:]O$Q%VO$m:XO$o:ZO$r%WO'vTO'yUO'}%OO(R$rO~O!U)}O't)zO!g(oP~P!0pO#d*PO~O!h*QO~O!U*VO't*SO!S(pP~P!0pOk*cO|*ZO![*aO!]*YO!^*YO!h*QO#T*bO%W*]O'u!iO(U!jO~O!W*`O~P!2vO!f#tOg(QXy(QX|(QX(i(QX(j(QX!V(QX#X(QX~Od(QX#y(QX~P!3oOg*fO#X*eOd(PX!V(PX~O!V*gOd(OX~O't%|Od(OP~O!h*nO~O't(gO~Oi*rO|%vO!U#eO!X%wO!x]O#b#hO#c#eO't%eO!g(cP~O!a#rO#d*sO~OP$YOX$aOk#}Oy#vOz#wO|#xO!e$PO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O#k$OO#l$PO#m$PO#n$`O#o$PO#q$QO#s$SO#u$UO#v$VO(RVO(b$WO(i#yO(j#zO~O^!ba!V!ba'k!ba'i!ba!S!ba!g!bao!ba!X!ba%a!ba!a!ba~P!6UOy#vOz#wO|#xO!f#tO!h#uO(RVOP!naX!nak!na!V!na!e!na!l!na#g!na#h!na#i!na#j!na#k!na#l!na#m!na#n!na#o!na#q!na#s!na#u!na#v!na(b!na(i!na(j!na~O^!na'k!na'i!na!S!na!g!nao!na!X!na%a!na!a!na~P!8oOy#vOz#wO|#xO!f#tO!h#uO(RVOP!paX!pak!pa!V!pa!e!pa!l!pa#g!pa#h!pa#i!pa#j!pa#k!pa#l!pa#m!pa#n!pa#o!pa#q!pa#s!pa#u!pa#v!pa(b!pa(i!pa(j!pa~O^!pa'k!pa'i!pa!S!pa!g!pao!pa!X!pa%a!pa!a!pa~P!;YOg*{O!X'QO%a*zO'}%OO~O!a*}O^'|X!X'|X'k'|X!V'|X~O^%^O!XXO'k%^O~O!h%ZO'}%OO~O!h%ZO't%eO'}%OO~O!a#rO#d(iO~O%b+ZO't+VO'vTO'yUO!W(wP~O!V+[O](vX~O(U(oO~OX+`O~O]+aO~O!X%nO't%eO'u!iO](vP~O|%vO!U+eO!V'}O!X%wO't%eO!S(fP~Ol&|O|+gO!U+fO'vTO'yUO(U(oO~O!W(hP~P!@xO!V+hO^(sX'k(sX~O#X+lO'}%OO~Og+oO!X$yO'}%OO~O!X+qO~Oy+sO!XXO~O!t+xO~Ob+}O~O't#jO!W(uP~Ob%lO~O%b!OO't%|O~P<eOX,TO],SO~OPYOQYOaxObwOikOkYOlkOmkOskOuYOwYO|WO!QkO!RkO!csO!hZO!kYO!lYO!mYO!otO!quO!tvO!x]O$UfO%`{O'vTO'yUO(RVO(a[O(niO~O!X!cO$Q!hO't!bO~P!C]O],SO^%^O'k%^O~O^,XO#p,ZO%d,ZO%e,ZO~P%QO!h&aO~O&S,`O~O!X,bO~O&e,dO&g,eOP&baQ&baV&ba^&baa&bab&bai&bak&bal&bam&bas&bau&baw&ba|&ba!Q&ba!R&ba!X&ba!c&ba!h&ba!k&ba!l&ba!m&ba!o&ba!q&ba!t&ba!x&ba#p&ba$Q&ba$U&ba%`&ba%b&ba%d&ba%e&ba%h&ba%j&ba%m&ba%n&ba%p&ba%|&ba&S&ba&U&ba&W&ba&Y&ba&]&ba&c&ba&i&ba&k&ba&m&ba&o&ba&q&ba'i&ba't&ba'v&ba'y&ba(R&ba(a&ba(n&ba!W&ba&Z&ba_&ba&`&ba~O't,jO~O!V{X!V!_X!W{X!W!_X!a{X!a!_X!h!_X#X{X'}!_X~O!a,oO#X,nO!V#aX!V(ZX!W#aX!W(ZX!a(ZX!h(ZX'}(ZX~O!a,qO!h%ZO'}%OO!V!ZX!W!ZX~Ol!kO|!lO'vTO'yUO(U!jO~OP9lOQ9lOa;]Ob!fOikOk9lOlkOmkOskOu9lOw9lO|WO!QkO!RkO!X!cO!c9oO!hZO!k9lO!l9lO!m9lO!o9pO!q9qO!t!eO$Q!hO$UfO'vTO'yUO(RVO(a[O(n;ZO~O't:bO~P!LrO!V,uO!W(YX~O!W,wO~O!a,oO#X,nO!V#aX!W#aX~O!V,xO!W(hX~O!W,zO~O!],{O!^,{O'u!iO~P!LaO!W-OO~P'TOg-RO!X'QO~O!S-WO~Ol!wa![!wa!]!wa!^!wa!|!wa!}!wa#O!wa#P!wa#Q!wa#T!wa#U!wa'u!wa'v!wa'y!wa(U!wa(a!wa~P!!pO!l-]O#X-ZO~PB`O!]-_O!^-_O'u!iO~PCOO^%^O#X-ZO'k%^O~O^%^O!a#rO#X-ZO'k%^O~O^%^O!a#rO!l-]O#X-ZO'k%^O(b'bO~O'p'jO'q'jO'r-dO~Oo-eO~O!S&|a!V&|a~P!6UO!U-iO!S&|X!V&|X~P%QO!V'vO!S(Xa~O!S(Xa~PFrO!V'}O!S(fa~O|%vO!U-mO!X%wO't%eO!S'SX!V'SX~O#X-oO!V(da!g(da^(da'k(da~O!a#rO~P#&xO!V(ZO!g(ca~O|%vO!X%wO#c-sO't%eO~Oi-xO|%vO!U-uO!X%wO!x]O#b-wO#c-uO't%eO!V'VX!g'VX~Oz-|O!h#uO~Og.PO!X'QO%a.OO'}%OO~O^#[i!V#[i'k#[i'i#[i!S#[i!g#[io#[i!X#[i%a#[i!a#[i~P!6UOg;gOy)qO|)rO(i)tO(j)vO~O#d#Wa^#Wa#X#Wa'k#Wa!V#Wa!g#Wa!X#Wa!S#Wa~P#)tO#d(QXP(QXX(QX^(QXk(QXz(QX!e(QX!h(QX!l(QX#g(QX#h(QX#i(QX#j(QX#k(QX#l(QX#m(QX#n(QX#o(QX#q(QX#s(QX#u(QX#v(QX'k(QX(R(QX(b(QX!g(QX!S(QX'i(QXo(QX!X(QX%a(QX!a(QX~P!3oO!V.YOd([X~P!0ROd.[O~O!V.]O!g(]X~P!6UO!g.`O~O!S.bO~OP$YOy#vOz#wO|#xO!f#tO!h#uO!l$YO(RVOX#fi^#fik#fi!V#fi!e#fi#h#fi#i#fi#j#fi#k#fi#l#fi#m#fi#n#fi#o#fi#q#fi#s#fi#u#fi#v#fi'k#fi(b#fi(i#fi(j#fi'i#fi!S#fi!g#fio#fi!X#fi%a#fi!a#fi~O#g#fi~P#-pO#g#{O~P#-pOP$YOy#vOz#wO|#xO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O(RVOX#fi^#fi!V#fi!e#fi#k#fi#l#fi#m#fi#n#fi#o#fi#q#fi#s#fi#u#fi#v#fi'k#fi(b#fi(i#fi(j#fi'i#fi!S#fi!g#fio#fi!X#fi%a#fi!a#fi~Ok#fi~P#0bOk#}O~P#0bOP$YOk#}Oy#vOz#wO|#xO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O#k$OO(RVO^#fi!V#fi#q#fi#s#fi#u#fi#v#fi'k#fi(b#fi(i#fi(j#fi'i#fi!S#fi!g#fio#fi!X#fi%a#fi!a#fi~OX#fi!e#fi#l#fi#m#fi#n#fi#o#fi~P#3SOX$aO!e$PO#l$PO#m$PO#n$`O#o$PO~P#3SOP$YOX$aOk#}Oy#vOz#wO|#xO!e$PO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O#k$OO#l$PO#m$PO#n$`O#o$PO#q$QO(RVO^#fi!V#fi#s#fi#u#fi#v#fi'k#fi(b#fi(j#fi'i#fi!S#fi!g#fio#fi!X#fi%a#fi!a#fi~O(i#fi~P#6TO(i#yO~P#6TOP$YOX$aOk#}Oy#vOz#wO|#xO!e$PO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O#k$OO#l$PO#m$PO#n$`O#o$PO#q$QO#s$SO(RVO(i#yO^#fi!V#fi#u#fi#v#fi'k#fi(b#fi'i#fi!S#fi!g#fio#fi!X#fi%a#fi!a#fi~O(j#fi~P#8uO(j#zO~P#8uOP$YOX$aOk#}Oy#vOz#wO|#xO!e$PO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O#k$OO#l$PO#m$PO#n$`O#o$PO#q$QO#s$SO#u$UO(RVO(i#yO(j#zO~O^#fi!V#fi#v#fi'k#fi(b#fi'i#fi!S#fi!g#fio#fi!X#fi%a#fi!a#fi~P#;gOPYXXYXkYXyYXzYX|YX!eYX!fYX!hYX!lYX#XYX#dcX#gYX#hYX#iYX#jYX#kYX#lYX#mYX#nYX#oYX#qYX#sYX#uYX#vYX#{YX(RYX(bYX(iYX(jYX!VYX!WYX~O#yYX~P#>QOP$YOX:TOk9wOy#vOz#wO|#xO!e9yO!f#tO!h#uO!l$YO#g9uO#h9vO#i9vO#j9vO#k9xO#l9yO#m9yO#n:SO#o9yO#q9zO#s9|O#u:OO#v:PO(RVO(b$WO(i#yO(j#zO~O#y.dO~P#@_O#X:UO#{:UO#y(WX!W(WX~PNlO^'Ya!V'Ya'k'Ya'i'Ya!g'Ya!S'Yao'Ya!X'Ya%a'Ya!a'Ya~P!6UOP#fiX#fi^#fik#fiz#fi!V#fi!e#fi!f#fi!h#fi!l#fi#g#fi#h#fi#i#fi#j#fi#k#fi#l#fi#m#fi#n#fi#o#fi#q#fi#s#fi#u#fi#v#fi'k#fi(R#fi(b#fi'i#fi!S#fi!g#fio#fi!X#fi%a#fi!a#fi~P#)tO^#zi!V#zi'k#zi'i#zi!S#zi!g#zio#zi!X#zi%a#zi!a#zi~P!6UO$W.iO$Y.iO~O$W.jO$Y.jO~O!a)YO#X.kO!X$^X$T$^X$W$^X$Y$^X$a$^X~O!U.lO~O!X)]O$T.nO$W)[O$Y)[O$a.oO~O!V:QO!W(VX~P#@_O!W.pO~O!a)YO$a(kX~O$a.rO~Oq)lO(S)mO(T.uO~Ol.xO!S.yO'vTO'yUO~O!VcX!acX!gcX!g$sX(bcX~P!.xO!g/PO~P#)tO!V/QO!a#rO(b'bO!g(oX~O!g/VO~O!U)}O't%eO!g(oP~O#d/XO~O!S$sX!V$sX!a$zX~P!.xO!V/YO!S(pX~P#)tO!a/[O~O!S/^O~Ok/bO!a#rO!h%ZO'}%OO(b'bO~O't/dO~O!a*}O~O^%^O!V/hO'k%^O~O!W/jO~P!2vO!]/kO!^/kO'u!iO(U!jO~O|/mO(U!jO~O#T/nO~O't%|Od'_X!V'_X~O!V*gOd(Oa~Od/sO~Oy/tOz/tO|/uOgva(iva(jva!Vva#Xva~Odva#yva~P#L|Oy)qO|)rOg$la(i$la(j$la!V$la#X$la~Od$la#y$la~P#MrOy)qO|)rOg$na(i$na(j$na!V$na#X$na~Od$na#y$na~P#NeO#d/wO~Od$|a!V$|a#X$|a#y$|a~P!0RO!a#rO~O#d/zO~Oy#vOz#wO|#xO!f#tO!h#uO(RVOP!niX!nik!ni!V!ni!e!ni!l!ni#g!ni#h!ni#i!ni#j!ni#k!ni#l!ni#m!ni#n!ni#o!ni#q!ni#s!ni#u!ni#v!ni(b!ni(i!ni(j!ni~O^!ni'k!ni'i!ni!S!ni!g!nio!ni!X!ni%a!ni!a!ni~P$ wOg.PO!X'QO%a.OO~Oi0RO't0QO~P!0sO!a*}O^'|a!X'|a'k'|a!V'|a~O#d0XO~OXYX!VcX!WcX~O!V0YO!W(wX~O!W0[O~OX0]O~O't+VO'vTO'yUO~O!X%nO't%eO]'gX!V'gX~O!V+[O](va~O!g0bO~P!6UOX0eO~O]0fO~O!V+hO^(sa'k(sa~O#X0lO~Og0oO!X$yO~O(U(oO!W(tP~Og0xO!X0uO%a0wO'}%OO~OX1SO!V1QO!W(uX~O!W1TO~O]1VO^%^O'k%^O~O't#jO'vTO'yUO~O#X$bO#{$bOP(WXX(WXk(WXy(WXz(WX|(WX!V(WX!e(WX!h(WX!l(WX#g(WX#h(WX#i(WX#j(WX#k(WX#l(WX#m(WX#n(WX#q(WX#s(WX#u(WX#v(WX(R(WX(b(WX(i(WX(j(WX~O#o1YO&Q1ZO^(WX!f(WX~P$(xO#X$bO#o1YO&Q1ZO~O^1[O~P%QO^1^O~O&Z1bOP&XiQ&XiV&Xi^&Xia&Xib&Xii&Xik&Xil&Xim&Xis&Xiu&Xiw&Xi|&Xi!Q&Xi!R&Xi!X&Xi!c&Xi!h&Xi!k&Xi!l&Xi!m&Xi!o&Xi!q&Xi!t&Xi!x&Xi#p&Xi$Q&Xi$U&Xi%`&Xi%b&Xi%d&Xi%e&Xi%h&Xi%j&Xi%m&Xi%n&Xi%p&Xi%|&Xi&S&Xi&U&Xi&W&Xi&Y&Xi&]&Xi&c&Xi&i&Xi&k&Xi&m&Xi&o&Xi&q&Xi'i&Xi't&Xi'v&Xi'y&Xi(R&Xi(a&Xi(n&Xi!W&Xi_&Xi&`&Xi~O_1hO!W1fO&`1gO~P`O!XXO!h1jO~O&g,eOP&biQ&biV&bi^&bia&bib&bii&bik&bil&bim&bis&biu&biw&bi|&bi!Q&bi!R&bi!X&bi!c&bi!h&bi!k&bi!l&bi!m&bi!o&bi!q&bi!t&bi!x&bi#p&bi$Q&bi$U&bi%`&bi%b&bi%d&bi%e&bi%h&bi%j&bi%m&bi%n&bi%p&bi%|&bi&S&bi&U&bi&W&bi&Y&bi&]&bi&c&bi&i&bi&k&bi&m&bi&o&bi&q&bi'i&bi't&bi'v&bi'y&bi(R&bi(a&bi(n&bi!W&bi&Z&bi_&bi&`&bi~O!S1pO~O!V!Za!W!Za~P#@_Ol!kO|!lO!U1vO(U!jO!V&}X!W&}X~P?fO!V,uO!W(Ya~O!V'TX!W'TX~P!@xO!V,xO!W(ha~O!W1}O~P'TO^%^O#X2WO'k%^O~O^%^O!a#rO#X2WO'k%^O~O^%^O!a#rO!l2[O#X2WO'k%^O(b'bO~O^%^O'k%^O~P!6UO!V$^Oo$ka~O!S&|i!V&|i~P!6UO!V'vO!S(Xi~O!V'}O!S(fi~O!S(gi!V(gi~P!6UO!V(di!g(di^(di'k(di~P!6UO#X2^O!V(di!g(di^(di'k(di~O!V(ZO!g(ci~O|%vO!X%wO!x]O#b2cO#c2bO't%eO~O|%vO!X%wO#c2bO't%eO~Og2jO!X'QO%a2iO~Og2jO!X'QO%a2iO'}%OO~O#dvaPvaXva^vakva!eva!fva!hva!lva#gva#hva#iva#jva#kva#lva#mva#nva#ova#qva#sva#uva#vva'kva(Rva(bva!gva!Sva'ivaova!Xva%ava!ava~P#L|O#d$laP$laX$la^$lak$laz$la!e$la!f$la!h$la!l$la#g$la#h$la#i$la#j$la#k$la#l$la#m$la#n$la#o$la#q$la#s$la#u$la#v$la'k$la(R$la(b$la!g$la!S$la'i$lao$la!X$la%a$la!a$la~P#MrO#d$naP$naX$na^$nak$naz$na!e$na!f$na!h$na!l$na#g$na#h$na#i$na#j$na#k$na#l$na#m$na#n$na#o$na#q$na#s$na#u$na#v$na'k$na(R$na(b$na!g$na!S$na'i$nao$na!X$na%a$na!a$na~P#NeO#d$|aP$|aX$|a^$|ak$|az$|a!V$|a!e$|a!f$|a!h$|a!l$|a#g$|a#h$|a#i$|a#j$|a#k$|a#l$|a#m$|a#n$|a#o$|a#q$|a#s$|a#u$|a#v$|a'k$|a(R$|a(b$|a!g$|a!S$|a'i$|a#X$|ao$|a!X$|a%a$|a!a$|a~P#)tO^#[q!V#[q'k#[q'i#[q!S#[q!g#[qo#[q!X#[q%a#[q!a#[q~P!6UOd'OX!V'OX~P!'^O!V.YOd([a~O!U2rO!V'PX!g'PX~P%QO!V.]O!g(]a~O!V.]O!g(]a~P!6UO!S2uO~O#y!ja!W!ja~PJ`O#y!ba!V!ba!W!ba~P#@_O#y!na!W!na~P!8oO#y!pa!W!pa~P!;YO!X3XO$UfO$_3YO~O!W3^O~Oo3_O~P#)tO^$hq!V$hq'k$hq'i$hq!S$hq!g$hqo$hq!X$hq%a$hq!a$hq~P!6UO!S3`O~Ol.xO'vTO'yUO~Oy)qO|)rO(j)vOg%Xi(i%Xi!V%Xi#X%Xi~Od%Xi#y%Xi~P$GeOy)qO|)rOg%Zi(i%Zi(j%Zi!V%Zi#X%Zi~Od%Zi#y%Zi~P$HWO(b$WO~P#)tO!U3cO't%eO!V'ZX!g'ZX~O!V/QO!g(oa~O!V/QO!a#rO!g(oa~O!V/QO!a#rO(b'bO!g(oa~Od$ui!V$ui#X$ui#y$ui~P!0RO!U3kO't*SO!S']X!V']X~P!0pO!V/YO!S(pa~O!V/YO!S(pa~P#)tO!a#rO#o3sO~Ok3vO!a#rO(b'bO~Od(Pi!V(Pi~P!0RO#X3yOd(Pi!V(Pi~P!0RO!g3|O~O^$iq!V$iq'k$iq'i$iq!S$iq!g$iqo$iq!X$iq%a$iq!a$iq~P!6UO!V4QO!X(qX~P#)tO!f#tO~P3}O^$sX!X$sX%UYX'k$sX!V$sX~P!.xO%U4SO^hXghXyhX|hX!XhX'khX(ihX(jhX!VhX~O%U4SO~O%b4ZO't+VO'vTO'yUO!V'fX!W'fX~O!V0YO!W(wa~OX4_O~O]4`O~O!S4dO~O^%^O'k%^O~P#)tO!X$yO~P#)tO!V4iO#X4kO!W(tX~O!W4lO~Ol!kO|4mO![!uO!]!rO!^!rO!x9mO!|!mO!}!mO#O!mO#P!mO#Q!mO#T4rO#U!vO'u!iO'vTO'yUO(U!jO(a!pO~O!W4qO~P%!VOg4wO!X0uO%a4vO~Og4wO!X0uO%a4vO'}%OO~O't#jO!V'eX!W'eX~O!V1QO!W(ua~O'vTO'yUO(U5QO~O]5UO~O!g5XO~P%QO^5ZO~O^5ZO~P%QO#o5]O&Q5^O~PMOO_1hO!W5bO&`1gO~P`O!a5dO~O!a5fO!V(Zi!W(Zi!a(Zi!h(Zi'}(Zi~O!V#ai!W#ai~P#@_O#X5gO!V#ai!W#ai~O!V!Zi!W!Zi~P#@_O^%^O#X5pO'k%^O~O^%^O!a#rO#X5pO'k%^O~O!V(dq!g(dq^(dq'k(dq~P!6UO!V(ZO!g(cq~O|%vO!X%wO#c5wO't%eO~O!X'QO%a5zO~Og5}O!X'QO%a5zO~O#d%XiP%XiX%Xi^%Xik%Xiz%Xi!e%Xi!f%Xi!h%Xi!l%Xi#g%Xi#h%Xi#i%Xi#j%Xi#k%Xi#l%Xi#m%Xi#n%Xi#o%Xi#q%Xi#s%Xi#u%Xi#v%Xi'k%Xi(R%Xi(b%Xi!g%Xi!S%Xi'i%Xio%Xi!X%Xi%a%Xi!a%Xi~P$GeO#d%ZiP%ZiX%Zi^%Zik%Ziz%Zi!e%Zi!f%Zi!h%Zi!l%Zi#g%Zi#h%Zi#i%Zi#j%Zi#k%Zi#l%Zi#m%Zi#n%Zi#o%Zi#q%Zi#s%Zi#u%Zi#v%Zi'k%Zi(R%Zi(b%Zi!g%Zi!S%Zi'i%Zio%Zi!X%Zi%a%Zi!a%Zi~P$HWO#d$uiP$uiX$ui^$uik$uiz$ui!V$ui!e$ui!f$ui!h$ui!l$ui#g$ui#h$ui#i$ui#j$ui#k$ui#l$ui#m$ui#n$ui#o$ui#q$ui#s$ui#u$ui#v$ui'k$ui(R$ui(b$ui!g$ui!S$ui'i$ui#X$uio$ui!X$ui%a$ui!a$ui~P#)tOd'Oa!V'Oa~P!0RO!V'Pa!g'Pa~P!6UO!V.]O!g(]i~O#y#[i!V#[i!W#[i~P#@_OP$YOy#vOz#wO|#xO!f#tO!h#uO!l$YO(RVOX#fik#fi!e#fi#h#fi#i#fi#j#fi#k#fi#l#fi#m#fi#n#fi#o#fi#q#fi#s#fi#u#fi#v#fi#y#fi(b#fi(i#fi(j#fi!V#fi!W#fi~O#g#fi~P%0fO#g9uO~P%0fOP$YOy#vOz#wO|#xO!f#tO!h#uO!l$YO#g9uO#h9vO#i9vO#j9vO(RVOX#fi!e#fi#k#fi#l#fi#m#fi#n#fi#o#fi#q#fi#s#fi#u#fi#v#fi#y#fi(b#fi(i#fi(j#fi!V#fi!W#fi~Ok#fi~P%2qOk9wO~P%2qOP$YOk9wOy#vOz#wO|#xO!f#tO!h#uO!l$YO#g9uO#h9vO#i9vO#j9vO#k9xO(RVO#q#fi#s#fi#u#fi#v#fi#y#fi(b#fi(i#fi(j#fi!V#fi!W#fi~OX#fi!e#fi#l#fi#m#fi#n#fi#o#fi~P%4|OX:TO!e9yO#l9yO#m9yO#n:SO#o9yO~P%4|OP$YOX:TOk9wOy#vOz#wO|#xO!e9yO!f#tO!h#uO!l$YO#g9uO#h9vO#i9vO#j9vO#k9xO#l9yO#m9yO#n:SO#o9yO#q9zO(RVO#s#fi#u#fi#v#fi#y#fi(b#fi(j#fi!V#fi!W#fi~O(i#fi~P%7hO(i#yO~P%7hOP$YOX:TOk9wOy#vOz#wO|#xO!e9yO!f#tO!h#uO!l$YO#g9uO#h9vO#i9vO#j9vO#k9xO#l9yO#m9yO#n:SO#o9yO#q9zO#s9|O(RVO(i#yO#u#fi#v#fi#y#fi(b#fi!V#fi!W#fi~O(j#fi~P%9sO(j#zO~P%9sOP$YOX:TOk9wOy#vOz#wO|#xO!e9yO!f#tO!h#uO!l$YO#g9uO#h9vO#i9vO#j9vO#k9xO#l9yO#m9yO#n:SO#o9yO#q9zO#s9|O#u:OO(RVO(i#yO(j#zO~O#v#fi#y#fi(b#fi!V#fi!W#fi~P%<OO^#wy!V#wy'k#wy'i#wy!S#wy!g#wyo#wy!X#wy%a#wy!a#wy~P!6UOg;hOy)qO|)rO(i)tO(j)vO~OP#fiX#fik#fiz#fi!e#fi!f#fi!h#fi!l#fi#g#fi#h#fi#i#fi#j#fi#k#fi#l#fi#m#fi#n#fi#o#fi#q#fi#s#fi#u#fi#v#fi#y#fi(R#fi(b#fi!V#fi!W#fi~P%>vO!f#tOP(QXX(QXg(QXk(QXy(QXz(QX|(QX!e(QX!h(QX!l(QX#g(QX#h(QX#i(QX#j(QX#k(QX#l(QX#m(QX#n(QX#o(QX#q(QX#s(QX#u(QX#v(QX#y(QX(R(QX(b(QX(i(QX(j(QX!V(QX!W(QX~O#y#zi!V#zi!W#zi~P#@_O#y!ni!W!ni~P$ wO!W6ZO~O!V'Ya!W'Ya~P#@_O!a#rO(b'bO!V'Za!g'Za~O!V/QO!g(oi~O!V/QO!a#rO!g(oi~Od$uq!V$uq#X$uq#y$uq~P!0RO!S']a!V']a~P#)tO!a6bO~O!V/YO!S(pi~P#)tO!V/YO!S(pi~O!S6fO~O!a#rO#o6kO~Ok6lO!a#rO(b'bO~O!S6nO~Od$wq!V$wq#X$wq#y$wq~P!0RO^$iy!V$iy'k$iy'i$iy!S$iy!g$iyo$iy!X$iy%a$iy!a$iy~P!6UO!V4QO!X(qa~O^#[y!V#[y'k#[y'i#[y!S#[y!g#[yo#[y!X#[y%a#[y!a#[y~P!6UOX6sO~O!V0YO!W(wi~O]6yO~O!a5fO~O(U(oO!V'bX!W'bX~O!V4iO!W(ta~OikO't7QO~P._O!W7TO~P%!VOl!kO|7UO'vTO'yUO(U!jO(a!pO~O!X0uO~O!X0uO%a7WO~Og7ZO!X0uO%a7WO~OX7`O!V'ea!W'ea~O!V1QO!W(ui~O!g7dO~O!g7eO~O!g7fO~O!g7fO~P%QO^7hO~O!a7kO~O!g7lO~O!V(gi!W(gi~P#@_O^%^O#X7tO'k%^O~O!V(dy!g(dy^(dy'k(dy~P!6UO!V(ZO!g(cy~O!X'QO%a7wO~O#d$uqP$uqX$uq^$uqk$uqz$uq!V$uq!e$uq!f$uq!h$uq!l$uq#g$uq#h$uq#i$uq#j$uq#k$uq#l$uq#m$uq#n$uq#o$uq#q$uq#s$uq#u$uq#v$uq'k$uq(R$uq(b$uq!g$uq!S$uq'i$uq#X$uqo$uq!X$uq%a$uq!a$uq~P#)tO#d$wqP$wqX$wq^$wqk$wqz$wq!V$wq!e$wq!f$wq!h$wq!l$wq#g$wq#h$wq#i$wq#j$wq#k$wq#l$wq#m$wq#n$wq#o$wq#q$wq#s$wq#u$wq#v$wq'k$wq(R$wq(b$wq!g$wq!S$wq'i$wq#X$wqo$wq!X$wq%a$wq!a$wq~P#)tO!V'Pi!g'Pi~P!6UO#y#[q!V#[q!W#[q~P#@_Oy/tOz/tO|/uOPvaXvagvakva!eva!fva!hva!lva#gva#hva#iva#jva#kva#lva#mva#nva#ova#qva#sva#uva#vva#yva(Rva(bva(iva(jva!Vva!Wva~Oy)qO|)rOP$laX$lag$lak$laz$la!e$la!f$la!h$la!l$la#g$la#h$la#i$la#j$la#k$la#l$la#m$la#n$la#o$la#q$la#s$la#u$la#v$la#y$la(R$la(b$la(i$la(j$la!V$la!W$la~Oy)qO|)rOP$naX$nag$nak$naz$na!e$na!f$na!h$na!l$na#g$na#h$na#i$na#j$na#k$na#l$na#m$na#n$na#o$na#q$na#s$na#u$na#v$na#y$na(R$na(b$na(i$na(j$na!V$na!W$na~OP$|aX$|ak$|az$|a!e$|a!f$|a!h$|a!l$|a#g$|a#h$|a#i$|a#j$|a#k$|a#l$|a#m$|a#n$|a#o$|a#q$|a#s$|a#u$|a#v$|a#y$|a(R$|a(b$|a!V$|a!W$|a~P%>vO#y$hq!V$hq!W$hq~P#@_O#y$iq!V$iq!W$iq~P#@_O!W8RO~O#y8SO~P!0RO!a#rO!V'Zi!g'Zi~O!a#rO(b'bO!V'Zi!g'Zi~O!V/QO!g(oq~O!S']i!V']i~P#)tO!V/YO!S(pq~O!S8YO~P#)tO!S8YO~Od(Py!V(Py~P!0RO!V'`a!X'`a~P#)tO^%Tq!X%Tq'k%Tq!V%Tq~P#)tOX8_O~O!V0YO!W(wq~O#X8cO!V'ba!W'ba~O!V4iO!W(ti~P#@_OPYXXYXkYXyYXzYX|YX!SYX!VYX!eYX!fYX!hYX!lYX#XYX#dcX#gYX#hYX#iYX#jYX#kYX#lYX#mYX#nYX#oYX#qYX#sYX#uYX#vYX#{YX(RYX(bYX(iYX(jYX~O!a%RX#o%RX~P&/vO!X0uO%a8gO~O'vTO'yUO(U8lO~O!V1QO!W(uq~O!g8oO~O!g8oO~P%QO!g8qO~O!g8rO~O#X8tO!V#ay!W#ay~O!V#ay!W#ay~P#@_O!X'QO%a8yO~O#y#wy!V#wy!W#wy~P#@_OP$uiX$uik$uiz$ui!e$ui!f$ui!h$ui!l$ui#g$ui#h$ui#i$ui#j$ui#k$ui#l$ui#m$ui#n$ui#o$ui#q$ui#s$ui#u$ui#v$ui#y$ui(R$ui(b$ui!V$ui!W$ui~P%>vOy)qO|)rO(j)vOP%XiX%Xig%Xik%Xiz%Xi!e%Xi!f%Xi!h%Xi!l%Xi#g%Xi#h%Xi#i%Xi#j%Xi#k%Xi#l%Xi#m%Xi#n%Xi#o%Xi#q%Xi#s%Xi#u%Xi#v%Xi#y%Xi(R%Xi(b%Xi(i%Xi!V%Xi!W%Xi~Oy)qO|)rOP%ZiX%Zig%Zik%Ziz%Zi!e%Zi!f%Zi!h%Zi!l%Zi#g%Zi#h%Zi#i%Zi#j%Zi#k%Zi#l%Zi#m%Zi#n%Zi#o%Zi#q%Zi#s%Zi#u%Zi#v%Zi#y%Zi(R%Zi(b%Zi(i%Zi(j%Zi!V%Zi!W%Zi~O#y$iy!V$iy!W$iy~P#@_O#y#[y!V#[y!W#[y~P#@_O!a#rO!V'Zq!g'Zq~O!V/QO!g(oy~O!S']q!V']q~P#)tO!S9QO~P#)tO!V0YO!W(wy~O!V4iO!W(tq~O!X0uO%a9XO~O!g9[O~O!X'QO%a9aO~OP$uqX$uqk$uqz$uq!e$uq!f$uq!h$uq!l$uq#g$uq#h$uq#i$uq#j$uq#k$uq#l$uq#m$uq#n$uq#o$uq#q$uq#s$uq#u$uq#v$uq#y$uq(R$uq(b$uq!V$uq!W$uq~P%>vOP$wqX$wqk$wqz$wq!e$wq!f$wq!h$wq!l$wq#g$wq#h$wq#i$wq#j$wq#k$wq#l$wq#m$wq#n$wq#o$wq#q$wq#s$wq#u$wq#v$wq#y$wq(R$wq(b$wq!V$wq!W$wq~P%>vOd%]!Z!V%]!Z#X%]!Z#y%]!Z~P!0RO!V'bq!W'bq~P#@_O!V#a!Z!W#a!Z~P#@_O#d%]!ZP%]!ZX%]!Z^%]!Zk%]!Zz%]!Z!V%]!Z!e%]!Z!f%]!Z!h%]!Z!l%]!Z#g%]!Z#h%]!Z#i%]!Z#j%]!Z#k%]!Z#l%]!Z#m%]!Z#n%]!Z#o%]!Z#q%]!Z#s%]!Z#u%]!Z#v%]!Z'k%]!Z(R%]!Z(b%]!Z!g%]!Z!S%]!Z'i%]!Z#X%]!Zo%]!Z!X%]!Z%a%]!Z!a%]!Z~P#)tOP%]!ZX%]!Zk%]!Zz%]!Z!e%]!Z!f%]!Z!h%]!Z!l%]!Z#g%]!Z#h%]!Z#i%]!Z#j%]!Z#k%]!Z#l%]!Z#m%]!Z#n%]!Z#o%]!Z#q%]!Z#s%]!Z#u%]!Z#v%]!Z#y%]!Z(R%]!Z(b%]!Z!V%]!Z!W%]!Z~P%>vOo(VX~P1gO'u!iO~P!)jO!ScX!VcX#XcX~P&/vOPYXXYXkYXyYXzYX|YX!VYX!VcX!eYX!fYX!hYX!lYX#XYX#XcX#dcX#gYX#hYX#iYX#jYX#kYX#lYX#mYX#nYX#oYX#qYX#sYX#uYX#vYX#{YX(RYX(bYX(iYX(jYX~O!acX!gYX!gcX(bcX~P&E^OP9lOQ9lOa;]Ob!fOikOk9lOlkOmkOskOu9lOw9lO|WO!QkO!RkO!XXO!c9oO!hZO!k9lO!l9lO!m9lO!o9pO!q9qO!t!eO$Q!hO$UfO't)PO'vTO'yUO(RVO(a[O(n;ZO~O!V:QO!W$ka~Oi%POk$qOl$pOm$pOs%QOu%ROw:WO|$xO!X$yO!c;bO!h$uO#c:^O$Q%VO$m:YO$o:[O$r%WO't(gO'vTO'yUO'}%OO(R$rO~O#p)WO~P&JSO!WYX!WcX~P&E^O#d9tO~O!a#rO#d9tO~O#X:UO~O#o9yO~O#X:`O!V(gX!W(gX~O#X:UO!V(eX!W(eX~O#d:aO~Od:cO~P!0RO#d:hO~O#d:iO~O!a#rO#d:jO~O!a#rO#d:aO~O#y:kO~P#@_O#d:lO~O#d:mO~O#d:nO~O#d:oO~O#d:pO~O#d:qO~O#y:rO~P!0RO#y:sO~P!0RO$U~!f!|!}#P#Q#T#b#c#n(n$m$o$r%U%`%a%b%h%j%m%n%p%r~'oR$U(n#h!R'm'u#il#g#jky'n(U'n't$W$Y$W~",goto:"$%Z({PPPP(|P)PP)aP*p.rPPPP5SPP5iP;d>iP>|P>|PPP>|P@lP>|P>|P>|P@pPP@uPA`PFUPPPFYPPPPFYIXPPPI_JYPFYPLgPPPPNuFYPPPFYPFYP!#TFYP!&g!'i!'rP!(e!(i!(ePPPPP!+r!'iPP!,`!-YP!/|FYFY!0R!3Z!7n!7n!;cPPP!;jFYPPPPPPPPPPP!>uP!@WPPFY!AePFYPFYFYFYFYPFY!BwPP!E}P!IPP!IT!I_!Ic!IcP!EzP!Ig!IgP!LiP!LmFYFY!Ls# t>|P>|P>|>|P##O>|>|#$x>|#'V>|#(y>|>|#)g#+c#+c#+g#+o#+c#+wP#+cP>|#,a>|#-i>|>|5SPPP#.tPP#/^#/^P#/^P#/s#/^PP#/yP#/pP#/p#0]#/p#0w#0}5P)P#1Q)PP#1X#1X#1XP)PP)PP)PP)PPP)PP#1_#1bP#1b)PP#1fP#1iP)PP)PP)PP)PP)PP)P)PPP#1o#1u#2P#2V#2]#2c#2i#2w#2}#3T#3_#3e#3o#4O#4U#4u#5X#5_#5e#5s#6Y#7j#7x#8O#8U#8[#8b#8l#8r#8x#9S#9f#9lPPPPPPPPPP#9rPPPPPPP#:f#=mP#>|#?T#?]PPPP#Cg#F]#Lr#Lu#Lx#Mq#Mt#Mw#NO#NWPP#N^#Nb$ Z$!Z$!_$!sPP$!w$!}$#RP$#U$#Y$#]$$R$$i$$n$$q$$t$$z$$}$%R$%VR!xRmpOXr!X#`%]&d&f&g&i,],b1b1eY!rQ'Q,}0u4pQ%ctQ%kwQ%rzQ&[!TS&x!c,uQ'W!fS'^!o!uS*Y$y*_Q+T%lQ+b%tQ+|&UQ,{'PQ-V'XQ-_'_Q/k*aQ1P+}R:_9p$zdOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$^$b%]%c%p&]&`&d&f&g&i&m&u'S'd't'v'|(T(i(m(q)p*s+g,X,],b-R-Z-i-o.].d/u/z0X0x1Y1Z1[1^1b1e1g2W2^2r4m4w5Z5]5^5p7U7Z7h7tS#m]9m!r)R$X$j&y)e,n,q.l1v3X4k5g8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^Q*j%SQ+Y%nQ,O&XQ,V&aQ.S:VQ0O*{Q0S*}Q0_+ZQ1X,TQ2f.PQ4Y0YQ5O1QQ5|2jQ6S:WQ6u4ZR7z5}&xkOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j%]%c%p&]&`&a&d&f&g&i&m&u&y'S'd't'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^t!kQ!o!r!u!v&x'P'Q'^'_'`,u,{,}-_0u4p4r$Y$pi#r#t$`$a$u$x%T%U%Y)l)u)w)x*P*V*e*f*z*}+l+o.O.Y/X/Y/[/w0l0o0w2i3a3k3s3y4Q4S4v5z6b6k7W7w8S8g8y9X9a:S:T:X:Y:Z:[:]:^:d:e:f:g:h:i:l:m:n:o:r:s;Z;c;d;g;hQ%uzQ&v!cS&|%w,xQ+Y%nS.x)r.zQ/v*nQ0_+ZQ0d+aQ1W,SQ1X,TQ4Y0YQ4c0fQ5R1SQ5S1VQ6u4ZQ6x4`Q7c5UQ8b6yR8m7`pmOXr!T!X#`%]&Z&d&f&g&i,],b1b1eR,Q&]&r^OPXYrstux!X!^!g!l#O#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j%]%c%p&]&`&a&d&f&g&i&m&u'S'd'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;];^[#XWZ#S#V&y'tQ%fvQ%jwS%oz%t!U%x|}#d#e#h%Z%v'}(X(Y(Z+e+f+h,Z,o-m-s-t-u-w1j2b2c5f5wQ&Q!RQ'T!eQ'V!fQ(b#oS)|$u*QS+S%k%lQ+W%nQ+w&SQ+{&US-U'W'XQ.R(cQ/U)}Q0W+TQ0^+ZQ0`+[Q0c+`Q0z+xS1O+|+}Q2S-VQ3b/QQ4X0YQ4]0]Q4b0eQ4}1PQ6_3cQ6t4ZQ6w4_Q8^6sR9S8_v$wi#t%T%U%Y)u)w*P*e*f.Y/X/w3a3y8S;Z;c;d!S%hw!f!q%j%k%l&w'V'W'X']'g*X+S+T,r-U-V-^/c0W1{2S2Z3uQ*|%fQ+m%}Q+p&OQ+z&UQ.Q(bQ0y+wU0}+{+|+}Q2k.RQ4x0zS4|1O1PQ7_4}!z;_#r$`$a$u$x)l)x*V*z*}+l+o.O/Y/[0l0o0w2i3k3s4Q4S4v5z6b6k7W7w8g8y9X9a:X:Z:]:d:f:h:l:n:r;g;hg;`:S:T:Y:[:^:e:g:i:m:o:sW$|i%O*g;ZS%}!O&ZQ&O!PQ&P!QR+k%{$Z${i#r#t$`$a$u$x%T%U%Y)l)u)w)x*P*V*e*f*z*}+l+o.O.Y/X/Y/[/w0l0o0w2i3a3k3s3y4Q4S4v5z6b6k7W7w8S8g8y9X9a:S:T:X:Y:Z:[:]:^:d:e:f:g:h:i:l:m:n:o:r:s;Z;c;d;g;hT)m$r)nV*k%S:V:WU&|!c%w,xS(p#v#wQ+_%qS-z(^(_Q0p+qQ3z/tR6}4i&xkOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j%]%c%p&]&`&a&d&f&g&i&m&u&y'S'd't'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^$i$]c#U#a%a%b%d's'y(e(l(t(u(v(w(x(y(z({(|(})O)Q)T)X)c*x+^,s-b-g-l-n.X._.c.e.f.g.v/x1q1t2U2]2q2v2w2x2y2z2{2|2}3O3P3Q3R3S3V3W3]4O4V5i5o5t6Q6R6W6X7P7n7r7{8P8Q8v9U9]9n;QT#PV#Q&ykOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j%]%c%p&]&`&a&d&f&g&i&m&u&y'S'd't'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^Q&z!cR1w,uv!kQ!c!o!r!u!v&x'P'Q'^'_'`,u,{,}-_0u4p4rS*X$y*_S/c*Y*aQ/l*bQ0r+sQ3u/kR3x/nlpOXr!X#`%]&d&f&g&i,],b1b1eQ&k![Q'h!tS(d#q9tQ+Q%iQ+u&QQ+v&RQ-S'UQ-a'aS.W(i:aS/y*s:jQ0U+RQ0t+tQ1i,dQ1k,eQ1s,pQ2Q-TQ2T-XS4P/z:pQ4T0VS4W0X:qQ5h1uQ5l2RQ5q2YQ6r4UQ7o5jQ7p5mQ7s5rR8s7l$d$[c#U#a%b%d's'y(e(l(t(u(v(w(x(y(z({(|(})O)Q)T)X)c*x+^,s-b-g-l-n.X._.c.f.g.v/x1q1t2U2]2q2v2w2x2y2z2{2|2}3O3P3Q3R3S3V3W3]4O4V5i5o5t6Q6R6W6X7P7n7r7{8P8Q8v9U9]9n;QS(a#l'ZU*d$z(h3US*w%a.eQ2g0OQ5y2fQ7y5|R8z7z$d$Zc#U#a%b%d's'y(e(l(t(u(v(w(x(y(z({(|(})O)Q)T)X)c*x+^,s-b-g-l-n.X._.c.f.g.v/x1q1t2U2]2q2v2w2x2y2z2{2|2}3O3P3Q3R3S3V3W3]4O4V5i5o5t6Q6R6W6X7P7n7r7{8P8Q8v9U9]9n;QS(`#l'ZS(r#w$[S*v%a.eS-{(_(aQ.h)SQ/{*wR2d-|&xkOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j%]%c%p&]&`&a&d&f&g&i&m&u&y'S'd't'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^S#m]9mQ&f!VQ&g!WQ&i!YQ&j!ZR1a,`Q'R!eQ*y%fQ-Q'TS-}(b*|Q2O-PW2h.Q.R/}0PQ5k2PU5x2e2g2kS7v5y5{S8x7x7yS9_8w8zQ9g9`R9j9hU!sQ'Q,}T4n0u4p!O_OXZ`r!T!X#`#d%Z%]&Z&]&d&f&g&i(Z,],b-t1b1e]!mQ!o'Q,}0u4pT#m]9m%UyOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$^$b%]%c%p&]&`&a&d&f&g&i&m&u'S'd't'v'|(T(i(m(q)p*s*{+g,X,],b-R-Z-i-o.P.].d/u/z0X0x1Y1Z1[1^1b1e1g2W2^2j2r4m4w5Z5]5^5p5}7U7Z7h7tS(p#v#wS-z(^(_!s:w$X$j&y)e,n,q.l1v3X4k5g8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^Y!qQ'Q,}0u4pQ']!oS'g!r!uS'i!v4rS-^'^'_Q-`'`R2Z-_Q'f!qS(V#c1_S-]']'iQ/T)|Q/a*XQ2[-`Q3g/US3p/b/lQ6^3bS6i3v3xQ8U6_R8]6lQ#sbQ'e!qS(U#c1_S(W#i*rQ*t%[Q+O%gQ+U%mU-[']'f'iQ-p(VQ/S)|Q/`*XQ/f*[Q0T+PQ0{+yS2X-]-`Q2a-xS3f/T/US3o/a/lQ3r/eQ3t/gQ4z0|Q5s2[Q6]3bQ6a3gS6e3p3xQ6j3wQ7]4{S8T6^6_Q8X6fQ8Z6iQ8j7^Q9O8UQ9P8YQ9R8]Q9Z8kQ9c9QQ:z:uQ;V;OR;W;PV!sQ'Q,}%UaOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$^$b%]%c%p&]&`&a&d&f&g&i&m&u'S'd't'v'|(T(i(m(q)p*s*{+g,X,],b-R-Z-i-o.P.].d/u/z0X0x1Y1Z1[1^1b1e1g2W2^2j2r4m4w5Z5]5^5p5}7U7Z7h7tS#sx!g!r:t$X$j&y)e,n,q.l1v3X4k5g8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^R:z;]%UbOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$^$b%]%c%p&]&`&a&d&f&g&i&m&u'S'd't'v'|(T(i(m(q)p*s*{+g,X,],b-R-Z-i-o.P.].d/u/z0X0x1Y1Z1[1^1b1e1g2W2^2j2r4m4w5Z5]5^5p5}7U7Z7h7tQ%[j!S%gw!f!q%j%k%l&w'V'W'X']'g*X+S+T,r-U-V-^/c0W1{2S2Z3uS%mx!gQ+P%hQ+y&UW0|+z+{+|+}U4{0}1O1PS7^4|4}Q8k7_!r:u$X$j&y)e,n,q.l1v3X4k5g8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^Q;O;[R;P;]$xeOPXYrstu!X!^!l#O#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$^$b%]%c%p&]&`&d&f&g&i&m&u'S'd'v'|(T(i(m(q)p*s*{+g,X,],b-R-Z-i-o.P.].d/u/z0X0x1Y1Z1[1^1b1e1g2W2^2j2r4m4w5Z5]5^5p5}7U7Z7h7tY#^WZ#S#V't!U%x|}#d#e#h%Z%v'}(X(Y(Z+e+f+h,Z,o-m-s-t-u-w1j2b2c5f5wQ,W&a!p:v$X$j)e,n,q.l1v3X4k5g8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^R:y&yS&}!c%wR1y,x$zdOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$^$b%]%c%p&]&`&d&f&g&i&m&u'S'd't'v'|(T(i(m(q)p*s+g,X,],b-R-Z-i-o.].d/u/z0X0x1Y1Z1[1^1b1e1g2W2^2r4m4w5Z5]5^5p7U7Z7h7t!r)R$X$j&y)e,n,q.l1v3X4k5g8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^Q,V&aQ0O*{Q2f.PQ5|2jR7z5}!f$Rc#U%a's'y(e(l({(|(})O)T)X+^-b-g-l-n.X._.v/x2U2]2q3S4O4V5o5t6Q7r8v9n!T9{)Q)c,s.e1q1t2v3O3P3Q3R3V3]5i6R6W6X7P7n7{8P8Q9U9];Q!b$Tc#U%a's'y(e(l(})O)T)X+^-b-g-l-n.X._.v/x2U2]2q3S4O4V5o5t6Q7r8v9n!P9})Q)c,s.e1q1t2v3Q3R3V3]5i6R6W6X7P7n7{8P8Q9U9];Q!^$Xc#U%a's'y(e(l)T)X+^-b-g-l-n.X._.v/x2U2]2q3S4O4V5o5t6Q7r8v9nQ3a/Oz;^)Q)c,s.e1q1t2v3V3]5i6R6W6X7P7n7{8P8Q9U9];QQ;c;eR;d;f&xkOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j%]%c%p&]&`&a&d&f&g&i&m&u&y'S'd't'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^S$kh$lR3Y.k'PgOPWXYZhrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j$l%]%c%p&]&`&a&d&f&g&i&m&u&y'S'd't'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.k.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^T$gf$mQ$efS)[$h)`R)h$mT$ff$mT)^$h)`'PhOPWXYZhrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j$l%]%c%p&]&`&a&d&f&g&i&m&u&y'S'd't'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.k.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^T$kh$lQ$nhR)g$l%UjOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$^$b%]%c%p&]&`&a&d&f&g&i&m&u'S'd't'v'|(T(i(m(q)p*s*{+g,X,],b-R-Z-i-o.P.].d/u/z0X0x1Y1Z1[1^1b1e1g2W2^2j2r4m4w5Z5]5^5p5}7U7Z7h7t!s;[$X$j&y)e,n,q.l1v3X4k5g8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^#alOPXZr!X!^!l#O#`#k#x$j%]&]&`&a&d&f&g&i&m&u'S(q)e*{+g,X,],b-R.P.l/u0x1Y1Z1[1^1b1e1g2j3X4m4w5Z5]5^5}7U7Z7hv$zi#t%T%U%Y)u)w*P*e*f.Y/X/w3a3y8S;Z;c;d!z(h#r$`$a$u$x)l)x*V*z*}+l+o.O/Y/[0l0o0w2i3k3s4Q4S4v5z6b6k7W7w8g8y9X9a:X:Z:]:d:f:h:l:n:r;g;hQ*o%WQ.w)qg3U:S:T:Y:[:^:e:g:i:m:o:sv$vi#t%T%U%Y)u)w*P*e*f.Y/X/w3a3y8S;Z;c;dQ*R$wS*[$y*_Q*p%XQ/g*]!z:|#r$`$a$u$x)l)x*V*z*}+l+o.O/Y/[0l0o0w2i3k3s4Q4S4v5z6b6k7W7w8g8y9X9a:X:Z:]:d:f:h:l:n:r;g;hf:}:S:T:Y:[:^:e:g:i:m:o:sQ;R;_Q;S;`Q;T;aR;U;bv$zi#t%T%U%Y)u)w*P*e*f.Y/X/w3a3y8S;Z;c;d!z(h#r$`$a$u$x)l)x*V*z*}+l+o.O/Y/[0l0o0w2i3k3s4Q4S4v5z6b6k7W7w8g8y9X9a:X:Z:]:d:f:h:l:n:r;g;hg3U:S:T:Y:[:^:e:g:i:m:o:slnOXr!X#`%]&d&f&g&i,],b1b1eQ*U$xQ,k&pQ,l&rR3j/Y$Y${i#r#t$`$a$u$x%T%U%Y)l)u)w)x*P*V*e*f*z*}+l+o.O.Y/X/Y/[/w0l0o0w2i3a3k3s3y4Q4S4v5z6b6k7W7w8S8g8y9X9a:S:T:X:Y:Z:[:]:^:d:e:f:g:h:i:l:m:n:o:r:s;Z;c;d;g;hQ+n&OQ0n+pQ4g0mR6|4hT*^$y*_S*^$y*_T4o0u4pS/e*Z4mT3w/m7UQ+O%gQ/f*[Q0T+PQ0{+yQ4z0|Q7]4{Q8j7^R9Z8kn)u$s(j*q/W/o/p2o3h3}6[6m8}:{;X;Y!W:d(f)V){*T.V.s/O/]/|0k0m2n3i3m4f4h6O6P6c6g6o6q8W8[9b;e;f]:e3T6V7|8{8|9kp)w$s(j*q.|/W/o/p2o3h3}6[6m8}:{;X;Y!Y:f(f)V){*T.V.s/O/]/|0k0m2l2n3i3m4f4h6O6P6c6g6o6q8W8[9b;e;f_:g3T6V7|7}8{8|9kpmOXr!T!X#`%]&Z&d&f&g&i,],b1b1eQ&W!SR,X&apmOXr!T!X#`%]&Z&d&f&g&i,],b1b1eR&W!SQ+r&PR0j+kqmOXr!T!X#`%]&Z&d&f&g&i,],b1b1eQ0v+wS4u0y0zU7V4s4t4xS8f7X7YS9V8e8hQ9d9WR9i9eQ&_!TR,R&ZR5R1SS%oz%tR0`+[Q&d!UR,]&eR,c&jT1c,b1eR,g&kQ,f&kR1l,gQ'k!wR-c'kQrOQ#`XT%`r#`Q!zTR'm!zQ!}UR'o!}Q)n$rR.t)nQ#QVR'q#QQ#TWU'w#T'x-jQ'x#UR-j'yQ,v&zR1x,vQ.Z(jR2p.ZQ.^(lS2s.^2tR2t._Q,}'QR1|,}Y!oQ'Q,}0u4pR'[!oS#ZW%vU(O#Z(P-kQ(P#[R-k'zQ,y&}R1z,yr`OXr!T!X#`%]&Z&]&d&f&g&i,],b1b1eS#dZ%ZU#n`#d-tR-t(ZQ([#fQ-q(WW-y([-q2_5uQ2_-rR5u2`Q)`$hR.m)`Q$lhR)f$lQ$_cU)U$_-f:RQ-f9nR:R)cQ/R)|W3d/R3e6`8VU3e/S/T/US6`3f3gR8V6a#m)s$s(f(j)V){*T*l*m*q.T.U.V.s.|.}/O/W/]/o/p/|0k0m2l2m2n2o3T3h3i3m3}4f4h6O6P6T6U6V6[6c6g6m6o6q7|7}8O8W8[8{8|8}9b9k:{;X;Y;e;fQ/Z*TU3l/Z3n6dQ3n/]R6d3mQ*_$yR/i*_Q*h$}R/r*hQ4R/|R6p4RQ+i%yR0i+iQ4j0pS7O4j8dR8d7PQ+t&QR0s+tQ4p0uR7S4pQ1R,OS5P1R7aR7a5RQ0Z+WW4[0Z4^6v8`Q4^0^Q6v4]R8`6wQ+]%oR0a+]Q1e,bR5a1eWqOXr#`Q&h!XQ*u%]Q,[&dQ,^&fQ,_&gQ,a&iQ1`,]S1c,b1eR5`1bQ%_oQ&l!]Q&o!_Q&q!`Q&s!aQ'c!qQ+Q%iQ+d%uQ+j%zQ,Q&_Q,i&nW-Y']'e'f'iQ-a'aQ/h*^Q0U+RS1U,R,UQ1m,hQ1n,kQ1o,lQ2T-XW2V-[-]-`-bQ4T0VQ4a0dQ4e0kQ4y0{Q5T1WQ5_1aU5n2U2X2[Q5q2YQ6r4UQ6z4cQ6{4fQ7R4oQ7[4zQ7b5SS7q5o5sQ7s5rQ8a6xQ8i7]Q8n7cQ8u7rQ9T8bQ9Y8jQ9^8vR9f9ZQ%iwQ'U!fQ'a!qU+R%j%k%lQ,p&wU-T'V'W'XS-X']'gQ/_*XS0V+S+TQ1u,rS2R-U-VQ2Y-^Q3q/cQ4U0WQ5j1{Q5m2SQ5r2ZR6h3uS$ti;ZR*i%OU$}i%O;ZR/q*gQ$siS(f#r*}Q(j#tS)V$`$aQ){$uQ*T$xQ*l%TQ*m%UQ*q%YQ.T:XQ.U:ZQ.V:]Q.s)lQ.|)uQ.})wQ/O)xQ/W*PQ/]*VQ/o*eQ/p*fh/|*z.O0w2i4v5z7W7w8g8y9X9aQ0k+lQ0m+oQ2l:dQ2m:fQ2n:hQ2o.YS3T:S:TQ3h/XQ3i/YQ3m/[Q3}/wQ4f0lQ4h0oQ6O:lQ6P:nQ6T:YQ6U:[Q6V:^Q6[3aQ6c3kQ6g3sQ6m3yQ6o4QQ6q4SQ7|:iQ7}:eQ8O:gQ8W6bQ8[6kQ8{:mQ8|:oQ8}8SQ9b:rQ9k:sQ:{;ZQ;X;cQ;Y;dQ;e;gR;f;hloOXr!X#`%]&d&f&g&i,],b1b1eQ!dPS#bZ#kQ&n!^U'Y!l4m7UQ'p#OQ(s#xQ)d$jS,U&]&`Q,Y&aQ,h&mQ,m&uQ-P'SQ.a(qQ.q)eQ0P*{Q0g+gQ1],XQ2P-RQ2g.PQ3[.lQ3{/uQ4t0xQ5V1YQ5W1ZQ5Y1[Q5[1^Q5c1gQ5y2jQ6Y3XQ7Y4wQ7g5ZQ7i5]Q7j5^Q7y5}Q8h7ZR8p7h#UcOPXZr!X!^!l#`#k#x%]&]&`&a&d&f&g&i&m&u'S(q*{+g,X,],b-R.P/u0x1Y1Z1[1^1b1e1g2j4m4w5Z5]5^5}7U7Z7hQ#UWQ#aYQ%asQ%btQ%duS's#S'vQ'y#VQ(e#qQ(l#uQ(t#{Q(u#|Q(v#}Q(w$OQ(x$PQ(y$QQ(z$RQ({$SQ(|$TQ(}$UQ)O$VQ)Q$XQ)T$^Q)X$bW)c$j)e.l3XQ*x%cQ+^%pS,s&y1vQ-b'dS-g't-iQ-l'|Q-n(TQ.X(iQ._(mQ.c9lQ.e9oQ.f9pQ.g9qQ.v)pQ/x*sQ1q,nQ1t,qQ2U-ZQ2]-oQ2q.]Q2v9tQ2w9uQ2x9vQ2y9wQ2z9xQ2{9yQ2|9zQ2}9{Q3O9|Q3P9}Q3Q:OQ3R:PQ3S.dQ3V:UQ3W:_Q3]:QQ4O/zQ4V0XQ5i:`Q5o2WQ5t2^Q6Q2rQ6R:aQ6W:cQ6X:jQ7P4kQ7n5gQ7r5pQ7{:kQ8P:pQ8Q:qQ8v7tQ9U8cQ9]8tQ9n#OR;Q;^R#WWR&{!cY!qQ'Q,}0u4pS&w!c,uQ']!oS'g!r!uS'i!v4rS,r&x'PS-^'^'_Q-`'`Q1{,{R2Z-_R(k#tR(n#uQ!dQT,|'Q,}]!nQ!o'Q,}0u4pQ#l]R'Z9mT#gZ%ZS#fZ%ZU%y|},ZU(W#d#e#hS-r(X(YQ-v(ZQ0h+hQ2`-sU2a-t-u-wS5v2b2cR7u5w`#YW#S#V%v't'}+e-mt#cZ|}#d#e#h%Z(X(Y(Z+h-s-t-u-w2b2c5wQ1_,ZQ1r,oQ5e1jQ7m5fT:x&y+fT#]W%vS#[W%vS'u#S'}S'z#V+eS,t&y+fT-h't-mT'O!c%wQ$hfR)j$mT)_$h)`R3Z.kT*O$u*QR*W$xQ/}*zQ2e.OQ4s0wQ5{2iQ7X4vQ7x5zQ8e7WQ8w7wQ9W8gQ9`8yQ9e9XR9h9alpOXr!X#`%]&d&f&g&i,],b1b1eQ&^!TR,Q&ZV%z|},ZR0q+qR,P&XQ%szR+c%tR+X%nT&b!U&eT&c!U&eT1d,b1e",nodeNames:"⚠ ArithOp ArithOp LineComment BlockComment Script ExportDeclaration export Star as VariableName String Escape from ; default FunctionDeclaration async function VariableDefinition > TypeParamList TypeDefinition extends ThisType this LiteralType ArithOp Number BooleanLiteral TemplateType InterpolationEnd Interpolation InterpolationStart NullType null VoidType void TypeofType typeof MemberExpression . ?. PropertyName [ TemplateString Escape Interpolation super RegExp ] ArrayExpression Spread , } { ObjectExpression Property async get set PropertyDefinition Block : NewExpression new TypeArgList CompareOp < ) ( ArgList UnaryExpression delete LogicOp BitOp YieldExpression yield AwaitExpression await ParenthesizedExpression ClassExpression class ClassBody MethodDeclaration Decorator @ MemberExpression PrivatePropertyName CallExpression declare Privacy static abstract override PrivatePropertyDefinition PropertyDeclaration readonly accessor Optional TypeAnnotation Equals StaticBlock FunctionExpression ArrowFunction ParamList ParamList ArrayPattern ObjectPattern PatternProperty Privacy readonly Arrow MemberExpression BinaryExpression ArithOp ArithOp ArithOp ArithOp BitOp CompareOp instanceof satisfies in const CompareOp BitOp BitOp BitOp LogicOp LogicOp ConditionalExpression LogicOp LogicOp AssignmentExpression UpdateOp PostfixExpression CallExpression TaggedTemplateExpression DynamicImport import ImportMeta JSXElement JSXSelfCloseEndTag JSXStartTag JSXSelfClosingTag JSXIdentifier JSXBuiltin JSXIdentifier JSXNamespacedName JSXMemberExpression JSXSpreadAttribute JSXAttribute JSXAttributeValue JSXEscape JSXEndTag JSXOpenTag JSXFragmentTag JSXText JSXEscape JSXStartCloseTag JSXCloseTag PrefixCast ArrowFunction TypeParamList SequenceExpression KeyofType keyof UniqueType unique ImportType InferredType infer TypeName ParenthesizedType FunctionSignature ParamList NewSignature IndexedType TupleType Label ArrayType ReadonlyType ObjectType MethodType PropertyType IndexSignature PropertyDefinition CallSignature TypePredicate is NewSignature new UnionType LogicOp IntersectionType LogicOp ConditionalType ParameterizedType ClassDeclaration abstract implements type VariableDeclaration let var TypeAliasDeclaration InterfaceDeclaration interface EnumDeclaration enum EnumBody NamespaceDeclaration namespace module AmbientDeclaration declare GlobalDeclaration global ClassDeclaration ClassBody AmbientFunctionDeclaration ExportGroup VariableName VariableName ImportDeclaration ImportGroup ForStatement for ForSpec ForInSpec ForOfSpec of WhileStatement while WithStatement with DoStatement do IfStatement if else SwitchStatement switch SwitchBody CaseLabel case DefaultLabel TryStatement try CatchClause catch FinallyClause finally ReturnStatement return ThrowStatement throw BreakStatement break ContinueStatement continue DebuggerStatement debugger LabeledStatement ExpressionStatement SingleExpression SingleClassItem",maxTerm:364,context:ft,nodeProps:[["group",-26,6,14,16,62,199,203,206,207,209,212,215,225,227,233,235,237,239,242,248,254,256,258,260,262,264,265,"Statement",-32,10,11,25,28,29,35,45,48,49,51,56,64,72,76,78,80,81,103,104,113,114,131,134,136,137,138,139,141,142,162,163,165,"Expression",-23,24,26,30,34,36,38,166,168,170,171,173,174,175,177,178,179,181,182,183,193,195,197,198,"Type",-3,84,96,102,"ClassItem"],["openedBy",31,"InterpolationStart",50,"[",54,"{",69,"(",143,"JSXStartTag",155,"JSXStartTag JSXStartCloseTag"],["closedBy",33,"InterpolationEnd",44,"]",55,"}",70,")",144,"JSXSelfCloseEndTag JSXEndTag",160,"JSXEndTag"]],propSources:[fn],skippedNodes:[0,3,4,268],repeatNodeCount:33,tokenData:"$>y(CSR!bOX%ZXY+gYZ-yZ[+g[]%Z]^.c^p%Zpq+gqr/mrs3cst:_tu>PuvBavwDxwxGgxyMvyz! Qz{!![{|!%O|}!&]}!O!%O!O!P!'g!P!Q!1w!Q!R#0t!R![#3T![!]#@T!]!^#Aa!^!_#Bk!_!`#GS!`!a#In!a!b#N{!b!c$$z!c!}>P!}#O$&U#O#P$'`#P#Q$,w#Q#R$.R#R#S>P#S#T$/`#T#o$0j#o#p$4z#p#q$5p#q#r$7Q#r#s$8^#s$f%Z$f$g+g$g#BY>P#BY#BZ$9h#BZ$IS>P$IS$I_$9h$I_$I|>P$I|$I}$<s$I}$JO$<s$JO$JT>P$JT$JU$9h$JU$KV>P$KV$KW$9h$KW&FU>P&FU&FV$9h&FV;'S>P;'S;=`BZ<%l?HT>P?HT?HU$9h?HUO>P(n%d_$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&j&hT$d&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c&j&zP;=`<%l&c'|'U]$d&j'z!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!b(SU'z!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}!b(iP;=`<%l'}'|(oP;=`<%l&}'[(y]$d&j'wpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(rp)wU'wpOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)rp*^P;=`<%l)r'[*dP;=`<%l(r#S*nX'wp'z!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g#S+^P;=`<%l*g(n+dP;=`<%l%Z(CS+rq$d&j'wp'z!b'm(;dOX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p$f%Z$f$g+g$g#BY%Z#BY#BZ+g#BZ$IS%Z$IS$I_+g$I_$JT%Z$JT$JU+g$JU$KV%Z$KV$KW+g$KW&FU%Z&FU&FV+g&FV;'S%Z;'S;=`+a<%l?HT%Z?HT?HU+g?HUO%Z(CS.ST'x#S$d&j'n(;dO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c(CS.n_$d&j'wp'z!b'n(;dOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#`/x`$d&j!l$Ip'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S1V`#q$Id$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`2X!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S2d_#q$Id$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$2b3l_'v$(n$d&j'z!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k*r4r_$d&j'z!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k)`5vX$d&jOr5qrs6cs!^5q!^!_6y!_#o5q#o#p6y#p;'S5q;'S;=`7h<%lO5q)`6jT$_#t$d&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c#t6|TOr6yrs7]s;'S6y;'S;=`7b<%lO6y#t7bO$_#t#t7eP;=`<%l6y)`7kP;=`<%l5q*r7w]$_#t$d&j'z!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}%W8uZ'z!bOY8pYZ6yZr8prs9hsw8pwx6yx#O8p#O#P6y#P;'S8p;'S;=`:R<%lO8p%W9oU$_#t'z!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}%W:UP;=`<%l8p*r:[P;=`<%l4k#%|:hg$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}st%Ztu<Puw%Zwx(rx!^%Z!^!_*g!_!c%Z!c!}<P!}#O%Z#O#P&c#P#R%Z#R#S<P#S#T%Z#T#o<P#o#p*g#p$g%Z$g;'S<P;'S;=`=y<%lO<P#%|<[i$d&j(a!L^'wp'z!bOY%ZYZ&cZr%Zrs&}st%Ztu<Puw%Zwx(rx!Q%Z!Q![<P![!^%Z!^!_*g!_!c%Z!c!}<P!}#O%Z#O#P&c#P#R%Z#R#S<P#S#T%Z#T#o<P#o#p*g#p$g%Z$g;'S<P;'S;=`=y<%lO<P#%|=|P;=`<%l<P(CS>`k$d&j'wp'z!b(U!LY't&;d$W#tOY%ZYZ&cZr%Zrs&}st%Ztu>Puw%Zwx(rx}%Z}!O@T!O!Q%Z!Q![>P![!^%Z!^!_*g!_!c%Z!c!}>P!}#O%Z#O#P&c#P#R%Z#R#S>P#S#T%Z#T#o>P#o#p*g#p$g%Z$g;'S>P;'S;=`BZ<%lO>P+d@`k$d&j'wp'z!b$W#tOY%ZYZ&cZr%Zrs&}st%Ztu@Tuw%Zwx(rx}%Z}!O@T!O!Q%Z!Q![@T![!^%Z!^!_*g!_!c%Z!c!}@T!}#O%Z#O#P&c#P#R%Z#R#S@T#S#T%Z#T#o@T#o#p*g#p$g%Z$g;'S@T;'S;=`BT<%lO@T+dBWP;=`<%l@T(CSB^P;=`<%l>P%#SBl`$d&j'wp'z!b#i$IdOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#SCy_$d&j#{$Id'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%DfETa(j%<v$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sv%ZvwFYwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#SFe`$d&j#u$Id'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$2bGp_'y$)`$d&j'wpOYHoYZIuZrHorsIuswHowxKVx!^Ho!^!_LX!_#OHo#O#PIu#P#oHo#o#pLX#p;'SHo;'S;=`Mp<%lOHo*QHv_$d&j'wpOYHoYZIuZrHorsIuswHowxKVx!^Ho!^!_LX!_#OHo#O#PIu#P#oHo#o#pLX#p;'SHo;'S;=`Mp<%lOHo)`IzX$d&jOwIuwx6cx!^Iu!^!_Jg!_#oIu#o#pJg#p;'SIu;'S;=`KP<%lOIu#tJjTOwJgwx7]x;'SJg;'S;=`Jy<%lOJg#tJ|P;=`<%lJg)`KSP;=`<%lIu*QK`]$_#t$d&j'wpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(r$fL^Z'wpOYLXYZJgZrLXrsJgswLXwxMPx#OLX#O#PJg#P;'SLX;'S;=`Mj<%lOLX$fMWU$_#t'wpOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)r$fMmP;=`<%lLX*QMsP;=`<%lHo(*QNR_!h(!b$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z!'l! ]_!gM|$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'+h!!ib$d&j'wp'z!b'u#)d#j$IdOY%ZYZ&cZr%Zrs&}sw%Zwx(rxz%Zz{!#q{!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S!#|`$d&j'wp'z!b#g$IdOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&-O!%Z`$d&j'wp'z!bk&%`OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&C[!&h_!V&;l$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS!'rc$d&j'wp'z!by'<nOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!(}!P!Q%Z!Q![!+g![!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z!'d!)Wa$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!*]!P!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z!'d!*h_!UMt$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!+rg$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!+g![!^%Z!^!_*g!_!g%Z!g!h!-Z!h#O%Z#O#P&c#P#R%Z#R#S!+g#S#X%Z#X#Y!-Z#Y#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!-dg$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx{%Z{|!.{|}%Z}!O!.{!O!Q%Z!Q![!0a![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!0a#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!/Uc$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!0a![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!0a#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!0lc$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!0a![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!0a#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS!2Sf$d&j'wp'z!b#h$IdOY!3hYZ&cZr!3hrs!4{sw!3hwx!C}xz!3hz{#$s{!P!3h!P!Q#&Y!Q!^!3h!^!_!Mh!_!`#-x!`!a#/_!a!}!3h!}#O##[#O#P!<w#P#o!3h#o#p!Mh#p;'S!3h;'S;=`#$m<%lO!3h(r!3sb$d&j'wp'z!b!RSOY!3hYZ&cZr!3hrs!4{sw!3hwx!C}x!P!3h!P!Q!Kh!Q!^!3h!^!_!Mh!_!}!3h!}#O##[#O#P!<w#P#o!3h#o#p!Mh#p;'S!3h;'S;=`#$m<%lO!3h(Q!5U`$d&j'z!b!RSOY!4{YZ&cZw!4{wx!6Wx!P!4{!P!Q!=o!Q!^!4{!^!_!?g!_!}!4{!}#O!Bn#O#P!<w#P#o!4{#o#p!?g#p;'S!4{;'S;=`!Cw<%lO!4{&n!6_^$d&j!RSOY!6WYZ&cZ!P!6W!P!Q!7Z!Q!^!6W!^!_!8g!_!}!6W!}#O!;U#O#P!<w#P#o!6W#o#p!8g#p;'S!6W;'S;=`!=i<%lO!6W&n!7ba$d&j!RSO!^&c!_#Z&c#Z#[!7Z#[#]&c#]#^!7Z#^#a&c#a#b!7Z#b#g&c#g#h!7Z#h#i&c#i#j!7Z#j#m&c#m#n!7Z#n#o&c#p;'S&c;'S;=`&w<%lO&cS!8lX!RSOY!8gZ!P!8g!P!Q!9X!Q!}!8g!}#O!9p#O#P!:o#P;'S!8g;'S;=`!;O<%lO!8gS!9^U!RS#Z#[!9X#]#^!9X#a#b!9X#g#h!9X#i#j!9X#m#n!9XS!9sVOY!9pZ#O!9p#O#P!:Y#P#Q!8g#Q;'S!9p;'S;=`!:i<%lO!9pS!:]SOY!9pZ;'S!9p;'S;=`!:i<%lO!9pS!:lP;=`<%l!9pS!:rSOY!8gZ;'S!8g;'S;=`!;O<%lO!8gS!;RP;=`<%l!8g&n!;Z[$d&jOY!;UYZ&cZ!^!;U!^!_!9p!_#O!;U#O#P!<P#P#Q!6W#Q#o!;U#o#p!9p#p;'S!;U;'S;=`!<q<%lO!;U&n!<UX$d&jOY!;UYZ&cZ!^!;U!^!_!9p!_#o!;U#o#p!9p#p;'S!;U;'S;=`!<q<%lO!;U&n!<tP;=`<%l!;U&n!<|X$d&jOY!6WYZ&cZ!^!6W!^!_!8g!_#o!6W#o#p!8g#p;'S!6W;'S;=`!=i<%lO!6W&n!=lP;=`<%l!6W(Q!=xi$d&j'z!b!RSOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#Z&}#Z#[!=o#[#]&}#]#^!=o#^#a&}#a#b!=o#b#g&}#g#h!=o#h#i&}#i#j!=o#j#m&}#m#n!=o#n#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!f!?nZ'z!b!RSOY!?gZw!?gwx!8gx!P!?g!P!Q!@a!Q!}!?g!}#O!Ap#O#P!:o#P;'S!?g;'S;=`!Bh<%lO!?g!f!@hb'z!b!RSOY'}Zw'}x#O'}#P#Z'}#Z#[!@a#[#]'}#]#^!@a#^#a'}#a#b!@a#b#g'}#g#h!@a#h#i'}#i#j!@a#j#m'}#m#n!@a#n;'S'};'S;=`(f<%lO'}!f!AuX'z!bOY!ApZw!Apwx!9px#O!Ap#O#P!:Y#P#Q!?g#Q;'S!Ap;'S;=`!Bb<%lO!Ap!f!BeP;=`<%l!Ap!f!BkP;=`<%l!?g(Q!Bu^$d&j'z!bOY!BnYZ&cZw!Bnwx!;Ux!^!Bn!^!_!Ap!_#O!Bn#O#P!<P#P#Q!4{#Q#o!Bn#o#p!Ap#p;'S!Bn;'S;=`!Cq<%lO!Bn(Q!CtP;=`<%l!Bn(Q!CzP;=`<%l!4{'`!DW`$d&j'wp!RSOY!C}YZ&cZr!C}rs!6Ws!P!C}!P!Q!EY!Q!^!C}!^!_!GQ!_!}!C}!}#O!JX#O#P!<w#P#o!C}#o#p!GQ#p;'S!C};'S;=`!Kb<%lO!C}'`!Eci$d&j'wp!RSOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#Z(r#Z#[!EY#[#](r#]#^!EY#^#a(r#a#b!EY#b#g(r#g#h!EY#h#i(r#i#j!EY#j#m(r#m#n!EY#n#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(rt!GXZ'wp!RSOY!GQZr!GQrs!8gs!P!GQ!P!Q!Gz!Q!}!GQ!}#O!IZ#O#P!:o#P;'S!GQ;'S;=`!JR<%lO!GQt!HRb'wp!RSOY)rZr)rs#O)r#P#Z)r#Z#[!Gz#[#])r#]#^!Gz#^#a)r#a#b!Gz#b#g)r#g#h!Gz#h#i)r#i#j!Gz#j#m)r#m#n!Gz#n;'S)r;'S;=`*Z<%lO)rt!I`X'wpOY!IZZr!IZrs!9ps#O!IZ#O#P!:Y#P#Q!GQ#Q;'S!IZ;'S;=`!I{<%lO!IZt!JOP;=`<%l!IZt!JUP;=`<%l!GQ'`!J`^$d&j'wpOY!JXYZ&cZr!JXrs!;Us!^!JX!^!_!IZ!_#O!JX#O#P!<P#P#Q!C}#Q#o!JX#o#p!IZ#p;'S!JX;'S;=`!K[<%lO!JX'`!K_P;=`<%l!JX'`!KeP;=`<%l!C}(r!Ksk$d&j'wp'z!b!RSOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#Z%Z#Z#[!Kh#[#]%Z#]#^!Kh#^#a%Z#a#b!Kh#b#g%Z#g#h!Kh#h#i%Z#i#j!Kh#j#m%Z#m#n!Kh#n#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#W!Mq]'wp'z!b!RSOY!MhZr!Mhrs!?gsw!Mhwx!GQx!P!Mh!P!Q!Nj!Q!}!Mh!}#O#!U#O#P!:o#P;'S!Mh;'S;=`##U<%lO!Mh#W!Nse'wp'z!b!RSOY*gZr*grs'}sw*gwx)rx#O*g#P#Z*g#Z#[!Nj#[#]*g#]#^!Nj#^#a*g#a#b!Nj#b#g*g#g#h!Nj#h#i*g#i#j!Nj#j#m*g#m#n!Nj#n;'S*g;'S;=`+Z<%lO*g#W#!]Z'wp'z!bOY#!UZr#!Urs!Apsw#!Uwx!IZx#O#!U#O#P!:Y#P#Q!Mh#Q;'S#!U;'S;=`##O<%lO#!U#W##RP;=`<%l#!U#W##XP;=`<%l!Mh(r##e`$d&j'wp'z!bOY##[YZ&cZr##[rs!Bnsw##[wx!JXx!^##[!^!_#!U!_#O##[#O#P!<P#P#Q!3h#Q#o##[#o#p#!U#p;'S##[;'S;=`#$g<%lO##[(r#$jP;=`<%l##[(r#$pP;=`<%l!3h(CS#%Qb$d&j'wp'z!b'o(;d!RSOY!3hYZ&cZr!3hrs!4{sw!3hwx!C}x!P!3h!P!Q!Kh!Q!^!3h!^!_!Mh!_!}!3h!}#O##[#O#P!<w#P#o!3h#o#p!Mh#p;'S!3h;'S;=`#$m<%lO!3h(CS#&e_$d&j'wp'z!bR(;dOY#&YYZ&cZr#&Yrs#'dsw#&Ywx#*tx!^#&Y!^!_#,s!_#O#&Y#O#P#(f#P#o#&Y#o#p#,s#p;'S#&Y;'S;=`#-r<%lO#&Y(Bb#'m]$d&j'z!bR(;dOY#'dYZ&cZw#'dwx#(fx!^#'d!^!_#)w!_#O#'d#O#P#(f#P#o#'d#o#p#)w#p;'S#'d;'S;=`#*n<%lO#'d(AO#(mX$d&jR(;dOY#(fYZ&cZ!^#(f!^!_#)Y!_#o#(f#o#p#)Y#p;'S#(f;'S;=`#)q<%lO#(f(;d#)_SR(;dOY#)YZ;'S#)Y;'S;=`#)k<%lO#)Y(;d#)nP;=`<%l#)Y(AO#)tP;=`<%l#(f(<v#*OW'z!bR(;dOY#)wZw#)wwx#)Yx#O#)w#O#P#)Y#P;'S#)w;'S;=`#*h<%lO#)w(<v#*kP;=`<%l#)w(Bb#*qP;=`<%l#'d(Ap#*}]$d&j'wpR(;dOY#*tYZ&cZr#*trs#(fs!^#*t!^!_#+v!_#O#*t#O#P#(f#P#o#*t#o#p#+v#p;'S#*t;'S;=`#,m<%lO#*t(<U#+}W'wpR(;dOY#+vZr#+vrs#)Ys#O#+v#O#P#)Y#P;'S#+v;'S;=`#,g<%lO#+v(<U#,jP;=`<%l#+v(Ap#,pP;=`<%l#*t(=h#,|Y'wp'z!bR(;dOY#,sZr#,srs#)wsw#,swx#+vx#O#,s#O#P#)Y#P;'S#,s;'S;=`#-l<%lO#,s(=h#-oP;=`<%l#,s(CS#-uP;=`<%l#&Y%#W#.Vb$d&j#{$Id'wp'z!b!RSOY!3hYZ&cZr!3hrs!4{sw!3hwx!C}x!P!3h!P!Q!Kh!Q!^!3h!^!_!Mh!_!}!3h!}#O##[#O#P!<w#P#o!3h#o#p!Mh#p;'S!3h;'S;=`#$m<%lO!3h+h#/lb$T#t$d&j'wp'z!b!RSOY!3hYZ&cZr!3hrs!4{sw!3hwx!C}x!P!3h!P!Q!Kh!Q!^!3h!^!_!Mh!_!}!3h!}#O##[#O#P!<w#P#o!3h#o#p!Mh#p;'S!3h;'S;=`#$m<%lO!3h$/l#1Pp$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!+g!P!Q%Z!Q![#3T![!^%Z!^!_*g!_!g%Z!g!h!-Z!h#O%Z#O#P&c#P#R%Z#R#S#3T#S#U%Z#U#V#6_#V#X%Z#X#Y!-Z#Y#b%Z#b#c#5T#c#d#9g#d#l%Z#l#m#<i#m#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#3`k$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!+g!P!Q%Z!Q![#3T![!^%Z!^!_*g!_!g%Z!g!h!-Z!h#O%Z#O#P&c#P#R%Z#R#S#3T#S#X%Z#X#Y!-Z#Y#b%Z#b#c#5T#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#5`_$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#6hd$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#7v!R!S#7v!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#7v#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#8Rf$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#7v!R!S#7v!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#7v#S#b%Z#b#c#5T#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#9pc$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#:{!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#:{#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#;We$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#:{!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#:{#S#b%Z#b#c#5T#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#<rg$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#>Z![!^%Z!^!_*g!_!c%Z!c!i#>Z!i#O%Z#O#P&c#P#R%Z#R#S#>Z#S#T%Z#T#Z#>Z#Z#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#>fi$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#>Z![!^%Z!^!_*g!_!c%Z!c!i#>Z!i#O%Z#O#P&c#P#R%Z#R#S#>Z#S#T%Z#T#Z#>Z#Z#b%Z#b#c#5T#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%Gh#@b_!a$b$d&j#y%<f'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z)[#Al_^l$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS#Bz^'}!*v!e'.r'wp'z!b$U)d(nSOY*gZr*grs'}sw*gwx)rx!P*g!P!Q#Cv!Q!^*g!^!_#Dl!_!`#F^!`#O*g#P;'S*g;'S;=`+Z<%lO*g(n#DPX$f&j'wp'z!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g$Kh#DuZ#k$Id'wp'z!bOY*gZr*grs'}sw*gwx)rx!_*g!_!`#Eh!`#O*g#P;'S*g;'S;=`+Z<%lO*g$Kh#EqX#{$Id'wp'z!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g$Kh#FgX#l$Id'wp'z!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g%Gh#G_a#X%?x$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`!a#Hd!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#W#Ho_#d$Ih$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%Gh#I}adBf#l$Id$a#|$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`#KS!`!a#L^!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S#K__#l$Id$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S#Lia#k$Id$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`!a#Mn!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S#My`#k$Id$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'+h$ Wc(b$Ip$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P$!c!P!^%Z!^!_*g!_!a%Z!a!b$#m!b#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'+`$!n_z'#p$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S$#x`$d&j#v$Id'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#&^$%V_!x!Ln$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(@^$&a_|(8n$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(n$'eZ$d&jO!^$(W!^!_$(n!_#i$(W#i#j$(s#j#l$(W#l#m$*f#m#o$(W#o#p$(n#p;'S$(W;'S;=`$,q<%lO$(W(n$(_T[#S$d&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c#S$(sO[#S(n$(x[$d&jO!Q&c!Q![$)n![!^&c!_!c&c!c!i$)n!i#T&c#T#Z$)n#Z#o&c#o#p$,U#p;'S&c;'S;=`&w<%lO&c(n$)sZ$d&jO!Q&c!Q![$*f![!^&c!_!c&c!c!i$*f!i#T&c#T#Z$*f#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$*kZ$d&jO!Q&c!Q![$+^![!^&c!_!c&c!c!i$+^!i#T&c#T#Z$+^#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$+cZ$d&jO!Q&c!Q![$(W![!^&c!_!c&c!c!i$(W!i#T&c#T#Z$(W#Z#o&c#p;'S&c;'S;=`&w<%lO&c#S$,XR!Q![$,b!c!i$,b#T#Z$,b#S$,eS!Q![$,b!c!i$,b#T#Z$,b#q#r$(n(n$,tP;=`<%l$(W!'l$-S_!SM|$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S$.^`#s$Id$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&,v$/k_$d&j'wp'z!b(R&%WOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS$0yk$d&j'wp'z!b(U!LY't&;d$Y#tOY%ZYZ&cZr%Zrs&}st%Ztu$0juw%Zwx(rx}%Z}!O$2n!O!Q%Z!Q![$0j![!^%Z!^!_*g!_!c%Z!c!}$0j!}#O%Z#O#P&c#P#R%Z#R#S$0j#S#T%Z#T#o$0j#o#p*g#p$g%Z$g;'S$0j;'S;=`$4t<%lO$0j+d$2yk$d&j'wp'z!b$Y#tOY%ZYZ&cZr%Zrs&}st%Ztu$2nuw%Zwx(rx}%Z}!O$2n!O!Q%Z!Q![$2n![!^%Z!^!_*g!_!c%Z!c!}$2n!}#O%Z#O#P&c#P#R%Z#R#S$2n#S#T%Z#T#o$2n#o#p*g#p$g%Z$g;'S$2n;'S;=`$4n<%lO$2n+d$4qP;=`<%l$2n(CS$4wP;=`<%l$0j!5p$5TX!X!3l'wp'z!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g%Df$5{a(i%<v$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p#q$#m#q;'S%Z;'S;=`+a<%lO%Z%#`$7__!W$I`o`$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(r$8i_!mS$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS$9y|$d&j'wp'z!b'm(;d(U!LY't&;d$W#tOX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}st%Ztu>Puw%Zwx(rx}%Z}!O@T!O!Q%Z!Q![>P![!^%Z!^!_*g!_!c%Z!c!}>P!}#O%Z#O#P&c#P#R%Z#R#S>P#S#T%Z#T#o>P#o#p*g#p$f%Z$f$g+g$g#BY>P#BY#BZ$9h#BZ$IS>P$IS$I_$9h$I_$JT>P$JT$JU$9h$JU$KV>P$KV$KW$9h$KW&FU>P&FU&FV$9h&FV;'S>P;'S;=`BZ<%l?HT>P?HT?HU$9h?HUO>P(CS$=Uk$d&j'wp'z!b'n(;d(U!LY't&;d$W#tOY%ZYZ&cZr%Zrs&}st%Ztu>Puw%Zwx(rx}%Z}!O@T!O!Q%Z!Q![>P![!^%Z!^!_*g!_!c%Z!c!}>P!}#O%Z#O#P&c#P#R%Z#R#S>P#S#T%Z#T#o>P#o#p*g#p$g%Z$g;'S>P;'S;=`BZ<%lO>P",tokenizers:[fo,fa,2,3,4,5,6,7,8,9,10,11,12,13,fi,new cU("$S~RRtu[#O#Pg#S#T#|~_P#o#pb~gOq~~jVO#i!P#i#j!U#j#l!P#l#m!q#m;'S!P;'S;=`#v<%lO!P~!UO!O~~!XS!Q![!e!c!i!e#T#Z!e#o#p#Z~!hR!Q![!q!c!i!q#T#Z!q~!tR!Q![!}!c!i!}#T#Z!}~#QR!Q![!P!c!i!P#T#Z!P~#^R!Q![#g!c!i#g#T#Z#g~#jS!Q![#g!c!i#g#T#Z#g#q#r!P~#yP;=`<%l!P~$RO(T~~",141,326),new cU("j~RQYZXz{^~^O'q~~aP!P!Qd~iO'r~~",25,308)],topRules:{Script:[0,5],SingleExpression:[1,266],SingleClassItem:[2,267]},dialects:{jsx:12686,ts:12688},dynamicPrecedences:{76:1,78:1,163:1,191:1},specialized:[{term:312,get:e=>fr[e]||-1},{term:328,get:e=>fs[e]||-1},{term:67,get:e=>fl[e]||-1}],tokenPrec:12712}),fd=[lr("function ${name}(${params}) {\n	${}\n}",{label:"function",detail:"definition",type:"keyword"}),lr("for (let ${index} = 0; ${index} < ${bound}; ${index}++) {\n	${}\n}",{label:"for",detail:"loop",type:"keyword"}),lr("for (let ${name} of ${collection}) {\n	${}\n}",{label:"for",detail:"of loop",type:"keyword"}),lr("do {\n	${}\n} while (${})",{label:"do",detail:"loop",type:"keyword"}),lr("while (${}) {\n	${}\n}",{label:"while",detail:"loop",type:"keyword"}),lr("try {\n	${}\n} catch (${error}) {\n	${}\n}",{label:"try",detail:"/ catch block",type:"keyword"}),lr("if (${}) {\n	${}\n}",{label:"if",detail:"block",type:"keyword"}),lr("if (${}) {\n	${}\n} else {\n	${}\n}",{label:"if",detail:"/ else block",type:"keyword"}),lr("class ${name} {\n	constructor(${params}) {\n		${}\n	}\n}",{label:"class",detail:"definition",type:"keyword"}),lr('import {${names}} from "${module}"\n${}',{label:"import",detail:"named",type:"keyword"}),lr('import ${name} from "${module}"\n${}',{label:"import",detail:"default",type:"keyword"})],fc=new class{constructor(){this.map=new WeakMap}setBuffer(e,t,i){let o=this.map.get(e);o||this.map.set(e,o=new Map),o.set(t,i)}getBuffer(e,t){let i=this.map.get(e);return i&&i.get(t)}set(e,t){e instanceof nM?this.setBuffer(e.context.buffer,e.index,t):e instanceof nC&&this.map.set(e.tree,t)}get(e){return e instanceof nM?this.getBuffer(e.context.buffer,e.index):e instanceof nC?this.map.get(e.tree):void 0}cursorSet(e,t){e.buffer?this.setBuffer(e.buffer.buffer,e.index,t):this.map.set(e.tree,t)}cursorGet(e){return e.buffer?this.getBuffer(e.buffer.buffer,e.index):this.map.get(e.tree)}},ff=new Set(["Script","Block","FunctionExpression","FunctionDeclaration","ArrowFunction","MethodDeclaration","ForStatement"]);function fh(e){return(t,i)=>{let o=t.node.getChild("VariableDefinition");return o&&i(o,e),!0}}const fy=["FunctionDeclaration"],fu={FunctionDeclaration:fh("function"),ClassDeclaration:fh("class"),ClassExpression:()=>!0,EnumDeclaration:fh("constant"),TypeAliasDeclaration:fh("type"),NamespaceDeclaration:fh("namespace"),VariableDefinition(e,t){e.matchContext(fy)||t(e,"variable")},TypeDefinition(e,t){t(e,"type")},__proto__:null},fm=/^[\w$\xa1-\uffff][\w$\d\xa1-\uffff]*$/,fx=["TemplateString","String","RegExp","LineComment","BlockComment","VariableDefinition","TypeDefinition","Label","PropertyDefinition","PropertyName","PrivatePropertyDefinition","PrivatePropertyName",".","?."];function fg(e){let t=rn(e.state).resolveInner(e.pos,-1);if(fx.indexOf(t.name)>-1)return null;let i="VariableName"==t.name||t.to-t.from<20&&fm.test(e.state.sliceDoc(t.from,t.to));if(!i&&!e.explicit)return null;let o=[];for(let i=t;i;i=i.parent)ff.has(i.name)&&(o=o.concat(function e(t,i){let o=fc.get(i);if(o)return o;let a=[],n=!0;function r(e,i){let o=t.sliceString(e.from,e.to);a.push({label:o,type:i})}return i.cursor(P.IncludeAnonymous).iterate(i=>{if(n)n=!1;else if(i.name){let e=fu[i.name];if(e&&e(i,r)||ff.has(i.name))return!1}else if(i.to-i.from>8192){for(let o of e(t,i.node))a.push(o);return!1}}),fc.set(i,a),a}(e.state.doc,i)));return{options:o,from:i?t.from:e.pos,validFor:fm}}const fb=ra.define({name:"javascript",parser:fp.configure({props:[rv.add({IfStatement:rD({except:/^\s*({|else\b)/}),TryStatement:rD({except:/^\s*({|catch\b|finally\b)/}),LabeledStatement:e=>e.baseIndent,SwitchBody:e=>{let t=e.textAfter,i=/^\s*\}/.test(t),o=/^\s*(case|default)\b/.test(t);return e.baseIndent+(i?0:o?1:2)*e.unit},Block:function({closing:e,align:t=!0,units:i=1}){return o=>rP(o,t,i,e)}({closing:"}"}),ArrowFunction:e=>e.baseIndent+e.unit,"TemplateString BlockComment":()=>null,"Statement Property":rD({except:/^{/}),JSXElement(e){let t=/^\s*<\//.test(e.textAfter);return e.lineIndent(e.node.from)+(t?0:e.unit)},JSXEscape(e){let t=/\s*\}/.test(e.textAfter);return e.lineIndent(e.node.from)+(t?0:e.unit)},"JSXOpenTag JSXSelfClosingTag":e=>e.column(e.node.from)+e.unit}),rM.add({"Block ClassBody SwitchBody EnumBody ObjectExpression ArrayExpression ObjectType":function(e){let t=e.firstChild,i=e.lastChild;return t&&t.to<i.from?{from:t.to,to:i.type.isError?e.to:i.from}:null},BlockComment:e=>({from:e.from+2,to:e.to-2})})]}),languageData:{closeBrackets:{brackets:["(","[","{","'",'"',"`"]},commentTokens:{line:"//",block:{open:"/*",close:"*/"}},indentOnInput:/^\s*(?:case |default:|\{|\}|<\/)$/,wordChars:"$"}}),fw={test:e=>/^JSX/.test(e.name),facet:re({commentTokens:{block:{open:"{/*",close:"*/}"}}})},fk=fb.configure({dialect:"ts"},"typescript"),fv=fb.configure({dialect:"jsx",props:[rt.add(e=>e.isTop?[fw]:void 0)]}),fO=fb.configure({dialect:"jsx ts",props:[rt.add(e=>e.isTop?[fw]:void 0)]},"typescript"),fS="break case const continue default delete export extends false finally in instanceof let new return static super switch this throw true typeof var yield".split(" ").map(e=>({label:e,type:"keyword"}));function fC(e,t,i=e.length){for(let o=null==t?void 0:t.firstChild;o;o=o.nextSibling)if("JSXIdentifier"==o.name||"JSXBuiltin"==o.name||"JSXNamespacedName"==o.name||"JSXMemberExpression"==o.name)return e.sliceString(o.from,Math.min(o.to,i));return""}const fP="object"==typeof navigator&&/Android\b/.test(navigator.userAgent),fD=oH.inputHandler.of((e,t,i,o)=>{if((fP?e.composing:e.compositionStarted)||e.state.readOnly||t!=i||">"!=o&&"/"!=o||!fb.isActiveAt(e.state,t,-1))return!1;let{state:a}=e,n=a.changeByRange(e=>{var t;let{head:i}=e,n=rn(a).resolveInner(i,-1),r;if("JSXStartTag"==n.name&&(n=n.parent),"JSXAttributeValue"==n.name&&n.to>i);else if(">"==o&&"JSXFragmentTag"==n.name)return{range:q.cursor(i+1),changes:{from:i,insert:"></>"}};else if("/"==o&&"JSXFragmentTag"==n.name){let e=n.parent,o=null==e?void 0:e.parent;if(e.from==i-1&&(null===(t=o.lastChild)||void 0===t?void 0:t.name)!="JSXEndTag"&&(r=fC(a.doc,null==o?void 0:o.firstChild,i))){let e=`/${r}>`;return{range:q.cursor(i+e.length),changes:{from:i,insert:e}}}}else if(">"==o){let e=function(e){for(;;){if("JSXOpenTag"==e.name||"JSXSelfClosingTag"==e.name||"JSXFragmentTag"==e.name)return e;if("JSXEscape"==e.name||!e.parent)return null;e=e.parent}}(n);if(e&&!function(e){return e&&("JSXEndTag"==e.name||"JSXSelfCloseEndTag"==e.name)}(e.lastChild)&&"</"!=a.sliceDoc(i,i+2)&&(r=fC(a.doc,e,i)))return{range:q.cursor(i+1),changes:{from:i,insert:`></${r}>`}}}return{range:e}});return!n.changes.empty&&(e.dispatch(n,{userEvent:"input.type",scrollIntoView:!0}),!0)}),fT=ip.fromClass(class{decorations;constructor(e){this.decorations=this.getBracketDecorations(e)}update(e){(e.docChanged||e.selectionSet||e.viewportChanged)&&(this.decorations=this.getBracketDecorations(e.view))}getBracketDecorations(e){let{doc:t}=e.state,i=[],o=[],a=["red","orange","yellow","green","blue","indigo","violet"];for(let e=0;e<t.length;e+=1){let n=t.sliceString(e,e+1);if("("===n||"["===n||"{"===n)o.push({type:n,from:e});else if(")"===n||"]"===n||"}"===n){let t=o.pop();if(t&&t.type===this.getMatchingBracket(n)){let n=a[o.length%a.length];i.push(tZ.mark({class:`rainbow-bracket-${n}`}).range(t.from,t.from+1),tZ.mark({class:`rainbow-bracket-${n}`}).range(e,e+1))}}}return i.sort((e,t)=>e.from-t.from||e.startSide-t.startSide),tZ.set(i)}getMatchingBracket(e){switch(e){case")":return"(";case"]":return"[";case"}":return"{";default:return null}}},{decorations:e=>e.decorations});function fM(){return[fT,oH.baseTheme({".rainbow-bracket-red":{color:"red"},".rainbow-bracket-red > span":{color:"red"},".rainbow-bracket-orange":{color:"orange"},".rainbow-bracket-orange > span":{color:"orange"},".rainbow-bracket-yellow":{color:"yellow"},".rainbow-bracket-yellow > span":{color:"yellow"},".rainbow-bracket-green":{color:"green"},".rainbow-bracket-green > span":{color:"green"},".rainbow-bracket-blue":{color:"blue"},".rainbow-bracket-blue > span":{color:"blue"},".rainbow-bracket-indigo":{color:"indigo"},".rainbow-bracket-indigo > span":{color:"indigo"},".rainbow-bracket-violet":{color:"violet"},".rainbow-bracket-violet > span":{color:"violet"}})]}function fR(e){let t=document.querySelector(e);if(!t)throw Error(`Element '${e}' doesn't exist.`);return t}const fQ={iframe:fR("[data-iframe]"),errors:fR("[data-errors]"),editor:fR("[data-editor]"),jseditor:fR("[data-editor-js]"),source:fR("[data-source]"),loading:fR("[data-loading]"),code:fR("[data-code]"),fullbutton:fR("[data-fullbutton]"),logbutton:fR("[data-logbutton]"),sourceholder:fR("[data-source-holder]"),output:fR("[data-output]"),buttonSave:fR("[data-save]"),buttonImport:fR("[data-import]"),buttonExport:fR("[data-export]"),buttonIncludes:fR("[data-includes]"),buttonOpen:fR("[data-open]"),buttonPause:fR("[data-pausebutton]"),modal:fR("[data-modal]")};let fA=oH.theme({"&.cm-focused":{outline:"dotted 1px black",background:"#2e3440"},".cm-line":{padding:0,"padding-left":"2px","align-items":"center"},".cm-activeLine":{"background-color":"transparent"}});const fF=new oH({extensions:[cd,fA,i,r5(),fM(),cP],parent:fQ.editor}),fL=new oH({extensions:[cd,fA,function(e={}){var t;let i=e.jsx?e.typescript?fO:fv:e.typescript?fk:fb;return new ru(i,[fb.data.of({autocomplete:(t=sv(fd.concat(fS)),e=>{for(let t=rn(e.state).resolveInner(e.pos,-1);t;t=t.parent){if(fx.indexOf(t.name)>-1)return null;if(t.type.isTop)break}return t(e)})}),fb.data.of({autocomplete:fg}),e.jsx?fD:[]])}(),r5(),fM(),cP],parent:fQ.jseditor});function fE(e,t=500){let i;return()=>{clearTimeout(i),i=setTimeout(e,t)}}"use strict";var fB={crush:(e,t=50)=>{let i=[];for(let e=127;--e;)(e>=48&&e<=57||e>=65&&e<=90||e>=97&&e<=122||"-_.!~*'()".includes(String.fromCharCode(e)))&&i.push(String.fromCharCode(e));for(let e=32;e<255;++e){let t=String.fromCharCode(e);"\\"==t||i.includes(t)||i.unshift(t)}e=e.replace(RegExp("\x01","g"),""),e=fI(e);let o=((e,i)=>{let o=i.length,a="",n=e=>{let t=e.charCodeAt(0),i=e.charCodeAt(e.length-1);return t>=56320&&t<=57343||i>=55296&&i<=56319},r={};for(let i=2;i<t;i++)for(let t=0;t<e.length-i;++t){let o=e.substr(t,i);if(r[o]||n(o))continue;let a=1;for(let n=e.indexOf(o,t+i);n>=0;++a)n=e.indexOf(o,n+i);a>1&&(r[o]=a)}for(;;){let t;for(;o--&&e.includes(i[o]););if(o<0)break;let n=i[o],s=0,l=encodeURI(encodeURIComponent(n)).replace(/%../g,"i").length;for(let e in r){let i=r[e],o=(i-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,"i").length-(i+1)*l;a.length||(o-=encodeURI(encodeURIComponent("\x01")).replace(/%../g,"i").length),o<=0?delete r[e]:o>s&&(t=e,s=o)}if(!t)break;e=e.split(t).join(n)+n+t,a=n+a;let p={};for(let i in r){let o=i.split(t).join(n),a=0;for(let t=e.indexOf(o);t>=0;++a)t=e.indexOf(o,t+o.length);a>1&&(p[o]=a)}r=p}return{a:e,b:a}})(e,i),a=o.a;return o.b.length&&(a+="\x01"+o.b),a+="_"},uncrush:e=>{e=e.substring(0,e.length-1);let t=e.split("\x01"),i=t[0];if(t.length>1)for(let e of t[1]){let t=i.split(e);i=t.join(t.pop())}return fI(i,0)}};const fI=(e,t=1)=>{let i=[['"',"'"],["':","!"],[",'","~"],["}",")","\\","\\"],["{","(","\\","\\"]],o=(e,t)=>{let i=RegExp(`${(t[2]?t[2]:"")+t[0]}|${(t[3]?t[3]:"")+t[1]}`,"g");return e.replace(i,e=>e===t[0]?t[1]:t[0])};if(t)for(let t=0;t<i.length;++t)e=o(e,i[t]);else for(let t=i.length;t--;)e=o(e,i[t]);return e};let fG="editing",f$="",fN={},fz=[],fW=!1;const fj=[{title:"Moving balls",desc:"A smooth graphics 2D animation purely in browser",url:"./simple.txt"},{title:"Lines animation",desc:"An example from Wolfram Research conference in S.Piter 2023",url:"./piter.txt"},{title:"3D Graphics",desc:"Water shaders, camera control and SLERP of matrixes",url:"./boat.txt"},{title:"Meta markers",desc:"An example of evaluating expressions inside already existing container",url:"./meta.txt"},{title:"Low-level dynamic",desc:"An example of using frontend objects (internal data structure)",url:"./foexample.txt"},{title:"JS - Wolfram communication",desc:"A simple demo with JS function called from WL",url:"./jssimple.txt"}];let fq={status:!1,connecting:!1,socket:void 0,nextPromise:void 0};class fV{promise;reject={};resolve={};uid;constructor(){this.promise=new Promise((e,t)=>{this.reject=t,this.resolve=e})}}let fZ=0;const fX=()=>{fq.connecting||(fq.connecting=!0,fq.socket=new WebSocket("ws://localhost:8099"),fq.socket.onopen=function(e){alert("[open] connecting established"),fq.status=!0},fq.socket.onmessage=function(e){fq.nextPromise(JSON.parse(e.data))},fq.socket.onclose=function(e){console.log(e),fq.status=!1},fq.socket.onerror=function(e){console.log(e),fq.status=!1})};async function fU(e){if(!fq.status)return fZ>0&&fX(),2==fZ&&alert("No connection to Wolfram Kernel is available. Cannot transform WL to JSONExpression offline"),++fZ,{iframeCode:o};let t=new fV;fq.nextPromise=t.resolve,fq.socket.send('transpile["'+e.replace(/(\r\n|\n|\r)/gm,"").replaceAll('\\"','\\\\"').replaceAll('"','\\"')+'"]');let i=await t.promise;return o=i,{iframeCode:i}}function fH(){let e=`
      <xmp></xmp>
    `;fQ.source.innerHTML=e,r=fQ.source.getElementsByTagName("xmp")[0]}async function fY(){if(!fW){if("editing"===fG){fQ.iframe.style.display="block",fQ.errors.style.display="none";let e=fF.state.doc.toString(),{iframeCode:t}=await fU(e);fH(),function(e,t){a=e,n=t;let i=fz.map(e=>`<script type="module" src="${e}"></script>`).join(),o=`
      <html>
      <head>  
     
        <link rel="stylesheet" href="iframe.css">
        <script>             
        window.console = {
          log: function(str){
              //REM: Forward the string to the top window.
              //REM: https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage
              window.top.postMessage({kind: 'log', 'text':JSON.stringify(str)}, '*');
          },
          warn: function(str){
            //REM: Forward the string to the top window.
            //REM: https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage
            window.top.postMessage({kind: 'log', 'text':JSON.stringify(str)}, '*');
          },
          error: function(str){
            //REM: Forward the string to the top window.
            //REM: https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage
            window.top.postMessage({kind: 'error', 'text':JSON.stringify(str)}, '*');
          }                  
        };
        window.onerror = (a, b, c, d, e) => {

          window.top.postMessage({kind: 'error', 'text': a}, '*');
        };
        function isElement(o){
          return (
            typeof HTMLElement === "object" ? o instanceof HTMLElement : //DOM2
            o && typeof o === "object" && o !== null && o.nodeType === 1 && typeof o.nodeName==="string"
        );
        }
        </script>
     
      </head>
      <body>
        <div id="canvas"></div>
 
        
        <script type="module" src="interpreter.js"></script>
        <script type="module" src="core.js"></script>

        ${i}
        

        <script type="module">
          let global = {};
          let env = {global: global};
          window.top.postMessage({kind: 'ready'}, '*');

          window.addEventListener("message", async ({ data, source }) => {
            
            //const r = await .catch(error => console.error("JS Error:"+JSON.stringify(error)));
            const r = await eval("(async function () {"+data[0].replaceAll('"', '\\"')+"})()");


            if (isElement(r)) {
              document.getElementById('canvas').appendChild(r);
            } else {
              console.log(r);
            }

            await interpretate(data[1], env);
          });

        </script>
      </body>
      </html>
    `;fQ.iframe.srcdoc=o}(t,fL.state.doc.toString());return}if("error"===fG){fQ.iframe.style.display="none",fQ.errors.style.display="block",function(e){let t=`
      <h3>💥 Error</h3>
      <xmp>${e}</xmp>
    `;fQ.errors.innerHTML=t}(f$);return}throw Error(`State ${fG} should not be possible. 💥`)}}function f_(e){fF.dispatch({changes:{from:0,to:fF.state.doc.length,insert:e.wls}}),fL.dispatch({changes:{from:0,to:fL.state.doc.length,insert:e.js}}),o=e?.compiled||[],fz=e?.includes||[],fN=e?.params,fY(),fN?.noLogs?(fQ.source.classList.add("hidden"),fQ.sourceholder.classList.add("shrink"),fQ.output.classList.add("expand")):(fQ.source.classList.remove("hidden"),fQ.sourceholder.classList.remove("shrink"),fQ.output.classList.remove("expand")),fN?.noCode?fQ.code.classList.add("hidden"):fQ.code.classList.remove("hidden"),fQ.loading.classList.add("hidden")}function fK(e){fQ.loading.classList.remove("hidden"),fetch(e).then(e=>{e.text().then(e=>{console.log(e);let t=JSON.parse(fB.uncrush(decodeURIComponent(e)));console.log(t),f_(t)})})}fH(),fQ.editor.addEventListener("keyup",fE(fY)),fQ.jseditor.addEventListener("keyup",fE(fY)),window.addEventListener("message",function(e){let t=e.data;switch(t.kind){case"log":var i;i=t.text,r.appendChild(document.createTextNode(i+"\n"));break;case"error":fG="error",f$=t.text,fY(),fG="editing";break;case"warning":break;case"ready":console.log("ready"),e.source?.postMessage([n,a])}}),fQ.fullbutton.addEventListener("click",()=>{fQ.code.classList.toggle("hidden")}),fQ.logbutton.addEventListener("click",()=>{fQ.source.classList.toggle("hidden"),fQ.sourceholder.classList.toggle("shrink"),fQ.output.classList.toggle("expand")}),fQ.buttonOpen.addEventListener("click",()=>(function(){let e=fj.map((e,t)=>`<tr class="row" id="example-${t}">
      <td>${e.title}</td><td>${e.desc}</td>
    </tr>`).join("");fQ.modal.innerHTML=`
  <h2>Examples</h2><table>
    <tbody>
      ${e}
    </tbody>
  </table>`,fQ.modal.classList.add("tall"),fQ.modal.classList.remove("hidden"),fj.forEach((e,t)=>{document.getElementById("example-"+t).addEventListener("click",()=>{fQ.modal.classList.add("hidden"),fQ.modal.classList.remove("tall"),fK(e.url)})});let t=e=>{e.target!==fQ.modal&&(fQ.modal.classList.add("hidden"),fQ.modal.innerHTML="",window.removeEventListener("click",t))};setTimeout(()=>window.addEventListener("click",t),300)})()),fQ.buttonIncludes.addEventListener("click",()=>(function(){fQ.modal.innerHTML="";let e=document.createElement("h2");e.innerText="Includes",fQ.modal.appendChild(e);let t=document.createElement("textarea");t.value=fz.join("\n"),fQ.modal.appendChild(t);let i=o=>{o.target!==fQ.modal&&o.target!==t&&o.target!==e&&(fQ.modal.classList.add("hidden"),fQ.modal.innerHTML="",window.removeEventListener("click",i))};setTimeout(()=>window.addEventListener("click",i),300),fQ.modal.classList.remove("hidden"),t.onchange=e=>{fz=e.target.value.split("\n")}})()),fQ.buttonImport.addEventListener("click",()=>(function(){let e;fQ.modal.innerHTML="";let t=document.createElement("h2");t.innerText="Paste a string and close this window",fQ.modal.appendChild(t);let i=document.createElement("textarea");i.value="",fQ.modal.appendChild(i);let o=a=>{a.target!==fQ.modal&&a.target!==i&&a.target!==t&&(fQ.modal.classList.add("hidden"),fQ.modal.innerHTML="",window.removeEventListener("click",o),e&&f_(e))};setTimeout(()=>window.addEventListener("click",o),300),fQ.modal.classList.remove("hidden"),i.onchange=t=>{e=JSON.parse(fB.uncrush(decodeURIComponent(t.target.value)))}})()),fQ.buttonExport.addEventListener("click",()=>(function(){fQ.modal.innerHTML="";let e=document.createElement("h2");e.innerText="Compressed string",fQ.modal.appendChild(e);let t=document.createElement("textarea");t.value=encodeURIComponent(fB.crush(JSON.stringify({wls:fF.state.doc.toString(),js:fL.state.doc.toString(),includes:fz,compiled:o}))),fQ.modal.appendChild(t);let i=o=>{o.target!==fQ.modal&&o.target!==t&&o.target!==e&&(fQ.modal.classList.add("hidden"),fQ.modal.innerHTML="",window.removeEventListener("click",i))};setTimeout(()=>window.addEventListener("click",i),300),fQ.modal.classList.remove("hidden")})()),fQ.buttonSave.addEventListener("click",()=>void localStorage.setItem("wljs-state",JSON.stringify({wls:fF.state.doc.toString(),js:fL.state.doc.toString(),includes:fz,compiled:o}))),fQ.buttonPause.addEventListener("click",()=>{fW=!fW,fQ.buttonPause.classList.toggle("activated")}),function(){let e=localStorage.getItem("wljs-state");if(e){let t=JSON.parse(e);f_(t)}else fK("./simple.txt")}();
//# sourceMappingURL=index.0da5e34b.js.map
